////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __GLEW_GL_H__
#define __GLEW_GL_H__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#if defined (_WIN32)
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN 1
#define _WIN32_LEAN_AND_MEAN 1
#endif
#include <windows.h>
#define GLAPI WINGDIAPI
#define APIENTRY WINAPI
#define APIENTRYP WINAPI*
#ifdef _WIN32_LEAN_AND_MEAN
#undef WIN32_LEAN_AND_MEAN
#undef _WIN32_LEAN_AND_MEAN
#endif
#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <wrangle.h>

#include <GL/gl.h>

#include <GL/glext.h>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GLEW_EXTERN_C GLAPI void APIENTRY glCullFace (GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glFrontFace (GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glHint (GLenum target, GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glLineWidth (GLfloat width);
GLEW_EXTERN_C GLAPI void APIENTRY glPointSize (GLfloat size);
GLEW_EXTERN_C GLAPI void APIENTRY glPolygonMode (GLenum face, GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_EXTERN_C GLAPI void APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_EXTERN_C GLAPI void APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_EXTERN_C GLAPI void APIENTRY glDrawBuffer (GLenum buf);
GLEW_EXTERN_C GLAPI void APIENTRY glClear (GLbitfield mask);
GLEW_EXTERN_C GLAPI void APIENTRY glClearColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glClearStencil (GLint s);
GLEW_EXTERN_C GLAPI void APIENTRY glClearDepth (GLdouble depth);
GLEW_EXTERN_C GLAPI void APIENTRY glStencilMask (GLuint mask);
GLEW_EXTERN_C GLAPI void APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glDepthMask (GLboolean flag);
GLEW_EXTERN_C GLAPI void APIENTRY glDisable (GLenum cap);
GLEW_EXTERN_C GLAPI void APIENTRY glEnable (GLenum cap);
GLEW_EXTERN_C GLAPI void APIENTRY glFinish ();
GLEW_EXTERN_C GLAPI void APIENTRY glFlush ();
GLEW_EXTERN_C GLAPI void APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);
GLEW_EXTERN_C GLAPI void APIENTRY glLogicOp (GLenum opcode);
GLEW_EXTERN_C GLAPI void APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);
GLEW_EXTERN_C GLAPI void APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
GLEW_EXTERN_C GLAPI void APIENTRY glDepthFunc (GLenum func);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelStoref (GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelStorei (GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glReadBuffer (GLenum src);
GLEW_EXTERN_C GLAPI void APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
GLEW_EXTERN_C GLAPI void APIENTRY glGetBooleanv (GLenum pname, GLboolean * data);
GLEW_EXTERN_C GLAPI void APIENTRY glGetDoublev (GLenum pname, GLdouble * data);
GLEW_EXTERN_C GLAPI GLenum APIENTRY glGetError ();
GLEW_EXTERN_C GLAPI void APIENTRY glGetFloatv (GLenum pname, GLfloat * data);
GLEW_EXTERN_C GLAPI void APIENTRY glGetIntegerv (GLenum pname, GLint * data);
GLEW_EXTERN_C GLAPI const GLubyte * APIENTRY glGetString (GLenum name);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint * params);
GLEW_EXTERN_C GLAPI GLboolean APIENTRY glIsEnabled (GLenum cap);
GLEW_EXTERN_C GLAPI void APIENTRY glDepthRange (GLdouble near, GLdouble far);
GLEW_EXTERN_C GLAPI void APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_EXTERN_C GLAPI void APIENTRY glNewList (GLuint list, GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glEndList ();
GLEW_EXTERN_C GLAPI void APIENTRY glCallList (GLuint list);
GLEW_EXTERN_C GLAPI void APIENTRY glCallLists (GLsizei n, GLenum type, const void * lists);
GLEW_EXTERN_C GLAPI void APIENTRY glDeleteLists (GLuint list, GLsizei range);
GLEW_EXTERN_C GLAPI GLuint APIENTRY glGenLists (GLsizei range);
GLEW_EXTERN_C GLAPI void APIENTRY glListBase (GLuint base);
GLEW_EXTERN_C GLAPI void APIENTRY glBegin (GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3b (GLbyte red, GLbyte green, GLbyte blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3bv (const GLbyte * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3d (GLdouble red, GLdouble green, GLdouble blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3f (GLfloat red, GLfloat green, GLfloat blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3i (GLint red, GLint green, GLint blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3s (GLshort red, GLshort green, GLshort blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3ub (GLubyte red, GLubyte green, GLubyte blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3ubv (const GLubyte * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3ui (GLuint red, GLuint green, GLuint blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3uiv (const GLuint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3us (GLushort red, GLushort green, GLushort blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3usv (const GLushort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4b (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4bv (const GLbyte * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4d (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4i (GLint red, GLint green, GLint blue, GLint alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4s (GLshort red, GLshort green, GLshort blue, GLshort alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4ubv (const GLubyte * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4ui (GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4uiv (const GLuint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4us (GLushort red, GLushort green, GLushort blue, GLushort alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4usv (const GLushort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glEdgeFlag (GLboolean flag);
GLEW_EXTERN_C GLAPI void APIENTRY glEdgeFlagv (const GLboolean * flag);
GLEW_EXTERN_C GLAPI void APIENTRY glEnd ();
GLEW_EXTERN_C GLAPI void APIENTRY glIndexd (GLdouble c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexdv (const GLdouble * c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexf (GLfloat c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexfv (const GLfloat * c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexi (GLint c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexiv (const GLint * c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexs (GLshort c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexsv (const GLshort * c);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3b (GLbyte nx, GLbyte ny, GLbyte nz);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3bv (const GLbyte * v);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3d (GLdouble nx, GLdouble ny, GLdouble nz);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3i (GLint nx, GLint ny, GLint nz);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3s (GLshort nx, GLshort ny, GLshort nz);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2d (GLdouble x, GLdouble y);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2f (GLfloat x, GLfloat y);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2i (GLint x, GLint y);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2s (GLshort x, GLshort y);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3d (GLdouble x, GLdouble y, GLdouble z);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3f (GLfloat x, GLfloat y, GLfloat z);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3i (GLint x, GLint y, GLint z);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3s (GLshort x, GLshort y, GLshort z);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4i (GLint x, GLint y, GLint z, GLint w);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4s (GLshort x, GLshort y, GLshort z, GLshort w);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRectd (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
GLEW_EXTERN_C GLAPI void APIENTRY glRectdv (const GLdouble * v1, const GLdouble * v2);
GLEW_EXTERN_C GLAPI void APIENTRY glRectf (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
GLEW_EXTERN_C GLAPI void APIENTRY glRectfv (const GLfloat * v1, const GLfloat * v2);
GLEW_EXTERN_C GLAPI void APIENTRY glRecti (GLint x1, GLint y1, GLint x2, GLint y2);
GLEW_EXTERN_C GLAPI void APIENTRY glRectiv (const GLint * v1, const GLint * v2);
GLEW_EXTERN_C GLAPI void APIENTRY glRects (GLshort x1, GLshort y1, GLshort x2, GLshort y2);
GLEW_EXTERN_C GLAPI void APIENTRY glRectsv (const GLshort * v1, const GLshort * v2);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1d (GLdouble s);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1f (GLfloat s);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1i (GLint s);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1s (GLshort s);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2d (GLdouble s, GLdouble t);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2f (GLfloat s, GLfloat t);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2i (GLint s, GLint t);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2s (GLshort s, GLshort t);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3d (GLdouble s, GLdouble t, GLdouble r);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3f (GLfloat s, GLfloat t, GLfloat r);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3i (GLint s, GLint t, GLint r);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3s (GLshort s, GLshort t, GLshort r);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4d (GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4f (GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4i (GLint s, GLint t, GLint r, GLint q);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4s (GLshort s, GLshort t, GLshort r, GLshort q);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2d (GLdouble x, GLdouble y);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2f (GLfloat x, GLfloat y);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2i (GLint x, GLint y);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2s (GLshort x, GLshort y);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3d (GLdouble x, GLdouble y, GLdouble z);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3f (GLfloat x, GLfloat y, GLfloat z);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3i (GLint x, GLint y, GLint z);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3s (GLshort x, GLshort y, GLshort z);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4i (GLint x, GLint y, GLint z, GLint w);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4s (GLshort x, GLshort y, GLshort z, GLshort w);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glClipPlane (GLenum plane, const GLdouble * equation);
GLEW_EXTERN_C GLAPI void APIENTRY glColorMaterial (GLenum face, GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glFogf (GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glFogfv (GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glFogi (GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glFogiv (GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glLightf (GLenum light, GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glLightfv (GLenum light, GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glLighti (GLenum light, GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glLightiv (GLenum light, GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glLightModelf (GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glLightModelfv (GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glLightModeli (GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glLightModeliv (GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glLineStipple (GLint factor, GLushort pattern);
GLEW_EXTERN_C GLAPI void APIENTRY glMaterialf (GLenum face, GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glMaterialfv (GLenum face, GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glMateriali (GLenum face, GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glMaterialiv (GLenum face, GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glPolygonStipple (const GLubyte * mask);
GLEW_EXTERN_C GLAPI void APIENTRY glShadeModel (GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glTexEnvf (GLenum target, GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexEnvfv (GLenum target, GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glTexEnvi (GLenum target, GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexEnviv (GLenum target, GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glTexGend (GLenum coord, GLenum pname, GLdouble param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexGendv (GLenum coord, GLenum pname, const GLdouble * params);
GLEW_EXTERN_C GLAPI void APIENTRY glTexGenf (GLenum coord, GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexGenfv (GLenum coord, GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glTexGeni (GLenum coord, GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexGeniv (GLenum coord, GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glFeedbackBuffer (GLsizei size, GLenum type, GLfloat * buffer);
GLEW_EXTERN_C GLAPI void APIENTRY glSelectBuffer (GLsizei size, GLuint * buffer);
GLEW_EXTERN_C GLAPI GLint APIENTRY glRenderMode (GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glInitNames ();
GLEW_EXTERN_C GLAPI void APIENTRY glLoadName (GLuint name);
GLEW_EXTERN_C GLAPI void APIENTRY glPassThrough (GLfloat token);
GLEW_EXTERN_C GLAPI void APIENTRY glPopName ();
GLEW_EXTERN_C GLAPI void APIENTRY glPushName (GLuint name);
GLEW_EXTERN_C GLAPI void APIENTRY glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glClearIndex (GLfloat c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexMask (GLuint mask);
GLEW_EXTERN_C GLAPI void APIENTRY glAccum (GLenum op, GLfloat value);
GLEW_EXTERN_C GLAPI void APIENTRY glPopAttrib ();
GLEW_EXTERN_C GLAPI void APIENTRY glPushAttrib (GLbitfield mask);
GLEW_EXTERN_C GLAPI void APIENTRY glMap1d (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
GLEW_EXTERN_C GLAPI void APIENTRY glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
GLEW_EXTERN_C GLAPI void APIENTRY glMap2d (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
GLEW_EXTERN_C GLAPI void APIENTRY glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
GLEW_EXTERN_C GLAPI void APIENTRY glMapGrid1d (GLint un, GLdouble u1, GLdouble u2);
GLEW_EXTERN_C GLAPI void APIENTRY glMapGrid1f (GLint un, GLfloat u1, GLfloat u2);
GLEW_EXTERN_C GLAPI void APIENTRY glMapGrid2d (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
GLEW_EXTERN_C GLAPI void APIENTRY glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord1d (GLdouble u);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord1dv (const GLdouble * u);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord1f (GLfloat u);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord1fv (const GLfloat * u);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord2d (GLdouble u, GLdouble v);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord2dv (const GLdouble * u);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord2f (GLfloat u, GLfloat v);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord2fv (const GLfloat * u);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalMesh1 (GLenum mode, GLint i1, GLint i2);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalPoint1 (GLint i);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalMesh2 (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalPoint2 (GLint i, GLint j);
GLEW_EXTERN_C GLAPI void APIENTRY glAlphaFunc (GLenum func, GLfloat ref);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelZoom (GLfloat xfactor, GLfloat yfactor);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelTransferf (GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelTransferi (GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelMapfv (GLenum map, GLsizei mapsize, const GLfloat * values);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelMapuiv (GLenum map, GLsizei mapsize, const GLuint * values);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelMapusv (GLenum map, GLsizei mapsize, const GLushort * values);
GLEW_EXTERN_C GLAPI void APIENTRY glCopyPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
GLEW_EXTERN_C GLAPI void APIENTRY glDrawPixels (GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLEW_EXTERN_C GLAPI void APIENTRY glGetClipPlane (GLenum plane, GLdouble * equation);
GLEW_EXTERN_C GLAPI void APIENTRY glGetLightfv (GLenum light, GLenum pname, GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetLightiv (GLenum light, GLenum pname, GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetMapdv (GLenum target, GLenum query, GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glGetMapfv (GLenum target, GLenum query, GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glGetMapiv (GLenum target, GLenum query, GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glGetMaterialfv (GLenum face, GLenum pname, GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetMaterialiv (GLenum face, GLenum pname, GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetPixelMapfv (GLenum map, GLfloat * values);
GLEW_EXTERN_C GLAPI void APIENTRY glGetPixelMapuiv (GLenum map, GLuint * values);
GLEW_EXTERN_C GLAPI void APIENTRY glGetPixelMapusv (GLenum map, GLushort * values);
GLEW_EXTERN_C GLAPI void APIENTRY glGetPolygonStipple (GLubyte * mask);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexEnvfv (GLenum target, GLenum pname, GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexEnviv (GLenum target, GLenum pname, GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexGendv (GLenum coord, GLenum pname, GLdouble * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexGenfv (GLenum coord, GLenum pname, GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexGeniv (GLenum coord, GLenum pname, GLint * params);
GLEW_EXTERN_C GLAPI GLboolean APIENTRY glIsList (GLuint list);
GLEW_EXTERN_C GLAPI void APIENTRY glFrustum (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLEW_EXTERN_C GLAPI void APIENTRY glLoadIdentity ();
GLEW_EXTERN_C GLAPI void APIENTRY glLoadMatrixf (const GLfloat * m);
GLEW_EXTERN_C GLAPI void APIENTRY glLoadMatrixd (const GLdouble * m);
GLEW_EXTERN_C GLAPI void APIENTRY glMatrixMode (GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glMultMatrixf (const GLfloat * m);
GLEW_EXTERN_C GLAPI void APIENTRY glMultMatrixd (const GLdouble * m);
GLEW_EXTERN_C GLAPI void APIENTRY glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLEW_EXTERN_C GLAPI void APIENTRY glPopMatrix ();
GLEW_EXTERN_C GLAPI void APIENTRY glPushMatrix ();
GLEW_EXTERN_C GLAPI void APIENTRY glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLEW_EXTERN_C GLAPI void APIENTRY glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLEW_EXTERN_C GLAPI void APIENTRY glScaled (GLdouble x, GLdouble y, GLdouble z);
GLEW_EXTERN_C GLAPI void APIENTRY glScalef (GLfloat x, GLfloat y, GLfloat z);
GLEW_EXTERN_C GLAPI void APIENTRY glTranslated (GLdouble x, GLdouble y, GLdouble z);
GLEW_EXTERN_C GLAPI void APIENTRY glTranslatef (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) /* glDrawArrays */ (GLenum mode, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) /* glDrawElements */ (GLenum mode, GLsizei count, GLenum type, const void * indices);
typedef void (APIENTRYP PFNGLGETPOINTERVPROC) /* glGetPointerv */ (GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) /* glPolygonOffset */ (GLfloat factor, GLfloat units);
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) /* glCopyTexImage1D */ (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) /* glCopyTexImage2D */ (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) /* glCopyTexSubImage1D */ (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) /* glCopyTexSubImage2D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) /* glTexSubImage1D */ (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) /* glTexSubImage2D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) /* glBindTexture */ (GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) /* glDeleteTextures */ (GLsizei n, const GLuint * textures);
typedef void (APIENTRYP PFNGLGENTEXTURESPROC) /* glGenTextures */ (GLsizei n, GLuint * textures);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) /* glIsTexture */ (GLuint texture);
typedef void (APIENTRYP PFNGLARRAYELEMENTPROC) /* glArrayElement */ (GLint i);
typedef void (APIENTRYP PFNGLCOLORPOINTERPROC) /* glColorPointer */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEPROC) /* glDisableClientState */ (GLenum array);
typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERPROC) /* glEdgeFlagPointer */ (GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLENABLECLIENTSTATEPROC) /* glEnableClientState */ (GLenum array);
typedef void (APIENTRYP PFNGLINDEXPOINTERPROC) /* glIndexPointer */ (GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLINTERLEAVEDARRAYSPROC) /* glInterleavedArrays */ (GLenum format, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLNORMALPOINTERPROC) /* glNormalPointer */ (GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLTEXCOORDPOINTERPROC) /* glTexCoordPointer */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLVERTEXPOINTERPROC) /* glVertexPointer */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTPROC) /* glAreTexturesResident */ (GLsizei n, const GLuint * textures, GLboolean * residences);
typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESPROC) /* glPrioritizeTextures */ (GLsizei n, const GLuint * textures, const GLfloat * priorities);
typedef void (APIENTRYP PFNGLINDEXUBPROC) /* glIndexub */ (GLubyte c);
typedef void (APIENTRYP PFNGLINDEXUBVPROC) /* glIndexubv */ (const GLubyte * c);
typedef void (APIENTRYP PFNGLPOPCLIENTATTRIBPROC) /* glPopClientAttrib */ ();
typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBPROC) /* glPushClientAttrib */ (GLbitfield mask);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) /* glDrawRangeElements */ (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) /* glTexImage3D */ (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) /* glTexSubImage3D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) /* glCopyTexSubImage3D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) /* glActiveTexture */ (GLenum texture);
typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) /* glSampleCoverage */ (GLfloat value, GLboolean invert);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) /* glCompressedTexImage3D */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) /* glCompressedTexImage2D */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) /* glCompressedTexImage1D */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) /* glCompressedTexSubImage3D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) /* glCompressedTexSubImage2D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) /* glCompressedTexSubImage1D */ (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) /* glGetCompressedTexImage */ (GLenum target, GLint level, void * img);
typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) /* glClientActiveTexture */ (GLenum texture);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) /* glMultiTexCoord1d */ (GLenum target, GLdouble s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) /* glMultiTexCoord1dv */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) /* glMultiTexCoord1f */ (GLenum target, GLfloat s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) /* glMultiTexCoord1fv */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) /* glMultiTexCoord1i */ (GLenum target, GLint s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) /* glMultiTexCoord1iv */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) /* glMultiTexCoord1s */ (GLenum target, GLshort s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) /* glMultiTexCoord1sv */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) /* glMultiTexCoord2d */ (GLenum target, GLdouble s, GLdouble t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) /* glMultiTexCoord2dv */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) /* glMultiTexCoord2f */ (GLenum target, GLfloat s, GLfloat t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) /* glMultiTexCoord2fv */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) /* glMultiTexCoord2i */ (GLenum target, GLint s, GLint t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) /* glMultiTexCoord2iv */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) /* glMultiTexCoord2s */ (GLenum target, GLshort s, GLshort t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) /* glMultiTexCoord2sv */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) /* glMultiTexCoord3d */ (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) /* glMultiTexCoord3dv */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) /* glMultiTexCoord3f */ (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) /* glMultiTexCoord3fv */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) /* glMultiTexCoord3i */ (GLenum target, GLint s, GLint t, GLint r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) /* glMultiTexCoord3iv */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) /* glMultiTexCoord3s */ (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) /* glMultiTexCoord3sv */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) /* glMultiTexCoord4d */ (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) /* glMultiTexCoord4dv */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) /* glMultiTexCoord4f */ (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) /* glMultiTexCoord4fv */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) /* glMultiTexCoord4i */ (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) /* glMultiTexCoord4iv */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) /* glMultiTexCoord4s */ (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) /* glMultiTexCoord4sv */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) /* glLoadTransposeMatrixf */ (const GLfloat * m);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) /* glLoadTransposeMatrixd */ (const GLdouble * m);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) /* glMultTransposeMatrixf */ (const GLfloat * m);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) /* glMultTransposeMatrixd */ (const GLdouble * m);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) /* glBlendFuncSeparate */ (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) /* glMultiDrawArrays */ (GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) /* glMultiDrawElements */ (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) /* glPointParameterf */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) /* glPointParameterfv */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) /* glPointParameteri */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) /* glPointParameteriv */ (GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLFOGCOORDFPROC) /* glFogCoordf */ (GLfloat coord);
typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) /* glFogCoordfv */ (const GLfloat * coord);
typedef void (APIENTRYP PFNGLFOGCOORDDPROC) /* glFogCoordd */ (GLdouble coord);
typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) /* glFogCoorddv */ (const GLdouble * coord);
typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) /* glFogCoordPointer */ (GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) /* glSecondaryColor3b */ (GLbyte red, GLbyte green, GLbyte blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) /* glSecondaryColor3bv */ (const GLbyte * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) /* glSecondaryColor3d */ (GLdouble red, GLdouble green, GLdouble blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) /* glSecondaryColor3dv */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) /* glSecondaryColor3f */ (GLfloat red, GLfloat green, GLfloat blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) /* glSecondaryColor3fv */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) /* glSecondaryColor3i */ (GLint red, GLint green, GLint blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) /* glSecondaryColor3iv */ (const GLint * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) /* glSecondaryColor3s */ (GLshort red, GLshort green, GLshort blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) /* glSecondaryColor3sv */ (const GLshort * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) /* glSecondaryColor3ub */ (GLubyte red, GLubyte green, GLubyte blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) /* glSecondaryColor3ubv */ (const GLubyte * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) /* glSecondaryColor3ui */ (GLuint red, GLuint green, GLuint blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) /* glSecondaryColor3uiv */ (const GLuint * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) /* glSecondaryColor3us */ (GLushort red, GLushort green, GLushort blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) /* glSecondaryColor3usv */ (const GLushort * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) /* glSecondaryColorPointer */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) /* glWindowPos2d */ (GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) /* glWindowPos2dv */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) /* glWindowPos2f */ (GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) /* glWindowPos2fv */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) /* glWindowPos2i */ (GLint x, GLint y);
typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) /* glWindowPos2iv */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) /* glWindowPos2s */ (GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) /* glWindowPos2sv */ (const GLshort * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) /* glWindowPos3d */ (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) /* glWindowPos3dv */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) /* glWindowPos3f */ (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) /* glWindowPos3fv */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) /* glWindowPos3i */ (GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) /* glWindowPos3iv */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) /* glWindowPos3s */ (GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) /* glWindowPos3sv */ (const GLshort * v);
typedef void (APIENTRYP PFNGLBLENDCOLORPROC) /* glBlendColor */ (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) /* glBlendEquation */ (GLenum mode);
typedef void (APIENTRYP PFNGLGENQUERIESPROC) /* glGenQueries */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) /* glDeleteQueries */ (GLsizei n, const GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) /* glIsQuery */ (GLuint id);
typedef void (APIENTRYP PFNGLBEGINQUERYPROC) /* glBeginQuery */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYPROC) /* glEndQuery */ (GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYIVPROC) /* glGetQueryiv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) /* glGetQueryObjectiv */ (GLuint id, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) /* glGetQueryObjectuiv */ (GLuint id, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLBINDBUFFERPROC) /* glBindBuffer */ (GLenum target, GLuint buffer);
typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) /* glDeleteBuffers */ (GLsizei n, const GLuint * buffers);
typedef void (APIENTRYP PFNGLGENBUFFERSPROC) /* glGenBuffers */ (GLsizei n, GLuint * buffers);
typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) /* glIsBuffer */ (GLuint buffer);
typedef void (APIENTRYP PFNGLBUFFERDATAPROC) /* glBufferData */ (GLenum target, GLsizeiptr size, const void * data, GLenum usage);
typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) /* glBufferSubData */ (GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) /* glGetBufferSubData */ (GLenum target, GLintptr offset, GLsizeiptr size, void * data);
typedef void * (APIENTRYP PFNGLMAPBUFFERPROC) /* glMapBuffer */ (GLenum target, GLenum access);
typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) /* glUnmapBuffer */ (GLenum target);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) /* glGetBufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) /* glGetBufferPointerv */ (GLenum target, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) /* glBlendEquationSeparate */ (GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) /* glDrawBuffers */ (GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) /* glStencilOpSeparate */ (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) /* glStencilFuncSeparate */ (GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) /* glStencilMaskSeparate */ (GLenum face, GLuint mask);
typedef void (APIENTRYP PFNGLATTACHSHADERPROC) /* glAttachShader */ (GLuint program, GLuint shader);
typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) /* glBindAttribLocation */ (GLuint program, GLuint index, const GLchar * name);
typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) /* glCompileShader */ (GLuint shader);
typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) /* glCreateProgram */ ();
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) /* glCreateShader */ (GLenum type);
typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) /* glDeleteProgram */ (GLuint program);
typedef void (APIENTRYP PFNGLDELETESHADERPROC) /* glDeleteShader */ (GLuint shader);
typedef void (APIENTRYP PFNGLDETACHSHADERPROC) /* glDetachShader */ (GLuint program, GLuint shader);
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) /* glDisableVertexAttribArray */ (GLuint index);
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) /* glEnableVertexAttribArray */ (GLuint index);
typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) /* glGetActiveAttrib */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) /* glGetActiveUniform */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) /* glGetAttachedShaders */ (GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) /* glGetAttribLocation */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) /* glGetProgramiv */ (GLuint program, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) /* glGetProgramInfoLog */ (GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (APIENTRYP PFNGLGETSHADERIVPROC) /* glGetShaderiv */ (GLuint shader, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) /* glGetShaderInfoLog */ (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) /* glGetShaderSource */ (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) /* glGetUniformLocation */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) /* glGetUniformfv */ (GLuint program, GLint location, GLfloat * params);
typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) /* glGetUniformiv */ (GLuint program, GLint location, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) /* glGetVertexAttribdv */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) /* glGetVertexAttribfv */ (GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) /* glGetVertexAttribiv */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) /* glGetVertexAttribPointerv */ (GLuint index, GLenum pname, void ** pointer);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) /* glIsProgram */ (GLuint program);
typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) /* glIsShader */ (GLuint shader);
typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) /* glLinkProgram */ (GLuint program);
typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) /* glShaderSource */ (GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) /* glUseProgram */ (GLuint program);
typedef void (APIENTRYP PFNGLUNIFORM1FPROC) /* glUniform1f */ (GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLUNIFORM2FPROC) /* glUniform2f */ (GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLUNIFORM3FPROC) /* glUniform3f */ (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLUNIFORM4FPROC) /* glUniform4f */ (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLUNIFORM1IPROC) /* glUniform1i */ (GLint location, GLint v0);
typedef void (APIENTRYP PFNGLUNIFORM2IPROC) /* glUniform2i */ (GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLUNIFORM3IPROC) /* glUniform3i */ (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLUNIFORM4IPROC) /* glUniform4i */ (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) /* glUniform1fv */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) /* glUniform2fv */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) /* glUniform3fv */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) /* glUniform4fv */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) /* glUniform1iv */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) /* glUniform2iv */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) /* glUniform3iv */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) /* glUniform4iv */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) /* glUniformMatrix2fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) /* glUniformMatrix3fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) /* glUniformMatrix4fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) /* glValidateProgram */ (GLuint program);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) /* glVertexAttrib1d */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) /* glVertexAttrib1dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) /* glVertexAttrib1f */ (GLuint index, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) /* glVertexAttrib1fv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) /* glVertexAttrib1s */ (GLuint index, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) /* glVertexAttrib1sv */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) /* glVertexAttrib2d */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) /* glVertexAttrib2dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) /* glVertexAttrib2f */ (GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) /* glVertexAttrib2fv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) /* glVertexAttrib2s */ (GLuint index, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) /* glVertexAttrib2sv */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) /* glVertexAttrib3d */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) /* glVertexAttrib3dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) /* glVertexAttrib3f */ (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) /* glVertexAttrib3fv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) /* glVertexAttrib3s */ (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) /* glVertexAttrib3sv */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) /* glVertexAttrib4Nbv */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) /* glVertexAttrib4Niv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) /* glVertexAttrib4Nsv */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) /* glVertexAttrib4Nub */ (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) /* glVertexAttrib4Nubv */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) /* glVertexAttrib4Nuiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) /* glVertexAttrib4Nusv */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) /* glVertexAttrib4bv */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) /* glVertexAttrib4d */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) /* glVertexAttrib4dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) /* glVertexAttrib4f */ (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) /* glVertexAttrib4fv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) /* glVertexAttrib4iv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) /* glVertexAttrib4s */ (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) /* glVertexAttrib4sv */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) /* glVertexAttrib4ubv */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) /* glVertexAttrib4uiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) /* glVertexAttrib4usv */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) /* glVertexAttribPointer */ (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) /* glUniformMatrix2x3fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) /* glUniformMatrix3x2fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) /* glUniformMatrix2x4fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) /* glUniformMatrix4x2fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) /* glUniformMatrix3x4fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) /* glUniformMatrix4x3fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLCOLORMASKIPROC) /* glColorMaski */ (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) /* glGetBooleani_v */ (GLenum target, GLuint index, GLboolean * data);
typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) /* glGetIntegeri_v */ (GLenum target, GLuint index, GLint * data);
typedef void (APIENTRYP PFNGLENABLEIPROC) /* glEnablei */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEIPROC) /* glDisablei */ (GLenum target, GLuint index);
typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) /* glIsEnabledi */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) /* glBeginTransformFeedback */ (GLenum primitiveMode);
typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) /* glEndTransformFeedback */ ();
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) /* glBindBufferRange */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) /* glBindBufferBase */ (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) /* glTransformFeedbackVaryings */ (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) /* glGetTransformFeedbackVarying */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) /* glClampColor */ (GLenum target, GLenum clamp);
typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) /* glBeginConditionalRender */ (GLuint id, GLenum mode);
typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) /* glEndConditionalRender */ ();
typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) /* glVertexAttribIPointer */ (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) /* glGetVertexAttribIiv */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) /* glGetVertexAttribIuiv */ (GLuint index, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) /* glVertexAttribI1i */ (GLuint index, GLint x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) /* glVertexAttribI2i */ (GLuint index, GLint x, GLint y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) /* glVertexAttribI3i */ (GLuint index, GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) /* glVertexAttribI4i */ (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) /* glVertexAttribI1ui */ (GLuint index, GLuint x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) /* glVertexAttribI2ui */ (GLuint index, GLuint x, GLuint y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) /* glVertexAttribI3ui */ (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) /* glVertexAttribI4ui */ (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) /* glVertexAttribI1iv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) /* glVertexAttribI2iv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) /* glVertexAttribI3iv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) /* glVertexAttribI4iv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) /* glVertexAttribI1uiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) /* glVertexAttribI2uiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) /* glVertexAttribI3uiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) /* glVertexAttribI4uiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) /* glVertexAttribI4bv */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) /* glVertexAttribI4sv */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) /* glVertexAttribI4ubv */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) /* glVertexAttribI4usv */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) /* glGetUniformuiv */ (GLuint program, GLint location, GLuint * params);
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) /* glBindFragDataLocation */ (GLuint program, GLuint color, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) /* glGetFragDataLocation */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) /* glUniform1ui */ (GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) /* glUniform2ui */ (GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) /* glUniform3ui */ (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) /* glUniform4ui */ (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) /* glUniform1uiv */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) /* glUniform2uiv */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) /* glUniform3uiv */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) /* glUniform4uiv */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) /* glTexParameterIiv */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) /* glTexParameterIuiv */ (GLenum target, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) /* glGetTexParameterIiv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) /* glGetTexParameterIuiv */ (GLenum target, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) /* glClearBufferiv */ (GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) /* glClearBufferuiv */ (GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) /* glClearBufferfv */ (GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) /* glClearBufferfi */ (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGIPROC) /* glGetStringi */ (GLenum name, GLuint index);
typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) /* glIsRenderbuffer */ (GLuint renderbuffer);
typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) /* glBindRenderbuffer */ (GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) /* glDeleteRenderbuffers */ (GLsizei n, const GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) /* glGenRenderbuffers */ (GLsizei n, GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) /* glRenderbufferStorage */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) /* glGetRenderbufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) /* glIsFramebuffer */ (GLuint framebuffer);
typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) /* glBindFramebuffer */ (GLenum target, GLuint framebuffer);
typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) /* glDeleteFramebuffers */ (GLsizei n, const GLuint * framebuffers);
typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) /* glGenFramebuffers */ (GLsizei n, GLuint * framebuffers);
typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) /* glCheckFramebufferStatus */ (GLenum target);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) /* glFramebufferTexture1D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) /* glFramebufferTexture2D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) /* glFramebufferTexture3D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) /* glFramebufferRenderbuffer */ (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) /* glGetFramebufferAttachmentParameteriv */ (GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) /* glGenerateMipmap */ (GLenum target);
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) /* glBlitFramebuffer */ (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) /* glRenderbufferStorageMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) /* glFramebufferTextureLayer */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void * (APIENTRYP PFNGLMAPBUFFERRANGEPROC) /* glMapBufferRange */ (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) /* glFlushMappedBufferRange */ (GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) /* glBindVertexArray */ (GLuint array);
typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) /* glDeleteVertexArrays */ (GLsizei n, const GLuint * arrays);
typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) /* glGenVertexArrays */ (GLsizei n, GLuint * arrays);
typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) /* glIsVertexArray */ (GLuint array);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) /* glDrawArraysInstanced */ (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) /* glDrawElementsInstanced */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
typedef void (APIENTRYP PFNGLTEXBUFFERPROC) /* glTexBuffer */ (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) /* glPrimitiveRestartIndex */ (GLuint index);
typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) /* glCopyBufferSubData */ (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) /* glGetUniformIndices */ (GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) /* glGetActiveUniformsiv */ (GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) /* glGetActiveUniformName */ (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) /* glGetUniformBlockIndex */ (GLuint program, const GLchar * uniformBlockName);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) /* glGetActiveUniformBlockiv */ (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) /* glGetActiveUniformBlockName */ (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) /* glUniformBlockBinding */ (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) /* glBindBufferRange */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) /* glBindBufferBase */ (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) /* glGetIntegeri_v */ (GLenum target, GLuint index, GLint * data);
typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) /* glDrawElementsBaseVertex */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) /* glDrawRangeElementsBaseVertex */ (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) /* glDrawElementsInstancedBaseVertex */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) /* glMultiDrawElementsBaseVertex */ (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) /* glProvokingVertex */ (GLenum mode);
typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) /* glFenceSync */ (GLenum condition, GLbitfield flags);
typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) /* glIsSync */ (GLsync sync);
typedef void (APIENTRYP PFNGLDELETESYNCPROC) /* glDeleteSync */ (GLsync sync);
typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) /* glClientWaitSync */ (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLWAITSYNCPROC) /* glWaitSync */ (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) /* glGetInteger64v */ (GLenum pname, GLint64 * data);
typedef void (APIENTRYP PFNGLGETSYNCIVPROC) /* glGetSynciv */ (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) /* glGetInteger64i_v */ (GLenum target, GLuint index, GLint64 * data);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) /* glGetBufferParameteri64v */ (GLenum target, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) /* glFramebufferTexture */ (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) /* glTexImage2DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) /* glTexImage3DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) /* glGetMultisamplefv */ (GLenum pname, GLuint index, GLfloat * val);
typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) /* glSampleMaski */ (GLuint maskNumber, GLbitfield mask);
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) /* glBindFragDataLocationIndexed */ (GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) /* glGetFragDataIndex */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) /* glGenSamplers */ (GLsizei count, GLuint * samplers);
typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) /* glDeleteSamplers */ (GLsizei count, const GLuint * samplers);
typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) /* glIsSampler */ (GLuint sampler);
typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) /* glBindSampler */ (GLuint unit, GLuint sampler);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) /* glSamplerParameteri */ (GLuint sampler, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) /* glSamplerParameteriv */ (GLuint sampler, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) /* glSamplerParameterf */ (GLuint sampler, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) /* glSamplerParameterfv */ (GLuint sampler, GLenum pname, const GLfloat * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) /* glSamplerParameterIiv */ (GLuint sampler, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) /* glSamplerParameterIuiv */ (GLuint sampler, GLenum pname, const GLuint * param);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) /* glGetSamplerParameteriv */ (GLuint sampler, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) /* glGetSamplerParameterIiv */ (GLuint sampler, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) /* glGetSamplerParameterfv */ (GLuint sampler, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) /* glGetSamplerParameterIuiv */ (GLuint sampler, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) /* glQueryCounter */ (GLuint id, GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) /* glGetQueryObjecti64v */ (GLuint id, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) /* glGetQueryObjectui64v */ (GLuint id, GLenum pname, GLuint64 * params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) /* glVertexAttribDivisor */ (GLuint index, GLuint divisor);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) /* glVertexAttribP1ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) /* glVertexAttribP1uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) /* glVertexAttribP2ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) /* glVertexAttribP2uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) /* glVertexAttribP3ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) /* glVertexAttribP3uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) /* glVertexAttribP4ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) /* glVertexAttribP4uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) /* glVertexP2ui */ (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) /* glVertexP2uiv */ (GLenum type, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) /* glVertexP3ui */ (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) /* glVertexP3uiv */ (GLenum type, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) /* glVertexP4ui */ (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) /* glVertexP4uiv */ (GLenum type, const GLuint * value);
typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) /* glTexCoordP1ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) /* glTexCoordP1uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) /* glTexCoordP2ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) /* glTexCoordP2uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) /* glTexCoordP3ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) /* glTexCoordP3uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) /* glTexCoordP4ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) /* glTexCoordP4uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) /* glMultiTexCoordP1ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) /* glMultiTexCoordP1uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) /* glMultiTexCoordP2ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) /* glMultiTexCoordP2uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) /* glMultiTexCoordP3ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) /* glMultiTexCoordP3uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) /* glMultiTexCoordP4ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) /* glMultiTexCoordP4uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLNORMALP3UIPROC) /* glNormalP3ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) /* glNormalP3uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLCOLORP3UIPROC) /* glColorP3ui */ (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) /* glColorP3uiv */ (GLenum type, const GLuint * color);
typedef void (APIENTRYP PFNGLCOLORP4UIPROC) /* glColorP4ui */ (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) /* glColorP4uiv */ (GLenum type, const GLuint * color);
typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) /* glSecondaryColorP3ui */ (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) /* glSecondaryColorP3uiv */ (GLenum type, const GLuint * color);
typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) /* glMinSampleShading */ (GLfloat value);
typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) /* glBlendEquationi */ (GLuint buf, GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) /* glBlendEquationSeparatei */ (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) /* glBlendFunci */ (GLuint buf, GLenum src, GLenum dst);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) /* glBlendFuncSeparatei */ (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) /* glDrawArraysIndirect */ (GLenum mode, const void * indirect);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) /* glDrawElementsIndirect */ (GLenum mode, GLenum type, const void * indirect);
typedef void (APIENTRYP PFNGLUNIFORM1DPROC) /* glUniform1d */ (GLint location, GLdouble x);
typedef void (APIENTRYP PFNGLUNIFORM2DPROC) /* glUniform2d */ (GLint location, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLUNIFORM3DPROC) /* glUniform3d */ (GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLUNIFORM4DPROC) /* glUniform4d */ (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) /* glUniform1dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) /* glUniform2dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) /* glUniform3dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) /* glUniform4dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) /* glUniformMatrix2dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) /* glUniformMatrix3dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) /* glUniformMatrix4dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) /* glUniformMatrix2x3dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) /* glUniformMatrix2x4dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) /* glUniformMatrix3x2dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) /* glUniformMatrix3x4dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) /* glUniformMatrix4x2dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) /* glUniformMatrix4x3dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) /* glGetUniformdv */ (GLuint program, GLint location, GLdouble * params);
typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) /* glGetSubroutineUniformLocation */ (GLuint program, GLenum shadertype, const GLchar * name);
typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) /* glGetSubroutineIndex */ (GLuint program, GLenum shadertype, const GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) /* glGetActiveSubroutineUniformiv */ (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) /* glGetActiveSubroutineUniformName */ (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) /* glGetActiveSubroutineName */ (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) /* glUniformSubroutinesuiv */ (GLenum shadertype, GLsizei count, const GLuint * indices);
typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) /* glGetUniformSubroutineuiv */ (GLenum shadertype, GLint location, GLuint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) /* glGetProgramStageiv */ (GLuint program, GLenum shadertype, GLenum pname, GLint * values);
typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) /* glPatchParameteri */ (GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) /* glPatchParameterfv */ (GLenum pname, const GLfloat * values);
typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) /* glBindTransformFeedback */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) /* glDeleteTransformFeedbacks */ (GLsizei n, const GLuint * ids);
typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) /* glGenTransformFeedbacks */ (GLsizei n, GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) /* glIsTransformFeedback */ (GLuint id);
typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) /* glPauseTransformFeedback */ ();
typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) /* glResumeTransformFeedback */ ();
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) /* glDrawTransformFeedback */ (GLenum mode, GLuint id);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) /* glDrawTransformFeedbackStream */ (GLenum mode, GLuint id, GLuint stream);
typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) /* glBeginQueryIndexed */ (GLenum target, GLuint index, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) /* glEndQueryIndexed */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) /* glGetQueryIndexediv */ (GLenum target, GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) /* glReleaseShaderCompiler */ ();
typedef void (APIENTRYP PFNGLSHADERBINARYPROC) /* glShaderBinary */ (GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length);
typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) /* glGetShaderPrecisionFormat */ (GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) /* glDepthRangef */ (GLfloat n, GLfloat f);
typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) /* glClearDepthf */ (GLfloat d);
typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) /* glGetProgramBinary */ (GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) /* glProgramBinary */ (GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) /* glProgramParameteri */ (GLuint program, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) /* glUseProgramStages */ (GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) /* glActiveShaderProgram */ (GLuint pipeline, GLuint program);
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) /* glCreateShaderProgramv */ (GLenum type, GLsizei count, const GLchar *const* strings);
typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) /* glBindProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) /* glDeleteProgramPipelines */ (GLsizei n, const GLuint * pipelines);
typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) /* glGenProgramPipelines */ (GLsizei n, GLuint * pipelines);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) /* glIsProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) /* glGetProgramPipelineiv */ (GLuint pipeline, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) /* glProgramUniform1i */ (GLuint program, GLint location, GLint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) /* glProgramUniform1iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) /* glProgramUniform1f */ (GLuint program, GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) /* glProgramUniform1fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) /* glProgramUniform1d */ (GLuint program, GLint location, GLdouble v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) /* glProgramUniform1dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) /* glProgramUniform1ui */ (GLuint program, GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) /* glProgramUniform1uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) /* glProgramUniform2i */ (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) /* glProgramUniform2iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) /* glProgramUniform2f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) /* glProgramUniform2fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) /* glProgramUniform2d */ (GLuint program, GLint location, GLdouble v0, GLdouble v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) /* glProgramUniform2dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) /* glProgramUniform2ui */ (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) /* glProgramUniform2uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) /* glProgramUniform3i */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) /* glProgramUniform3iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) /* glProgramUniform3f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) /* glProgramUniform3fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) /* glProgramUniform3d */ (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) /* glProgramUniform3dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) /* glProgramUniform3ui */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) /* glProgramUniform3uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) /* glProgramUniform4i */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) /* glProgramUniform4iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) /* glProgramUniform4f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) /* glProgramUniform4fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) /* glProgramUniform4d */ (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) /* glProgramUniform4dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) /* glProgramUniform4ui */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) /* glProgramUniform4uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) /* glProgramUniformMatrix2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) /* glProgramUniformMatrix3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) /* glProgramUniformMatrix4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) /* glProgramUniformMatrix2dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) /* glProgramUniformMatrix3dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) /* glProgramUniformMatrix4dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) /* glProgramUniformMatrix2x3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) /* glProgramUniformMatrix3x2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) /* glProgramUniformMatrix2x4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) /* glProgramUniformMatrix4x2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) /* glProgramUniformMatrix3x4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) /* glProgramUniformMatrix4x3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) /* glProgramUniformMatrix2x3dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) /* glProgramUniformMatrix3x2dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) /* glProgramUniformMatrix2x4dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) /* glProgramUniformMatrix4x2dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) /* glProgramUniformMatrix3x4dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) /* glProgramUniformMatrix4x3dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) /* glValidateProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) /* glGetProgramPipelineInfoLog */ (GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) /* glVertexAttribL1d */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) /* glVertexAttribL2d */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) /* glVertexAttribL3d */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) /* glVertexAttribL4d */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) /* glVertexAttribL1dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) /* glVertexAttribL2dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) /* glVertexAttribL3dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) /* glVertexAttribL4dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) /* glVertexAttribLPointer */ (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) /* glGetVertexAttribLdv */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) /* glViewportArrayv */ (GLuint first, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) /* glViewportIndexedf */ (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) /* glViewportIndexedfv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) /* glScissorArrayv */ (GLuint first, GLsizei count, const GLint * v);
typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) /* glScissorIndexed */ (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) /* glScissorIndexedv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) /* glDepthRangeArrayv */ (GLuint first, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) /* glDepthRangeIndexed */ (GLuint index, GLdouble n, GLdouble f);
typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) /* glGetFloati_v */ (GLenum target, GLuint index, GLfloat * data);
typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) /* glGetDoublei_v */ (GLenum target, GLuint index, GLdouble * data);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) /* glDrawArraysInstancedBaseInstance */ (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) /* glDrawElementsInstancedBaseInstance */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) /* glDrawElementsInstancedBaseVertexBaseInstance */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) /* glGetInternalformativ */ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) /* glGetActiveAtomicCounterBufferiv */ (GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) /* glBindImageTexture */ (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) /* glMemoryBarrier */ (GLbitfield barriers);
typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) /* glTexStorage1D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) /* glTexStorage2D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) /* glTexStorage3D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) /* glDrawTransformFeedbackInstanced */ (GLenum mode, GLuint id, GLsizei instancecount);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) /* glDrawTransformFeedbackStreamInstanced */ (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) /* glClearBufferData */ (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) /* glClearBufferSubData */ (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) /* glDispatchCompute */ (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) /* glDispatchComputeIndirect */ (GLintptr indirect);
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) /* glCopyImageSubData */ (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) /* glFramebufferParameteri */ (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) /* glGetFramebufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) /* glGetInternalformati64v */ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 * params);
typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) /* glInvalidateTexSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) /* glInvalidateTexImage */ (GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) /* glInvalidateBufferSubData */ (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) /* glInvalidateBufferData */ (GLuint buffer);
typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) /* glInvalidateFramebuffer */ (GLenum target, GLsizei numAttachments, const GLenum * attachments);
typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) /* glInvalidateSubFramebuffer */ (GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) /* glMultiDrawArraysIndirect */ (GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) /* glMultiDrawElementsIndirect */ (GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) /* glGetProgramInterfaceiv */ (GLuint program, GLenum programInterface, GLenum pname, GLint * params);
typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) /* glGetProgramResourceIndex */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) /* glGetProgramResourceName */ (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) /* glGetProgramResourceiv */ (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params);
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) /* glGetProgramResourceLocation */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) /* glGetProgramResourceLocationIndex */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) /* glShaderStorageBlockBinding */ (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) /* glTexBufferRange */ (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) /* glTexStorage2DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) /* glTexStorage3DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) /* glTextureView */ (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) /* glBindVertexBuffer */ (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) /* glVertexAttribFormat */ (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) /* glVertexAttribIFormat */ (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) /* glVertexAttribLFormat */ (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) /* glVertexAttribBinding */ (GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) /* glVertexBindingDivisor */ (GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) /* glDebugMessageControl */ (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) /* glDebugMessageInsert */ (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) /* glDebugMessageCallback */ (GLDEBUGPROC callback, const void * userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) /* glGetDebugMessageLog */ (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) /* glPushDebugGroup */ (GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) /* glPopDebugGroup */ ();
typedef void (APIENTRYP PFNGLOBJECTLABELPROC) /* glObjectLabel */ (GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) /* glGetObjectLabel */ (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) /* glObjectPtrLabel */ (const void * ptr, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) /* glGetObjectPtrLabel */ (const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLGETPOINTERVPROC) /* glGetPointerv */ (GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLGETPOINTERVPROC) /* glGetPointerv */ (GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) /* glBufferStorage */ (GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) /* glClearTexImage */ (GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) /* glClearTexSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) /* glBindBuffersBase */ (GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) /* glBindBuffersRange */ (GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) /* glBindTextures */ (GLuint first, GLsizei count, const GLuint * textures);
typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) /* glBindSamplers */ (GLuint first, GLsizei count, const GLuint * samplers);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) /* glBindImageTextures */ (GLuint first, GLsizei count, const GLuint * textures);
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) /* glBindVertexBuffers */ (GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) /* glClipControl */ (GLenum origin, GLenum depth);
typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) /* glCreateTransformFeedbacks */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) /* glTransformFeedbackBufferBase */ (GLuint xfb, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) /* glTransformFeedbackBufferRange */ (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) /* glGetTransformFeedbackiv */ (GLuint xfb, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) /* glGetTransformFeedbacki_v */ (GLuint xfb, GLenum pname, GLuint index, GLint * param);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) /* glGetTransformFeedbacki64_v */ (GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) /* glCreateBuffers */ (GLsizei n, GLuint * buffers);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) /* glNamedBufferStorage */ (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) /* glNamedBufferData */ (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) /* glNamedBufferSubData */ (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) /* glCopyNamedBufferSubData */ (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) /* glClearNamedBufferData */ (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) /* glClearNamedBufferSubData */ (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void * (APIENTRYP PFNGLMAPNAMEDBUFFERPROC) /* glMapNamedBuffer */ (GLuint buffer, GLenum access);
typedef void * (APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) /* glMapNamedBufferRange */ (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) /* glUnmapNamedBuffer */ (GLuint buffer);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) /* glFlushMappedNamedBufferRange */ (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) /* glGetNamedBufferParameteriv */ (GLuint buffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) /* glGetNamedBufferParameteri64v */ (GLuint buffer, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) /* glGetNamedBufferPointerv */ (GLuint buffer, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) /* glGetNamedBufferSubData */ (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) /* glCreateFramebuffers */ (GLsizei n, GLuint * framebuffers);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) /* glNamedFramebufferRenderbuffer */ (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) /* glNamedFramebufferParameteri */ (GLuint framebuffer, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) /* glNamedFramebufferTexture */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) /* glNamedFramebufferTextureLayer */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) /* glNamedFramebufferDrawBuffer */ (GLuint framebuffer, GLenum buf);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) /* glNamedFramebufferDrawBuffers */ (GLuint framebuffer, GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) /* glNamedFramebufferReadBuffer */ (GLuint framebuffer, GLenum src);
typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) /* glInvalidateNamedFramebufferData */ (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) /* glInvalidateNamedFramebufferSubData */ (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) /* glClearNamedFramebufferiv */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) /* glClearNamedFramebufferuiv */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) /* glClearNamedFramebufferfv */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) /* glClearNamedFramebufferfi */ (GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil);
typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) /* glBlitNamedFramebuffer */ (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) /* glCheckNamedFramebufferStatus */ (GLuint framebuffer, GLenum target);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) /* glGetNamedFramebufferParameteriv */ (GLuint framebuffer, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) /* glGetNamedFramebufferAttachmentParameteriv */ (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) /* glCreateRenderbuffers */ (GLsizei n, GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) /* glNamedRenderbufferStorage */ (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) /* glNamedRenderbufferStorageMultisample */ (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) /* glGetNamedRenderbufferParameteriv */ (GLuint renderbuffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) /* glCreateTextures */ (GLenum target, GLsizei n, GLuint * textures);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) /* glTextureBuffer */ (GLuint texture, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) /* glTextureBufferRange */ (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) /* glTextureStorage1D */ (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) /* glTextureStorage2D */ (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) /* glTextureStorage3D */ (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) /* glTextureStorage2DMultisample */ (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) /* glTextureStorage3DMultisample */ (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) /* glTextureSubImage1D */ (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) /* glTextureSubImage2D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) /* glTextureSubImage3D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) /* glCompressedTextureSubImage1D */ (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) /* glCompressedTextureSubImage2D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) /* glCompressedTextureSubImage3D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) /* glCopyTextureSubImage1D */ (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) /* glCopyTextureSubImage2D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) /* glCopyTextureSubImage3D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) /* glTextureParameterf */ (GLuint texture, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) /* glTextureParameterfv */ (GLuint texture, GLenum pname, const GLfloat * param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) /* glTextureParameteri */ (GLuint texture, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) /* glTextureParameterIiv */ (GLuint texture, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) /* glTextureParameterIuiv */ (GLuint texture, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) /* glTextureParameteriv */ (GLuint texture, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) /* glGenerateTextureMipmap */ (GLuint texture);
typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) /* glBindTextureUnit */ (GLuint unit, GLuint texture);
typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) /* glGetTextureImage */ (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) /* glGetCompressedTextureImage */ (GLuint texture, GLint level, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) /* glGetTextureLevelParameterfv */ (GLuint texture, GLint level, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) /* glGetTextureLevelParameteriv */ (GLuint texture, GLint level, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) /* glGetTextureParameterfv */ (GLuint texture, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) /* glGetTextureParameterIiv */ (GLuint texture, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) /* glGetTextureParameterIuiv */ (GLuint texture, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) /* glGetTextureParameteriv */ (GLuint texture, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) /* glCreateVertexArrays */ (GLsizei n, GLuint * arrays);
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) /* glDisableVertexArrayAttrib */ (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) /* glEnableVertexArrayAttrib */ (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) /* glVertexArrayElementBuffer */ (GLuint vaobj, GLuint buffer);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) /* glVertexArrayVertexBuffer */ (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) /* glVertexArrayVertexBuffers */ (GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) /* glVertexArrayAttribBinding */ (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) /* glVertexArrayAttribFormat */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) /* glVertexArrayAttribIFormat */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) /* glVertexArrayAttribLFormat */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) /* glVertexArrayBindingDivisor */ (GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) /* glGetVertexArrayiv */ (GLuint vaobj, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) /* glGetVertexArrayIndexediv */ (GLuint vaobj, GLuint index, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) /* glGetVertexArrayIndexed64iv */ (GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) /* glCreateSamplers */ (GLsizei n, GLuint * samplers);
typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) /* glCreateProgramPipelines */ (GLsizei n, GLuint * pipelines);
typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) /* glCreateQueries */ (GLenum target, GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) /* glGetQueryBufferObjecti64v */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) /* glGetQueryBufferObjectiv */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) /* glGetQueryBufferObjectui64v */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) /* glGetQueryBufferObjectuiv */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) /* glMemoryBarrierByRegion */ (GLbitfield barriers);
typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) /* glGetTextureSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) /* glGetCompressedTextureSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) /* glGetGraphicsResetStatus */ ();
typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) /* glGetnCompressedTexImage */ (GLenum target, GLint lod, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) /* glGetnTexImage */ (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) /* glGetnUniformdv */ (GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) /* glGetnUniformfv */ (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) /* glGetnUniformiv */ (GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) /* glGetnUniformuiv */ (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (APIENTRYP PFNGLREADNPIXELSPROC) /* glReadnPixels */ (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (APIENTRYP PFNGLGETNMAPDVPROC) /* glGetnMapdv */ (GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
typedef void (APIENTRYP PFNGLGETNMAPFVPROC) /* glGetnMapfv */ (GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
typedef void (APIENTRYP PFNGLGETNMAPIVPROC) /* glGetnMapiv */ (GLenum target, GLenum query, GLsizei bufSize, GLint * v);
typedef void (APIENTRYP PFNGLGETNPIXELMAPFVPROC) /* glGetnPixelMapfv */ (GLenum map, GLsizei bufSize, GLfloat * values);
typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVPROC) /* glGetnPixelMapuiv */ (GLenum map, GLsizei bufSize, GLuint * values);
typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVPROC) /* glGetnPixelMapusv */ (GLenum map, GLsizei bufSize, GLushort * values);
typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEPROC) /* glGetnPolygonStipple */ (GLsizei bufSize, GLubyte * pattern);
typedef void (APIENTRYP PFNGLGETNCOLORTABLEPROC) /* glGetnColorTable */ (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERPROC) /* glGetnConvolutionFilter */ (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERPROC) /* glGetnSeparableFilter */ (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
typedef void (APIENTRYP PFNGLGETNHISTOGRAMPROC) /* glGetnHistogram */ (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
typedef void (APIENTRYP PFNGLGETNMINMAXPROC) /* glGetnMinmax */ (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) /* glTextureBarrier */ ();
typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) /* glTbufferMask3DFX */ (GLuint mask);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) /* glDebugMessageEnableAMD */ (GLenum category, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) /* glDebugMessageInsertAMD */ (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar * buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) /* glDebugMessageCallbackAMD */ (GLDEBUGPROCAMD callback, void * userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) /* glGetDebugMessageLogAMD */ (GLuint count, GLsizei bufsize, GLenum * categories, GLuint * severities, GLuint * ids, GLsizei * lengths, GLchar * message);
typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) /* glBlendFuncIndexedAMD */ (GLuint buf, GLenum src, GLenum dst);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) /* glBlendFuncSeparateIndexedAMD */ (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) /* glBlendEquationIndexedAMD */ (GLuint buf, GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) /* glBlendEquationSeparateIndexedAMD */ (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) /* glUniform1i64NV */ (GLint location, GLint64EXT x);
typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) /* glUniform2i64NV */ (GLint location, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) /* glUniform3i64NV */ (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) /* glUniform4i64NV */ (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) /* glUniform1i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) /* glUniform2i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) /* glUniform3i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) /* glUniform4i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) /* glUniform1ui64NV */ (GLint location, GLuint64EXT x);
typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) /* glUniform2ui64NV */ (GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) /* glUniform3ui64NV */ (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) /* glUniform4ui64NV */ (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) /* glUniform1ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) /* glUniform2ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) /* glUniform3ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) /* glUniform4ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) /* glGetUniformi64vNV */ (GLuint program, GLint location, GLint64EXT * params);
typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) /* glGetUniformui64vNV */ (GLuint program, GLint location, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) /* glProgramUniform1i64NV */ (GLuint program, GLint location, GLint64EXT x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) /* glProgramUniform2i64NV */ (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) /* glProgramUniform3i64NV */ (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) /* glProgramUniform4i64NV */ (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) /* glProgramUniform1i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) /* glProgramUniform2i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) /* glProgramUniform3i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) /* glProgramUniform4i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) /* glProgramUniform1ui64NV */ (GLuint program, GLint location, GLuint64EXT x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) /* glProgramUniform2ui64NV */ (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) /* glProgramUniform3ui64NV */ (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) /* glProgramUniform4ui64NV */ (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) /* glProgramUniform1ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) /* glProgramUniform2ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) /* glProgramUniform3ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) /* glProgramUniform4ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPARAMETERIAMDPROC) /* glVertexAttribParameteriAMD */ (GLuint index, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) /* glMultiDrawArraysIndirectAMD */ (GLenum mode, const void * indirect, GLsizei primcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) /* glMultiDrawElementsIndirectAMD */ (GLenum mode, GLenum type, const void * indirect, GLsizei primcount, GLsizei stride);
typedef void (APIENTRYP PFNGLGENNAMESAMDPROC) /* glGenNamesAMD */ (GLenum identifier, GLuint num, GLuint * names);
typedef void (APIENTRYP PFNGLDELETENAMESAMDPROC) /* glDeleteNamesAMD */ (GLenum identifier, GLuint num, const GLuint * names);
typedef GLboolean (APIENTRYP PFNGLISNAMEAMDPROC) /* glIsNameAMD */ (GLenum identifier, GLuint name);
typedef void (APIENTRYP PFNGLQUERYOBJECTPARAMETERUIAMDPROC) /* glQueryObjectParameteruiAMD */ (GLenum target, GLuint id, GLenum pname, GLuint param);
typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) /* glGetPerfMonitorGroupsAMD */ (GLint * numGroups, GLsizei groupsSize, GLuint * groups);
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) /* glGetPerfMonitorCountersAMD */ (GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters);
typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) /* glGetPerfMonitorGroupStringAMD */ (GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString);
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) /* glGetPerfMonitorCounterStringAMD */ (GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString);
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) /* glGetPerfMonitorCounterInfoAMD */ (GLuint group, GLuint counter, GLenum pname, void * data);
typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) /* glGenPerfMonitorsAMD */ (GLsizei n, GLuint * monitors);
typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) /* glDeletePerfMonitorsAMD */ (GLsizei n, GLuint * monitors);
typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) /* glSelectPerfMonitorCountersAMD */ (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList);
typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) /* glBeginPerfMonitorAMD */ (GLuint monitor);
typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) /* glEndPerfMonitorAMD */ (GLuint monitor);
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) /* glGetPerfMonitorCounterDataAMD */ (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten);
typedef void (APIENTRYP PFNGLSETMULTISAMPLEFVAMDPROC) /* glSetMultisamplefvAMD */ (GLenum pname, GLuint index, const GLfloat * val);
typedef void (APIENTRYP PFNGLTEXSTORAGESPARSEAMDPROC) /* glTexStorageSparseAMD */ (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
typedef void (APIENTRYP PFNGLTEXTURESTORAGESPARSEAMDPROC) /* glTextureStorageSparseAMD */ (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
typedef void (APIENTRYP PFNGLSTENCILOPVALUEAMDPROC) /* glStencilOpValueAMD */ (GLenum face, GLuint value);
typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) /* glTessellationFactorAMD */ (GLfloat factor);
typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) /* glTessellationModeAMD */ (GLenum mode);
typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) /* glElementPointerAPPLE */ (GLenum type, const void * pointer);
typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) /* glDrawElementArrayAPPLE */ (GLenum mode, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) /* glDrawRangeElementArrayAPPLE */ (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) /* glMultiDrawElementArrayAPPLE */ (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) /* glMultiDrawRangeElementArrayAPPLE */ (GLenum mode, GLuint start, GLuint end, const GLint * first, const GLsizei * count, GLsizei primcount);
typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) /* glGenFencesAPPLE */ (GLsizei n, GLuint * fences);
typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) /* glDeleteFencesAPPLE */ (GLsizei n, const GLuint * fences);
typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) /* glSetFenceAPPLE */ (GLuint fence);
typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) /* glIsFenceAPPLE */ (GLuint fence);
typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) /* glTestFenceAPPLE */ (GLuint fence);
typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) /* glFinishFenceAPPLE */ (GLuint fence);
typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) /* glTestObjectAPPLE */ (GLenum object, GLuint name);
typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) /* glFinishObjectAPPLE */ (GLenum object, GLint name);
typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) /* glBufferParameteriAPPLE */ (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) /* glFlushMappedBufferRangeAPPLE */ (GLenum target, GLintptr offset, GLsizeiptr size);
typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) /* glObjectPurgeableAPPLE */ (GLenum objectType, GLuint name, GLenum option);
typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) /* glObjectUnpurgeableAPPLE */ (GLenum objectType, GLuint name, GLenum option);
typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) /* glGetObjectParameterivAPPLE */ (GLenum objectType, GLuint name, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) /* glTextureRangeAPPLE */ (GLenum target, GLsizei length, const void * pointer);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) /* glGetTexParameterPointervAPPLE */ (GLenum target, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) /* glBindVertexArrayAPPLE */ (GLuint array);
typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) /* glDeleteVertexArraysAPPLE */ (GLsizei n, const GLuint * arrays);
typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) /* glGenVertexArraysAPPLE */ (GLsizei n, GLuint * arrays);
typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) /* glIsVertexArrayAPPLE */ (GLuint array);
typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) /* glVertexArrayRangeAPPLE */ (GLsizei length, void * pointer);
typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) /* glFlushVertexArrayRangeAPPLE */ (GLsizei length, void * pointer);
typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) /* glVertexArrayParameteriAPPLE */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) /* glEnableVertexAttribAPPLE */ (GLuint index, GLenum pname);
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) /* glDisableVertexAttribAPPLE */ (GLuint index, GLenum pname);
typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) /* glIsVertexAttribEnabledAPPLE */ (GLuint index, GLenum pname);
typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) /* glMapVertexAttrib1dAPPLE */ (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) /* glMapVertexAttrib1fAPPLE */ (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) /* glMapVertexAttrib2dAPPLE */ (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) /* glMapVertexAttrib2fAPPLE */ (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) /* glReleaseShaderCompiler */ ();
typedef void (APIENTRYP PFNGLSHADERBINARYPROC) /* glShaderBinary */ (GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length);
typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) /* glGetShaderPrecisionFormat */ (GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) /* glDepthRangef */ (GLfloat n, GLfloat f);
typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) /* glClearDepthf */ (GLfloat d);
typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) /* glMemoryBarrierByRegion */ (GLbitfield barriers);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) /* glDrawArraysInstancedBaseInstance */ (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) /* glDrawElementsInstancedBaseInstance */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) /* glDrawElementsInstancedBaseVertexBaseInstance */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) /* glGetTextureHandleARB */ (GLuint texture);
typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) /* glGetTextureSamplerHandleARB */ (GLuint texture, GLuint sampler);
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) /* glMakeTextureHandleResidentARB */ (GLuint64 handle);
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) /* glMakeTextureHandleNonResidentARB */ (GLuint64 handle);
typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) /* glGetImageHandleARB */ (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) /* glMakeImageHandleResidentARB */ (GLuint64 handle, GLenum access);
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) /* glMakeImageHandleNonResidentARB */ (GLuint64 handle);
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) /* glUniformHandleui64ARB */ (GLint location, GLuint64 value);
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) /* glUniformHandleui64vARB */ (GLint location, GLsizei count, const GLuint64 * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) /* glProgramUniformHandleui64ARB */ (GLuint program, GLint location, GLuint64 value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) /* glProgramUniformHandleui64vARB */ (GLuint program, GLint location, GLsizei count, const GLuint64 * values);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) /* glIsTextureHandleResidentARB */ (GLuint64 handle);
typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) /* glIsImageHandleResidentARB */ (GLuint64 handle);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) /* glVertexAttribL1ui64ARB */ (GLuint index, GLuint64EXT x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) /* glVertexAttribL1ui64vARB */ (GLuint index, const GLuint64EXT * v);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) /* glGetVertexAttribLui64vARB */ (GLuint index, GLenum pname, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) /* glBindFragDataLocationIndexed */ (GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) /* glGetFragDataIndex */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) /* glBufferStorage */ (GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) /* glCreateSyncFromCLeventARB */ (struct _cl_context * context, struct _cl_event * event, GLbitfield flags);
typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) /* glClearBufferData */ (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) /* glClearBufferSubData */ (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) /* glClearTexImage */ (GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) /* glClearTexSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) /* glClipControl */ (GLenum origin, GLenum depth);
typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) /* glClampColorARB */ (GLenum target, GLenum clamp);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) /* glDispatchCompute */ (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) /* glDispatchComputeIndirect */ (GLintptr indirect);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) /* glDispatchComputeGroupSizeARB */ (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) /* glCopyBufferSubData */ (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) /* glCopyImageSubData */ (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) /* glDebugMessageControlARB */ (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) /* glDebugMessageInsertARB */ (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) /* glDebugMessageCallbackARB */ (GLDEBUGPROCARB callback, const void * userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) /* glGetDebugMessageLogARB */ (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) /* glCreateTransformFeedbacks */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) /* glTransformFeedbackBufferBase */ (GLuint xfb, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) /* glTransformFeedbackBufferRange */ (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) /* glGetTransformFeedbackiv */ (GLuint xfb, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) /* glGetTransformFeedbacki_v */ (GLuint xfb, GLenum pname, GLuint index, GLint * param);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) /* glGetTransformFeedbacki64_v */ (GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) /* glCreateBuffers */ (GLsizei n, GLuint * buffers);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) /* glNamedBufferStorage */ (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) /* glNamedBufferData */ (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) /* glNamedBufferSubData */ (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) /* glCopyNamedBufferSubData */ (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) /* glClearNamedBufferData */ (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) /* glClearNamedBufferSubData */ (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void * (APIENTRYP PFNGLMAPNAMEDBUFFERPROC) /* glMapNamedBuffer */ (GLuint buffer, GLenum access);
typedef void * (APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) /* glMapNamedBufferRange */ (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) /* glUnmapNamedBuffer */ (GLuint buffer);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) /* glFlushMappedNamedBufferRange */ (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) /* glGetNamedBufferParameteriv */ (GLuint buffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) /* glGetNamedBufferParameteri64v */ (GLuint buffer, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) /* glGetNamedBufferPointerv */ (GLuint buffer, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) /* glGetNamedBufferSubData */ (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) /* glCreateFramebuffers */ (GLsizei n, GLuint * framebuffers);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) /* glNamedFramebufferRenderbuffer */ (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) /* glNamedFramebufferParameteri */ (GLuint framebuffer, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) /* glNamedFramebufferTexture */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) /* glNamedFramebufferTextureLayer */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) /* glNamedFramebufferDrawBuffer */ (GLuint framebuffer, GLenum buf);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) /* glNamedFramebufferDrawBuffers */ (GLuint framebuffer, GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) /* glNamedFramebufferReadBuffer */ (GLuint framebuffer, GLenum src);
typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) /* glInvalidateNamedFramebufferData */ (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) /* glInvalidateNamedFramebufferSubData */ (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) /* glClearNamedFramebufferiv */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) /* glClearNamedFramebufferuiv */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) /* glClearNamedFramebufferfv */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) /* glClearNamedFramebufferfi */ (GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil);
typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) /* glBlitNamedFramebuffer */ (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) /* glCheckNamedFramebufferStatus */ (GLuint framebuffer, GLenum target);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) /* glGetNamedFramebufferParameteriv */ (GLuint framebuffer, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) /* glGetNamedFramebufferAttachmentParameteriv */ (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) /* glCreateRenderbuffers */ (GLsizei n, GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) /* glNamedRenderbufferStorage */ (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) /* glNamedRenderbufferStorageMultisample */ (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) /* glGetNamedRenderbufferParameteriv */ (GLuint renderbuffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) /* glCreateTextures */ (GLenum target, GLsizei n, GLuint * textures);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) /* glTextureBuffer */ (GLuint texture, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) /* glTextureBufferRange */ (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) /* glTextureStorage1D */ (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) /* glTextureStorage2D */ (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) /* glTextureStorage3D */ (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) /* glTextureStorage2DMultisample */ (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) /* glTextureStorage3DMultisample */ (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) /* glTextureSubImage1D */ (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) /* glTextureSubImage2D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) /* glTextureSubImage3D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) /* glCompressedTextureSubImage1D */ (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) /* glCompressedTextureSubImage2D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) /* glCompressedTextureSubImage3D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) /* glCopyTextureSubImage1D */ (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) /* glCopyTextureSubImage2D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) /* glCopyTextureSubImage3D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) /* glTextureParameterf */ (GLuint texture, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) /* glTextureParameterfv */ (GLuint texture, GLenum pname, const GLfloat * param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) /* glTextureParameteri */ (GLuint texture, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) /* glTextureParameterIiv */ (GLuint texture, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) /* glTextureParameterIuiv */ (GLuint texture, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) /* glTextureParameteriv */ (GLuint texture, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) /* glGenerateTextureMipmap */ (GLuint texture);
typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) /* glBindTextureUnit */ (GLuint unit, GLuint texture);
typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) /* glGetTextureImage */ (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) /* glGetCompressedTextureImage */ (GLuint texture, GLint level, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) /* glGetTextureLevelParameterfv */ (GLuint texture, GLint level, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) /* glGetTextureLevelParameteriv */ (GLuint texture, GLint level, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) /* glGetTextureParameterfv */ (GLuint texture, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) /* glGetTextureParameterIiv */ (GLuint texture, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) /* glGetTextureParameterIuiv */ (GLuint texture, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) /* glGetTextureParameteriv */ (GLuint texture, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) /* glCreateVertexArrays */ (GLsizei n, GLuint * arrays);
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) /* glDisableVertexArrayAttrib */ (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) /* glEnableVertexArrayAttrib */ (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) /* glVertexArrayElementBuffer */ (GLuint vaobj, GLuint buffer);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) /* glVertexArrayVertexBuffer */ (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) /* glVertexArrayVertexBuffers */ (GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) /* glVertexArrayAttribBinding */ (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) /* glVertexArrayAttribFormat */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) /* glVertexArrayAttribIFormat */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) /* glVertexArrayAttribLFormat */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) /* glVertexArrayBindingDivisor */ (GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) /* glGetVertexArrayiv */ (GLuint vaobj, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) /* glGetVertexArrayIndexediv */ (GLuint vaobj, GLuint index, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) /* glGetVertexArrayIndexed64iv */ (GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) /* glCreateSamplers */ (GLsizei n, GLuint * samplers);
typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) /* glCreateProgramPipelines */ (GLsizei n, GLuint * pipelines);
typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) /* glCreateQueries */ (GLenum target, GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) /* glGetQueryBufferObjecti64v */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) /* glGetQueryBufferObjectiv */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) /* glGetQueryBufferObjectui64v */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) /* glGetQueryBufferObjectuiv */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) /* glDrawBuffersARB */ (GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) /* glBlendEquationiARB */ (GLuint buf, GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) /* glBlendEquationSeparateiARB */ (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) /* glBlendFunciARB */ (GLuint buf, GLenum src, GLenum dst);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) /* glBlendFuncSeparateiARB */ (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) /* glDrawElementsBaseVertex */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) /* glDrawRangeElementsBaseVertex */ (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) /* glDrawElementsInstancedBaseVertex */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) /* glMultiDrawElementsBaseVertex */ (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) /* glDrawArraysIndirect */ (GLenum mode, const void * indirect);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) /* glDrawElementsIndirect */ (GLenum mode, GLenum type, const void * indirect);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) /* glDrawArraysInstancedARB */ (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) /* glDrawElementsInstancedARB */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) /* glProgramStringARB */ (GLenum target, GLenum format, GLsizei len, const void * string);
typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) /* glBindProgramARB */ (GLenum target, GLuint program);
typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) /* glDeleteProgramsARB */ (GLsizei n, const GLuint * programs);
typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) /* glGenProgramsARB */ (GLsizei n, GLuint * programs);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) /* glProgramEnvParameter4dARB */ (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) /* glProgramEnvParameter4dvARB */ (GLenum target, GLuint index, const GLdouble * params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) /* glProgramEnvParameter4fARB */ (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) /* glProgramEnvParameter4fvARB */ (GLenum target, GLuint index, const GLfloat * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) /* glProgramLocalParameter4dARB */ (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) /* glProgramLocalParameter4dvARB */ (GLenum target, GLuint index, const GLdouble * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) /* glProgramLocalParameter4fARB */ (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) /* glProgramLocalParameter4fvARB */ (GLenum target, GLuint index, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) /* glGetProgramEnvParameterdvARB */ (GLenum target, GLuint index, GLdouble * params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) /* glGetProgramEnvParameterfvARB */ (GLenum target, GLuint index, GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) /* glGetProgramLocalParameterdvARB */ (GLenum target, GLuint index, GLdouble * params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) /* glGetProgramLocalParameterfvARB */ (GLenum target, GLuint index, GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) /* glGetProgramivARB */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) /* glGetProgramStringARB */ (GLenum target, GLenum pname, void * string);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) /* glIsProgramARB */ (GLuint program);
typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) /* glFramebufferParameteri */ (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) /* glGetFramebufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) /* glIsRenderbuffer */ (GLuint renderbuffer);
typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) /* glBindRenderbuffer */ (GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) /* glDeleteRenderbuffers */ (GLsizei n, const GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) /* glGenRenderbuffers */ (GLsizei n, GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) /* glRenderbufferStorage */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) /* glGetRenderbufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) /* glIsFramebuffer */ (GLuint framebuffer);
typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) /* glBindFramebuffer */ (GLenum target, GLuint framebuffer);
typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) /* glDeleteFramebuffers */ (GLsizei n, const GLuint * framebuffers);
typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) /* glGenFramebuffers */ (GLsizei n, GLuint * framebuffers);
typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) /* glCheckFramebufferStatus */ (GLenum target);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) /* glFramebufferTexture1D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) /* glFramebufferTexture2D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) /* glFramebufferTexture3D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) /* glFramebufferRenderbuffer */ (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) /* glGetFramebufferAttachmentParameteriv */ (GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) /* glGenerateMipmap */ (GLenum target);
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) /* glBlitFramebuffer */ (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) /* glRenderbufferStorageMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) /* glFramebufferTextureLayer */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) /* glProgramParameteriARB */ (GLuint program, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) /* glFramebufferTextureARB */ (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) /* glFramebufferTextureLayerARB */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) /* glFramebufferTextureFaceARB */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) /* glGetProgramBinary */ (GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) /* glProgramBinary */ (GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) /* glProgramParameteri */ (GLuint program, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) /* glGetTextureSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) /* glGetCompressedTextureSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLUNIFORM1DPROC) /* glUniform1d */ (GLint location, GLdouble x);
typedef void (APIENTRYP PFNGLUNIFORM2DPROC) /* glUniform2d */ (GLint location, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLUNIFORM3DPROC) /* glUniform3d */ (GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLUNIFORM4DPROC) /* glUniform4d */ (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) /* glUniform1dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) /* glUniform2dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) /* glUniform3dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) /* glUniform4dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) /* glUniformMatrix2dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) /* glUniformMatrix3dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) /* glUniformMatrix4dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) /* glUniformMatrix2x3dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) /* glUniformMatrix2x4dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) /* glUniformMatrix3x2dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) /* glUniformMatrix3x4dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) /* glUniformMatrix4x2dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) /* glUniformMatrix4x3dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) /* glGetUniformdv */ (GLuint program, GLint location, GLdouble * params);
typedef void (APIENTRYP PFNGLBLENDCOLORPROC) /* glBlendColor */ (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) /* glBlendEquation */ (GLenum mode);
typedef void (APIENTRYP PFNGLCOLORTABLEPROC) /* glColorTable */ (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) /* glColorTableParameterfv */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) /* glColorTableParameteriv */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) /* glCopyColorTable */ (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) /* glGetColorTable */ (GLenum target, GLenum format, GLenum type, void * table);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) /* glGetColorTableParameterfv */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) /* glGetColorTableParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) /* glColorSubTable */ (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) /* glCopyColorSubTable */ (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) /* glConvolutionFilter1D */ (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) /* glConvolutionFilter2D */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) /* glConvolutionParameterf */ (GLenum target, GLenum pname, GLfloat params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) /* glConvolutionParameterfv */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) /* glConvolutionParameteri */ (GLenum target, GLenum pname, GLint params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) /* glConvolutionParameteriv */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) /* glCopyConvolutionFilter1D */ (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) /* glCopyConvolutionFilter2D */ (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) /* glGetConvolutionFilter */ (GLenum target, GLenum format, GLenum type, void * image);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) /* glGetConvolutionParameterfv */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) /* glGetConvolutionParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) /* glGetSeparableFilter */ (GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) /* glSeparableFilter2D */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) /* glGetHistogram */ (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) /* glGetHistogramParameterfv */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) /* glGetHistogramParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMINMAXPROC) /* glGetMinmax */ (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) /* glGetMinmaxParameterfv */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) /* glGetMinmaxParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLHISTOGRAMPROC) /* glHistogram */ (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (APIENTRYP PFNGLMINMAXPROC) /* glMinmax */ (GLenum target, GLenum internalformat, GLboolean sink);
typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) /* glResetHistogram */ (GLenum target);
typedef void (APIENTRYP PFNGLRESETMINMAXPROC) /* glResetMinmax */ (GLenum target);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) /* glMultiDrawArraysIndirectCountARB */ (GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) /* glMultiDrawElementsIndirectCountARB */ (GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) /* glVertexAttribDivisorARB */ (GLuint index, GLuint divisor);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) /* glGetInternalformativ */ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) /* glGetInternalformati64v */ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 * params);
typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) /* glInvalidateTexSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) /* glInvalidateTexImage */ (GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) /* glInvalidateBufferSubData */ (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) /* glInvalidateBufferData */ (GLuint buffer);
typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) /* glInvalidateFramebuffer */ (GLenum target, GLsizei numAttachments, const GLenum * attachments);
typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) /* glInvalidateSubFramebuffer */ (GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void * (APIENTRYP PFNGLMAPBUFFERRANGEPROC) /* glMapBufferRange */ (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) /* glFlushMappedBufferRange */ (GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) /* glCurrentPaletteMatrixARB */ (GLint index);
typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) /* glMatrixIndexubvARB */ (GLint size, const GLubyte * indices);
typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) /* glMatrixIndexusvARB */ (GLint size, const GLushort * indices);
typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) /* glMatrixIndexuivARB */ (GLint size, const GLuint * indices);
typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) /* glMatrixIndexPointerARB */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) /* glBindBuffersBase */ (GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) /* glBindBuffersRange */ (GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) /* glBindTextures */ (GLuint first, GLsizei count, const GLuint * textures);
typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) /* glBindSamplers */ (GLuint first, GLsizei count, const GLuint * samplers);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) /* glBindImageTextures */ (GLuint first, GLsizei count, const GLuint * textures);
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) /* glBindVertexBuffers */ (GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) /* glMultiDrawArraysIndirect */ (GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) /* glMultiDrawElementsIndirect */ (GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) /* glSampleCoverageARB */ (GLfloat value, GLboolean invert);
typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) /* glActiveTextureARB */ (GLenum texture);
typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) /* glClientActiveTextureARB */ (GLenum texture);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) /* glMultiTexCoord1dARB */ (GLenum target, GLdouble s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) /* glMultiTexCoord1dvARB */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) /* glMultiTexCoord1fARB */ (GLenum target, GLfloat s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) /* glMultiTexCoord1fvARB */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) /* glMultiTexCoord1iARB */ (GLenum target, GLint s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) /* glMultiTexCoord1ivARB */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) /* glMultiTexCoord1sARB */ (GLenum target, GLshort s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) /* glMultiTexCoord1svARB */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) /* glMultiTexCoord2dARB */ (GLenum target, GLdouble s, GLdouble t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) /* glMultiTexCoord2dvARB */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) /* glMultiTexCoord2fARB */ (GLenum target, GLfloat s, GLfloat t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) /* glMultiTexCoord2fvARB */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) /* glMultiTexCoord2iARB */ (GLenum target, GLint s, GLint t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) /* glMultiTexCoord2ivARB */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) /* glMultiTexCoord2sARB */ (GLenum target, GLshort s, GLshort t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) /* glMultiTexCoord2svARB */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) /* glMultiTexCoord3dARB */ (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) /* glMultiTexCoord3dvARB */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) /* glMultiTexCoord3fARB */ (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) /* glMultiTexCoord3fvARB */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) /* glMultiTexCoord3iARB */ (GLenum target, GLint s, GLint t, GLint r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) /* glMultiTexCoord3ivARB */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) /* glMultiTexCoord3sARB */ (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) /* glMultiTexCoord3svARB */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) /* glMultiTexCoord4dARB */ (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) /* glMultiTexCoord4dvARB */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) /* glMultiTexCoord4fARB */ (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) /* glMultiTexCoord4fvARB */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) /* glMultiTexCoord4iARB */ (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) /* glMultiTexCoord4ivARB */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) /* glMultiTexCoord4sARB */ (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) /* glMultiTexCoord4svARB */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) /* glGenQueriesARB */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) /* glDeleteQueriesARB */ (GLsizei n, const GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) /* glIsQueryARB */ (GLuint id);
typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) /* glBeginQueryARB */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYARBPROC) /* glEndQueryARB */ (GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) /* glGetQueryivARB */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) /* glGetQueryObjectivARB */ (GLuint id, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) /* glGetQueryObjectuivARB */ (GLuint id, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) /* glPointParameterfARB */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) /* glPointParameterfvARB */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) /* glGetProgramInterfaceiv */ (GLuint program, GLenum programInterface, GLenum pname, GLint * params);
typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) /* glGetProgramResourceIndex */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) /* glGetProgramResourceName */ (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) /* glGetProgramResourceiv */ (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params);
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) /* glGetProgramResourceLocation */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) /* glGetProgramResourceLocationIndex */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) /* glProvokingVertex */ (GLenum mode);
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) /* glGetGraphicsResetStatusARB */ ();
typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) /* glGetnTexImageARB */ (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * img);
typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) /* glReadnPixelsARB */ (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) /* glGetnCompressedTexImageARB */ (GLenum target, GLint lod, GLsizei bufSize, void * img);
typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) /* glGetnUniformfvARB */ (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) /* glGetnUniformivARB */ (GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) /* glGetnUniformuivARB */ (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) /* glGetnUniformdvARB */ (GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC) /* glGetnMapdvARB */ (GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC) /* glGetnMapfvARB */ (GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC) /* glGetnMapivARB */ (GLenum target, GLenum query, GLsizei bufSize, GLint * v);
typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC) /* glGetnPixelMapfvARB */ (GLenum map, GLsizei bufSize, GLfloat * values);
typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) /* glGetnPixelMapuivARB */ (GLenum map, GLsizei bufSize, GLuint * values);
typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) /* glGetnPixelMapusvARB */ (GLenum map, GLsizei bufSize, GLushort * values);
typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) /* glGetnPolygonStippleARB */ (GLsizei bufSize, GLubyte * pattern);
typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC) /* glGetnColorTableARB */ (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) /* glGetnConvolutionFilterARB */ (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) /* glGetnSeparableFilterARB */ (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC) /* glGetnHistogramARB */ (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC) /* glGetnMinmaxARB */ (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) /* glMinSampleShadingARB */ (GLfloat value);
typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) /* glGenSamplers */ (GLsizei count, GLuint * samplers);
typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) /* glDeleteSamplers */ (GLsizei count, const GLuint * samplers);
typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) /* glIsSampler */ (GLuint sampler);
typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) /* glBindSampler */ (GLuint unit, GLuint sampler);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) /* glSamplerParameteri */ (GLuint sampler, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) /* glSamplerParameteriv */ (GLuint sampler, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) /* glSamplerParameterf */ (GLuint sampler, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) /* glSamplerParameterfv */ (GLuint sampler, GLenum pname, const GLfloat * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) /* glSamplerParameterIiv */ (GLuint sampler, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) /* glSamplerParameterIuiv */ (GLuint sampler, GLenum pname, const GLuint * param);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) /* glGetSamplerParameteriv */ (GLuint sampler, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) /* glGetSamplerParameterIiv */ (GLuint sampler, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) /* glGetSamplerParameterfv */ (GLuint sampler, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) /* glGetSamplerParameterIuiv */ (GLuint sampler, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) /* glUseProgramStages */ (GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) /* glActiveShaderProgram */ (GLuint pipeline, GLuint program);
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) /* glCreateShaderProgramv */ (GLenum type, GLsizei count, const GLchar *const* strings);
typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) /* glBindProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) /* glDeleteProgramPipelines */ (GLsizei n, const GLuint * pipelines);
typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) /* glGenProgramPipelines */ (GLsizei n, GLuint * pipelines);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) /* glIsProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) /* glGetProgramPipelineiv */ (GLuint pipeline, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) /* glProgramUniform1i */ (GLuint program, GLint location, GLint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) /* glProgramUniform1iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) /* glProgramUniform1f */ (GLuint program, GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) /* glProgramUniform1fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) /* glProgramUniform1d */ (GLuint program, GLint location, GLdouble v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) /* glProgramUniform1dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) /* glProgramUniform1ui */ (GLuint program, GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) /* glProgramUniform1uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) /* glProgramUniform2i */ (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) /* glProgramUniform2iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) /* glProgramUniform2f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) /* glProgramUniform2fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) /* glProgramUniform2d */ (GLuint program, GLint location, GLdouble v0, GLdouble v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) /* glProgramUniform2dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) /* glProgramUniform2ui */ (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) /* glProgramUniform2uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) /* glProgramUniform3i */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) /* glProgramUniform3iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) /* glProgramUniform3f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) /* glProgramUniform3fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) /* glProgramUniform3d */ (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) /* glProgramUniform3dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) /* glProgramUniform3ui */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) /* glProgramUniform3uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) /* glProgramUniform4i */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) /* glProgramUniform4iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) /* glProgramUniform4f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) /* glProgramUniform4fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) /* glProgramUniform4d */ (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) /* glProgramUniform4dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) /* glProgramUniform4ui */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) /* glProgramUniform4uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) /* glProgramUniformMatrix2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) /* glProgramUniformMatrix3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) /* glProgramUniformMatrix4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) /* glProgramUniformMatrix2dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) /* glProgramUniformMatrix3dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) /* glProgramUniformMatrix4dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) /* glProgramUniformMatrix2x3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) /* glProgramUniformMatrix3x2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) /* glProgramUniformMatrix2x4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) /* glProgramUniformMatrix4x2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) /* glProgramUniformMatrix3x4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) /* glProgramUniformMatrix4x3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) /* glProgramUniformMatrix2x3dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) /* glProgramUniformMatrix3x2dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) /* glProgramUniformMatrix2x4dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) /* glProgramUniformMatrix4x2dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) /* glProgramUniformMatrix3x4dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) /* glProgramUniformMatrix4x3dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) /* glValidateProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) /* glGetProgramPipelineInfoLog */ (GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) /* glGetActiveAtomicCounterBufferiv */ (GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) /* glBindImageTexture */ (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) /* glMemoryBarrier */ (GLbitfield barriers);
typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) /* glDeleteObjectARB */ (GLhandleARB obj);
typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) /* glGetHandleARB */ (GLenum pname);
typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) /* glDetachObjectARB */ (GLhandleARB containerObj, GLhandleARB attachedObj);
typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) /* glCreateShaderObjectARB */ (GLenum shaderType);
typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) /* glShaderSourceARB */ (GLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint * length);
typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) /* glCompileShaderARB */ (GLhandleARB shaderObj);
typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) /* glCreateProgramObjectARB */ ();
typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) /* glAttachObjectARB */ (GLhandleARB containerObj, GLhandleARB obj);
typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) /* glLinkProgramARB */ (GLhandleARB programObj);
typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) /* glUseProgramObjectARB */ (GLhandleARB programObj);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) /* glValidateProgramARB */ (GLhandleARB programObj);
typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) /* glUniform1fARB */ (GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) /* glUniform2fARB */ (GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) /* glUniform3fARB */ (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) /* glUniform4fARB */ (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) /* glUniform1iARB */ (GLint location, GLint v0);
typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) /* glUniform2iARB */ (GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) /* glUniform3iARB */ (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) /* glUniform4iARB */ (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) /* glUniform1fvARB */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) /* glUniform2fvARB */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) /* glUniform3fvARB */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) /* glUniform4fvARB */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) /* glUniform1ivARB */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) /* glUniform2ivARB */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) /* glUniform3ivARB */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) /* glUniform4ivARB */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) /* glUniformMatrix2fvARB */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) /* glUniformMatrix3fvARB */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) /* glUniformMatrix4fvARB */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) /* glGetObjectParameterfvARB */ (GLhandleARB obj, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) /* glGetObjectParameterivARB */ (GLhandleARB obj, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) /* glGetInfoLogARB */ (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);
typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) /* glGetAttachedObjectsARB */ (GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj);
typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) /* glGetUniformLocationARB */ (GLhandleARB programObj, const GLcharARB * name);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) /* glGetActiveUniformARB */ (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) /* glGetUniformfvARB */ (GLhandleARB programObj, GLint location, GLfloat * params);
typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) /* glGetUniformivARB */ (GLhandleARB programObj, GLint location, GLint * params);
typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) /* glGetShaderSourceARB */ (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);
typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) /* glShaderStorageBlockBinding */ (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) /* glGetSubroutineUniformLocation */ (GLuint program, GLenum shadertype, const GLchar * name);
typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) /* glGetSubroutineIndex */ (GLuint program, GLenum shadertype, const GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) /* glGetActiveSubroutineUniformiv */ (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) /* glGetActiveSubroutineUniformName */ (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) /* glGetActiveSubroutineName */ (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) /* glUniformSubroutinesuiv */ (GLenum shadertype, GLsizei count, const GLuint * indices);
typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) /* glGetUniformSubroutineuiv */ (GLenum shadertype, GLint location, GLuint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) /* glGetProgramStageiv */ (GLuint program, GLenum shadertype, GLenum pname, GLint * values);
typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) /* glNamedStringARB */ (GLenum type, GLint namelen, const GLchar * name, GLint stringlen, const GLchar * string);
typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) /* glDeleteNamedStringARB */ (GLint namelen, const GLchar * name);
typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) /* glCompileShaderIncludeARB */ (GLuint shader, GLsizei count, const GLchar *const* path, const GLint * length);
typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) /* glIsNamedStringARB */ (GLint namelen, const GLchar * name);
typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) /* glGetNamedStringARB */ (GLint namelen, const GLchar * name, GLsizei bufSize, GLint * stringlen, GLchar * string);
typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) /* glGetNamedStringivARB */ (GLint namelen, const GLchar * name, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) /* glBufferPageCommitmentARB */ (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) /* glNamedBufferPageCommitmentEXT */ (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) /* glNamedBufferPageCommitmentARB */ (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) /* glTexPageCommitmentARB */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) /* glFenceSync */ (GLenum condition, GLbitfield flags);
typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) /* glIsSync */ (GLsync sync);
typedef void (APIENTRYP PFNGLDELETESYNCPROC) /* glDeleteSync */ (GLsync sync);
typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) /* glClientWaitSync */ (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLWAITSYNCPROC) /* glWaitSync */ (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) /* glGetInteger64v */ (GLenum pname, GLint64 * data);
typedef void (APIENTRYP PFNGLGETSYNCIVPROC) /* glGetSynciv */ (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) /* glPatchParameteri */ (GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) /* glPatchParameterfv */ (GLenum pname, const GLfloat * values);
typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) /* glTextureBarrier */ ();
typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) /* glTexBufferARB */ (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) /* glTexBufferRange */ (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) /* glCompressedTexImage3DARB */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) /* glCompressedTexImage2DARB */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) /* glCompressedTexImage1DARB */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) /* glCompressedTexSubImage3DARB */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) /* glCompressedTexSubImage2DARB */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) /* glCompressedTexSubImage1DARB */ (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) /* glGetCompressedTexImageARB */ (GLenum target, GLint level, void * img);
typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) /* glTexImage2DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) /* glTexImage3DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) /* glGetMultisamplefv */ (GLenum pname, GLuint index, GLfloat * val);
typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) /* glSampleMaski */ (GLuint maskNumber, GLbitfield mask);
typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) /* glTexStorage1D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) /* glTexStorage2D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) /* glTexStorage3D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) /* glTexStorage2DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) /* glTexStorage3DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) /* glTextureView */ (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) /* glQueryCounter */ (GLuint id, GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) /* glGetQueryObjecti64v */ (GLuint id, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) /* glGetQueryObjectui64v */ (GLuint id, GLenum pname, GLuint64 * params);
typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) /* glBindTransformFeedback */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) /* glDeleteTransformFeedbacks */ (GLsizei n, const GLuint * ids);
typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) /* glGenTransformFeedbacks */ (GLsizei n, GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) /* glIsTransformFeedback */ (GLuint id);
typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) /* glPauseTransformFeedback */ ();
typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) /* glResumeTransformFeedback */ ();
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) /* glDrawTransformFeedback */ (GLenum mode, GLuint id);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) /* glDrawTransformFeedbackStream */ (GLenum mode, GLuint id, GLuint stream);
typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) /* glBeginQueryIndexed */ (GLenum target, GLuint index, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) /* glEndQueryIndexed */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) /* glGetQueryIndexediv */ (GLenum target, GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) /* glDrawTransformFeedbackInstanced */ (GLenum mode, GLuint id, GLsizei instancecount);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) /* glDrawTransformFeedbackStreamInstanced */ (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) /* glLoadTransposeMatrixfARB */ (const GLfloat * m);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) /* glLoadTransposeMatrixdARB */ (const GLdouble * m);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) /* glMultTransposeMatrixfARB */ (const GLfloat * m);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) /* glMultTransposeMatrixdARB */ (const GLdouble * m);
typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) /* glGetUniformIndices */ (GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) /* glGetActiveUniformsiv */ (GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) /* glGetActiveUniformName */ (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) /* glGetUniformBlockIndex */ (GLuint program, const GLchar * uniformBlockName);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) /* glGetActiveUniformBlockiv */ (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) /* glGetActiveUniformBlockName */ (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) /* glUniformBlockBinding */ (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) /* glBindBufferRange */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) /* glBindBufferBase */ (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) /* glGetIntegeri_v */ (GLenum target, GLuint index, GLint * data);
typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) /* glBindVertexArray */ (GLuint array);
typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) /* glDeleteVertexArrays */ (GLsizei n, const GLuint * arrays);
typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) /* glGenVertexArrays */ (GLsizei n, GLuint * arrays);
typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) /* glIsVertexArray */ (GLuint array);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) /* glVertexAttribL1d */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) /* glVertexAttribL2d */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) /* glVertexAttribL3d */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) /* glVertexAttribL4d */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) /* glVertexAttribL1dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) /* glVertexAttribL2dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) /* glVertexAttribL3dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) /* glVertexAttribL4dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) /* glVertexAttribLPointer */ (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) /* glGetVertexAttribLdv */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) /* glBindVertexBuffer */ (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) /* glVertexAttribFormat */ (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) /* glVertexAttribIFormat */ (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) /* glVertexAttribLFormat */ (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) /* glVertexAttribBinding */ (GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) /* glVertexBindingDivisor */ (GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) /* glWeightbvARB */ (GLint size, const GLbyte * weights);
typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) /* glWeightsvARB */ (GLint size, const GLshort * weights);
typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) /* glWeightivARB */ (GLint size, const GLint * weights);
typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) /* glWeightfvARB */ (GLint size, const GLfloat * weights);
typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) /* glWeightdvARB */ (GLint size, const GLdouble * weights);
typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) /* glWeightubvARB */ (GLint size, const GLubyte * weights);
typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) /* glWeightusvARB */ (GLint size, const GLushort * weights);
typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) /* glWeightuivARB */ (GLint size, const GLuint * weights);
typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) /* glWeightPointerARB */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) /* glVertexBlendARB */ (GLint count);
typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) /* glBindBufferARB */ (GLenum target, GLuint buffer);
typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) /* glDeleteBuffersARB */ (GLsizei n, const GLuint * buffers);
typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) /* glGenBuffersARB */ (GLsizei n, GLuint * buffers);
typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) /* glIsBufferARB */ (GLuint buffer);
typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) /* glBufferDataARB */ (GLenum target, GLsizeiptrARB size, const void * data, GLenum usage);
typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) /* glBufferSubDataARB */ (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data);
typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) /* glGetBufferSubDataARB */ (GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
typedef void * (APIENTRYP PFNGLMAPBUFFERARBPROC) /* glMapBufferARB */ (GLenum target, GLenum access);
typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) /* glUnmapBufferARB */ (GLenum target);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) /* glGetBufferParameterivARB */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) /* glGetBufferPointervARB */ (GLenum target, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) /* glVertexAttrib1dARB */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) /* glVertexAttrib1dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) /* glVertexAttrib1fARB */ (GLuint index, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) /* glVertexAttrib1fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) /* glVertexAttrib1sARB */ (GLuint index, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) /* glVertexAttrib1svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) /* glVertexAttrib2dARB */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) /* glVertexAttrib2dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) /* glVertexAttrib2fARB */ (GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) /* glVertexAttrib2fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) /* glVertexAttrib2sARB */ (GLuint index, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) /* glVertexAttrib2svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) /* glVertexAttrib3dARB */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) /* glVertexAttrib3dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) /* glVertexAttrib3fARB */ (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) /* glVertexAttrib3fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) /* glVertexAttrib3sARB */ (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) /* glVertexAttrib3svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) /* glVertexAttrib4NbvARB */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) /* glVertexAttrib4NivARB */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) /* glVertexAttrib4NsvARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) /* glVertexAttrib4NubARB */ (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) /* glVertexAttrib4NubvARB */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) /* glVertexAttrib4NuivARB */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) /* glVertexAttrib4NusvARB */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) /* glVertexAttrib4bvARB */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) /* glVertexAttrib4dARB */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) /* glVertexAttrib4dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) /* glVertexAttrib4fARB */ (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) /* glVertexAttrib4fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) /* glVertexAttrib4ivARB */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) /* glVertexAttrib4sARB */ (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) /* glVertexAttrib4svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) /* glVertexAttrib4ubvARB */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) /* glVertexAttrib4uivARB */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) /* glVertexAttrib4usvARB */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) /* glVertexAttribPointerARB */ (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) /* glEnableVertexAttribArrayARB */ (GLuint index);
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) /* glDisableVertexAttribArrayARB */ (GLuint index);
typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) /* glProgramStringARB */ (GLenum target, GLenum format, GLsizei len, const void * string);
typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) /* glBindProgramARB */ (GLenum target, GLuint program);
typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) /* glDeleteProgramsARB */ (GLsizei n, const GLuint * programs);
typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) /* glGenProgramsARB */ (GLsizei n, GLuint * programs);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) /* glProgramEnvParameter4dARB */ (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) /* glProgramEnvParameter4dvARB */ (GLenum target, GLuint index, const GLdouble * params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) /* glProgramEnvParameter4fARB */ (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) /* glProgramEnvParameter4fvARB */ (GLenum target, GLuint index, const GLfloat * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) /* glProgramLocalParameter4dARB */ (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) /* glProgramLocalParameter4dvARB */ (GLenum target, GLuint index, const GLdouble * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) /* glProgramLocalParameter4fARB */ (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) /* glProgramLocalParameter4fvARB */ (GLenum target, GLuint index, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) /* glGetProgramEnvParameterdvARB */ (GLenum target, GLuint index, GLdouble * params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) /* glGetProgramEnvParameterfvARB */ (GLenum target, GLuint index, GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) /* glGetProgramLocalParameterdvARB */ (GLenum target, GLuint index, GLdouble * params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) /* glGetProgramLocalParameterfvARB */ (GLenum target, GLuint index, GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) /* glGetProgramivARB */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) /* glGetProgramStringARB */ (GLenum target, GLenum pname, void * string);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) /* glGetVertexAttribdvARB */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) /* glGetVertexAttribfvARB */ (GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) /* glGetVertexAttribivARB */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) /* glGetVertexAttribPointervARB */ (GLuint index, GLenum pname, void ** pointer);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) /* glIsProgramARB */ (GLuint program);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) /* glVertexAttrib1fARB */ (GLuint index, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) /* glVertexAttrib1sARB */ (GLuint index, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) /* glVertexAttrib1dARB */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) /* glVertexAttrib2fARB */ (GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) /* glVertexAttrib2sARB */ (GLuint index, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) /* glVertexAttrib2dARB */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) /* glVertexAttrib3fARB */ (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) /* glVertexAttrib3sARB */ (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) /* glVertexAttrib3dARB */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) /* glVertexAttrib4fARB */ (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) /* glVertexAttrib4sARB */ (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) /* glVertexAttrib4dARB */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) /* glVertexAttrib4NubARB */ (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) /* glVertexAttrib1fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) /* glVertexAttrib1svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) /* glVertexAttrib1dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) /* glVertexAttrib2fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) /* glVertexAttrib2svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) /* glVertexAttrib2dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) /* glVertexAttrib3fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) /* glVertexAttrib3svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) /* glVertexAttrib3dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) /* glVertexAttrib4fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) /* glVertexAttrib4svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) /* glVertexAttrib4dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) /* glVertexAttrib4ivARB */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) /* glVertexAttrib4bvARB */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) /* glVertexAttrib4ubvARB */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) /* glVertexAttrib4usvARB */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) /* glVertexAttrib4uivARB */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) /* glVertexAttrib4NbvARB */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) /* glVertexAttrib4NsvARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) /* glVertexAttrib4NivARB */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) /* glVertexAttrib4NubvARB */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) /* glVertexAttrib4NusvARB */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) /* glVertexAttrib4NuivARB */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) /* glVertexAttribPointerARB */ (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) /* glEnableVertexAttribArrayARB */ (GLuint index);
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) /* glDisableVertexAttribArrayARB */ (GLuint index);
typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) /* glBindAttribLocationARB */ (GLhandleARB programObj, GLuint index, const GLcharARB * name);
typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) /* glGetActiveAttribARB */ (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) /* glGetAttribLocationARB */ (GLhandleARB programObj, const GLcharARB * name);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) /* glGetVertexAttribdvARB */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) /* glGetVertexAttribfvARB */ (GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) /* glGetVertexAttribivARB */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) /* glGetVertexAttribPointervARB */ (GLuint index, GLenum pname, void ** pointer);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) /* glVertexAttribP1ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) /* glVertexAttribP1uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) /* glVertexAttribP2ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) /* glVertexAttribP2uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) /* glVertexAttribP3ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) /* glVertexAttribP3uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) /* glVertexAttribP4ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) /* glVertexAttribP4uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) /* glVertexP2ui */ (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) /* glVertexP2uiv */ (GLenum type, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) /* glVertexP3ui */ (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) /* glVertexP3uiv */ (GLenum type, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) /* glVertexP4ui */ (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) /* glVertexP4uiv */ (GLenum type, const GLuint * value);
typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) /* glTexCoordP1ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) /* glTexCoordP1uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) /* glTexCoordP2ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) /* glTexCoordP2uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) /* glTexCoordP3ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) /* glTexCoordP3uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) /* glTexCoordP4ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) /* glTexCoordP4uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) /* glMultiTexCoordP1ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) /* glMultiTexCoordP1uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) /* glMultiTexCoordP2ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) /* glMultiTexCoordP2uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) /* glMultiTexCoordP3ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) /* glMultiTexCoordP3uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) /* glMultiTexCoordP4ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) /* glMultiTexCoordP4uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLNORMALP3UIPROC) /* glNormalP3ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) /* glNormalP3uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLCOLORP3UIPROC) /* glColorP3ui */ (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) /* glColorP3uiv */ (GLenum type, const GLuint * color);
typedef void (APIENTRYP PFNGLCOLORP4UIPROC) /* glColorP4ui */ (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) /* glColorP4uiv */ (GLenum type, const GLuint * color);
typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) /* glSecondaryColorP3ui */ (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) /* glSecondaryColorP3uiv */ (GLenum type, const GLuint * color);
typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) /* glViewportArrayv */ (GLuint first, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) /* glViewportIndexedf */ (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) /* glViewportIndexedfv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) /* glScissorArrayv */ (GLuint first, GLsizei count, const GLint * v);
typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) /* glScissorIndexed */ (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) /* glScissorIndexedv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) /* glDepthRangeArrayv */ (GLuint first, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) /* glDepthRangeIndexed */ (GLuint index, GLdouble n, GLdouble f);
typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) /* glGetFloati_v */ (GLenum target, GLuint index, GLfloat * data);
typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) /* glGetDoublei_v */ (GLenum target, GLuint index, GLdouble * data);
typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) /* glWindowPos2dARB */ (GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) /* glWindowPos2dvARB */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) /* glWindowPos2fARB */ (GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) /* glWindowPos2fvARB */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) /* glWindowPos2iARB */ (GLint x, GLint y);
typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) /* glWindowPos2ivARB */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) /* glWindowPos2sARB */ (GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) /* glWindowPos2svARB */ (const GLshort * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) /* glWindowPos3dARB */ (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) /* glWindowPos3dvARB */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) /* glWindowPos3fARB */ (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) /* glWindowPos3fvARB */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) /* glWindowPos3iARB */ (GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) /* glWindowPos3ivARB */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) /* glWindowPos3sARB */ (GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) /* glWindowPos3svARB */ (const GLshort * v);
typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) /* glDrawBuffersATI */ (GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) /* glElementPointerATI */ (GLenum type, const void * pointer);
typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) /* glDrawElementArrayATI */ (GLenum mode, GLsizei count);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) /* glDrawRangeElementArrayATI */ (GLenum mode, GLuint start, GLuint end, GLsizei count);
typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) /* glTexBumpParameterivATI */ (GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) /* glTexBumpParameterfvATI */ (GLenum pname, const GLfloat * param);
typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) /* glGetTexBumpParameterivATI */ (GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) /* glGetTexBumpParameterfvATI */ (GLenum pname, GLfloat * param);
typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) /* glGenFragmentShadersATI */ (GLuint range);
typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) /* glBindFragmentShaderATI */ (GLuint id);
typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) /* glDeleteFragmentShaderATI */ (GLuint id);
typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) /* glBeginFragmentShaderATI */ ();
typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) /* glEndFragmentShaderATI */ ();
typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) /* glPassTexCoordATI */ (GLuint dst, GLuint coord, GLenum swizzle);
typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) /* glSampleMapATI */ (GLuint dst, GLuint interp, GLenum swizzle);
typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) /* glColorFragmentOp1ATI */ (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) /* glColorFragmentOp2ATI */ (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) /* glColorFragmentOp3ATI */ (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) /* glAlphaFragmentOp1ATI */ (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) /* glAlphaFragmentOp2ATI */ (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) /* glAlphaFragmentOp3ATI */ (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) /* glSetFragmentShaderConstantATI */ (GLuint dst, const GLfloat * value);
typedef void * (APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) /* glMapObjectBufferATI */ (GLuint buffer);
typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) /* glUnmapObjectBufferATI */ (GLuint buffer);
typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) /* glPNTrianglesiATI */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) /* glPNTrianglesfATI */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) /* glStencilOpSeparateATI */ (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) /* glStencilFuncSeparateATI */ (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) /* glNewObjectBufferATI */ (GLsizei size, const void * pointer, GLenum usage);
typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) /* glIsObjectBufferATI */ (GLuint buffer);
typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) /* glUpdateObjectBufferATI */ (GLuint buffer, GLuint offset, GLsizei size, const void * pointer, GLenum preserve);
typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) /* glGetObjectBufferfvATI */ (GLuint buffer, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) /* glGetObjectBufferivATI */ (GLuint buffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) /* glFreeObjectBufferATI */ (GLuint buffer);
typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) /* glArrayObjectATI */ (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) /* glGetArrayObjectfvATI */ (GLenum array, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) /* glGetArrayObjectivATI */ (GLenum array, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) /* glVariantArrayObjectATI */ (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) /* glGetVariantArrayObjectfvATI */ (GLuint id, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) /* glGetVariantArrayObjectivATI */ (GLuint id, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) /* glVertexAttribArrayObjectATI */ (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) /* glGetVertexAttribArrayObjectfvATI */ (GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) /* glGetVertexAttribArrayObjectivATI */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) /* glVertexStream1sATI */ (GLenum stream, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) /* glVertexStream1svATI */ (GLenum stream, const GLshort * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) /* glVertexStream1iATI */ (GLenum stream, GLint x);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) /* glVertexStream1ivATI */ (GLenum stream, const GLint * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) /* glVertexStream1fATI */ (GLenum stream, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) /* glVertexStream1fvATI */ (GLenum stream, const GLfloat * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) /* glVertexStream1dATI */ (GLenum stream, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) /* glVertexStream1dvATI */ (GLenum stream, const GLdouble * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) /* glVertexStream2sATI */ (GLenum stream, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) /* glVertexStream2svATI */ (GLenum stream, const GLshort * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) /* glVertexStream2iATI */ (GLenum stream, GLint x, GLint y);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) /* glVertexStream2ivATI */ (GLenum stream, const GLint * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) /* glVertexStream2fATI */ (GLenum stream, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) /* glVertexStream2fvATI */ (GLenum stream, const GLfloat * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) /* glVertexStream2dATI */ (GLenum stream, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) /* glVertexStream2dvATI */ (GLenum stream, const GLdouble * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) /* glVertexStream3sATI */ (GLenum stream, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) /* glVertexStream3svATI */ (GLenum stream, const GLshort * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) /* glVertexStream3iATI */ (GLenum stream, GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) /* glVertexStream3ivATI */ (GLenum stream, const GLint * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) /* glVertexStream3fATI */ (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) /* glVertexStream3fvATI */ (GLenum stream, const GLfloat * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) /* glVertexStream3dATI */ (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) /* glVertexStream3dvATI */ (GLenum stream, const GLdouble * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) /* glVertexStream4sATI */ (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) /* glVertexStream4svATI */ (GLenum stream, const GLshort * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) /* glVertexStream4iATI */ (GLenum stream, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) /* glVertexStream4ivATI */ (GLenum stream, const GLint * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) /* glVertexStream4fATI */ (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) /* glVertexStream4fvATI */ (GLenum stream, const GLfloat * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) /* glVertexStream4dATI */ (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) /* glVertexStream4dvATI */ (GLenum stream, const GLdouble * coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) /* glNormalStream3bATI */ (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) /* glNormalStream3bvATI */ (GLenum stream, const GLbyte * coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) /* glNormalStream3sATI */ (GLenum stream, GLshort nx, GLshort ny, GLshort nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) /* glNormalStream3svATI */ (GLenum stream, const GLshort * coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) /* glNormalStream3iATI */ (GLenum stream, GLint nx, GLint ny, GLint nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) /* glNormalStream3ivATI */ (GLenum stream, const GLint * coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) /* glNormalStream3fATI */ (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) /* glNormalStream3fvATI */ (GLenum stream, const GLfloat * coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) /* glNormalStream3dATI */ (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) /* glNormalStream3dvATI */ (GLenum stream, const GLdouble * coords);
typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) /* glClientActiveVertexStreamATI */ (GLenum stream);
typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) /* glVertexBlendEnviATI */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) /* glVertexBlendEnvfATI */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) /* glUniformBufferEXT */ (GLuint program, GLint location, GLuint buffer);
typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) /* glGetUniformBufferSizeEXT */ (GLuint program, GLint location);
typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) /* glGetUniformOffsetEXT */ (GLuint program, GLint location);
typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) /* glBlendColorEXT */ (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) /* glBlendEquationSeparateEXT */ (GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) /* glBlendFuncSeparateEXT */ (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) /* glBlendEquationEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) /* glColorSubTableEXT */ (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) /* glCopyColorSubTableEXT */ (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) /* glLockArraysEXT */ (GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) /* glUnlockArraysEXT */ ();
typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) /* glConvolutionFilter1DEXT */ (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) /* glConvolutionFilter2DEXT */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) /* glConvolutionParameterfEXT */ (GLenum target, GLenum pname, GLfloat params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) /* glConvolutionParameterfvEXT */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) /* glConvolutionParameteriEXT */ (GLenum target, GLenum pname, GLint params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) /* glConvolutionParameterivEXT */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) /* glCopyConvolutionFilter1DEXT */ (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) /* glCopyConvolutionFilter2DEXT */ (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) /* glGetConvolutionFilterEXT */ (GLenum target, GLenum format, GLenum type, void * image);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) /* glGetConvolutionParameterfvEXT */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) /* glGetConvolutionParameterivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) /* glGetSeparableFilterEXT */ (GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) /* glSeparableFilter2DEXT */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) /* glTangent3bEXT */ (GLbyte tx, GLbyte ty, GLbyte tz);
typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) /* glTangent3bvEXT */ (const GLbyte * v);
typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) /* glTangent3dEXT */ (GLdouble tx, GLdouble ty, GLdouble tz);
typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) /* glTangent3dvEXT */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) /* glTangent3fEXT */ (GLfloat tx, GLfloat ty, GLfloat tz);
typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) /* glTangent3fvEXT */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) /* glTangent3iEXT */ (GLint tx, GLint ty, GLint tz);
typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) /* glTangent3ivEXT */ (const GLint * v);
typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) /* glTangent3sEXT */ (GLshort tx, GLshort ty, GLshort tz);
typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) /* glTangent3svEXT */ (const GLshort * v);
typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) /* glBinormal3bEXT */ (GLbyte bx, GLbyte by, GLbyte bz);
typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) /* glBinormal3bvEXT */ (const GLbyte * v);
typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) /* glBinormal3dEXT */ (GLdouble bx, GLdouble by, GLdouble bz);
typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) /* glBinormal3dvEXT */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) /* glBinormal3fEXT */ (GLfloat bx, GLfloat by, GLfloat bz);
typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) /* glBinormal3fvEXT */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) /* glBinormal3iEXT */ (GLint bx, GLint by, GLint bz);
typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) /* glBinormal3ivEXT */ (const GLint * v);
typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) /* glBinormal3sEXT */ (GLshort bx, GLshort by, GLshort bz);
typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) /* glBinormal3svEXT */ (const GLshort * v);
typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) /* glTangentPointerEXT */ (GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) /* glBinormalPointerEXT */ (GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) /* glCopyTexImage1DEXT */ (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) /* glCopyTexImage2DEXT */ (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) /* glCopyTexSubImage1DEXT */ (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) /* glCopyTexSubImage2DEXT */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) /* glCopyTexSubImage3DEXT */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) /* glCullParameterdvEXT */ (GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) /* glCullParameterfvEXT */ (GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) /* glLabelObjectEXT */ (GLenum type, GLuint object, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) /* glGetObjectLabelEXT */ (GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) /* glInsertEventMarkerEXT */ (GLsizei length, const GLchar * marker);
typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) /* glPushGroupMarkerEXT */ (GLsizei length, const GLchar * marker);
typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) /* glPopGroupMarkerEXT */ ();
typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) /* glDepthBoundsEXT */ (GLclampd zmin, GLclampd zmax);
typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) /* glMatrixLoadfEXT */ (GLenum mode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) /* glMatrixLoaddEXT */ (GLenum mode, const GLdouble * m);
typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) /* glMatrixMultfEXT */ (GLenum mode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) /* glMatrixMultdEXT */ (GLenum mode, const GLdouble * m);
typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) /* glMatrixLoadIdentityEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) /* glMatrixRotatefEXT */ (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) /* glMatrixRotatedEXT */ (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) /* glMatrixScalefEXT */ (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) /* glMatrixScaledEXT */ (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) /* glMatrixTranslatefEXT */ (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) /* glMatrixTranslatedEXT */ (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) /* glMatrixFrustumEXT */ (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) /* glMatrixOrthoEXT */ (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) /* glMatrixPopEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) /* glMatrixPushEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) /* glClientAttribDefaultEXT */ (GLbitfield mask);
typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) /* glPushClientAttribDefaultEXT */ (GLbitfield mask);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) /* glTextureParameterfEXT */ (GLuint texture, GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) /* glTextureParameterfvEXT */ (GLuint texture, GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) /* glTextureParameteriEXT */ (GLuint texture, GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) /* glTextureParameterivEXT */ (GLuint texture, GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) /* glTextureImage1DEXT */ (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) /* glTextureImage2DEXT */ (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) /* glTextureSubImage1DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) /* glTextureSubImage2DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) /* glCopyTextureImage1DEXT */ (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) /* glCopyTextureImage2DEXT */ (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) /* glCopyTextureSubImage1DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) /* glCopyTextureSubImage2DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) /* glGetTextureImageEXT */ (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) /* glGetTextureParameterfvEXT */ (GLuint texture, GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) /* glGetTextureParameterivEXT */ (GLuint texture, GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) /* glGetTextureLevelParameterfvEXT */ (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) /* glGetTextureLevelParameterivEXT */ (GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) /* glTextureImage3DEXT */ (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) /* glTextureSubImage3DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) /* glCopyTextureSubImage3DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) /* glBindMultiTextureEXT */ (GLenum texunit, GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) /* glMultiTexCoordPointerEXT */ (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) /* glMultiTexEnvfEXT */ (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) /* glMultiTexEnvfvEXT */ (GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) /* glMultiTexEnviEXT */ (GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) /* glMultiTexEnvivEXT */ (GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) /* glMultiTexGendEXT */ (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) /* glMultiTexGendvEXT */ (GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params);
typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) /* glMultiTexGenfEXT */ (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) /* glMultiTexGenfvEXT */ (GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) /* glMultiTexGeniEXT */ (GLenum texunit, GLenum coord, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) /* glMultiTexGenivEXT */ (GLenum texunit, GLenum coord, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) /* glGetMultiTexEnvfvEXT */ (GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) /* glGetMultiTexEnvivEXT */ (GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) /* glGetMultiTexGendvEXT */ (GLenum texunit, GLenum coord, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) /* glGetMultiTexGenfvEXT */ (GLenum texunit, GLenum coord, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) /* glGetMultiTexGenivEXT */ (GLenum texunit, GLenum coord, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) /* glMultiTexParameteriEXT */ (GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) /* glMultiTexParameterivEXT */ (GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) /* glMultiTexParameterfEXT */ (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) /* glMultiTexParameterfvEXT */ (GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) /* glMultiTexImage1DEXT */ (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) /* glMultiTexImage2DEXT */ (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) /* glMultiTexSubImage1DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) /* glMultiTexSubImage2DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) /* glCopyMultiTexImage1DEXT */ (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) /* glCopyMultiTexImage2DEXT */ (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) /* glCopyMultiTexSubImage1DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) /* glCopyMultiTexSubImage2DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) /* glGetMultiTexImageEXT */ (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) /* glGetMultiTexParameterfvEXT */ (GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) /* glGetMultiTexParameterivEXT */ (GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) /* glGetMultiTexLevelParameterfvEXT */ (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) /* glGetMultiTexLevelParameterivEXT */ (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) /* glMultiTexImage3DEXT */ (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) /* glMultiTexSubImage3DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) /* glCopyMultiTexSubImage3DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) /* glEnableClientStateIndexedEXT */ (GLenum array, GLuint index);
typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) /* glDisableClientStateIndexedEXT */ (GLenum array, GLuint index);
typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) /* glGetFloatIndexedvEXT */ (GLenum target, GLuint index, GLfloat * data);
typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) /* glGetDoubleIndexedvEXT */ (GLenum target, GLuint index, GLdouble * data);
typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) /* glGetPointerIndexedvEXT */ (GLenum target, GLuint index, void ** data);
typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) /* glEnableIndexedEXT */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) /* glDisableIndexedEXT */ (GLenum target, GLuint index);
typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) /* glIsEnabledIndexedEXT */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) /* glGetIntegerIndexedvEXT */ (GLenum target, GLuint index, GLint * data);
typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) /* glGetBooleanIndexedvEXT */ (GLenum target, GLuint index, GLboolean * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) /* glCompressedTextureImage3DEXT */ (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) /* glCompressedTextureImage2DEXT */ (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) /* glCompressedTextureImage1DEXT */ (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) /* glCompressedTextureSubImage3DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) /* glCompressedTextureSubImage2DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) /* glCompressedTextureSubImage1DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) /* glGetCompressedTextureImageEXT */ (GLuint texture, GLenum target, GLint lod, void * img);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) /* glCompressedMultiTexImage3DEXT */ (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) /* glCompressedMultiTexImage2DEXT */ (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) /* glCompressedMultiTexImage1DEXT */ (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) /* glCompressedMultiTexSubImage3DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) /* glCompressedMultiTexSubImage2DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) /* glCompressedMultiTexSubImage1DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) /* glGetCompressedMultiTexImageEXT */ (GLenum texunit, GLenum target, GLint lod, void * img);
typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) /* glMatrixLoadTransposefEXT */ (GLenum mode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) /* glMatrixLoadTransposedEXT */ (GLenum mode, const GLdouble * m);
typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) /* glMatrixMultTransposefEXT */ (GLenum mode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) /* glMatrixMultTransposedEXT */ (GLenum mode, const GLdouble * m);
typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) /* glNamedBufferDataEXT */ (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) /* glNamedBufferSubDataEXT */ (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void * (APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) /* glMapNamedBufferEXT */ (GLuint buffer, GLenum access);
typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) /* glUnmapNamedBufferEXT */ (GLuint buffer);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) /* glGetNamedBufferParameterivEXT */ (GLuint buffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) /* glGetNamedBufferPointervEXT */ (GLuint buffer, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) /* glGetNamedBufferSubDataEXT */ (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) /* glProgramUniform1fEXT */ (GLuint program, GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) /* glProgramUniform2fEXT */ (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) /* glProgramUniform3fEXT */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) /* glProgramUniform4fEXT */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) /* glProgramUniform1iEXT */ (GLuint program, GLint location, GLint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) /* glProgramUniform2iEXT */ (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) /* glProgramUniform3iEXT */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) /* glProgramUniform4iEXT */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) /* glProgramUniform1fvEXT */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) /* glProgramUniform2fvEXT */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) /* glProgramUniform3fvEXT */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) /* glProgramUniform4fvEXT */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) /* glProgramUniform1ivEXT */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) /* glProgramUniform2ivEXT */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) /* glProgramUniform3ivEXT */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) /* glProgramUniform4ivEXT */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) /* glProgramUniformMatrix2fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) /* glProgramUniformMatrix3fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) /* glProgramUniformMatrix4fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) /* glProgramUniformMatrix2x3fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) /* glProgramUniformMatrix3x2fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) /* glProgramUniformMatrix2x4fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) /* glProgramUniformMatrix4x2fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) /* glProgramUniformMatrix3x4fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) /* glProgramUniformMatrix4x3fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) /* glTextureBufferEXT */ (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) /* glMultiTexBufferEXT */ (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) /* glTextureParameterIivEXT */ (GLuint texture, GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) /* glTextureParameterIuivEXT */ (GLuint texture, GLenum target, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) /* glGetTextureParameterIivEXT */ (GLuint texture, GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) /* glGetTextureParameterIuivEXT */ (GLuint texture, GLenum target, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) /* glMultiTexParameterIivEXT */ (GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) /* glMultiTexParameterIuivEXT */ (GLenum texunit, GLenum target, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) /* glGetMultiTexParameterIivEXT */ (GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) /* glGetMultiTexParameterIuivEXT */ (GLenum texunit, GLenum target, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) /* glProgramUniform1uiEXT */ (GLuint program, GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) /* glProgramUniform2uiEXT */ (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) /* glProgramUniform3uiEXT */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) /* glProgramUniform4uiEXT */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) /* glProgramUniform1uivEXT */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) /* glProgramUniform2uivEXT */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) /* glProgramUniform3uivEXT */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) /* glProgramUniform4uivEXT */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) /* glNamedProgramLocalParameters4fvEXT */ (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) /* glNamedProgramLocalParameterI4iEXT */ (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) /* glNamedProgramLocalParameterI4ivEXT */ (GLuint program, GLenum target, GLuint index, const GLint * params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) /* glNamedProgramLocalParametersI4ivEXT */ (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) /* glNamedProgramLocalParameterI4uiEXT */ (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) /* glNamedProgramLocalParameterI4uivEXT */ (GLuint program, GLenum target, GLuint index, const GLuint * params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) /* glNamedProgramLocalParametersI4uivEXT */ (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) /* glGetNamedProgramLocalParameterIivEXT */ (GLuint program, GLenum target, GLuint index, GLint * params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) /* glGetNamedProgramLocalParameterIuivEXT */ (GLuint program, GLenum target, GLuint index, GLuint * params);
typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) /* glEnableClientStateiEXT */ (GLenum array, GLuint index);
typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) /* glDisableClientStateiEXT */ (GLenum array, GLuint index);
typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) /* glGetFloati_vEXT */ (GLenum pname, GLuint index, GLfloat * params);
typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) /* glGetDoublei_vEXT */ (GLenum pname, GLuint index, GLdouble * params);
typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) /* glGetPointeri_vEXT */ (GLenum pname, GLuint index, void ** params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) /* glNamedProgramStringEXT */ (GLuint program, GLenum target, GLenum format, GLsizei len, const void * string);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) /* glNamedProgramLocalParameter4dEXT */ (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) /* glNamedProgramLocalParameter4dvEXT */ (GLuint program, GLenum target, GLuint index, const GLdouble * params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) /* glNamedProgramLocalParameter4fEXT */ (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) /* glNamedProgramLocalParameter4fvEXT */ (GLuint program, GLenum target, GLuint index, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) /* glGetNamedProgramLocalParameterdvEXT */ (GLuint program, GLenum target, GLuint index, GLdouble * params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) /* glGetNamedProgramLocalParameterfvEXT */ (GLuint program, GLenum target, GLuint index, GLfloat * params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) /* glGetNamedProgramivEXT */ (GLuint program, GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) /* glGetNamedProgramStringEXT */ (GLuint program, GLenum target, GLenum pname, void * string);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) /* glNamedRenderbufferStorageEXT */ (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) /* glGetNamedRenderbufferParameterivEXT */ (GLuint renderbuffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) /* glNamedRenderbufferStorageMultisampleEXT */ (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) /* glNamedRenderbufferStorageMultisampleCoverageEXT */ (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) /* glCheckNamedFramebufferStatusEXT */ (GLuint framebuffer, GLenum target);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) /* glNamedFramebufferTexture1DEXT */ (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) /* glNamedFramebufferTexture2DEXT */ (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) /* glNamedFramebufferTexture3DEXT */ (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) /* glNamedFramebufferRenderbufferEXT */ (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) /* glGetNamedFramebufferAttachmentParameterivEXT */ (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) /* glGenerateTextureMipmapEXT */ (GLuint texture, GLenum target);
typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) /* glGenerateMultiTexMipmapEXT */ (GLenum texunit, GLenum target);
typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) /* glFramebufferDrawBufferEXT */ (GLuint framebuffer, GLenum mode);
typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) /* glFramebufferDrawBuffersEXT */ (GLuint framebuffer, GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) /* glFramebufferReadBufferEXT */ (GLuint framebuffer, GLenum mode);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) /* glGetFramebufferParameterivEXT */ (GLuint framebuffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) /* glNamedCopyBufferSubDataEXT */ (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) /* glNamedFramebufferTextureEXT */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) /* glNamedFramebufferTextureLayerEXT */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) /* glNamedFramebufferTextureFaceEXT */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) /* glTextureRenderbufferEXT */ (GLuint texture, GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) /* glMultiTexRenderbufferEXT */ (GLenum texunit, GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) /* glVertexArrayVertexOffsetEXT */ (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) /* glVertexArrayColorOffsetEXT */ (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) /* glVertexArrayEdgeFlagOffsetEXT */ (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) /* glVertexArrayIndexOffsetEXT */ (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) /* glVertexArrayNormalOffsetEXT */ (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) /* glVertexArrayTexCoordOffsetEXT */ (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) /* glVertexArrayMultiTexCoordOffsetEXT */ (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) /* glVertexArrayFogCoordOffsetEXT */ (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) /* glVertexArraySecondaryColorOffsetEXT */ (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) /* glVertexArrayVertexAttribOffsetEXT */ (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) /* glVertexArrayVertexAttribIOffsetEXT */ (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) /* glEnableVertexArrayEXT */ (GLuint vaobj, GLenum array);
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) /* glDisableVertexArrayEXT */ (GLuint vaobj, GLenum array);
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) /* glEnableVertexArrayAttribEXT */ (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) /* glDisableVertexArrayAttribEXT */ (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) /* glGetVertexArrayIntegervEXT */ (GLuint vaobj, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) /* glGetVertexArrayPointervEXT */ (GLuint vaobj, GLenum pname, void ** param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) /* glGetVertexArrayIntegeri_vEXT */ (GLuint vaobj, GLuint index, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) /* glGetVertexArrayPointeri_vEXT */ (GLuint vaobj, GLuint index, GLenum pname, void ** param);
typedef void * (APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) /* glMapNamedBufferRangeEXT */ (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) /* glFlushMappedNamedBufferRangeEXT */ (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) /* glNamedBufferStorageEXT */ (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) /* glClearNamedBufferDataEXT */ (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) /* glClearNamedBufferSubDataEXT */ (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) /* glNamedFramebufferParameteriEXT */ (GLuint framebuffer, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) /* glGetNamedFramebufferParameterivEXT */ (GLuint framebuffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) /* glProgramUniform1dEXT */ (GLuint program, GLint location, GLdouble x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) /* glProgramUniform2dEXT */ (GLuint program, GLint location, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) /* glProgramUniform3dEXT */ (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) /* glProgramUniform4dEXT */ (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) /* glProgramUniform1dvEXT */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) /* glProgramUniform2dvEXT */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) /* glProgramUniform3dvEXT */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) /* glProgramUniform4dvEXT */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) /* glProgramUniformMatrix2dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) /* glProgramUniformMatrix3dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) /* glProgramUniformMatrix4dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) /* glProgramUniformMatrix2x3dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) /* glProgramUniformMatrix2x4dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) /* glProgramUniformMatrix3x2dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) /* glProgramUniformMatrix3x4dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) /* glProgramUniformMatrix4x2dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) /* glProgramUniformMatrix4x3dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) /* glTextureBufferRangeEXT */ (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) /* glTextureStorage1DEXT */ (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) /* glTextureStorage2DEXT */ (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) /* glTextureStorage3DEXT */ (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) /* glTextureStorage2DMultisampleEXT */ (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) /* glTextureStorage3DMultisampleEXT */ (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) /* glVertexArrayBindVertexBufferEXT */ (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) /* glVertexArrayVertexAttribFormatEXT */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) /* glVertexArrayVertexAttribIFormatEXT */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) /* glVertexArrayVertexAttribLFormatEXT */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) /* glVertexArrayVertexAttribBindingEXT */ (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) /* glVertexArrayVertexBindingDivisorEXT */ (GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) /* glVertexArrayVertexAttribLOffsetEXT */ (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) /* glTexturePageCommitmentEXT */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) /* glVertexArrayVertexAttribDivisorEXT */ (GLuint vaobj, GLuint index, GLuint divisor);
typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) /* glColorMaskIndexedEXT */ (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) /* glGetBooleanIndexedvEXT */ (GLenum target, GLuint index, GLboolean * data);
typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) /* glGetIntegerIndexedvEXT */ (GLenum target, GLuint index, GLint * data);
typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) /* glEnableIndexedEXT */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) /* glDisableIndexedEXT */ (GLenum target, GLuint index);
typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) /* glIsEnabledIndexedEXT */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) /* glDrawArraysInstancedEXT */ (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) /* glDrawElementsInstancedEXT */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) /* glDrawRangeElementsEXT */ (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) /* glFogCoordfEXT */ (GLfloat coord);
typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) /* glFogCoordfvEXT */ (const GLfloat * coord);
typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) /* glFogCoorddEXT */ (GLdouble coord);
typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) /* glFogCoorddvEXT */ (const GLdouble * coord);
typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) /* glFogCoordPointerEXT */ (GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) /* glBlitFramebufferEXT */ (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) /* glRenderbufferStorageMultisampleEXT */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) /* glIsRenderbufferEXT */ (GLuint renderbuffer);
typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) /* glBindRenderbufferEXT */ (GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) /* glDeleteRenderbuffersEXT */ (GLsizei n, const GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) /* glGenRenderbuffersEXT */ (GLsizei n, GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) /* glRenderbufferStorageEXT */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) /* glGetRenderbufferParameterivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) /* glIsFramebufferEXT */ (GLuint framebuffer);
typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) /* glBindFramebufferEXT */ (GLenum target, GLuint framebuffer);
typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) /* glDeleteFramebuffersEXT */ (GLsizei n, const GLuint * framebuffers);
typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) /* glGenFramebuffersEXT */ (GLsizei n, GLuint * framebuffers);
typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) /* glCheckFramebufferStatusEXT */ (GLenum target);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) /* glFramebufferTexture1DEXT */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) /* glFramebufferTexture2DEXT */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) /* glFramebufferTexture3DEXT */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) /* glFramebufferRenderbufferEXT */ (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) /* glGetFramebufferAttachmentParameterivEXT */ (GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) /* glGenerateMipmapEXT */ (GLenum target);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) /* glProgramParameteriEXT */ (GLuint program, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) /* glProgramEnvParameters4fvEXT */ (GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) /* glProgramLocalParameters4fvEXT */ (GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) /* glGetUniformuivEXT */ (GLuint program, GLint location, GLuint * params);
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) /* glBindFragDataLocationEXT */ (GLuint program, GLuint color, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) /* glGetFragDataLocationEXT */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) /* glUniform1uiEXT */ (GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) /* glUniform2uiEXT */ (GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) /* glUniform3uiEXT */ (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) /* glUniform4uiEXT */ (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) /* glUniform1uivEXT */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) /* glUniform2uivEXT */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) /* glUniform3uivEXT */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) /* glUniform4uivEXT */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) /* glGetHistogramEXT */ (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) /* glGetHistogramParameterfvEXT */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) /* glGetHistogramParameterivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) /* glGetMinmaxEXT */ (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) /* glGetMinmaxParameterfvEXT */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) /* glGetMinmaxParameterivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) /* glHistogramEXT */ (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (APIENTRYP PFNGLMINMAXEXTPROC) /* glMinmaxEXT */ (GLenum target, GLenum internalformat, GLboolean sink);
typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) /* glResetHistogramEXT */ (GLenum target);
typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) /* glResetMinmaxEXT */ (GLenum target);
typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) /* glIndexFuncEXT */ (GLenum func, GLclampf ref);
typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) /* glIndexMaterialEXT */ (GLenum face, GLenum mode);
typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) /* glApplyTextureEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) /* glTextureLightEXT */ (GLenum pname);
typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) /* glTextureMaterialEXT */ (GLenum face, GLenum mode);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) /* glMultiDrawArraysEXT */ (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) /* glMultiDrawElementsEXT */ (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount);
typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) /* glSampleMaskEXT */ (GLclampf value, GLboolean invert);
typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) /* glSamplePatternEXT */ (GLenum pattern);
typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) /* glColorTableEXT */ (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void * table);
typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) /* glGetColorTableEXT */ (GLenum target, GLenum format, GLenum type, void * data);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) /* glGetColorTableParameterivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) /* glGetColorTableParameterfvEXT */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) /* glPixelTransformParameteriEXT */ (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) /* glPixelTransformParameterfEXT */ (GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) /* glPixelTransformParameterivEXT */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) /* glPixelTransformParameterfvEXT */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) /* glGetPixelTransformParameterivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) /* glGetPixelTransformParameterfvEXT */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) /* glPointParameterfEXT */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) /* glPointParameterfvEXT */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) /* glPolygonOffsetEXT */ (GLfloat factor, GLfloat bias);
typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPEXTPROC) /* glPolygonOffsetClampEXT */ (GLfloat factor, GLfloat units, GLfloat clamp);
typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) /* glProvokingVertexEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) /* glRasterSamplesEXT */ (GLuint samples, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) /* glSecondaryColor3bEXT */ (GLbyte red, GLbyte green, GLbyte blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) /* glSecondaryColor3bvEXT */ (const GLbyte * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) /* glSecondaryColor3dEXT */ (GLdouble red, GLdouble green, GLdouble blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) /* glSecondaryColor3dvEXT */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) /* glSecondaryColor3fEXT */ (GLfloat red, GLfloat green, GLfloat blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) /* glSecondaryColor3fvEXT */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) /* glSecondaryColor3iEXT */ (GLint red, GLint green, GLint blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) /* glSecondaryColor3ivEXT */ (const GLint * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) /* glSecondaryColor3sEXT */ (GLshort red, GLshort green, GLshort blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) /* glSecondaryColor3svEXT */ (const GLshort * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) /* glSecondaryColor3ubEXT */ (GLubyte red, GLubyte green, GLubyte blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) /* glSecondaryColor3ubvEXT */ (const GLubyte * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) /* glSecondaryColor3uiEXT */ (GLuint red, GLuint green, GLuint blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) /* glSecondaryColor3uivEXT */ (const GLuint * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) /* glSecondaryColor3usEXT */ (GLushort red, GLushort green, GLushort blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) /* glSecondaryColor3usvEXT */ (const GLushort * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) /* glSecondaryColorPointerEXT */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) /* glUseShaderProgramEXT */ (GLenum type, GLuint program);
typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) /* glActiveProgramEXT */ (GLuint program);
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) /* glCreateShaderProgramEXT */ (GLenum type, const GLchar * string);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) /* glBindImageTextureEXT */ (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
typedef void (APIENTRYP PFNGLMEMORYBARRIEREXTPROC) /* glMemoryBarrierEXT */ (GLbitfield barriers);
typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) /* glStencilClearTagEXT */ (GLsizei stencilTagBits, GLuint stencilClearTag);
typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) /* glActiveStencilFaceEXT */ (GLenum face);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) /* glTexSubImage1DEXT */ (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) /* glTexSubImage2DEXT */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) /* glTexImage3DEXT */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) /* glTexSubImage3DEXT */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) /* glFramebufferTextureLayerEXT */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) /* glTexBufferEXT */ (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) /* glRasterSamplesEXT */ (GLuint samples, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) /* glTexParameterIivEXT */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) /* glTexParameterIuivEXT */ (GLenum target, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) /* glGetTexParameterIivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) /* glGetTexParameterIuivEXT */ (GLenum target, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) /* glClearColorIiEXT */ (GLint red, GLint green, GLint blue, GLint alpha);
typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) /* glClearColorIuiEXT */ (GLuint red, GLuint green, GLuint blue, GLuint alpha);
typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) /* glAreTexturesResidentEXT */ (GLsizei n, const GLuint * textures, GLboolean * residences);
typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) /* glBindTextureEXT */ (GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) /* glDeleteTexturesEXT */ (GLsizei n, const GLuint * textures);
typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) /* glGenTexturesEXT */ (GLsizei n, GLuint * textures);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) /* glIsTextureEXT */ (GLuint texture);
typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) /* glPrioritizeTexturesEXT */ (GLsizei n, const GLuint * textures, const GLclampf * priorities);
typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) /* glTextureNormalEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) /* glGetQueryObjecti64vEXT */ (GLuint id, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) /* glGetQueryObjectui64vEXT */ (GLuint id, GLenum pname, GLuint64 * params);
typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) /* glBeginTransformFeedbackEXT */ (GLenum primitiveMode);
typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) /* glEndTransformFeedbackEXT */ ();
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) /* glBindBufferRangeEXT */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) /* glBindBufferOffsetEXT */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) /* glBindBufferBaseEXT */ (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) /* glTransformFeedbackVaryingsEXT */ (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) /* glGetTransformFeedbackVaryingEXT */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) /* glArrayElementEXT */ (GLint i);
typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) /* glColorPointerEXT */ (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) /* glDrawArraysEXT */ (GLenum mode, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) /* glEdgeFlagPointerEXT */ (GLsizei stride, GLsizei count, const GLboolean * pointer);
typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) /* glGetPointervEXT */ (GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) /* glIndexPointerEXT */ (GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) /* glNormalPointerEXT */ (GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) /* glTexCoordPointerEXT */ (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) /* glVertexPointerEXT */ (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) /* glVertexAttribL1dEXT */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) /* glVertexAttribL2dEXT */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) /* glVertexAttribL3dEXT */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) /* glVertexAttribL4dEXT */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) /* glVertexAttribL1dvEXT */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) /* glVertexAttribL2dvEXT */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) /* glVertexAttribL3dvEXT */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) /* glVertexAttribL4dvEXT */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) /* glVertexAttribLPointerEXT */ (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) /* glGetVertexAttribLdvEXT */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) /* glBeginVertexShaderEXT */ ();
typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) /* glEndVertexShaderEXT */ ();
typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) /* glBindVertexShaderEXT */ (GLuint id);
typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) /* glGenVertexShadersEXT */ (GLuint range);
typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) /* glDeleteVertexShaderEXT */ (GLuint id);
typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) /* glShaderOp1EXT */ (GLenum op, GLuint res, GLuint arg1);
typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) /* glShaderOp2EXT */ (GLenum op, GLuint res, GLuint arg1, GLuint arg2);
typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) /* glShaderOp3EXT */ (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) /* glSwizzleEXT */ (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) /* glWriteMaskEXT */ (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) /* glInsertComponentEXT */ (GLuint res, GLuint src, GLuint num);
typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) /* glExtractComponentEXT */ (GLuint res, GLuint src, GLuint num);
typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) /* glGenSymbolsEXT */ (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) /* glSetInvariantEXT */ (GLuint id, GLenum type, const void * addr);
typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) /* glSetLocalConstantEXT */ (GLuint id, GLenum type, const void * addr);
typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) /* glVariantbvEXT */ (GLuint id, const GLbyte * addr);
typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) /* glVariantsvEXT */ (GLuint id, const GLshort * addr);
typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) /* glVariantivEXT */ (GLuint id, const GLint * addr);
typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) /* glVariantfvEXT */ (GLuint id, const GLfloat * addr);
typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) /* glVariantdvEXT */ (GLuint id, const GLdouble * addr);
typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) /* glVariantubvEXT */ (GLuint id, const GLubyte * addr);
typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) /* glVariantusvEXT */ (GLuint id, const GLushort * addr);
typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) /* glVariantuivEXT */ (GLuint id, const GLuint * addr);
typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) /* glVariantPointerEXT */ (GLuint id, GLenum type, GLuint stride, const void * addr);
typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) /* glEnableVariantClientStateEXT */ (GLuint id);
typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) /* glDisableVariantClientStateEXT */ (GLuint id);
typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) /* glBindLightParameterEXT */ (GLenum light, GLenum value);
typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) /* glBindMaterialParameterEXT */ (GLenum face, GLenum value);
typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) /* glBindTexGenParameterEXT */ (GLenum unit, GLenum coord, GLenum value);
typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) /* glBindTextureUnitParameterEXT */ (GLenum unit, GLenum value);
typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) /* glBindParameterEXT */ (GLenum value);
typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) /* glIsVariantEnabledEXT */ (GLuint id, GLenum cap);
typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) /* glGetVariantBooleanvEXT */ (GLuint id, GLenum value, GLboolean * data);
typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) /* glGetVariantIntegervEXT */ (GLuint id, GLenum value, GLint * data);
typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) /* glGetVariantFloatvEXT */ (GLuint id, GLenum value, GLfloat * data);
typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) /* glGetVariantPointervEXT */ (GLuint id, GLenum value, void ** data);
typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) /* glGetInvariantBooleanvEXT */ (GLuint id, GLenum value, GLboolean * data);
typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) /* glGetInvariantIntegervEXT */ (GLuint id, GLenum value, GLint * data);
typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) /* glGetInvariantFloatvEXT */ (GLuint id, GLenum value, GLfloat * data);
typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) /* glGetLocalConstantBooleanvEXT */ (GLuint id, GLenum value, GLboolean * data);
typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) /* glGetLocalConstantIntegervEXT */ (GLuint id, GLenum value, GLint * data);
typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) /* glGetLocalConstantFloatvEXT */ (GLuint id, GLenum value, GLfloat * data);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) /* glVertexWeightfEXT */ (GLfloat weight);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) /* glVertexWeightfvEXT */ (const GLfloat * weight);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) /* glVertexWeightPointerEXT */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef GLsync (APIENTRYP PFNGLIMPORTSYNCEXTPROC) /* glImportSyncEXT */ (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) /* glFrameTerminatorGREMEDY */ ();
typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) /* glStringMarkerGREMEDY */ (GLsizei len, const void * string);
typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) /* glImageTransformParameteriHP */ (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) /* glImageTransformParameterfHP */ (GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) /* glImageTransformParameterivHP */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) /* glImageTransformParameterfvHP */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) /* glGetImageTransformParameterivHP */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) /* glGetImageTransformParameterfvHP */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) /* glMultiModeDrawArraysIBM */ (const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride);
typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) /* glMultiModeDrawElementsIBM */ (const GLenum * mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, GLint modestride);
typedef void (APIENTRYP PFNGLFLUSHSTATICDATAIBMPROC) /* glFlushStaticDataIBM */ (GLenum target);
typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) /* glColorPointerListIBM */ (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) /* glSecondaryColorPointerListIBM */ (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) /* glEdgeFlagPointerListIBM */ (GLint stride, const GLboolean ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) /* glFogCoordPointerListIBM */ (GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) /* glIndexPointerListIBM */ (GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) /* glNormalPointerListIBM */ (GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) /* glTexCoordPointerListIBM */ (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) /* glVertexPointerListIBM */ (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) /* glBlendFuncSeparateINGR */ (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (APIENTRYP PFNGLSYNCTEXTUREINTELPROC) /* glSyncTextureINTEL */ (GLuint texture);
typedef void (APIENTRYP PFNGLUNMAPTEXTURE2DINTELPROC) /* glUnmapTexture2DINTEL */ (GLuint texture, GLint level);
typedef void * (APIENTRYP PFNGLMAPTEXTURE2DINTELPROC) /* glMapTexture2DINTEL */ (GLuint texture, GLint level, GLbitfield access, GLint * stride, GLenum * layout);
typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) /* glVertexPointervINTEL */ (GLint size, GLenum type, const void ** pointer);
typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) /* glNormalPointervINTEL */ (GLenum type, const void ** pointer);
typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) /* glColorPointervINTEL */ (GLint size, GLenum type, const void ** pointer);
typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) /* glTexCoordPointervINTEL */ (GLint size, GLenum type, const void ** pointer);
typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) /* glBeginPerfQueryINTEL */ (GLuint queryHandle);
typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) /* glCreatePerfQueryINTEL */ (GLuint queryId, GLuint * queryHandle);
typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) /* glDeletePerfQueryINTEL */ (GLuint queryHandle);
typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) /* glEndPerfQueryINTEL */ (GLuint queryHandle);
typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) /* glGetFirstPerfQueryIdINTEL */ (GLuint * queryId);
typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) /* glGetNextPerfQueryIdINTEL */ (GLuint queryId, GLuint * nextQueryId);
typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) /* glGetPerfCounterInfoINTEL */ (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue);
typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) /* glGetPerfQueryDataINTEL */ (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid * data, GLuint * bytesWritten);
typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) /* glGetPerfQueryIdByNameINTEL */ (GLchar * queryName, GLuint * queryId);
typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) /* glGetPerfQueryInfoINTEL */ (GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask);
typedef void (APIENTRYP PFNGLBLENDBARRIERKHRPROC) /* glBlendBarrierKHR */ ();
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) /* glDebugMessageControl */ (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) /* glDebugMessageInsert */ (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) /* glDebugMessageCallback */ (GLDEBUGPROC callback, const void * userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) /* glGetDebugMessageLog */ (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) /* glPushDebugGroup */ (GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) /* glPopDebugGroup */ ();
typedef void (APIENTRYP PFNGLOBJECTLABELPROC) /* glObjectLabel */ (GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) /* glGetObjectLabel */ (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) /* glObjectPtrLabel */ (const void * ptr, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) /* glGetObjectPtrLabel */ (const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLGETPOINTERVPROC) /* glGetPointerv */ (GLenum pname, void ** params);
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) /* glGetGraphicsResetStatus */ ();
typedef void (APIENTRYP PFNGLREADNPIXELSPROC) /* glReadnPixels */ (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) /* glGetnUniformfv */ (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) /* glGetnUniformiv */ (GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) /* glGetnUniformuiv */ (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) /* glResizeBuffersMESA */ ();
typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) /* glWindowPos2dMESA */ (GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) /* glWindowPos2dvMESA */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) /* glWindowPos2fMESA */ (GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) /* glWindowPos2fvMESA */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) /* glWindowPos2iMESA */ (GLint x, GLint y);
typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) /* glWindowPos2ivMESA */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) /* glWindowPos2sMESA */ (GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) /* glWindowPos2svMESA */ (const GLshort * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) /* glWindowPos3dMESA */ (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) /* glWindowPos3dvMESA */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) /* glWindowPos3fMESA */ (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) /* glWindowPos3fvMESA */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) /* glWindowPos3iMESA */ (GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) /* glWindowPos3ivMESA */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) /* glWindowPos3sMESA */ (GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) /* glWindowPos3svMESA */ (const GLshort * v);
typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) /* glWindowPos4dMESA */ (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) /* glWindowPos4dvMESA */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) /* glWindowPos4fMESA */ (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) /* glWindowPos4fvMESA */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) /* glWindowPos4iMESA */ (GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) /* glWindowPos4ivMESA */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) /* glWindowPos4sMESA */ (GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) /* glWindowPos4svMESA */ (const GLshort * v);
typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVXPROC) /* glBeginConditionalRenderNVX */ (GLuint id);
typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVXPROC) /* glEndConditionalRenderNVX */ ();
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) /* glMultiDrawArraysIndirectBindlessNV */ (GLenum mode, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) /* glMultiDrawElementsIndirectBindlessNV */ (GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) /* glMultiDrawArraysIndirectBindlessCountNV */ (GLenum mode, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) /* glMultiDrawElementsIndirectBindlessCountNV */ (GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) /* glGetTextureHandleNV */ (GLuint texture);
typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) /* glGetTextureSamplerHandleNV */ (GLuint texture, GLuint sampler);
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) /* glMakeTextureHandleResidentNV */ (GLuint64 handle);
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) /* glMakeTextureHandleNonResidentNV */ (GLuint64 handle);
typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) /* glGetImageHandleNV */ (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) /* glMakeImageHandleResidentNV */ (GLuint64 handle, GLenum access);
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) /* glMakeImageHandleNonResidentNV */ (GLuint64 handle);
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) /* glUniformHandleui64NV */ (GLint location, GLuint64 value);
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) /* glUniformHandleui64vNV */ (GLint location, GLsizei count, const GLuint64 * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) /* glProgramUniformHandleui64NV */ (GLuint program, GLint location, GLuint64 value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) /* glProgramUniformHandleui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64 * values);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) /* glIsTextureHandleResidentNV */ (GLuint64 handle);
typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) /* glIsImageHandleResidentNV */ (GLuint64 handle);
typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) /* glBlendParameteriNV */ (GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) /* glBlendBarrierNV */ ();
typedef void (APIENTRYP PFNGLCREATESTATESNVPROC) /* glCreateStatesNV */ (GLsizei n, GLuint * states);
typedef void (APIENTRYP PFNGLDELETESTATESNVPROC) /* glDeleteStatesNV */ (GLsizei n, const GLuint * states);
typedef GLboolean (APIENTRYP PFNGLISSTATENVPROC) /* glIsStateNV */ (GLuint state);
typedef void (APIENTRYP PFNGLSTATECAPTURENVPROC) /* glStateCaptureNV */ (GLuint state, GLenum mode);
typedef GLuint (APIENTRYP PFNGLGETCOMMANDHEADERNVPROC) /* glGetCommandHeaderNV */ (GLenum tokenID, GLuint size);
typedef GLushort (APIENTRYP PFNGLGETSTAGEINDEXNVPROC) /* glGetStageIndexNV */ (GLenum shadertype);
typedef void (APIENTRYP PFNGLDRAWCOMMANDSNVPROC) /* glDrawCommandsNV */ (GLenum primitiveMode, GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, GLuint count);
typedef void (APIENTRYP PFNGLDRAWCOMMANDSADDRESSNVPROC) /* glDrawCommandsAddressNV */ (GLenum primitiveMode, const GLuint64 * indirects, const GLsizei * sizes, GLuint count);
typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESNVPROC) /* glDrawCommandsStatesNV */ (GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) /* glDrawCommandsStatesAddressNV */ (const GLuint64 * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
typedef void (APIENTRYP PFNGLCREATECOMMANDLISTSNVPROC) /* glCreateCommandListsNV */ (GLsizei n, GLuint * lists);
typedef void (APIENTRYP PFNGLDELETECOMMANDLISTSNVPROC) /* glDeleteCommandListsNV */ (GLsizei n, const GLuint * lists);
typedef GLboolean (APIENTRYP PFNGLISCOMMANDLISTNVPROC) /* glIsCommandListNV */ (GLuint list);
typedef void (APIENTRYP PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) /* glListDrawCommandsStatesClientNV */ (GLuint list, GLuint segment, const void ** indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
typedef void (APIENTRYP PFNGLCOMMANDLISTSEGMENTSNVPROC) /* glCommandListSegmentsNV */ (GLuint list, GLuint segments);
typedef void (APIENTRYP PFNGLCOMPILECOMMANDLISTNVPROC) /* glCompileCommandListNV */ (GLuint list);
typedef void (APIENTRYP PFNGLCALLCOMMANDLISTNVPROC) /* glCallCommandListNV */ (GLuint list);
typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) /* glBeginConditionalRenderNV */ (GLuint id, GLenum mode);
typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) /* glEndConditionalRenderNV */ ();
typedef void (APIENTRYP PFNGLSUBPIXELPRECISIONBIASNVPROC) /* glSubpixelPrecisionBiasNV */ (GLuint xbits, GLuint ybits);
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) /* glCopyImageSubDataNV */ (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) /* glDepthRangedNV */ (GLdouble zNear, GLdouble zFar);
typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) /* glClearDepthdNV */ (GLdouble depth);
typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) /* glDepthBoundsdNV */ (GLdouble zmin, GLdouble zmax);
typedef void (APIENTRYP PFNGLDRAWTEXTURENVPROC) /* glDrawTextureNV */ (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) /* glMapControlPointsNV */ (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void * points);
typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) /* glMapParameterivNV */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) /* glMapParameterfvNV */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) /* glGetMapControlPointsNV */ (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void * points);
typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) /* glGetMapParameterivNV */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) /* glGetMapParameterfvNV */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) /* glGetMapAttribParameterivNV */ (GLenum target, GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) /* glGetMapAttribParameterfvNV */ (GLenum target, GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) /* glEvalMapsNV */ (GLenum target, GLenum mode);
typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) /* glGetMultisamplefvNV */ (GLenum pname, GLuint index, GLfloat * val);
typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) /* glSampleMaskIndexedNV */ (GLuint index, GLbitfield mask);
typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) /* glTexRenderbufferNV */ (GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) /* glDeleteFencesNV */ (GLsizei n, const GLuint * fences);
typedef void (APIENTRYP PFNGLGENFENCESNVPROC) /* glGenFencesNV */ (GLsizei n, GLuint * fences);
typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) /* glIsFenceNV */ (GLuint fence);
typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) /* glTestFenceNV */ (GLuint fence);
typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) /* glGetFenceivNV */ (GLuint fence, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) /* glFinishFenceNV */ (GLuint fence);
typedef void (APIENTRYP PFNGLSETFENCENVPROC) /* glSetFenceNV */ (GLuint fence, GLenum condition);
typedef void (APIENTRYP PFNGLFRAGMENTCOVERAGECOLORNVPROC) /* glFragmentCoverageColorNV */ (GLuint color);
typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) /* glProgramNamedParameter4fNV */ (GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) /* glProgramNamedParameter4fvNV */ (GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) /* glProgramNamedParameter4dNV */ (GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) /* glProgramNamedParameter4dvNV */ (GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) /* glGetProgramNamedParameterfvNV */ (GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) /* glGetProgramNamedParameterdvNV */ (GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);
typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) /* glRasterSamplesEXT */ (GLuint samples, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) /* glCoverageModulationTableNV */ (GLsizei n, const GLfloat * v);
typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) /* glGetCoverageModulationTableNV */ (GLsizei bufsize, GLfloat * v);
typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) /* glCoverageModulationNV */ (GLenum components);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) /* glRenderbufferStorageMultisampleCoverageNV */ (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) /* glProgramVertexLimitNV */ (GLenum target, GLint limit);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) /* glFramebufferTextureEXT */ (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) /* glFramebufferTextureLayerEXT */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) /* glFramebufferTextureFaceEXT */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) /* glProgramLocalParameterI4iNV */ (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) /* glProgramLocalParameterI4ivNV */ (GLenum target, GLuint index, const GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) /* glProgramLocalParametersI4ivNV */ (GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) /* glProgramLocalParameterI4uiNV */ (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) /* glProgramLocalParameterI4uivNV */ (GLenum target, GLuint index, const GLuint * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) /* glProgramLocalParametersI4uivNV */ (GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) /* glProgramEnvParameterI4iNV */ (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) /* glProgramEnvParameterI4ivNV */ (GLenum target, GLuint index, const GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) /* glProgramEnvParametersI4ivNV */ (GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) /* glProgramEnvParameterI4uiNV */ (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) /* glProgramEnvParameterI4uivNV */ (GLenum target, GLuint index, const GLuint * params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) /* glProgramEnvParametersI4uivNV */ (GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) /* glGetProgramLocalParameterIivNV */ (GLenum target, GLuint index, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) /* glGetProgramLocalParameterIuivNV */ (GLenum target, GLuint index, GLuint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) /* glGetProgramEnvParameterIivNV */ (GLenum target, GLuint index, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) /* glGetProgramEnvParameterIuivNV */ (GLenum target, GLuint index, GLuint * params);
typedef void (APIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) /* glProgramSubroutineParametersuivNV */ (GLenum target, GLsizei count, const GLuint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) /* glGetProgramSubroutineParameteruivNV */ (GLenum target, GLuint index, GLuint * param);
typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) /* glUniform1i64NV */ (GLint location, GLint64EXT x);
typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) /* glUniform2i64NV */ (GLint location, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) /* glUniform3i64NV */ (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) /* glUniform4i64NV */ (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) /* glUniform1i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) /* glUniform2i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) /* glUniform3i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) /* glUniform4i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) /* glUniform1ui64NV */ (GLint location, GLuint64EXT x);
typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) /* glUniform2ui64NV */ (GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) /* glUniform3ui64NV */ (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) /* glUniform4ui64NV */ (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) /* glUniform1ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) /* glUniform2ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) /* glUniform3ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) /* glUniform4ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) /* glGetUniformi64vNV */ (GLuint program, GLint location, GLint64EXT * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) /* glProgramUniform1i64NV */ (GLuint program, GLint location, GLint64EXT x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) /* glProgramUniform2i64NV */ (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) /* glProgramUniform3i64NV */ (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) /* glProgramUniform4i64NV */ (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) /* glProgramUniform1i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) /* glProgramUniform2i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) /* glProgramUniform3i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) /* glProgramUniform4i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) /* glProgramUniform1ui64NV */ (GLuint program, GLint location, GLuint64EXT x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) /* glProgramUniform2ui64NV */ (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) /* glProgramUniform3ui64NV */ (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) /* glProgramUniform4ui64NV */ (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) /* glProgramUniform1ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) /* glProgramUniform2ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) /* glProgramUniform3ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) /* glProgramUniform4ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) /* glVertex2hNV */ (GLhalfNV x, GLhalfNV y);
typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) /* glVertex2hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) /* glVertex3hNV */ (GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) /* glVertex3hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) /* glVertex4hNV */ (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) /* glVertex4hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) /* glNormal3hNV */ (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) /* glNormal3hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) /* glColor3hNV */ (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) /* glColor3hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) /* glColor4hNV */ (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) /* glColor4hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) /* glTexCoord1hNV */ (GLhalfNV s);
typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) /* glTexCoord1hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) /* glTexCoord2hNV */ (GLhalfNV s, GLhalfNV t);
typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) /* glTexCoord2hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) /* glTexCoord3hNV */ (GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) /* glTexCoord3hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) /* glTexCoord4hNV */ (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) /* glTexCoord4hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) /* glMultiTexCoord1hNV */ (GLenum target, GLhalfNV s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) /* glMultiTexCoord1hvNV */ (GLenum target, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) /* glMultiTexCoord2hNV */ (GLenum target, GLhalfNV s, GLhalfNV t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) /* glMultiTexCoord2hvNV */ (GLenum target, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) /* glMultiTexCoord3hNV */ (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) /* glMultiTexCoord3hvNV */ (GLenum target, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) /* glMultiTexCoord4hNV */ (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) /* glMultiTexCoord4hvNV */ (GLenum target, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) /* glFogCoordhNV */ (GLhalfNV fog);
typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) /* glFogCoordhvNV */ (const GLhalfNV * fog);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) /* glSecondaryColor3hNV */ (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) /* glSecondaryColor3hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) /* glVertexWeighthNV */ (GLhalfNV weight);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) /* glVertexWeighthvNV */ (const GLhalfNV * weight);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) /* glVertexAttrib1hNV */ (GLuint index, GLhalfNV x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) /* glVertexAttrib1hvNV */ (GLuint index, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) /* glVertexAttrib2hNV */ (GLuint index, GLhalfNV x, GLhalfNV y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) /* glVertexAttrib2hvNV */ (GLuint index, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) /* glVertexAttrib3hNV */ (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) /* glVertexAttrib3hvNV */ (GLuint index, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) /* glVertexAttrib4hNV */ (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) /* glVertexAttrib4hvNV */ (GLuint index, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) /* glVertexAttribs1hvNV */ (GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) /* glVertexAttribs2hvNV */ (GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) /* glVertexAttribs3hvNV */ (GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) /* glVertexAttribs4hvNV */ (GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) /* glGetInternalformatSampleivNV */ (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) /* glGenOcclusionQueriesNV */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) /* glDeleteOcclusionQueriesNV */ (GLsizei n, const GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) /* glIsOcclusionQueryNV */ (GLuint id);
typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) /* glBeginOcclusionQueryNV */ (GLuint id);
typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) /* glEndOcclusionQueryNV */ ();
typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) /* glGetOcclusionQueryivNV */ (GLuint id, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) /* glGetOcclusionQueryuivNV */ (GLuint id, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) /* glProgramBufferParametersfvNV */ (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat * params);
typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) /* glProgramBufferParametersIivNV */ (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) /* glProgramBufferParametersIuivNV */ (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint * params);
typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) /* glGenPathsNV */ (GLsizei range);
typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) /* glDeletePathsNV */ (GLuint path, GLsizei range);
typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) /* glIsPathNV */ (GLuint path);
typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) /* glPathCommandsNV */ (GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) /* glPathCoordsNV */ (GLuint path, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) /* glPathSubCommandsNV */ (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) /* glPathSubCoordsNV */ (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) /* glPathStringNV */ (GLuint path, GLenum format, GLsizei length, const void * pathString);
typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) /* glPathGlyphsNV */ (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) /* glPathGlyphRangeNV */ (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) /* glWeightPathsNV */ (GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights);
typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) /* glCopyPathNV */ (GLuint resultPath, GLuint srcPath);
typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) /* glInterpolatePathsNV */ (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) /* glTransformPathNV */ (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues);
typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) /* glPathParameterivNV */ (GLuint path, GLenum pname, const GLint * value);
typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) /* glPathParameteriNV */ (GLuint path, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) /* glPathParameterfvNV */ (GLuint path, GLenum pname, const GLfloat * value);
typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) /* glPathParameterfNV */ (GLuint path, GLenum pname, GLfloat value);
typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) /* glPathDashArrayNV */ (GLuint path, GLsizei dashCount, const GLfloat * dashArray);
typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) /* glPathStencilFuncNV */ (GLenum func, GLint ref, GLuint mask);
typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) /* glPathStencilDepthOffsetNV */ (GLfloat factor, GLfloat units);
typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) /* glStencilFillPathNV */ (GLuint path, GLenum fillMode, GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) /* glStencilStrokePathNV */ (GLuint path, GLint reference, GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) /* glStencilFillPathInstancedNV */ (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues);
typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) /* glStencilStrokePathInstancedNV */ (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues);
typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) /* glPathCoverDepthFuncNV */ (GLenum func);
typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) /* glCoverFillPathNV */ (GLuint path, GLenum coverMode);
typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) /* glCoverStrokePathNV */ (GLuint path, GLenum coverMode);
typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) /* glCoverFillPathInstancedNV */ (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) /* glCoverStrokePathInstancedNV */ (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) /* glGetPathParameterivNV */ (GLuint path, GLenum pname, GLint * value);
typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) /* glGetPathParameterfvNV */ (GLuint path, GLenum pname, GLfloat * value);
typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) /* glGetPathCommandsNV */ (GLuint path, GLubyte * commands);
typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) /* glGetPathCoordsNV */ (GLuint path, GLfloat * coords);
typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) /* glGetPathDashArrayNV */ (GLuint path, GLfloat * dashArray);
typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) /* glGetPathMetricsNV */ (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics);
typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) /* glGetPathMetricRangeNV */ (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics);
typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) /* glGetPathSpacingNV */ (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing);
typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) /* glIsPointInFillPathNV */ (GLuint path, GLuint mask, GLfloat x, GLfloat y);
typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) /* glIsPointInStrokePathNV */ (GLuint path, GLfloat x, GLfloat y);
typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) /* glGetPathLengthNV */ (GLuint path, GLsizei startSegment, GLsizei numSegments);
typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) /* glPointAlongPathNV */ (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY);
typedef void (APIENTRYP PFNGLMATRIXLOAD3X2FNVPROC) /* glMatrixLoad3x2fNV */ (GLenum matrixMode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXLOAD3X3FNVPROC) /* glMatrixLoad3x3fNV */ (GLenum matrixMode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) /* glMatrixLoadTranspose3x3fNV */ (GLenum matrixMode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXMULT3X2FNVPROC) /* glMatrixMult3x2fNV */ (GLenum matrixMode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXMULT3X3FNVPROC) /* glMatrixMult3x3fNV */ (GLenum matrixMode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) /* glMatrixMultTranspose3x3fNV */ (GLenum matrixMode, const GLfloat * m);
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) /* glStencilThenCoverFillPathNV */ (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) /* glStencilThenCoverStrokePathNV */ (GLuint path, GLint reference, GLuint mask, GLenum coverMode);
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) /* glStencilThenCoverFillPathInstancedNV */ (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) /* glStencilThenCoverStrokePathInstancedNV */ (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) /* glPathGlyphIndexRangeNV */ (GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) /* glPathGlyphIndexArrayNV */ (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) /* glPathMemoryGlyphIndexArrayNV */ (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void * fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) /* glProgramPathFragmentInputGenNV */ (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat * coeffs);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) /* glGetProgramResourcefvNV */ (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLfloat * params);
typedef void (APIENTRYP PFNGLPATHCOLORGENNVPROC) /* glPathColorGenNV */ (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat * coeffs);
typedef void (APIENTRYP PFNGLPATHTEXGENNVPROC) /* glPathTexGenNV */ (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat * coeffs);
typedef void (APIENTRYP PFNGLPATHFOGGENNVPROC) /* glPathFogGenNV */ (GLenum genMode);
typedef void (APIENTRYP PFNGLGETPATHCOLORGENIVNVPROC) /* glGetPathColorGenivNV */ (GLenum color, GLenum pname, GLint * value);
typedef void (APIENTRYP PFNGLGETPATHCOLORGENFVNVPROC) /* glGetPathColorGenfvNV */ (GLenum color, GLenum pname, GLfloat * value);
typedef void (APIENTRYP PFNGLGETPATHTEXGENIVNVPROC) /* glGetPathTexGenivNV */ (GLenum texCoordSet, GLenum pname, GLint * value);
typedef void (APIENTRYP PFNGLGETPATHTEXGENFVNVPROC) /* glGetPathTexGenfvNV */ (GLenum texCoordSet, GLenum pname, GLfloat * value);
typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) /* glPixelDataRangeNV */ (GLenum target, GLsizei length, const void * pointer);
typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) /* glFlushPixelDataRangeNV */ (GLenum target);
typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) /* glPointParameteriNV */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) /* glPointParameterivNV */ (GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) /* glPresentFrameKeyedNV */ (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) /* glPresentFrameDualFillNV */ (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) /* glGetVideoivNV */ (GLuint video_slot, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) /* glGetVideouivNV */ (GLuint video_slot, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) /* glGetVideoi64vNV */ (GLuint video_slot, GLenum pname, GLint64EXT * params);
typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) /* glGetVideoui64vNV */ (GLuint video_slot, GLenum pname, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) /* glPrimitiveRestartNV */ ();
typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) /* glPrimitiveRestartIndexNV */ (GLuint index);
typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) /* glCombinerParameterfvNV */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) /* glCombinerParameterfNV */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) /* glCombinerParameterivNV */ (GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) /* glCombinerParameteriNV */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) /* glCombinerInputNV */ (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) /* glCombinerOutputNV */ (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) /* glFinalCombinerInputNV */ (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) /* glGetCombinerInputParameterfvNV */ (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) /* glGetCombinerInputParameterivNV */ (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) /* glGetCombinerOutputParameterfvNV */ (GLenum stage, GLenum portion, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) /* glGetCombinerOutputParameterivNV */ (GLenum stage, GLenum portion, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) /* glGetFinalCombinerInputParameterfvNV */ (GLenum variable, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) /* glGetFinalCombinerInputParameterivNV */ (GLenum variable, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) /* glCombinerStageParameterfvNV */ (GLenum stage, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) /* glGetCombinerStageParameterfvNV */ (GLenum stage, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) /* glFramebufferSampleLocationsfvNV */ (GLenum target, GLuint start, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) /* glNamedFramebufferSampleLocationsfvNV */ (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLRESOLVEDEPTHVALUESNVPROC) /* glResolveDepthValuesNV */ ();
typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) /* glMakeBufferResidentNV */ (GLenum target, GLenum access);
typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) /* glMakeBufferNonResidentNV */ (GLenum target);
typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) /* glIsBufferResidentNV */ (GLenum target);
typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) /* glMakeNamedBufferResidentNV */ (GLuint buffer, GLenum access);
typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) /* glMakeNamedBufferNonResidentNV */ (GLuint buffer);
typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) /* glIsNamedBufferResidentNV */ (GLuint buffer);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) /* glGetBufferParameterui64vNV */ (GLenum target, GLenum pname, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) /* glGetNamedBufferParameterui64vNV */ (GLuint buffer, GLenum pname, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) /* glGetIntegerui64vNV */ (GLenum value, GLuint64EXT * result);
typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) /* glUniformui64NV */ (GLint location, GLuint64EXT value);
typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) /* glUniformui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) /* glGetUniformui64vNV */ (GLuint program, GLint location, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) /* glProgramUniformui64NV */ (GLuint program, GLint location, GLuint64EXT value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) /* glProgramUniformui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) /* glTextureBarrierNV */ ();
typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) /* glTexImage2DMultisampleCoverageNV */ (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) /* glTexImage3DMultisampleCoverageNV */ (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) /* glTextureImage2DMultisampleNV */ (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) /* glTextureImage3DMultisampleNV */ (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) /* glTextureImage2DMultisampleCoverageNV */ (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) /* glTextureImage3DMultisampleCoverageNV */ (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) /* glBeginTransformFeedbackNV */ (GLenum primitiveMode);
typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) /* glEndTransformFeedbackNV */ ();
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) /* glTransformFeedbackAttribsNV */ (GLsizei count, const GLint * attribs, GLenum bufferMode);
typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) /* glBindBufferRangeNV */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) /* glBindBufferOffsetNV */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) /* glBindBufferBaseNV */ (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) /* glTransformFeedbackVaryingsNV */ (GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode);
typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) /* glActiveVaryingNV */ (GLuint program, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) /* glGetVaryingLocationNV */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) /* glGetActiveVaryingNV */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) /* glGetTransformFeedbackVaryingNV */ (GLuint program, GLuint index, GLint * location);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) /* glTransformFeedbackStreamAttribsNV */ (GLsizei count, const GLint * attribs, GLsizei nbuffers, const GLint * bufstreams, GLenum bufferMode);
typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) /* glBindTransformFeedbackNV */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) /* glDeleteTransformFeedbacksNV */ (GLsizei n, const GLuint * ids);
typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) /* glGenTransformFeedbacksNV */ (GLsizei n, GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) /* glIsTransformFeedbackNV */ (GLuint id);
typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) /* glPauseTransformFeedbackNV */ ();
typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) /* glResumeTransformFeedbackNV */ ();
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) /* glDrawTransformFeedbackNV */ (GLenum mode, GLuint id);
typedef void (APIENTRYP PFNGLVDPAUINITNVPROC) /* glVDPAUInitNV */ (const void * vdpDevice, const void * getProcAddress);
typedef void (APIENTRYP PFNGLVDPAUFININVPROC) /* glVDPAUFiniNV */ ();
typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) /* glVDPAURegisterVideoSurfaceNV */ (const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) /* glVDPAURegisterOutputSurfaceNV */ (const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
typedef GLboolean (APIENTRYP PFNGLVDPAUISSURFACENVPROC) /* glVDPAUIsSurfaceNV */ (GLvdpauSurfaceNV surface);
typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) /* glVDPAUUnregisterSurfaceNV */ (GLvdpauSurfaceNV surface);
typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) /* glVDPAUGetSurfaceivNV */ (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) /* glVDPAUSurfaceAccessNV */ (GLvdpauSurfaceNV surface, GLenum access);
typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) /* glVDPAUMapSurfacesNV */ (GLsizei numSurfaces, const GLvdpauSurfaceNV * surfaces);
typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) /* glVDPAUUnmapSurfacesNV */ (GLsizei numSurface, const GLvdpauSurfaceNV * surfaces);
typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) /* glFlushVertexArrayRangeNV */ ();
typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) /* glVertexArrayRangeNV */ (GLsizei length, const void * pointer);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) /* glVertexAttribL1i64NV */ (GLuint index, GLint64EXT x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) /* glVertexAttribL2i64NV */ (GLuint index, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) /* glVertexAttribL3i64NV */ (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) /* glVertexAttribL4i64NV */ (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) /* glVertexAttribL1i64vNV */ (GLuint index, const GLint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) /* glVertexAttribL2i64vNV */ (GLuint index, const GLint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) /* glVertexAttribL3i64vNV */ (GLuint index, const GLint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) /* glVertexAttribL4i64vNV */ (GLuint index, const GLint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) /* glVertexAttribL1ui64NV */ (GLuint index, GLuint64EXT x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) /* glVertexAttribL2ui64NV */ (GLuint index, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) /* glVertexAttribL3ui64NV */ (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) /* glVertexAttribL4ui64NV */ (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) /* glVertexAttribL1ui64vNV */ (GLuint index, const GLuint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) /* glVertexAttribL2ui64vNV */ (GLuint index, const GLuint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) /* glVertexAttribL3ui64vNV */ (GLuint index, const GLuint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) /* glVertexAttribL4ui64vNV */ (GLuint index, const GLuint64EXT * v);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) /* glGetVertexAttribLi64vNV */ (GLuint index, GLenum pname, GLint64EXT * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) /* glGetVertexAttribLui64vNV */ (GLuint index, GLenum pname, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) /* glVertexAttribLFormatNV */ (GLuint index, GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) /* glBufferAddressRangeNV */ (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) /* glVertexFormatNV */ (GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) /* glNormalFormatNV */ (GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) /* glColorFormatNV */ (GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) /* glIndexFormatNV */ (GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) /* glTexCoordFormatNV */ (GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) /* glEdgeFlagFormatNV */ (GLsizei stride);
typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) /* glSecondaryColorFormatNV */ (GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) /* glFogCoordFormatNV */ (GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) /* glVertexAttribFormatNV */ (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) /* glVertexAttribIFormatNV */ (GLuint index, GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) /* glGetIntegerui64i_vNV */ (GLenum value, GLuint index, GLuint64EXT * result);
typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) /* glAreProgramsResidentNV */ (GLsizei n, const GLuint * programs, GLboolean * residences);
typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) /* glBindProgramNV */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) /* glDeleteProgramsNV */ (GLsizei n, const GLuint * programs);
typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) /* glExecuteProgramNV */ (GLenum target, GLuint id, const GLfloat * params);
typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) /* glGenProgramsNV */ (GLsizei n, GLuint * programs);
typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) /* glGetProgramParameterdvNV */ (GLenum target, GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) /* glGetProgramParameterfvNV */ (GLenum target, GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) /* glGetProgramivNV */ (GLuint id, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) /* glGetProgramStringNV */ (GLuint id, GLenum pname, GLubyte * program);
typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) /* glGetTrackMatrixivNV */ (GLenum target, GLuint address, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) /* glGetVertexAttribdvNV */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) /* glGetVertexAttribfvNV */ (GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) /* glGetVertexAttribivNV */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) /* glGetVertexAttribPointervNV */ (GLuint index, GLenum pname, void ** pointer);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) /* glIsProgramNV */ (GLuint id);
typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) /* glLoadProgramNV */ (GLenum target, GLuint id, GLsizei len, const GLubyte * program);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) /* glProgramParameter4dNV */ (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) /* glProgramParameter4dvNV */ (GLenum target, GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) /* glProgramParameter4fNV */ (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) /* glProgramParameter4fvNV */ (GLenum target, GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) /* glProgramParameters4dvNV */ (GLenum target, GLuint index, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) /* glProgramParameters4fvNV */ (GLenum target, GLuint index, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) /* glRequestResidentProgramsNV */ (GLsizei n, const GLuint * programs);
typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) /* glTrackMatrixNV */ (GLenum target, GLuint address, GLenum matrix, GLenum transform);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) /* glVertexAttribPointerNV */ (GLuint index, GLint fsize, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) /* glVertexAttrib1dNV */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) /* glVertexAttrib1dvNV */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) /* glVertexAttrib1fNV */ (GLuint index, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) /* glVertexAttrib1fvNV */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) /* glVertexAttrib1sNV */ (GLuint index, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) /* glVertexAttrib1svNV */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) /* glVertexAttrib2dNV */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) /* glVertexAttrib2dvNV */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) /* glVertexAttrib2fNV */ (GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) /* glVertexAttrib2fvNV */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) /* glVertexAttrib2sNV */ (GLuint index, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) /* glVertexAttrib2svNV */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) /* glVertexAttrib3dNV */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) /* glVertexAttrib3dvNV */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) /* glVertexAttrib3fNV */ (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) /* glVertexAttrib3fvNV */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) /* glVertexAttrib3sNV */ (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) /* glVertexAttrib3svNV */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) /* glVertexAttrib4dNV */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) /* glVertexAttrib4dvNV */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) /* glVertexAttrib4fNV */ (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) /* glVertexAttrib4fvNV */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) /* glVertexAttrib4sNV */ (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) /* glVertexAttrib4svNV */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) /* glVertexAttrib4ubNV */ (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) /* glVertexAttrib4ubvNV */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) /* glVertexAttribs1dvNV */ (GLuint index, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) /* glVertexAttribs1fvNV */ (GLuint index, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) /* glVertexAttribs1svNV */ (GLuint index, GLsizei count, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) /* glVertexAttribs2dvNV */ (GLuint index, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) /* glVertexAttribs2fvNV */ (GLuint index, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) /* glVertexAttribs2svNV */ (GLuint index, GLsizei count, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) /* glVertexAttribs3dvNV */ (GLuint index, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) /* glVertexAttribs3fvNV */ (GLuint index, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) /* glVertexAttribs3svNV */ (GLuint index, GLsizei count, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) /* glVertexAttribs4dvNV */ (GLuint index, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) /* glVertexAttribs4fvNV */ (GLuint index, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) /* glVertexAttribs4svNV */ (GLuint index, GLsizei count, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) /* glVertexAttribs4ubvNV */ (GLuint index, GLsizei count, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) /* glVertexAttribI1iEXT */ (GLuint index, GLint x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) /* glVertexAttribI2iEXT */ (GLuint index, GLint x, GLint y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) /* glVertexAttribI3iEXT */ (GLuint index, GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) /* glVertexAttribI4iEXT */ (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) /* glVertexAttribI1uiEXT */ (GLuint index, GLuint x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) /* glVertexAttribI2uiEXT */ (GLuint index, GLuint x, GLuint y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) /* glVertexAttribI3uiEXT */ (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) /* glVertexAttribI4uiEXT */ (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) /* glVertexAttribI1ivEXT */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) /* glVertexAttribI2ivEXT */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) /* glVertexAttribI3ivEXT */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) /* glVertexAttribI4ivEXT */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) /* glVertexAttribI1uivEXT */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) /* glVertexAttribI2uivEXT */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) /* glVertexAttribI3uivEXT */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) /* glVertexAttribI4uivEXT */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) /* glVertexAttribI4bvEXT */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) /* glVertexAttribI4svEXT */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) /* glVertexAttribI4ubvEXT */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) /* glVertexAttribI4usvEXT */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) /* glVertexAttribIPointerEXT */ (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) /* glGetVertexAttribIivEXT */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) /* glGetVertexAttribIuivEXT */ (GLuint index, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) /* glBeginVideoCaptureNV */ (GLuint video_capture_slot);
typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) /* glBindVideoCaptureStreamBufferNV */ (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) /* glBindVideoCaptureStreamTextureNV */ (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) /* glEndVideoCaptureNV */ (GLuint video_capture_slot);
typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) /* glGetVideoCaptureivNV */ (GLuint video_capture_slot, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) /* glGetVideoCaptureStreamivNV */ (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) /* glGetVideoCaptureStreamfvNV */ (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) /* glGetVideoCaptureStreamdvNV */ (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble * params);
typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) /* glVideoCaptureNV */ (GLuint video_capture_slot, GLuint * sequence_num, GLuint64EXT * capture_time);
typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) /* glVideoCaptureStreamParameterivNV */ (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) /* glVideoCaptureStreamParameterfvNV */ (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) /* glVideoCaptureStreamParameterdvNV */ (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble * params);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1BOESPROC) /* glMultiTexCoord1bOES */ (GLenum texture, GLbyte s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1BVOESPROC) /* glMultiTexCoord1bvOES */ (GLenum texture, const GLbyte * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2BOESPROC) /* glMultiTexCoord2bOES */ (GLenum texture, GLbyte s, GLbyte t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2BVOESPROC) /* glMultiTexCoord2bvOES */ (GLenum texture, const GLbyte * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3BOESPROC) /* glMultiTexCoord3bOES */ (GLenum texture, GLbyte s, GLbyte t, GLbyte r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3BVOESPROC) /* glMultiTexCoord3bvOES */ (GLenum texture, const GLbyte * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4BOESPROC) /* glMultiTexCoord4bOES */ (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4BVOESPROC) /* glMultiTexCoord4bvOES */ (GLenum texture, const GLbyte * coords);
typedef void (APIENTRYP PFNGLTEXCOORD1BOESPROC) /* glTexCoord1bOES */ (GLbyte s);
typedef void (APIENTRYP PFNGLTEXCOORD1BVOESPROC) /* glTexCoord1bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLTEXCOORD2BOESPROC) /* glTexCoord2bOES */ (GLbyte s, GLbyte t);
typedef void (APIENTRYP PFNGLTEXCOORD2BVOESPROC) /* glTexCoord2bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLTEXCOORD3BOESPROC) /* glTexCoord3bOES */ (GLbyte s, GLbyte t, GLbyte r);
typedef void (APIENTRYP PFNGLTEXCOORD3BVOESPROC) /* glTexCoord3bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLTEXCOORD4BOESPROC) /* glTexCoord4bOES */ (GLbyte s, GLbyte t, GLbyte r, GLbyte q);
typedef void (APIENTRYP PFNGLTEXCOORD4BVOESPROC) /* glTexCoord4bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLVERTEX2BOESPROC) /* glVertex2bOES */ (GLbyte x, GLbyte y);
typedef void (APIENTRYP PFNGLVERTEX2BVOESPROC) /* glVertex2bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLVERTEX3BOESPROC) /* glVertex3bOES */ (GLbyte x, GLbyte y, GLbyte z);
typedef void (APIENTRYP PFNGLVERTEX3BVOESPROC) /* glVertex3bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLVERTEX4BOESPROC) /* glVertex4bOES */ (GLbyte x, GLbyte y, GLbyte z, GLbyte w);
typedef void (APIENTRYP PFNGLVERTEX4BVOESPROC) /* glVertex4bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLALPHAFUNCXOESPROC) /* glAlphaFuncxOES */ (GLenum func, GLfixed ref);
typedef void (APIENTRYP PFNGLCLEARCOLORXOESPROC) /* glClearColorxOES */ (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (APIENTRYP PFNGLCLEARDEPTHXOESPROC) /* glClearDepthxOES */ (GLfixed depth);
typedef void (APIENTRYP PFNGLCLIPPLANEXOESPROC) /* glClipPlanexOES */ (GLenum plane, const GLfixed * equation);
typedef void (APIENTRYP PFNGLCOLOR4XOESPROC) /* glColor4xOES */ (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (APIENTRYP PFNGLDEPTHRANGEXOESPROC) /* glDepthRangexOES */ (GLfixed n, GLfixed f);
typedef void (APIENTRYP PFNGLFOGXOESPROC) /* glFogxOES */ (GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLFOGXVOESPROC) /* glFogxvOES */ (GLenum pname, const GLfixed * param);
typedef void (APIENTRYP PFNGLFRUSTUMXOESPROC) /* glFrustumxOES */ (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (APIENTRYP PFNGLGETCLIPPLANEXOESPROC) /* glGetClipPlanexOES */ (GLenum plane, GLfixed * equation);
typedef void (APIENTRYP PFNGLGETFIXEDVOESPROC) /* glGetFixedvOES */ (GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLGETTEXENVXVOESPROC) /* glGetTexEnvxvOES */ (GLenum target, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) /* glGetTexParameterxvOES */ (GLenum target, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLLIGHTMODELXOESPROC) /* glLightModelxOES */ (GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLLIGHTMODELXVOESPROC) /* glLightModelxvOES */ (GLenum pname, const GLfixed * param);
typedef void (APIENTRYP PFNGLLIGHTXOESPROC) /* glLightxOES */ (GLenum light, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLLIGHTXVOESPROC) /* glLightxvOES */ (GLenum light, GLenum pname, const GLfixed * params);
typedef void (APIENTRYP PFNGLLINEWIDTHXOESPROC) /* glLineWidthxOES */ (GLfixed width);
typedef void (APIENTRYP PFNGLLOADMATRIXXOESPROC) /* glLoadMatrixxOES */ (const GLfixed * m);
typedef void (APIENTRYP PFNGLMATERIALXOESPROC) /* glMaterialxOES */ (GLenum face, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLMATERIALXVOESPROC) /* glMaterialxvOES */ (GLenum face, GLenum pname, const GLfixed * param);
typedef void (APIENTRYP PFNGLMULTMATRIXXOESPROC) /* glMultMatrixxOES */ (const GLfixed * m);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4XOESPROC) /* glMultiTexCoord4xOES */ (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (APIENTRYP PFNGLNORMAL3XOESPROC) /* glNormal3xOES */ (GLfixed nx, GLfixed ny, GLfixed nz);
typedef void (APIENTRYP PFNGLORTHOXOESPROC) /* glOrthoxOES */ (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (APIENTRYP PFNGLPOINTPARAMETERXVOESPROC) /* glPointParameterxvOES */ (GLenum pname, const GLfixed * params);
typedef void (APIENTRYP PFNGLPOINTSIZEXOESPROC) /* glPointSizexOES */ (GLfixed size);
typedef void (APIENTRYP PFNGLPOLYGONOFFSETXOESPROC) /* glPolygonOffsetxOES */ (GLfixed factor, GLfixed units);
typedef void (APIENTRYP PFNGLROTATEXOESPROC) /* glRotatexOES */ (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLSCALEXOESPROC) /* glScalexOES */ (GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLTEXENVXOESPROC) /* glTexEnvxOES */ (GLenum target, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLTEXENVXVOESPROC) /* glTexEnvxvOES */ (GLenum target, GLenum pname, const GLfixed * params);
typedef void (APIENTRYP PFNGLTEXPARAMETERXOESPROC) /* glTexParameterxOES */ (GLenum target, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLTEXPARAMETERXVOESPROC) /* glTexParameterxvOES */ (GLenum target, GLenum pname, const GLfixed * params);
typedef void (APIENTRYP PFNGLTRANSLATEXOESPROC) /* glTranslatexOES */ (GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLACCUMXOESPROC) /* glAccumxOES */ (GLenum op, GLfixed value);
typedef void (APIENTRYP PFNGLBITMAPXOESPROC) /* glBitmapxOES */ (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte * bitmap);
typedef void (APIENTRYP PFNGLBLENDCOLORXOESPROC) /* glBlendColorxOES */ (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (APIENTRYP PFNGLCLEARACCUMXOESPROC) /* glClearAccumxOES */ (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (APIENTRYP PFNGLCOLOR3XOESPROC) /* glColor3xOES */ (GLfixed red, GLfixed green, GLfixed blue);
typedef void (APIENTRYP PFNGLCOLOR3XVOESPROC) /* glColor3xvOES */ (const GLfixed * components);
typedef void (APIENTRYP PFNGLCOLOR4XVOESPROC) /* glColor4xvOES */ (const GLfixed * components);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXOESPROC) /* glConvolutionParameterxOES */ (GLenum target, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXVOESPROC) /* glConvolutionParameterxvOES */ (GLenum target, GLenum pname, const GLfixed * params);
typedef void (APIENTRYP PFNGLEVALCOORD1XOESPROC) /* glEvalCoord1xOES */ (GLfixed u);
typedef void (APIENTRYP PFNGLEVALCOORD1XVOESPROC) /* glEvalCoord1xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLEVALCOORD2XOESPROC) /* glEvalCoord2xOES */ (GLfixed u, GLfixed v);
typedef void (APIENTRYP PFNGLEVALCOORD2XVOESPROC) /* glEvalCoord2xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLFEEDBACKBUFFERXOESPROC) /* glFeedbackBufferxOES */ (GLsizei n, GLenum type, const GLfixed * buffer);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERXVOESPROC) /* glGetConvolutionParameterxvOES */ (GLenum target, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERXVOESPROC) /* glGetHistogramParameterxvOES */ (GLenum target, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLGETLIGHTXOESPROC) /* glGetLightxOES */ (GLenum light, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLGETMAPXVOESPROC) /* glGetMapxvOES */ (GLenum target, GLenum query, GLfixed * v);
typedef void (APIENTRYP PFNGLGETMATERIALXOESPROC) /* glGetMaterialxOES */ (GLenum face, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLGETPIXELMAPXVPROC) /* glGetPixelMapxv */ (GLenum map, GLint size, GLfixed * values);
typedef void (APIENTRYP PFNGLGETTEXGENXVOESPROC) /* glGetTexGenxvOES */ (GLenum coord, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERXVOESPROC) /* glGetTexLevelParameterxvOES */ (GLenum target, GLint level, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLINDEXXOESPROC) /* glIndexxOES */ (GLfixed component);
typedef void (APIENTRYP PFNGLINDEXXVOESPROC) /* glIndexxvOES */ (const GLfixed * component);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXXOESPROC) /* glLoadTransposeMatrixxOES */ (const GLfixed * m);
typedef void (APIENTRYP PFNGLMAP1XOESPROC) /* glMap1xOES */ (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
typedef void (APIENTRYP PFNGLMAP2XOESPROC) /* glMap2xOES */ (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
typedef void (APIENTRYP PFNGLMAPGRID1XOESPROC) /* glMapGrid1xOES */ (GLint n, GLfixed u1, GLfixed u2);
typedef void (APIENTRYP PFNGLMAPGRID2XOESPROC) /* glMapGrid2xOES */ (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXXOESPROC) /* glMultTransposeMatrixxOES */ (const GLfixed * m);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1XOESPROC) /* glMultiTexCoord1xOES */ (GLenum texture, GLfixed s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1XVOESPROC) /* glMultiTexCoord1xvOES */ (GLenum texture, const GLfixed * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2XOESPROC) /* glMultiTexCoord2xOES */ (GLenum texture, GLfixed s, GLfixed t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2XVOESPROC) /* glMultiTexCoord2xvOES */ (GLenum texture, const GLfixed * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3XOESPROC) /* glMultiTexCoord3xOES */ (GLenum texture, GLfixed s, GLfixed t, GLfixed r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3XVOESPROC) /* glMultiTexCoord3xvOES */ (GLenum texture, const GLfixed * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4XVOESPROC) /* glMultiTexCoord4xvOES */ (GLenum texture, const GLfixed * coords);
typedef void (APIENTRYP PFNGLNORMAL3XVOESPROC) /* glNormal3xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLPASSTHROUGHXOESPROC) /* glPassThroughxOES */ (GLfixed token);
typedef void (APIENTRYP PFNGLPIXELMAPXPROC) /* glPixelMapx */ (GLenum map, GLint size, const GLfixed * values);
typedef void (APIENTRYP PFNGLPIXELSTOREXPROC) /* glPixelStorex */ (GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLPIXELTRANSFERXOESPROC) /* glPixelTransferxOES */ (GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLPIXELZOOMXOESPROC) /* glPixelZoomxOES */ (GLfixed xfactor, GLfixed yfactor);
typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESXOESPROC) /* glPrioritizeTexturesxOES */ (GLsizei n, const GLuint * textures, const GLfixed * priorities);
typedef void (APIENTRYP PFNGLRASTERPOS2XOESPROC) /* glRasterPos2xOES */ (GLfixed x, GLfixed y);
typedef void (APIENTRYP PFNGLRASTERPOS2XVOESPROC) /* glRasterPos2xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLRASTERPOS3XOESPROC) /* glRasterPos3xOES */ (GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLRASTERPOS3XVOESPROC) /* glRasterPos3xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLRASTERPOS4XOESPROC) /* glRasterPos4xOES */ (GLfixed x, GLfixed y, GLfixed z, GLfixed w);
typedef void (APIENTRYP PFNGLRASTERPOS4XVOESPROC) /* glRasterPos4xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLRECTXOESPROC) /* glRectxOES */ (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
typedef void (APIENTRYP PFNGLRECTXVOESPROC) /* glRectxvOES */ (const GLfixed * v1, const GLfixed * v2);
typedef void (APIENTRYP PFNGLTEXCOORD1XOESPROC) /* glTexCoord1xOES */ (GLfixed s);
typedef void (APIENTRYP PFNGLTEXCOORD1XVOESPROC) /* glTexCoord1xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLTEXCOORD2XOESPROC) /* glTexCoord2xOES */ (GLfixed s, GLfixed t);
typedef void (APIENTRYP PFNGLTEXCOORD2XVOESPROC) /* glTexCoord2xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLTEXCOORD3XOESPROC) /* glTexCoord3xOES */ (GLfixed s, GLfixed t, GLfixed r);
typedef void (APIENTRYP PFNGLTEXCOORD3XVOESPROC) /* glTexCoord3xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLTEXCOORD4XOESPROC) /* glTexCoord4xOES */ (GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (APIENTRYP PFNGLTEXCOORD4XVOESPROC) /* glTexCoord4xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLTEXGENXOESPROC) /* glTexGenxOES */ (GLenum coord, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLTEXGENXVOESPROC) /* glTexGenxvOES */ (GLenum coord, GLenum pname, const GLfixed * params);
typedef void (APIENTRYP PFNGLVERTEX2XOESPROC) /* glVertex2xOES */ (GLfixed x);
typedef void (APIENTRYP PFNGLVERTEX2XVOESPROC) /* glVertex2xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLVERTEX3XOESPROC) /* glVertex3xOES */ (GLfixed x, GLfixed y);
typedef void (APIENTRYP PFNGLVERTEX3XVOESPROC) /* glVertex3xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLVERTEX4XOESPROC) /* glVertex4xOES */ (GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLVERTEX4XVOESPROC) /* glVertex4xvOES */ (const GLfixed * coords);
typedef GLbitfield (APIENTRYP PFNGLQUERYMATRIXXOESPROC) /* glQueryMatrixxOES */ (GLfixed * mantissa, GLint * exponent);
typedef void (APIENTRYP PFNGLCLEARDEPTHFOESPROC) /* glClearDepthfOES */ (GLclampf depth);
typedef void (APIENTRYP PFNGLCLIPPLANEFOESPROC) /* glClipPlanefOES */ (GLenum plane, const GLfloat * equation);
typedef void (APIENTRYP PFNGLDEPTHRANGEFOESPROC) /* glDepthRangefOES */ (GLclampf n, GLclampf f);
typedef void (APIENTRYP PFNGLFRUSTUMFOESPROC) /* glFrustumfOES */ (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (APIENTRYP PFNGLGETCLIPPLANEFOESPROC) /* glGetClipPlanefOES */ (GLenum plane, GLfloat * equation);
typedef void (APIENTRYP PFNGLORTHOFOESPROC) /* glOrthofOES */ (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) /* glFramebufferTextureMultiviewOVR */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
typedef void (APIENTRYP PFNGLHINTPGIPROC) /* glHintPGI */ (GLenum target, GLint mode);
typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) /* glDetailTexFuncSGIS */ (GLenum target, GLsizei n, const GLfloat * points);
typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) /* glGetDetailTexFuncSGIS */ (GLenum target, GLfloat * points);
typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) /* glFogFuncSGIS */ (GLsizei n, const GLfloat * points);
typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) /* glGetFogFuncSGIS */ (GLfloat * points);
typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) /* glSampleMaskSGIS */ (GLclampf value, GLboolean invert);
typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) /* glSamplePatternSGIS */ (GLenum pattern);
typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) /* glPixelTexGenParameteriSGIS */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) /* glPixelTexGenParameterivSGIS */ (GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) /* glPixelTexGenParameterfSGIS */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) /* glPixelTexGenParameterfvSGIS */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) /* glGetPixelTexGenParameterivSGIS */ (GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) /* glGetPixelTexGenParameterfvSGIS */ (GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) /* glPointParameterfSGIS */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) /* glPointParameterfvSGIS */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) /* glSharpenTexFuncSGIS */ (GLenum target, GLsizei n, const GLfloat * points);
typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) /* glGetSharpenTexFuncSGIS */ (GLenum target, GLfloat * points);
typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) /* glTexImage4DSGIS */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) /* glTexSubImage4DSGIS */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) /* glTextureColorMaskSGIS */ (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) /* glGetTexFilterFuncSGIS */ (GLenum target, GLenum filter, GLfloat * weights);
typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) /* glTexFilterFuncSGIS */ (GLenum target, GLenum filter, GLsizei n, const GLfloat * weights);
typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) /* glAsyncMarkerSGIX */ (GLuint marker);
typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) /* glFinishAsyncSGIX */ (GLuint * markerp);
typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) /* glPollAsyncSGIX */ (GLuint * markerp);
typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) /* glGenAsyncMarkersSGIX */ (GLsizei range);
typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) /* glDeleteAsyncMarkersSGIX */ (GLuint marker, GLsizei range);
typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) /* glIsAsyncMarkerSGIX */ (GLuint marker);
typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) /* glFlushRasterSGIX */ ();
typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) /* glFragmentColorMaterialSGIX */ (GLenum face, GLenum mode);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) /* glFragmentLightfSGIX */ (GLenum light, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) /* glFragmentLightfvSGIX */ (GLenum light, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) /* glFragmentLightiSGIX */ (GLenum light, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) /* glFragmentLightivSGIX */ (GLenum light, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) /* glFragmentLightModelfSGIX */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) /* glFragmentLightModelfvSGIX */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) /* glFragmentLightModeliSGIX */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) /* glFragmentLightModelivSGIX */ (GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) /* glFragmentMaterialfSGIX */ (GLenum face, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) /* glFragmentMaterialfvSGIX */ (GLenum face, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) /* glFragmentMaterialiSGIX */ (GLenum face, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) /* glFragmentMaterialivSGIX */ (GLenum face, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) /* glGetFragmentLightfvSGIX */ (GLenum light, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) /* glGetFragmentLightivSGIX */ (GLenum light, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) /* glGetFragmentMaterialfvSGIX */ (GLenum face, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) /* glGetFragmentMaterialivSGIX */ (GLenum face, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) /* glLightEnviSGIX */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) /* glFrameZoomSGIX */ (GLint factor);
typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) /* glIglooInterfaceSGIX */ (GLenum pname, const void * params);
typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) /* glGetInstrumentsSGIX */ ();
typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) /* glInstrumentsBufferSGIX */ (GLsizei size, GLint * buffer);
typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) /* glPollInstrumentsSGIX */ (GLint * marker_p);
typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) /* glReadInstrumentsSGIX */ (GLint marker);
typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) /* glStartInstrumentsSGIX */ ();
typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) /* glStopInstrumentsSGIX */ (GLint marker);
typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) /* glGetListParameterfvSGIX */ (GLuint list, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) /* glGetListParameterivSGIX */ (GLuint list, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) /* glListParameterfSGIX */ (GLuint list, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) /* glListParameterfvSGIX */ (GLuint list, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) /* glListParameteriSGIX */ (GLuint list, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) /* glListParameterivSGIX */ (GLuint list, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) /* glPixelTexGenSGIX */ (GLenum mode);
typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) /* glDeformationMap3dSGIX */ (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble * points);
typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) /* glDeformationMap3fSGIX */ (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat * points);
typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) /* glDeformSGIX */ (GLbitfield mask);
typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) /* glLoadIdentityDeformationMapSGIX */ (GLbitfield mask);
typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) /* glReferencePlaneSGIX */ (const GLdouble * equation);
typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) /* glSpriteParameterfSGIX */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) /* glSpriteParameterfvSGIX */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) /* glSpriteParameteriSGIX */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) /* glSpriteParameterivSGIX */ (GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) /* glTagSampleBufferSGIX */ ();
typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) /* glColorTableSGI */ (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) /* glColorTableParameterfvSGI */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) /* glColorTableParameterivSGI */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) /* glCopyColorTableSGI */ (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) /* glGetColorTableSGI */ (GLenum target, GLenum format, GLenum type, void * table);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) /* glGetColorTableParameterfvSGI */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) /* glGetColorTableParameterivSGI */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) /* glFinishTextureSUNX */ ();
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) /* glGlobalAlphaFactorbSUN */ (GLbyte factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) /* glGlobalAlphaFactorsSUN */ (GLshort factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) /* glGlobalAlphaFactoriSUN */ (GLint factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) /* glGlobalAlphaFactorfSUN */ (GLfloat factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) /* glGlobalAlphaFactordSUN */ (GLdouble factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) /* glGlobalAlphaFactorubSUN */ (GLubyte factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) /* glGlobalAlphaFactorusSUN */ (GLushort factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) /* glGlobalAlphaFactoruiSUN */ (GLuint factor);
typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) /* glDrawMeshArraysSUN */ (GLenum mode, GLint first, GLsizei count, GLsizei width);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) /* glReplacementCodeuiSUN */ (GLuint code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) /* glReplacementCodeusSUN */ (GLushort code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) /* glReplacementCodeubSUN */ (GLubyte code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) /* glReplacementCodeuivSUN */ (const GLuint * code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) /* glReplacementCodeusvSUN */ (const GLushort * code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) /* glReplacementCodeubvSUN */ (const GLubyte * code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) /* glReplacementCodePointerSUN */ (GLenum type, GLsizei stride, const void ** pointer);
typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) /* glColor4ubVertex2fSUN */ (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) /* glColor4ubVertex2fvSUN */ (const GLubyte * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) /* glColor4ubVertex3fSUN */ (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) /* glColor4ubVertex3fvSUN */ (const GLubyte * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) /* glColor3fVertex3fSUN */ (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) /* glColor3fVertex3fvSUN */ (const GLfloat * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) /* glNormal3fVertex3fSUN */ (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) /* glNormal3fVertex3fvSUN */ (const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) /* glColor4fNormal3fVertex3fSUN */ (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) /* glColor4fNormal3fVertex3fvSUN */ (const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) /* glTexCoord2fVertex3fSUN */ (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) /* glTexCoord2fVertex3fvSUN */ (const GLfloat * tc, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) /* glTexCoord4fVertex4fSUN */ (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) /* glTexCoord4fVertex4fvSUN */ (const GLfloat * tc, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) /* glTexCoord2fColor4ubVertex3fSUN */ (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) /* glTexCoord2fColor4ubVertex3fvSUN */ (const GLfloat * tc, const GLubyte * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) /* glTexCoord2fColor3fVertex3fSUN */ (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) /* glTexCoord2fColor3fVertex3fvSUN */ (const GLfloat * tc, const GLfloat * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) /* glTexCoord2fNormal3fVertex3fSUN */ (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) /* glTexCoord2fNormal3fVertex3fvSUN */ (const GLfloat * tc, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) /* glTexCoord2fColor4fNormal3fVertex3fSUN */ (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) /* glTexCoord2fColor4fNormal3fVertex3fvSUN */ (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) /* glTexCoord4fColor4fNormal3fVertex4fSUN */ (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) /* glTexCoord4fColor4fNormal3fVertex4fvSUN */ (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) /* glReplacementCodeuiVertex3fSUN */ (GLuint rc, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) /* glReplacementCodeuiVertex3fvSUN */ (const GLuint * rc, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) /* glReplacementCodeuiColor4ubVertex3fSUN */ (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) /* glReplacementCodeuiColor4ubVertex3fvSUN */ (const GLuint * rc, const GLubyte * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) /* glReplacementCodeuiColor3fVertex3fSUN */ (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) /* glReplacementCodeuiColor3fVertex3fvSUN */ (const GLuint * rc, const GLfloat * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) /* glReplacementCodeuiNormal3fVertex3fSUN */ (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) /* glReplacementCodeuiNormal3fVertex3fvSUN */ (const GLuint * rc, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) /* glReplacementCodeuiColor4fNormal3fVertex3fSUN */ (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) /* glReplacementCodeuiColor4fNormal3fVertex3fvSUN */ (const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) /* glReplacementCodeuiTexCoord2fVertex3fSUN */ (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) /* glReplacementCodeuiTexCoord2fVertex3fvSUN */ (const GLuint * rc, const GLfloat * tc, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) /* glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN */ (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) /* glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN */ (const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) /* glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN */ (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) /* glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN */ (const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace glew
{
  class gl
  {
  public:

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    enum FeatureSet
    {
      GLEW_GL_VERSION_1_0,
      GLEW_GL_VERSION_1_1,
      GLEW_GL_VERSION_1_2,
      GLEW_GL_VERSION_1_3,
      GLEW_GL_VERSION_1_4,
      GLEW_GL_VERSION_1_5,
      GLEW_GL_VERSION_2_0,
      GLEW_GL_VERSION_2_1,
      GLEW_GL_VERSION_3_0,
      GLEW_GL_VERSION_3_1,
      GLEW_GL_VERSION_3_2,
      GLEW_GL_VERSION_3_3,
      GLEW_GL_VERSION_4_0,
      GLEW_GL_VERSION_4_1,
      GLEW_GL_VERSION_4_2,
      GLEW_GL_VERSION_4_3,
      GLEW_GL_VERSION_4_4,
      GLEW_GL_VERSION_4_5,
      GLEW_GL_3DFX_multisample,
      GLEW_GL_3DFX_tbuffer,
      GLEW_GL_3DFX_texture_compression_FXT1,
      GLEW_GL_AMD_blend_minmax_factor,
      GLEW_GL_AMD_conservative_depth,
      GLEW_GL_AMD_debug_output,
      GLEW_GL_AMD_depth_clamp_separate,
      GLEW_GL_AMD_draw_buffers_blend,
      GLEW_GL_AMD_gcn_shader,
      GLEW_GL_AMD_gpu_shader_int64,
      GLEW_GL_AMD_interleaved_elements,
      GLEW_GL_AMD_multi_draw_indirect,
      GLEW_GL_AMD_name_gen_delete,
      GLEW_GL_AMD_occlusion_query_event,
      GLEW_GL_AMD_performance_monitor,
      GLEW_GL_AMD_pinned_memory,
      GLEW_GL_AMD_query_buffer_object,
      GLEW_GL_AMD_sample_positions,
      GLEW_GL_AMD_seamless_cubemap_per_texture,
      GLEW_GL_AMD_shader_atomic_counter_ops,
      GLEW_GL_AMD_shader_stencil_export,
      GLEW_GL_AMD_shader_trinary_minmax,
      GLEW_GL_AMD_sparse_texture,
      GLEW_GL_AMD_stencil_operation_extended,
      GLEW_GL_AMD_texture_texture4,
      GLEW_GL_AMD_transform_feedback3_lines_triangles,
      GLEW_GL_AMD_transform_feedback4,
      GLEW_GL_AMD_vertex_shader_layer,
      GLEW_GL_AMD_vertex_shader_tessellator,
      GLEW_GL_AMD_vertex_shader_viewport_index,
      GLEW_GL_APPLE_aux_depth_stencil,
      GLEW_GL_APPLE_client_storage,
      GLEW_GL_APPLE_element_array,
      GLEW_GL_APPLE_fence,
      GLEW_GL_APPLE_float_pixels,
      GLEW_GL_APPLE_flush_buffer_range,
      GLEW_GL_APPLE_object_purgeable,
      GLEW_GL_APPLE_rgb_422,
      GLEW_GL_APPLE_row_bytes,
      GLEW_GL_APPLE_specular_vector,
      GLEW_GL_APPLE_texture_range,
      GLEW_GL_APPLE_transform_hint,
      GLEW_GL_APPLE_vertex_array_object,
      GLEW_GL_APPLE_vertex_array_range,
      GLEW_GL_APPLE_vertex_program_evaluators,
      GLEW_GL_APPLE_ycbcr_422,
      GLEW_GL_ARB_ES2_compatibility,
      GLEW_GL_ARB_ES3_1_compatibility,
      GLEW_GL_ARB_ES3_compatibility,
      GLEW_GL_ARB_arrays_of_arrays,
      GLEW_GL_ARB_base_instance,
      GLEW_GL_ARB_bindless_texture,
      GLEW_GL_ARB_blend_func_extended,
      GLEW_GL_ARB_buffer_storage,
      GLEW_GL_ARB_cl_event,
      GLEW_GL_ARB_clear_buffer_object,
      GLEW_GL_ARB_clear_texture,
      GLEW_GL_ARB_clip_control,
      GLEW_GL_ARB_color_buffer_float,
      GLEW_GL_ARB_compatibility,
      GLEW_GL_ARB_compressed_texture_pixel_storage,
      GLEW_GL_ARB_compute_shader,
      GLEW_GL_ARB_compute_variable_group_size,
      GLEW_GL_ARB_conditional_render_inverted,
      GLEW_GL_ARB_conservative_depth,
      GLEW_GL_ARB_copy_buffer,
      GLEW_GL_ARB_copy_image,
      GLEW_GL_ARB_cull_distance,
      GLEW_GL_ARB_debug_output,
      GLEW_GL_ARB_depth_buffer_float,
      GLEW_GL_ARB_depth_clamp,
      GLEW_GL_ARB_depth_texture,
      GLEW_GL_ARB_derivative_control,
      GLEW_GL_ARB_direct_state_access,
      GLEW_GL_ARB_draw_buffers,
      GLEW_GL_ARB_draw_buffers_blend,
      GLEW_GL_ARB_draw_elements_base_vertex,
      GLEW_GL_ARB_draw_indirect,
      GLEW_GL_ARB_draw_instanced,
      GLEW_GL_ARB_enhanced_layouts,
      GLEW_GL_ARB_explicit_attrib_location,
      GLEW_GL_ARB_explicit_uniform_location,
      GLEW_GL_ARB_fragment_coord_conventions,
      GLEW_GL_ARB_fragment_layer_viewport,
      GLEW_GL_ARB_fragment_program,
      GLEW_GL_ARB_fragment_program_shadow,
      GLEW_GL_ARB_fragment_shader,
      GLEW_GL_ARB_framebuffer_no_attachments,
      GLEW_GL_ARB_framebuffer_object,
      GLEW_GL_ARB_framebuffer_sRGB,
      GLEW_GL_ARB_geometry_shader4,
      GLEW_GL_ARB_get_program_binary,
      GLEW_GL_ARB_get_texture_sub_image,
      GLEW_GL_ARB_gpu_shader5,
      GLEW_GL_ARB_gpu_shader_fp64,
      GLEW_GL_ARB_half_float_pixel,
      GLEW_GL_ARB_half_float_vertex,
      GLEW_GL_ARB_imaging,
      GLEW_GL_ARB_indirect_parameters,
      GLEW_GL_ARB_instanced_arrays,
      GLEW_GL_ARB_internalformat_query,
      GLEW_GL_ARB_internalformat_query2,
      GLEW_GL_ARB_invalidate_subdata,
      GLEW_GL_ARB_map_buffer_alignment,
      GLEW_GL_ARB_map_buffer_range,
      GLEW_GL_ARB_matrix_palette,
      GLEW_GL_ARB_multi_bind,
      GLEW_GL_ARB_multi_draw_indirect,
      GLEW_GL_ARB_multisample,
      GLEW_GL_ARB_multitexture,
      GLEW_GL_ARB_occlusion_query,
      GLEW_GL_ARB_occlusion_query2,
      GLEW_GL_ARB_pipeline_statistics_query,
      GLEW_GL_ARB_pixel_buffer_object,
      GLEW_GL_ARB_point_parameters,
      GLEW_GL_ARB_point_sprite,
      GLEW_GL_ARB_program_interface_query,
      GLEW_GL_ARB_provoking_vertex,
      GLEW_GL_ARB_query_buffer_object,
      GLEW_GL_ARB_robust_buffer_access_behavior,
      GLEW_GL_ARB_robustness,
      GLEW_GL_ARB_robustness_isolation,
      GLEW_GL_ARB_sample_shading,
      GLEW_GL_ARB_sampler_objects,
      GLEW_GL_ARB_seamless_cube_map,
      GLEW_GL_ARB_seamless_cubemap_per_texture,
      GLEW_GL_ARB_separate_shader_objects,
      GLEW_GL_ARB_shader_atomic_counters,
      GLEW_GL_ARB_shader_bit_encoding,
      GLEW_GL_ARB_shader_draw_parameters,
      GLEW_GL_ARB_shader_group_vote,
      GLEW_GL_ARB_shader_image_load_store,
      GLEW_GL_ARB_shader_image_size,
      GLEW_GL_ARB_shader_objects,
      GLEW_GL_ARB_shader_precision,
      GLEW_GL_ARB_shader_stencil_export,
      GLEW_GL_ARB_shader_storage_buffer_object,
      GLEW_GL_ARB_shader_subroutine,
      GLEW_GL_ARB_shader_texture_image_samples,
      GLEW_GL_ARB_shader_texture_lod,
      GLEW_GL_ARB_shading_language_100,
      GLEW_GL_ARB_shading_language_420pack,
      GLEW_GL_ARB_shading_language_include,
      GLEW_GL_ARB_shading_language_packing,
      GLEW_GL_ARB_shadow,
      GLEW_GL_ARB_shadow_ambient,
      GLEW_GL_ARB_sparse_buffer,
      GLEW_GL_ARB_sparse_texture,
      GLEW_GL_ARB_stencil_texturing,
      GLEW_GL_ARB_sync,
      GLEW_GL_ARB_tessellation_shader,
      GLEW_GL_ARB_texture_barrier,
      GLEW_GL_ARB_texture_border_clamp,
      GLEW_GL_ARB_texture_buffer_object,
      GLEW_GL_ARB_texture_buffer_object_rgb32,
      GLEW_GL_ARB_texture_buffer_range,
      GLEW_GL_ARB_texture_compression,
      GLEW_GL_ARB_texture_compression_bptc,
      GLEW_GL_ARB_texture_compression_rgtc,
      GLEW_GL_ARB_texture_cube_map,
      GLEW_GL_ARB_texture_cube_map_array,
      GLEW_GL_ARB_texture_env_add,
      GLEW_GL_ARB_texture_env_combine,
      GLEW_GL_ARB_texture_env_crossbar,
      GLEW_GL_ARB_texture_env_dot3,
      GLEW_GL_ARB_texture_float,
      GLEW_GL_ARB_texture_gather,
      GLEW_GL_ARB_texture_mirror_clamp_to_edge,
      GLEW_GL_ARB_texture_mirrored_repeat,
      GLEW_GL_ARB_texture_multisample,
      GLEW_GL_ARB_texture_non_power_of_two,
      GLEW_GL_ARB_texture_query_levels,
      GLEW_GL_ARB_texture_query_lod,
      GLEW_GL_ARB_texture_rectangle,
      GLEW_GL_ARB_texture_rg,
      GLEW_GL_ARB_texture_rgb10_a2ui,
      GLEW_GL_ARB_texture_stencil8,
      GLEW_GL_ARB_texture_storage,
      GLEW_GL_ARB_texture_storage_multisample,
      GLEW_GL_ARB_texture_swizzle,
      GLEW_GL_ARB_texture_view,
      GLEW_GL_ARB_timer_query,
      GLEW_GL_ARB_transform_feedback2,
      GLEW_GL_ARB_transform_feedback3,
      GLEW_GL_ARB_transform_feedback_instanced,
      GLEW_GL_ARB_transform_feedback_overflow_query,
      GLEW_GL_ARB_transpose_matrix,
      GLEW_GL_ARB_uniform_buffer_object,
      GLEW_GL_ARB_vertex_array_bgra,
      GLEW_GL_ARB_vertex_array_object,
      GLEW_GL_ARB_vertex_attrib_64bit,
      GLEW_GL_ARB_vertex_attrib_binding,
      GLEW_GL_ARB_vertex_blend,
      GLEW_GL_ARB_vertex_buffer_object,
      GLEW_GL_ARB_vertex_program,
      GLEW_GL_ARB_vertex_shader,
      GLEW_GL_ARB_vertex_type_10f_11f_11f_rev,
      GLEW_GL_ARB_vertex_type_2_10_10_10_rev,
      GLEW_GL_ARB_viewport_array,
      GLEW_GL_ARB_window_pos,
      GLEW_GL_ATI_draw_buffers,
      GLEW_GL_ATI_element_array,
      GLEW_GL_ATI_envmap_bumpmap,
      GLEW_GL_ATI_fragment_shader,
      GLEW_GL_ATI_map_object_buffer,
      GLEW_GL_ATI_meminfo,
      GLEW_GL_ATI_pixel_format_float,
      GLEW_GL_ATI_pn_triangles,
      GLEW_GL_ATI_separate_stencil,
      GLEW_GL_ATI_text_fragment_shader,
      GLEW_GL_ATI_texture_env_combine3,
      GLEW_GL_ATI_texture_float,
      GLEW_GL_ATI_texture_mirror_once,
      GLEW_GL_ATI_vertex_array_object,
      GLEW_GL_ATI_vertex_attrib_array_object,
      GLEW_GL_ATI_vertex_streams,
      GLEW_GL_EXT_422_pixels,
      GLEW_GL_EXT_abgr,
      GLEW_GL_EXT_bgra,
      GLEW_GL_EXT_bindable_uniform,
      GLEW_GL_EXT_blend_color,
      GLEW_GL_EXT_blend_equation_separate,
      GLEW_GL_EXT_blend_func_separate,
      GLEW_GL_EXT_blend_logic_op,
      GLEW_GL_EXT_blend_minmax,
      GLEW_GL_EXT_blend_subtract,
      GLEW_GL_EXT_clip_volume_hint,
      GLEW_GL_EXT_cmyka,
      GLEW_GL_EXT_color_subtable,
      GLEW_GL_EXT_compiled_vertex_array,
      GLEW_GL_EXT_convolution,
      GLEW_GL_EXT_coordinate_frame,
      GLEW_GL_EXT_copy_texture,
      GLEW_GL_EXT_cull_vertex,
      GLEW_GL_EXT_debug_label,
      GLEW_GL_EXT_debug_marker,
      GLEW_GL_EXT_depth_bounds_test,
      GLEW_GL_EXT_direct_state_access,
      GLEW_GL_EXT_draw_buffers2,
      GLEW_GL_EXT_draw_instanced,
      GLEW_GL_EXT_draw_range_elements,
      GLEW_GL_EXT_fog_coord,
      GLEW_GL_EXT_framebuffer_blit,
      GLEW_GL_EXT_framebuffer_multisample,
      GLEW_GL_EXT_framebuffer_multisample_blit_scaled,
      GLEW_GL_EXT_framebuffer_object,
      GLEW_GL_EXT_framebuffer_sRGB,
      GLEW_GL_EXT_geometry_shader4,
      GLEW_GL_EXT_gpu_program_parameters,
      GLEW_GL_EXT_gpu_shader4,
      GLEW_GL_EXT_histogram,
      GLEW_GL_EXT_index_array_formats,
      GLEW_GL_EXT_index_func,
      GLEW_GL_EXT_index_material,
      GLEW_GL_EXT_index_texture,
      GLEW_GL_EXT_light_texture,
      GLEW_GL_EXT_misc_attribute,
      GLEW_GL_EXT_multi_draw_arrays,
      GLEW_GL_EXT_multisample,
      GLEW_GL_EXT_packed_depth_stencil,
      GLEW_GL_EXT_packed_float,
      GLEW_GL_EXT_packed_pixels,
      GLEW_GL_EXT_paletted_texture,
      GLEW_GL_EXT_pixel_buffer_object,
      GLEW_GL_EXT_pixel_transform,
      GLEW_GL_EXT_pixel_transform_color_table,
      GLEW_GL_EXT_point_parameters,
      GLEW_GL_EXT_polygon_offset,
      GLEW_GL_EXT_polygon_offset_clamp,
      GLEW_GL_EXT_post_depth_coverage,
      GLEW_GL_EXT_provoking_vertex,
      GLEW_GL_EXT_raster_multisample,
      GLEW_GL_EXT_rescale_normal,
      GLEW_GL_EXT_secondary_color,
      GLEW_GL_EXT_separate_shader_objects,
      GLEW_GL_EXT_separate_specular_color,
      GLEW_GL_EXT_shader_image_load_formatted,
      GLEW_GL_EXT_shader_image_load_store,
      GLEW_GL_EXT_shader_integer_mix,
      GLEW_GL_EXT_shadow_funcs,
      GLEW_GL_EXT_shared_texture_palette,
      GLEW_GL_EXT_sparse_texture2,
      GLEW_GL_EXT_stencil_clear_tag,
      GLEW_GL_EXT_stencil_two_side,
      GLEW_GL_EXT_stencil_wrap,
      GLEW_GL_EXT_subtexture,
      GLEW_GL_EXT_texture,
      GLEW_GL_EXT_texture3D,
      GLEW_GL_EXT_texture_array,
      GLEW_GL_EXT_texture_buffer_object,
      GLEW_GL_EXT_texture_compression_latc,
      GLEW_GL_EXT_texture_compression_rgtc,
      GLEW_GL_EXT_texture_compression_s3tc,
      GLEW_GL_EXT_texture_cube_map,
      GLEW_GL_EXT_texture_env_add,
      GLEW_GL_EXT_texture_env_combine,
      GLEW_GL_EXT_texture_env_dot3,
      GLEW_GL_EXT_texture_filter_anisotropic,
      GLEW_GL_EXT_texture_filter_minmax,
      GLEW_GL_EXT_texture_integer,
      GLEW_GL_EXT_texture_lod_bias,
      GLEW_GL_EXT_texture_mirror_clamp,
      GLEW_GL_EXT_texture_object,
      GLEW_GL_EXT_texture_perturb_normal,
      GLEW_GL_EXT_texture_sRGB,
      GLEW_GL_EXT_texture_sRGB_decode,
      GLEW_GL_EXT_texture_shared_exponent,
      GLEW_GL_EXT_texture_snorm,
      GLEW_GL_EXT_texture_swizzle,
      GLEW_GL_EXT_timer_query,
      GLEW_GL_EXT_transform_feedback,
      GLEW_GL_EXT_vertex_array,
      GLEW_GL_EXT_vertex_array_bgra,
      GLEW_GL_EXT_vertex_attrib_64bit,
      GLEW_GL_EXT_vertex_shader,
      GLEW_GL_EXT_vertex_weighting,
      GLEW_GL_EXT_x11_sync_object,
      GLEW_GL_GREMEDY_frame_terminator,
      GLEW_GL_GREMEDY_string_marker,
      GLEW_GL_HP_convolution_border_modes,
      GLEW_GL_HP_image_transform,
      GLEW_GL_HP_occlusion_test,
      GLEW_GL_HP_texture_lighting,
      GLEW_GL_IBM_cull_vertex,
      GLEW_GL_IBM_multimode_draw_arrays,
      GLEW_GL_IBM_rasterpos_clip,
      GLEW_GL_IBM_static_data,
      GLEW_GL_IBM_texture_mirrored_repeat,
      GLEW_GL_IBM_vertex_array_lists,
      GLEW_GL_INGR_blend_func_separate,
      GLEW_GL_INGR_color_clamp,
      GLEW_GL_INGR_interlace_read,
      GLEW_GL_INTEL_fragment_shader_ordering,
      GLEW_GL_INTEL_map_texture,
      GLEW_GL_INTEL_parallel_arrays,
      GLEW_GL_INTEL_performance_query,
      GLEW_GL_KHR_blend_equation_advanced,
      GLEW_GL_KHR_blend_equation_advanced_coherent,
      GLEW_GL_KHR_context_flush_control,
      GLEW_GL_KHR_debug,
      GLEW_GL_KHR_no_error,
      GLEW_GL_KHR_robust_buffer_access_behavior,
      GLEW_GL_KHR_robustness,
      GLEW_GL_KHR_texture_compression_astc_hdr,
      GLEW_GL_KHR_texture_compression_astc_ldr,
      GLEW_GL_MESAX_texture_stack,
      GLEW_GL_MESA_pack_invert,
      GLEW_GL_MESA_resize_buffers,
      GLEW_GL_MESA_window_pos,
      GLEW_GL_MESA_ycbcr_texture,
      GLEW_GL_NVX_conditional_render,
      GLEW_GL_NVX_gpu_memory_info,
      GLEW_GL_NV_bindless_multi_draw_indirect,
      GLEW_GL_NV_bindless_multi_draw_indirect_count,
      GLEW_GL_NV_bindless_texture,
      GLEW_GL_NV_blend_equation_advanced,
      GLEW_GL_NV_blend_equation_advanced_coherent,
      GLEW_GL_NV_blend_square,
      GLEW_GL_NV_command_list,
      GLEW_GL_NV_compute_program5,
      GLEW_GL_NV_conditional_render,
      GLEW_GL_NV_conservative_raster,
      GLEW_GL_NV_copy_depth_to_color,
      GLEW_GL_NV_copy_image,
      GLEW_GL_NV_deep_texture3D,
      GLEW_GL_NV_depth_buffer_float,
      GLEW_GL_NV_depth_clamp,
      GLEW_GL_NV_draw_texture,
      GLEW_GL_NV_evaluators,
      GLEW_GL_NV_explicit_multisample,
      GLEW_GL_NV_fence,
      GLEW_GL_NV_fill_rectangle,
      GLEW_GL_NV_float_buffer,
      GLEW_GL_NV_fog_distance,
      GLEW_GL_NV_fragment_coverage_to_color,
      GLEW_GL_NV_fragment_program,
      GLEW_GL_NV_fragment_program2,
      GLEW_GL_NV_fragment_program4,
      GLEW_GL_NV_fragment_program_option,
      GLEW_GL_NV_fragment_shader_interlock,
      GLEW_GL_NV_framebuffer_mixed_samples,
      GLEW_GL_NV_framebuffer_multisample_coverage,
      GLEW_GL_NV_geometry_program4,
      GLEW_GL_NV_geometry_shader4,
      GLEW_GL_NV_geometry_shader_passthrough,
      GLEW_GL_NV_gpu_program4,
      GLEW_GL_NV_gpu_program5,
      GLEW_GL_NV_gpu_program5_mem_extended,
      GLEW_GL_NV_gpu_shader5,
      GLEW_GL_NV_half_float,
      GLEW_GL_NV_internalformat_sample_query,
      GLEW_GL_NV_light_max_exponent,
      GLEW_GL_NV_multisample_coverage,
      GLEW_GL_NV_multisample_filter_hint,
      GLEW_GL_NV_occlusion_query,
      GLEW_GL_NV_packed_depth_stencil,
      GLEW_GL_NV_parameter_buffer_object,
      GLEW_GL_NV_parameter_buffer_object2,
      GLEW_GL_NV_path_rendering,
      GLEW_GL_NV_pixel_data_range,
      GLEW_GL_NV_point_sprite,
      GLEW_GL_NV_present_video,
      GLEW_GL_NV_primitive_restart,
      GLEW_GL_NV_register_combiners,
      GLEW_GL_NV_path_rendering_shared_edge,
      GLEW_GL_NV_register_combiners2,
      GLEW_GL_NV_sample_locations,
      GLEW_GL_NV_sample_mask_override_coverage,
      GLEW_GL_NV_shader_atomic_counters,
      GLEW_GL_NV_shader_atomic_float,
      GLEW_GL_NV_shader_atomic_fp16_vector,
      GLEW_GL_NV_shader_atomic_int64,
      GLEW_GL_NV_shader_buffer_load,
      GLEW_GL_NV_shader_buffer_store,
      GLEW_GL_NV_shader_storage_buffer_object,
      GLEW_GL_NV_shader_thread_group,
      GLEW_GL_NV_shader_thread_shuffle,
      GLEW_GL_NV_tessellation_program5,
      GLEW_GL_NV_texgen_emboss,
      GLEW_GL_NV_texgen_reflection,
      GLEW_GL_NV_texture_barrier,
      GLEW_GL_NV_texture_compression_vtc,
      GLEW_GL_NV_texture_env_combine4,
      GLEW_GL_NV_texture_expand_normal,
      GLEW_GL_NV_texture_multisample,
      GLEW_GL_NV_texture_rectangle,
      GLEW_GL_NV_texture_shader,
      GLEW_GL_NV_texture_shader2,
      GLEW_GL_NV_texture_shader3,
      GLEW_GL_NV_transform_feedback,
      GLEW_GL_NV_transform_feedback2,
      GLEW_GL_NV_uniform_buffer_unified_memory,
      GLEW_GL_NV_vdpau_interop,
      GLEW_GL_NV_vertex_array_range,
      GLEW_GL_NV_vertex_array_range2,
      GLEW_GL_NV_vertex_attrib_integer_64bit,
      GLEW_GL_NV_vertex_buffer_unified_memory,
      GLEW_GL_NV_vertex_program,
      GLEW_GL_NV_vertex_program1_1,
      GLEW_GL_NV_vertex_program2,
      GLEW_GL_NV_vertex_program2_option,
      GLEW_GL_NV_vertex_program3,
      GLEW_GL_NV_vertex_program4,
      GLEW_GL_NV_video_capture,
      GLEW_GL_NV_viewport_array2,
      GLEW_GL_OES_byte_coordinates,
      GLEW_GL_OES_compressed_paletted_texture,
      GLEW_GL_OES_fixed_point,
      GLEW_GL_OES_query_matrix,
      GLEW_GL_OES_read_format,
      GLEW_GL_OES_single_precision,
      GLEW_GL_OML_interlace,
      GLEW_GL_OML_resample,
      GLEW_GL_OML_subsample,
      GLEW_GL_OVR_multiview,
      GLEW_GL_OVR_multiview2,
      GLEW_GL_PGI_misc_hints,
      GLEW_GL_PGI_vertex_hints,
      GLEW_GL_REND_screen_coordinates,
      GLEW_GL_S3_s3tc,
      GLEW_GL_SGIS_detail_texture,
      GLEW_GL_SGIS_fog_function,
      GLEW_GL_SGIS_generate_mipmap,
      GLEW_GL_SGIS_multisample,
      GLEW_GL_SGIS_pixel_texture,
      GLEW_GL_SGIS_point_line_texgen,
      GLEW_GL_SGIS_point_parameters,
      GLEW_GL_SGIS_sharpen_texture,
      GLEW_GL_SGIS_texture4D,
      GLEW_GL_SGIS_texture_border_clamp,
      GLEW_GL_SGIS_texture_color_mask,
      GLEW_GL_SGIS_texture_edge_clamp,
      GLEW_GL_SGIS_texture_filter4,
      GLEW_GL_SGIS_texture_lod,
      GLEW_GL_SGIS_texture_select,
      GLEW_GL_SGIX_async,
      GLEW_GL_SGIX_async_histogram,
      GLEW_GL_SGIX_async_pixel,
      GLEW_GL_SGIX_blend_alpha_minmax,
      GLEW_GL_SGIX_calligraphic_fragment,
      GLEW_GL_SGIX_clipmap,
      GLEW_GL_SGIX_convolution_accuracy,
      GLEW_GL_SGIX_depth_pass_instrument,
      GLEW_GL_SGIX_depth_texture,
      GLEW_GL_SGIX_flush_raster,
      GLEW_GL_SGIX_fog_offset,
      GLEW_GL_SGIX_fragment_lighting,
      GLEW_GL_SGIX_framezoom,
      GLEW_GL_SGIX_igloo_interface,
      GLEW_GL_SGIX_instruments,
      GLEW_GL_SGIX_interlace,
      GLEW_GL_SGIX_ir_instrument1,
      GLEW_GL_SGIX_list_priority,
      GLEW_GL_SGIX_pixel_texture,
      GLEW_GL_SGIX_pixel_tiles,
      GLEW_GL_SGIX_polynomial_ffd,
      GLEW_GL_SGIX_reference_plane,
      GLEW_GL_SGIX_resample,
      GLEW_GL_SGIX_scalebias_hint,
      GLEW_GL_SGIX_shadow,
      GLEW_GL_SGIX_shadow_ambient,
      GLEW_GL_SGIX_sprite,
      GLEW_GL_SGIX_subsample,
      GLEW_GL_SGIX_tag_sample_buffer,
      GLEW_GL_SGIX_texture_add_env,
      GLEW_GL_SGIX_texture_coordinate_clamp,
      GLEW_GL_SGIX_texture_lod_bias,
      GLEW_GL_SGIX_texture_multi_buffer,
      GLEW_GL_SGIX_texture_scale_bias,
      GLEW_GL_SGIX_vertex_preclip,
      GLEW_GL_SGIX_ycrcb,
      GLEW_GL_SGIX_ycrcb_subsample,
      GLEW_GL_SGIX_ycrcba,
      GLEW_GL_SGI_color_matrix,
      GLEW_GL_SGI_color_table,
      GLEW_GL_SGI_texture_color_table,
      GLEW_GL_SUNX_constant_data,
      GLEW_GL_SUN_convolution_border_modes,
      GLEW_GL_SUN_global_alpha,
      GLEW_GL_SUN_mesh_array,
      GLEW_GL_SUN_slice_accum,
      GLEW_GL_SUN_triangle_list,
      GLEW_GL_SUN_vertex,
      GLEW_GL_WIN_phong_shading,
      GLEW_GL_WIN_specular_fog,
      GLEW_GL_FeatureSetCount
    };

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    class DeviceConfig
    {
    public:

      bool m_featureSupported [glew::gl::FeatureSet::GLEW_GL_FeatureSetCount];

      PFNGLDRAWARRAYSPROC m_glDrawArrays;
      PFNGLDRAWELEMENTSPROC m_glDrawElements;
      PFNGLGETPOINTERVPROC m_glGetPointerv;
      PFNGLPOLYGONOFFSETPROC m_glPolygonOffset;
      PFNGLCOPYTEXIMAGE1DPROC m_glCopyTexImage1D;
      PFNGLCOPYTEXIMAGE2DPROC m_glCopyTexImage2D;
      PFNGLCOPYTEXSUBIMAGE1DPROC m_glCopyTexSubImage1D;
      PFNGLCOPYTEXSUBIMAGE2DPROC m_glCopyTexSubImage2D;
      PFNGLTEXSUBIMAGE1DPROC m_glTexSubImage1D;
      PFNGLTEXSUBIMAGE2DPROC m_glTexSubImage2D;
      PFNGLBINDTEXTUREPROC m_glBindTexture;
      PFNGLDELETETEXTURESPROC m_glDeleteTextures;
      PFNGLGENTEXTURESPROC m_glGenTextures;
      PFNGLISTEXTUREPROC m_glIsTexture;
      PFNGLARRAYELEMENTPROC m_glArrayElement;
      PFNGLCOLORPOINTERPROC m_glColorPointer;
      PFNGLDISABLECLIENTSTATEPROC m_glDisableClientState;
      PFNGLEDGEFLAGPOINTERPROC m_glEdgeFlagPointer;
      PFNGLENABLECLIENTSTATEPROC m_glEnableClientState;
      PFNGLINDEXPOINTERPROC m_glIndexPointer;
      PFNGLINTERLEAVEDARRAYSPROC m_glInterleavedArrays;
      PFNGLNORMALPOINTERPROC m_glNormalPointer;
      PFNGLTEXCOORDPOINTERPROC m_glTexCoordPointer;
      PFNGLVERTEXPOINTERPROC m_glVertexPointer;
      PFNGLARETEXTURESRESIDENTPROC m_glAreTexturesResident;
      PFNGLPRIORITIZETEXTURESPROC m_glPrioritizeTextures;
      PFNGLINDEXUBPROC m_glIndexub;
      PFNGLINDEXUBVPROC m_glIndexubv;
      PFNGLPOPCLIENTATTRIBPROC m_glPopClientAttrib;
      PFNGLPUSHCLIENTATTRIBPROC m_glPushClientAttrib;
      PFNGLDRAWRANGEELEMENTSPROC m_glDrawRangeElements;
      PFNGLTEXIMAGE3DPROC m_glTexImage3D;
      PFNGLTEXSUBIMAGE3DPROC m_glTexSubImage3D;
      PFNGLCOPYTEXSUBIMAGE3DPROC m_glCopyTexSubImage3D;
      PFNGLACTIVETEXTUREPROC m_glActiveTexture;
      PFNGLSAMPLECOVERAGEPROC m_glSampleCoverage;
      PFNGLCOMPRESSEDTEXIMAGE3DPROC m_glCompressedTexImage3D;
      PFNGLCOMPRESSEDTEXIMAGE2DPROC m_glCompressedTexImage2D;
      PFNGLCOMPRESSEDTEXIMAGE1DPROC m_glCompressedTexImage1D;
      PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC m_glCompressedTexSubImage3D;
      PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC m_glCompressedTexSubImage2D;
      PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC m_glCompressedTexSubImage1D;
      PFNGLGETCOMPRESSEDTEXIMAGEPROC m_glGetCompressedTexImage;
      PFNGLCLIENTACTIVETEXTUREPROC m_glClientActiveTexture;
      PFNGLMULTITEXCOORD1DPROC m_glMultiTexCoord1d;
      PFNGLMULTITEXCOORD1DVPROC m_glMultiTexCoord1dv;
      PFNGLMULTITEXCOORD1FPROC m_glMultiTexCoord1f;
      PFNGLMULTITEXCOORD1FVPROC m_glMultiTexCoord1fv;
      PFNGLMULTITEXCOORD1IPROC m_glMultiTexCoord1i;
      PFNGLMULTITEXCOORD1IVPROC m_glMultiTexCoord1iv;
      PFNGLMULTITEXCOORD1SPROC m_glMultiTexCoord1s;
      PFNGLMULTITEXCOORD1SVPROC m_glMultiTexCoord1sv;
      PFNGLMULTITEXCOORD2DPROC m_glMultiTexCoord2d;
      PFNGLMULTITEXCOORD2DVPROC m_glMultiTexCoord2dv;
      PFNGLMULTITEXCOORD2FPROC m_glMultiTexCoord2f;
      PFNGLMULTITEXCOORD2FVPROC m_glMultiTexCoord2fv;
      PFNGLMULTITEXCOORD2IPROC m_glMultiTexCoord2i;
      PFNGLMULTITEXCOORD2IVPROC m_glMultiTexCoord2iv;
      PFNGLMULTITEXCOORD2SPROC m_glMultiTexCoord2s;
      PFNGLMULTITEXCOORD2SVPROC m_glMultiTexCoord2sv;
      PFNGLMULTITEXCOORD3DPROC m_glMultiTexCoord3d;
      PFNGLMULTITEXCOORD3DVPROC m_glMultiTexCoord3dv;
      PFNGLMULTITEXCOORD3FPROC m_glMultiTexCoord3f;
      PFNGLMULTITEXCOORD3FVPROC m_glMultiTexCoord3fv;
      PFNGLMULTITEXCOORD3IPROC m_glMultiTexCoord3i;
      PFNGLMULTITEXCOORD3IVPROC m_glMultiTexCoord3iv;
      PFNGLMULTITEXCOORD3SPROC m_glMultiTexCoord3s;
      PFNGLMULTITEXCOORD3SVPROC m_glMultiTexCoord3sv;
      PFNGLMULTITEXCOORD4DPROC m_glMultiTexCoord4d;
      PFNGLMULTITEXCOORD4DVPROC m_glMultiTexCoord4dv;
      PFNGLMULTITEXCOORD4FPROC m_glMultiTexCoord4f;
      PFNGLMULTITEXCOORD4FVPROC m_glMultiTexCoord4fv;
      PFNGLMULTITEXCOORD4IPROC m_glMultiTexCoord4i;
      PFNGLMULTITEXCOORD4IVPROC m_glMultiTexCoord4iv;
      PFNGLMULTITEXCOORD4SPROC m_glMultiTexCoord4s;
      PFNGLMULTITEXCOORD4SVPROC m_glMultiTexCoord4sv;
      PFNGLLOADTRANSPOSEMATRIXFPROC m_glLoadTransposeMatrixf;
      PFNGLLOADTRANSPOSEMATRIXDPROC m_glLoadTransposeMatrixd;
      PFNGLMULTTRANSPOSEMATRIXFPROC m_glMultTransposeMatrixf;
      PFNGLMULTTRANSPOSEMATRIXDPROC m_glMultTransposeMatrixd;
      PFNGLBLENDFUNCSEPARATEPROC m_glBlendFuncSeparate;
      PFNGLMULTIDRAWARRAYSPROC m_glMultiDrawArrays;
      PFNGLMULTIDRAWELEMENTSPROC m_glMultiDrawElements;
      PFNGLPOINTPARAMETERFPROC m_glPointParameterf;
      PFNGLPOINTPARAMETERFVPROC m_glPointParameterfv;
      PFNGLPOINTPARAMETERIPROC m_glPointParameteri;
      PFNGLPOINTPARAMETERIVPROC m_glPointParameteriv;
      PFNGLFOGCOORDFPROC m_glFogCoordf;
      PFNGLFOGCOORDFVPROC m_glFogCoordfv;
      PFNGLFOGCOORDDPROC m_glFogCoordd;
      PFNGLFOGCOORDDVPROC m_glFogCoorddv;
      PFNGLFOGCOORDPOINTERPROC m_glFogCoordPointer;
      PFNGLSECONDARYCOLOR3BPROC m_glSecondaryColor3b;
      PFNGLSECONDARYCOLOR3BVPROC m_glSecondaryColor3bv;
      PFNGLSECONDARYCOLOR3DPROC m_glSecondaryColor3d;
      PFNGLSECONDARYCOLOR3DVPROC m_glSecondaryColor3dv;
      PFNGLSECONDARYCOLOR3FPROC m_glSecondaryColor3f;
      PFNGLSECONDARYCOLOR3FVPROC m_glSecondaryColor3fv;
      PFNGLSECONDARYCOLOR3IPROC m_glSecondaryColor3i;
      PFNGLSECONDARYCOLOR3IVPROC m_glSecondaryColor3iv;
      PFNGLSECONDARYCOLOR3SPROC m_glSecondaryColor3s;
      PFNGLSECONDARYCOLOR3SVPROC m_glSecondaryColor3sv;
      PFNGLSECONDARYCOLOR3UBPROC m_glSecondaryColor3ub;
      PFNGLSECONDARYCOLOR3UBVPROC m_glSecondaryColor3ubv;
      PFNGLSECONDARYCOLOR3UIPROC m_glSecondaryColor3ui;
      PFNGLSECONDARYCOLOR3UIVPROC m_glSecondaryColor3uiv;
      PFNGLSECONDARYCOLOR3USPROC m_glSecondaryColor3us;
      PFNGLSECONDARYCOLOR3USVPROC m_glSecondaryColor3usv;
      PFNGLSECONDARYCOLORPOINTERPROC m_glSecondaryColorPointer;
      PFNGLWINDOWPOS2DPROC m_glWindowPos2d;
      PFNGLWINDOWPOS2DVPROC m_glWindowPos2dv;
      PFNGLWINDOWPOS2FPROC m_glWindowPos2f;
      PFNGLWINDOWPOS2FVPROC m_glWindowPos2fv;
      PFNGLWINDOWPOS2IPROC m_glWindowPos2i;
      PFNGLWINDOWPOS2IVPROC m_glWindowPos2iv;
      PFNGLWINDOWPOS2SPROC m_glWindowPos2s;
      PFNGLWINDOWPOS2SVPROC m_glWindowPos2sv;
      PFNGLWINDOWPOS3DPROC m_glWindowPos3d;
      PFNGLWINDOWPOS3DVPROC m_glWindowPos3dv;
      PFNGLWINDOWPOS3FPROC m_glWindowPos3f;
      PFNGLWINDOWPOS3FVPROC m_glWindowPos3fv;
      PFNGLWINDOWPOS3IPROC m_glWindowPos3i;
      PFNGLWINDOWPOS3IVPROC m_glWindowPos3iv;
      PFNGLWINDOWPOS3SPROC m_glWindowPos3s;
      PFNGLWINDOWPOS3SVPROC m_glWindowPos3sv;
      PFNGLBLENDCOLORPROC m_glBlendColor;
      PFNGLBLENDEQUATIONPROC m_glBlendEquation;
      PFNGLGENQUERIESPROC m_glGenQueries;
      PFNGLDELETEQUERIESPROC m_glDeleteQueries;
      PFNGLISQUERYPROC m_glIsQuery;
      PFNGLBEGINQUERYPROC m_glBeginQuery;
      PFNGLENDQUERYPROC m_glEndQuery;
      PFNGLGETQUERYIVPROC m_glGetQueryiv;
      PFNGLGETQUERYOBJECTIVPROC m_glGetQueryObjectiv;
      PFNGLGETQUERYOBJECTUIVPROC m_glGetQueryObjectuiv;
      PFNGLBINDBUFFERPROC m_glBindBuffer;
      PFNGLDELETEBUFFERSPROC m_glDeleteBuffers;
      PFNGLGENBUFFERSPROC m_glGenBuffers;
      PFNGLISBUFFERPROC m_glIsBuffer;
      PFNGLBUFFERDATAPROC m_glBufferData;
      PFNGLBUFFERSUBDATAPROC m_glBufferSubData;
      PFNGLGETBUFFERSUBDATAPROC m_glGetBufferSubData;
      PFNGLMAPBUFFERPROC m_glMapBuffer;
      PFNGLUNMAPBUFFERPROC m_glUnmapBuffer;
      PFNGLGETBUFFERPARAMETERIVPROC m_glGetBufferParameteriv;
      PFNGLGETBUFFERPOINTERVPROC m_glGetBufferPointerv;
      PFNGLBLENDEQUATIONSEPARATEPROC m_glBlendEquationSeparate;
      PFNGLDRAWBUFFERSPROC m_glDrawBuffers;
      PFNGLSTENCILOPSEPARATEPROC m_glStencilOpSeparate;
      PFNGLSTENCILFUNCSEPARATEPROC m_glStencilFuncSeparate;
      PFNGLSTENCILMASKSEPARATEPROC m_glStencilMaskSeparate;
      PFNGLATTACHSHADERPROC m_glAttachShader;
      PFNGLBINDATTRIBLOCATIONPROC m_glBindAttribLocation;
      PFNGLCOMPILESHADERPROC m_glCompileShader;
      PFNGLCREATEPROGRAMPROC m_glCreateProgram;
      PFNGLCREATESHADERPROC m_glCreateShader;
      PFNGLDELETEPROGRAMPROC m_glDeleteProgram;
      PFNGLDELETESHADERPROC m_glDeleteShader;
      PFNGLDETACHSHADERPROC m_glDetachShader;
      PFNGLDISABLEVERTEXATTRIBARRAYPROC m_glDisableVertexAttribArray;
      PFNGLENABLEVERTEXATTRIBARRAYPROC m_glEnableVertexAttribArray;
      PFNGLGETACTIVEATTRIBPROC m_glGetActiveAttrib;
      PFNGLGETACTIVEUNIFORMPROC m_glGetActiveUniform;
      PFNGLGETATTACHEDSHADERSPROC m_glGetAttachedShaders;
      PFNGLGETATTRIBLOCATIONPROC m_glGetAttribLocation;
      PFNGLGETPROGRAMIVPROC m_glGetProgramiv;
      PFNGLGETPROGRAMINFOLOGPROC m_glGetProgramInfoLog;
      PFNGLGETSHADERIVPROC m_glGetShaderiv;
      PFNGLGETSHADERINFOLOGPROC m_glGetShaderInfoLog;
      PFNGLGETSHADERSOURCEPROC m_glGetShaderSource;
      PFNGLGETUNIFORMLOCATIONPROC m_glGetUniformLocation;
      PFNGLGETUNIFORMFVPROC m_glGetUniformfv;
      PFNGLGETUNIFORMIVPROC m_glGetUniformiv;
      PFNGLGETVERTEXATTRIBDVPROC m_glGetVertexAttribdv;
      PFNGLGETVERTEXATTRIBFVPROC m_glGetVertexAttribfv;
      PFNGLGETVERTEXATTRIBIVPROC m_glGetVertexAttribiv;
      PFNGLGETVERTEXATTRIBPOINTERVPROC m_glGetVertexAttribPointerv;
      PFNGLISPROGRAMPROC m_glIsProgram;
      PFNGLISSHADERPROC m_glIsShader;
      PFNGLLINKPROGRAMPROC m_glLinkProgram;
      PFNGLSHADERSOURCEPROC m_glShaderSource;
      PFNGLUSEPROGRAMPROC m_glUseProgram;
      PFNGLUNIFORM1FPROC m_glUniform1f;
      PFNGLUNIFORM2FPROC m_glUniform2f;
      PFNGLUNIFORM3FPROC m_glUniform3f;
      PFNGLUNIFORM4FPROC m_glUniform4f;
      PFNGLUNIFORM1IPROC m_glUniform1i;
      PFNGLUNIFORM2IPROC m_glUniform2i;
      PFNGLUNIFORM3IPROC m_glUniform3i;
      PFNGLUNIFORM4IPROC m_glUniform4i;
      PFNGLUNIFORM1FVPROC m_glUniform1fv;
      PFNGLUNIFORM2FVPROC m_glUniform2fv;
      PFNGLUNIFORM3FVPROC m_glUniform3fv;
      PFNGLUNIFORM4FVPROC m_glUniform4fv;
      PFNGLUNIFORM1IVPROC m_glUniform1iv;
      PFNGLUNIFORM2IVPROC m_glUniform2iv;
      PFNGLUNIFORM3IVPROC m_glUniform3iv;
      PFNGLUNIFORM4IVPROC m_glUniform4iv;
      PFNGLUNIFORMMATRIX2FVPROC m_glUniformMatrix2fv;
      PFNGLUNIFORMMATRIX3FVPROC m_glUniformMatrix3fv;
      PFNGLUNIFORMMATRIX4FVPROC m_glUniformMatrix4fv;
      PFNGLVALIDATEPROGRAMPROC m_glValidateProgram;
      PFNGLVERTEXATTRIB1DPROC m_glVertexAttrib1d;
      PFNGLVERTEXATTRIB1DVPROC m_glVertexAttrib1dv;
      PFNGLVERTEXATTRIB1FPROC m_glVertexAttrib1f;
      PFNGLVERTEXATTRIB1FVPROC m_glVertexAttrib1fv;
      PFNGLVERTEXATTRIB1SPROC m_glVertexAttrib1s;
      PFNGLVERTEXATTRIB1SVPROC m_glVertexAttrib1sv;
      PFNGLVERTEXATTRIB2DPROC m_glVertexAttrib2d;
      PFNGLVERTEXATTRIB2DVPROC m_glVertexAttrib2dv;
      PFNGLVERTEXATTRIB2FPROC m_glVertexAttrib2f;
      PFNGLVERTEXATTRIB2FVPROC m_glVertexAttrib2fv;
      PFNGLVERTEXATTRIB2SPROC m_glVertexAttrib2s;
      PFNGLVERTEXATTRIB2SVPROC m_glVertexAttrib2sv;
      PFNGLVERTEXATTRIB3DPROC m_glVertexAttrib3d;
      PFNGLVERTEXATTRIB3DVPROC m_glVertexAttrib3dv;
      PFNGLVERTEXATTRIB3FPROC m_glVertexAttrib3f;
      PFNGLVERTEXATTRIB3FVPROC m_glVertexAttrib3fv;
      PFNGLVERTEXATTRIB3SPROC m_glVertexAttrib3s;
      PFNGLVERTEXATTRIB3SVPROC m_glVertexAttrib3sv;
      PFNGLVERTEXATTRIB4NBVPROC m_glVertexAttrib4Nbv;
      PFNGLVERTEXATTRIB4NIVPROC m_glVertexAttrib4Niv;
      PFNGLVERTEXATTRIB4NSVPROC m_glVertexAttrib4Nsv;
      PFNGLVERTEXATTRIB4NUBPROC m_glVertexAttrib4Nub;
      PFNGLVERTEXATTRIB4NUBVPROC m_glVertexAttrib4Nubv;
      PFNGLVERTEXATTRIB4NUIVPROC m_glVertexAttrib4Nuiv;
      PFNGLVERTEXATTRIB4NUSVPROC m_glVertexAttrib4Nusv;
      PFNGLVERTEXATTRIB4BVPROC m_glVertexAttrib4bv;
      PFNGLVERTEXATTRIB4DPROC m_glVertexAttrib4d;
      PFNGLVERTEXATTRIB4DVPROC m_glVertexAttrib4dv;
      PFNGLVERTEXATTRIB4FPROC m_glVertexAttrib4f;
      PFNGLVERTEXATTRIB4FVPROC m_glVertexAttrib4fv;
      PFNGLVERTEXATTRIB4IVPROC m_glVertexAttrib4iv;
      PFNGLVERTEXATTRIB4SPROC m_glVertexAttrib4s;
      PFNGLVERTEXATTRIB4SVPROC m_glVertexAttrib4sv;
      PFNGLVERTEXATTRIB4UBVPROC m_glVertexAttrib4ubv;
      PFNGLVERTEXATTRIB4UIVPROC m_glVertexAttrib4uiv;
      PFNGLVERTEXATTRIB4USVPROC m_glVertexAttrib4usv;
      PFNGLVERTEXATTRIBPOINTERPROC m_glVertexAttribPointer;
      PFNGLUNIFORMMATRIX2X3FVPROC m_glUniformMatrix2x3fv;
      PFNGLUNIFORMMATRIX3X2FVPROC m_glUniformMatrix3x2fv;
      PFNGLUNIFORMMATRIX2X4FVPROC m_glUniformMatrix2x4fv;
      PFNGLUNIFORMMATRIX4X2FVPROC m_glUniformMatrix4x2fv;
      PFNGLUNIFORMMATRIX3X4FVPROC m_glUniformMatrix3x4fv;
      PFNGLUNIFORMMATRIX4X3FVPROC m_glUniformMatrix4x3fv;
      PFNGLCOLORMASKIPROC m_glColorMaski;
      PFNGLGETBOOLEANI_VPROC m_glGetBooleani_v;
      PFNGLGETINTEGERI_VPROC m_glGetIntegeri_v;
      PFNGLENABLEIPROC m_glEnablei;
      PFNGLDISABLEIPROC m_glDisablei;
      PFNGLISENABLEDIPROC m_glIsEnabledi;
      PFNGLBEGINTRANSFORMFEEDBACKPROC m_glBeginTransformFeedback;
      PFNGLENDTRANSFORMFEEDBACKPROC m_glEndTransformFeedback;
      PFNGLBINDBUFFERRANGEPROC m_glBindBufferRange;
      PFNGLBINDBUFFERBASEPROC m_glBindBufferBase;
      PFNGLTRANSFORMFEEDBACKVARYINGSPROC m_glTransformFeedbackVaryings;
      PFNGLGETTRANSFORMFEEDBACKVARYINGPROC m_glGetTransformFeedbackVarying;
      PFNGLCLAMPCOLORPROC m_glClampColor;
      PFNGLBEGINCONDITIONALRENDERPROC m_glBeginConditionalRender;
      PFNGLENDCONDITIONALRENDERPROC m_glEndConditionalRender;
      PFNGLVERTEXATTRIBIPOINTERPROC m_glVertexAttribIPointer;
      PFNGLGETVERTEXATTRIBIIVPROC m_glGetVertexAttribIiv;
      PFNGLGETVERTEXATTRIBIUIVPROC m_glGetVertexAttribIuiv;
      PFNGLVERTEXATTRIBI1IPROC m_glVertexAttribI1i;
      PFNGLVERTEXATTRIBI2IPROC m_glVertexAttribI2i;
      PFNGLVERTEXATTRIBI3IPROC m_glVertexAttribI3i;
      PFNGLVERTEXATTRIBI4IPROC m_glVertexAttribI4i;
      PFNGLVERTEXATTRIBI1UIPROC m_glVertexAttribI1ui;
      PFNGLVERTEXATTRIBI2UIPROC m_glVertexAttribI2ui;
      PFNGLVERTEXATTRIBI3UIPROC m_glVertexAttribI3ui;
      PFNGLVERTEXATTRIBI4UIPROC m_glVertexAttribI4ui;
      PFNGLVERTEXATTRIBI1IVPROC m_glVertexAttribI1iv;
      PFNGLVERTEXATTRIBI2IVPROC m_glVertexAttribI2iv;
      PFNGLVERTEXATTRIBI3IVPROC m_glVertexAttribI3iv;
      PFNGLVERTEXATTRIBI4IVPROC m_glVertexAttribI4iv;
      PFNGLVERTEXATTRIBI1UIVPROC m_glVertexAttribI1uiv;
      PFNGLVERTEXATTRIBI2UIVPROC m_glVertexAttribI2uiv;
      PFNGLVERTEXATTRIBI3UIVPROC m_glVertexAttribI3uiv;
      PFNGLVERTEXATTRIBI4UIVPROC m_glVertexAttribI4uiv;
      PFNGLVERTEXATTRIBI4BVPROC m_glVertexAttribI4bv;
      PFNGLVERTEXATTRIBI4SVPROC m_glVertexAttribI4sv;
      PFNGLVERTEXATTRIBI4UBVPROC m_glVertexAttribI4ubv;
      PFNGLVERTEXATTRIBI4USVPROC m_glVertexAttribI4usv;
      PFNGLGETUNIFORMUIVPROC m_glGetUniformuiv;
      PFNGLBINDFRAGDATALOCATIONPROC m_glBindFragDataLocation;
      PFNGLGETFRAGDATALOCATIONPROC m_glGetFragDataLocation;
      PFNGLUNIFORM1UIPROC m_glUniform1ui;
      PFNGLUNIFORM2UIPROC m_glUniform2ui;
      PFNGLUNIFORM3UIPROC m_glUniform3ui;
      PFNGLUNIFORM4UIPROC m_glUniform4ui;
      PFNGLUNIFORM1UIVPROC m_glUniform1uiv;
      PFNGLUNIFORM2UIVPROC m_glUniform2uiv;
      PFNGLUNIFORM3UIVPROC m_glUniform3uiv;
      PFNGLUNIFORM4UIVPROC m_glUniform4uiv;
      PFNGLTEXPARAMETERIIVPROC m_glTexParameterIiv;
      PFNGLTEXPARAMETERIUIVPROC m_glTexParameterIuiv;
      PFNGLGETTEXPARAMETERIIVPROC m_glGetTexParameterIiv;
      PFNGLGETTEXPARAMETERIUIVPROC m_glGetTexParameterIuiv;
      PFNGLCLEARBUFFERIVPROC m_glClearBufferiv;
      PFNGLCLEARBUFFERUIVPROC m_glClearBufferuiv;
      PFNGLCLEARBUFFERFVPROC m_glClearBufferfv;
      PFNGLCLEARBUFFERFIPROC m_glClearBufferfi;
      PFNGLGETSTRINGIPROC m_glGetStringi;
      PFNGLISRENDERBUFFERPROC m_glIsRenderbuffer;
      PFNGLBINDRENDERBUFFERPROC m_glBindRenderbuffer;
      PFNGLDELETERENDERBUFFERSPROC m_glDeleteRenderbuffers;
      PFNGLGENRENDERBUFFERSPROC m_glGenRenderbuffers;
      PFNGLRENDERBUFFERSTORAGEPROC m_glRenderbufferStorage;
      PFNGLGETRENDERBUFFERPARAMETERIVPROC m_glGetRenderbufferParameteriv;
      PFNGLISFRAMEBUFFERPROC m_glIsFramebuffer;
      PFNGLBINDFRAMEBUFFERPROC m_glBindFramebuffer;
      PFNGLDELETEFRAMEBUFFERSPROC m_glDeleteFramebuffers;
      PFNGLGENFRAMEBUFFERSPROC m_glGenFramebuffers;
      PFNGLCHECKFRAMEBUFFERSTATUSPROC m_glCheckFramebufferStatus;
      PFNGLFRAMEBUFFERTEXTURE1DPROC m_glFramebufferTexture1D;
      PFNGLFRAMEBUFFERTEXTURE2DPROC m_glFramebufferTexture2D;
      PFNGLFRAMEBUFFERTEXTURE3DPROC m_glFramebufferTexture3D;
      PFNGLFRAMEBUFFERRENDERBUFFERPROC m_glFramebufferRenderbuffer;
      PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC m_glGetFramebufferAttachmentParameteriv;
      PFNGLGENERATEMIPMAPPROC m_glGenerateMipmap;
      PFNGLBLITFRAMEBUFFERPROC m_glBlitFramebuffer;
      PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC m_glRenderbufferStorageMultisample;
      PFNGLFRAMEBUFFERTEXTURELAYERPROC m_glFramebufferTextureLayer;
      PFNGLMAPBUFFERRANGEPROC m_glMapBufferRange;
      PFNGLFLUSHMAPPEDBUFFERRANGEPROC m_glFlushMappedBufferRange;
      PFNGLBINDVERTEXARRAYPROC m_glBindVertexArray;
      PFNGLDELETEVERTEXARRAYSPROC m_glDeleteVertexArrays;
      PFNGLGENVERTEXARRAYSPROC m_glGenVertexArrays;
      PFNGLISVERTEXARRAYPROC m_glIsVertexArray;
      PFNGLDRAWARRAYSINSTANCEDPROC m_glDrawArraysInstanced;
      PFNGLDRAWELEMENTSINSTANCEDPROC m_glDrawElementsInstanced;
      PFNGLTEXBUFFERPROC m_glTexBuffer;
      PFNGLPRIMITIVERESTARTINDEXPROC m_glPrimitiveRestartIndex;
      PFNGLCOPYBUFFERSUBDATAPROC m_glCopyBufferSubData;
      PFNGLGETUNIFORMINDICESPROC m_glGetUniformIndices;
      PFNGLGETACTIVEUNIFORMSIVPROC m_glGetActiveUniformsiv;
      PFNGLGETACTIVEUNIFORMNAMEPROC m_glGetActiveUniformName;
      PFNGLGETUNIFORMBLOCKINDEXPROC m_glGetUniformBlockIndex;
      PFNGLGETACTIVEUNIFORMBLOCKIVPROC m_glGetActiveUniformBlockiv;
      PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC m_glGetActiveUniformBlockName;
      PFNGLUNIFORMBLOCKBINDINGPROC m_glUniformBlockBinding;
      PFNGLDRAWELEMENTSBASEVERTEXPROC m_glDrawElementsBaseVertex;
      PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC m_glDrawRangeElementsBaseVertex;
      PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC m_glDrawElementsInstancedBaseVertex;
      PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC m_glMultiDrawElementsBaseVertex;
      PFNGLPROVOKINGVERTEXPROC m_glProvokingVertex;
      PFNGLFENCESYNCPROC m_glFenceSync;
      PFNGLISSYNCPROC m_glIsSync;
      PFNGLDELETESYNCPROC m_glDeleteSync;
      PFNGLCLIENTWAITSYNCPROC m_glClientWaitSync;
      PFNGLWAITSYNCPROC m_glWaitSync;
      PFNGLGETINTEGER64VPROC m_glGetInteger64v;
      PFNGLGETSYNCIVPROC m_glGetSynciv;
      PFNGLGETINTEGER64I_VPROC m_glGetInteger64i_v;
      PFNGLGETBUFFERPARAMETERI64VPROC m_glGetBufferParameteri64v;
      PFNGLFRAMEBUFFERTEXTUREPROC m_glFramebufferTexture;
      PFNGLTEXIMAGE2DMULTISAMPLEPROC m_glTexImage2DMultisample;
      PFNGLTEXIMAGE3DMULTISAMPLEPROC m_glTexImage3DMultisample;
      PFNGLGETMULTISAMPLEFVPROC m_glGetMultisamplefv;
      PFNGLSAMPLEMASKIPROC m_glSampleMaski;
      PFNGLBINDFRAGDATALOCATIONINDEXEDPROC m_glBindFragDataLocationIndexed;
      PFNGLGETFRAGDATAINDEXPROC m_glGetFragDataIndex;
      PFNGLGENSAMPLERSPROC m_glGenSamplers;
      PFNGLDELETESAMPLERSPROC m_glDeleteSamplers;
      PFNGLISSAMPLERPROC m_glIsSampler;
      PFNGLBINDSAMPLERPROC m_glBindSampler;
      PFNGLSAMPLERPARAMETERIPROC m_glSamplerParameteri;
      PFNGLSAMPLERPARAMETERIVPROC m_glSamplerParameteriv;
      PFNGLSAMPLERPARAMETERFPROC m_glSamplerParameterf;
      PFNGLSAMPLERPARAMETERFVPROC m_glSamplerParameterfv;
      PFNGLSAMPLERPARAMETERIIVPROC m_glSamplerParameterIiv;
      PFNGLSAMPLERPARAMETERIUIVPROC m_glSamplerParameterIuiv;
      PFNGLGETSAMPLERPARAMETERIVPROC m_glGetSamplerParameteriv;
      PFNGLGETSAMPLERPARAMETERIIVPROC m_glGetSamplerParameterIiv;
      PFNGLGETSAMPLERPARAMETERFVPROC m_glGetSamplerParameterfv;
      PFNGLGETSAMPLERPARAMETERIUIVPROC m_glGetSamplerParameterIuiv;
      PFNGLQUERYCOUNTERPROC m_glQueryCounter;
      PFNGLGETQUERYOBJECTI64VPROC m_glGetQueryObjecti64v;
      PFNGLGETQUERYOBJECTUI64VPROC m_glGetQueryObjectui64v;
      PFNGLVERTEXATTRIBDIVISORPROC m_glVertexAttribDivisor;
      PFNGLVERTEXATTRIBP1UIPROC m_glVertexAttribP1ui;
      PFNGLVERTEXATTRIBP1UIVPROC m_glVertexAttribP1uiv;
      PFNGLVERTEXATTRIBP2UIPROC m_glVertexAttribP2ui;
      PFNGLVERTEXATTRIBP2UIVPROC m_glVertexAttribP2uiv;
      PFNGLVERTEXATTRIBP3UIPROC m_glVertexAttribP3ui;
      PFNGLVERTEXATTRIBP3UIVPROC m_glVertexAttribP3uiv;
      PFNGLVERTEXATTRIBP4UIPROC m_glVertexAttribP4ui;
      PFNGLVERTEXATTRIBP4UIVPROC m_glVertexAttribP4uiv;
      PFNGLVERTEXP2UIPROC m_glVertexP2ui;
      PFNGLVERTEXP2UIVPROC m_glVertexP2uiv;
      PFNGLVERTEXP3UIPROC m_glVertexP3ui;
      PFNGLVERTEXP3UIVPROC m_glVertexP3uiv;
      PFNGLVERTEXP4UIPROC m_glVertexP4ui;
      PFNGLVERTEXP4UIVPROC m_glVertexP4uiv;
      PFNGLTEXCOORDP1UIPROC m_glTexCoordP1ui;
      PFNGLTEXCOORDP1UIVPROC m_glTexCoordP1uiv;
      PFNGLTEXCOORDP2UIPROC m_glTexCoordP2ui;
      PFNGLTEXCOORDP2UIVPROC m_glTexCoordP2uiv;
      PFNGLTEXCOORDP3UIPROC m_glTexCoordP3ui;
      PFNGLTEXCOORDP3UIVPROC m_glTexCoordP3uiv;
      PFNGLTEXCOORDP4UIPROC m_glTexCoordP4ui;
      PFNGLTEXCOORDP4UIVPROC m_glTexCoordP4uiv;
      PFNGLMULTITEXCOORDP1UIPROC m_glMultiTexCoordP1ui;
      PFNGLMULTITEXCOORDP1UIVPROC m_glMultiTexCoordP1uiv;
      PFNGLMULTITEXCOORDP2UIPROC m_glMultiTexCoordP2ui;
      PFNGLMULTITEXCOORDP2UIVPROC m_glMultiTexCoordP2uiv;
      PFNGLMULTITEXCOORDP3UIPROC m_glMultiTexCoordP3ui;
      PFNGLMULTITEXCOORDP3UIVPROC m_glMultiTexCoordP3uiv;
      PFNGLMULTITEXCOORDP4UIPROC m_glMultiTexCoordP4ui;
      PFNGLMULTITEXCOORDP4UIVPROC m_glMultiTexCoordP4uiv;
      PFNGLNORMALP3UIPROC m_glNormalP3ui;
      PFNGLNORMALP3UIVPROC m_glNormalP3uiv;
      PFNGLCOLORP3UIPROC m_glColorP3ui;
      PFNGLCOLORP3UIVPROC m_glColorP3uiv;
      PFNGLCOLORP4UIPROC m_glColorP4ui;
      PFNGLCOLORP4UIVPROC m_glColorP4uiv;
      PFNGLSECONDARYCOLORP3UIPROC m_glSecondaryColorP3ui;
      PFNGLSECONDARYCOLORP3UIVPROC m_glSecondaryColorP3uiv;
      PFNGLMINSAMPLESHADINGPROC m_glMinSampleShading;
      PFNGLBLENDEQUATIONIPROC m_glBlendEquationi;
      PFNGLBLENDEQUATIONSEPARATEIPROC m_glBlendEquationSeparatei;
      PFNGLBLENDFUNCIPROC m_glBlendFunci;
      PFNGLBLENDFUNCSEPARATEIPROC m_glBlendFuncSeparatei;
      PFNGLDRAWARRAYSINDIRECTPROC m_glDrawArraysIndirect;
      PFNGLDRAWELEMENTSINDIRECTPROC m_glDrawElementsIndirect;
      PFNGLUNIFORM1DPROC m_glUniform1d;
      PFNGLUNIFORM2DPROC m_glUniform2d;
      PFNGLUNIFORM3DPROC m_glUniform3d;
      PFNGLUNIFORM4DPROC m_glUniform4d;
      PFNGLUNIFORM1DVPROC m_glUniform1dv;
      PFNGLUNIFORM2DVPROC m_glUniform2dv;
      PFNGLUNIFORM3DVPROC m_glUniform3dv;
      PFNGLUNIFORM4DVPROC m_glUniform4dv;
      PFNGLUNIFORMMATRIX2DVPROC m_glUniformMatrix2dv;
      PFNGLUNIFORMMATRIX3DVPROC m_glUniformMatrix3dv;
      PFNGLUNIFORMMATRIX4DVPROC m_glUniformMatrix4dv;
      PFNGLUNIFORMMATRIX2X3DVPROC m_glUniformMatrix2x3dv;
      PFNGLUNIFORMMATRIX2X4DVPROC m_glUniformMatrix2x4dv;
      PFNGLUNIFORMMATRIX3X2DVPROC m_glUniformMatrix3x2dv;
      PFNGLUNIFORMMATRIX3X4DVPROC m_glUniformMatrix3x4dv;
      PFNGLUNIFORMMATRIX4X2DVPROC m_glUniformMatrix4x2dv;
      PFNGLUNIFORMMATRIX4X3DVPROC m_glUniformMatrix4x3dv;
      PFNGLGETUNIFORMDVPROC m_glGetUniformdv;
      PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC m_glGetSubroutineUniformLocation;
      PFNGLGETSUBROUTINEINDEXPROC m_glGetSubroutineIndex;
      PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC m_glGetActiveSubroutineUniformiv;
      PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC m_glGetActiveSubroutineUniformName;
      PFNGLGETACTIVESUBROUTINENAMEPROC m_glGetActiveSubroutineName;
      PFNGLUNIFORMSUBROUTINESUIVPROC m_glUniformSubroutinesuiv;
      PFNGLGETUNIFORMSUBROUTINEUIVPROC m_glGetUniformSubroutineuiv;
      PFNGLGETPROGRAMSTAGEIVPROC m_glGetProgramStageiv;
      PFNGLPATCHPARAMETERIPROC m_glPatchParameteri;
      PFNGLPATCHPARAMETERFVPROC m_glPatchParameterfv;
      PFNGLBINDTRANSFORMFEEDBACKPROC m_glBindTransformFeedback;
      PFNGLDELETETRANSFORMFEEDBACKSPROC m_glDeleteTransformFeedbacks;
      PFNGLGENTRANSFORMFEEDBACKSPROC m_glGenTransformFeedbacks;
      PFNGLISTRANSFORMFEEDBACKPROC m_glIsTransformFeedback;
      PFNGLPAUSETRANSFORMFEEDBACKPROC m_glPauseTransformFeedback;
      PFNGLRESUMETRANSFORMFEEDBACKPROC m_glResumeTransformFeedback;
      PFNGLDRAWTRANSFORMFEEDBACKPROC m_glDrawTransformFeedback;
      PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC m_glDrawTransformFeedbackStream;
      PFNGLBEGINQUERYINDEXEDPROC m_glBeginQueryIndexed;
      PFNGLENDQUERYINDEXEDPROC m_glEndQueryIndexed;
      PFNGLGETQUERYINDEXEDIVPROC m_glGetQueryIndexediv;
      PFNGLRELEASESHADERCOMPILERPROC m_glReleaseShaderCompiler;
      PFNGLSHADERBINARYPROC m_glShaderBinary;
      PFNGLGETSHADERPRECISIONFORMATPROC m_glGetShaderPrecisionFormat;
      PFNGLDEPTHRANGEFPROC m_glDepthRangef;
      PFNGLCLEARDEPTHFPROC m_glClearDepthf;
      PFNGLGETPROGRAMBINARYPROC m_glGetProgramBinary;
      PFNGLPROGRAMBINARYPROC m_glProgramBinary;
      PFNGLPROGRAMPARAMETERIPROC m_glProgramParameteri;
      PFNGLUSEPROGRAMSTAGESPROC m_glUseProgramStages;
      PFNGLACTIVESHADERPROGRAMPROC m_glActiveShaderProgram;
      PFNGLCREATESHADERPROGRAMVPROC m_glCreateShaderProgramv;
      PFNGLBINDPROGRAMPIPELINEPROC m_glBindProgramPipeline;
      PFNGLDELETEPROGRAMPIPELINESPROC m_glDeleteProgramPipelines;
      PFNGLGENPROGRAMPIPELINESPROC m_glGenProgramPipelines;
      PFNGLISPROGRAMPIPELINEPROC m_glIsProgramPipeline;
      PFNGLGETPROGRAMPIPELINEIVPROC m_glGetProgramPipelineiv;
      PFNGLPROGRAMUNIFORM1IPROC m_glProgramUniform1i;
      PFNGLPROGRAMUNIFORM1IVPROC m_glProgramUniform1iv;
      PFNGLPROGRAMUNIFORM1FPROC m_glProgramUniform1f;
      PFNGLPROGRAMUNIFORM1FVPROC m_glProgramUniform1fv;
      PFNGLPROGRAMUNIFORM1DPROC m_glProgramUniform1d;
      PFNGLPROGRAMUNIFORM1DVPROC m_glProgramUniform1dv;
      PFNGLPROGRAMUNIFORM1UIPROC m_glProgramUniform1ui;
      PFNGLPROGRAMUNIFORM1UIVPROC m_glProgramUniform1uiv;
      PFNGLPROGRAMUNIFORM2IPROC m_glProgramUniform2i;
      PFNGLPROGRAMUNIFORM2IVPROC m_glProgramUniform2iv;
      PFNGLPROGRAMUNIFORM2FPROC m_glProgramUniform2f;
      PFNGLPROGRAMUNIFORM2FVPROC m_glProgramUniform2fv;
      PFNGLPROGRAMUNIFORM2DPROC m_glProgramUniform2d;
      PFNGLPROGRAMUNIFORM2DVPROC m_glProgramUniform2dv;
      PFNGLPROGRAMUNIFORM2UIPROC m_glProgramUniform2ui;
      PFNGLPROGRAMUNIFORM2UIVPROC m_glProgramUniform2uiv;
      PFNGLPROGRAMUNIFORM3IPROC m_glProgramUniform3i;
      PFNGLPROGRAMUNIFORM3IVPROC m_glProgramUniform3iv;
      PFNGLPROGRAMUNIFORM3FPROC m_glProgramUniform3f;
      PFNGLPROGRAMUNIFORM3FVPROC m_glProgramUniform3fv;
      PFNGLPROGRAMUNIFORM3DPROC m_glProgramUniform3d;
      PFNGLPROGRAMUNIFORM3DVPROC m_glProgramUniform3dv;
      PFNGLPROGRAMUNIFORM3UIPROC m_glProgramUniform3ui;
      PFNGLPROGRAMUNIFORM3UIVPROC m_glProgramUniform3uiv;
      PFNGLPROGRAMUNIFORM4IPROC m_glProgramUniform4i;
      PFNGLPROGRAMUNIFORM4IVPROC m_glProgramUniform4iv;
      PFNGLPROGRAMUNIFORM4FPROC m_glProgramUniform4f;
      PFNGLPROGRAMUNIFORM4FVPROC m_glProgramUniform4fv;
      PFNGLPROGRAMUNIFORM4DPROC m_glProgramUniform4d;
      PFNGLPROGRAMUNIFORM4DVPROC m_glProgramUniform4dv;
      PFNGLPROGRAMUNIFORM4UIPROC m_glProgramUniform4ui;
      PFNGLPROGRAMUNIFORM4UIVPROC m_glProgramUniform4uiv;
      PFNGLPROGRAMUNIFORMMATRIX2FVPROC m_glProgramUniformMatrix2fv;
      PFNGLPROGRAMUNIFORMMATRIX3FVPROC m_glProgramUniformMatrix3fv;
      PFNGLPROGRAMUNIFORMMATRIX4FVPROC m_glProgramUniformMatrix4fv;
      PFNGLPROGRAMUNIFORMMATRIX2DVPROC m_glProgramUniformMatrix2dv;
      PFNGLPROGRAMUNIFORMMATRIX3DVPROC m_glProgramUniformMatrix3dv;
      PFNGLPROGRAMUNIFORMMATRIX4DVPROC m_glProgramUniformMatrix4dv;
      PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC m_glProgramUniformMatrix2x3fv;
      PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC m_glProgramUniformMatrix3x2fv;
      PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC m_glProgramUniformMatrix2x4fv;
      PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC m_glProgramUniformMatrix4x2fv;
      PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC m_glProgramUniformMatrix3x4fv;
      PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC m_glProgramUniformMatrix4x3fv;
      PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC m_glProgramUniformMatrix2x3dv;
      PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC m_glProgramUniformMatrix3x2dv;
      PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC m_glProgramUniformMatrix2x4dv;
      PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC m_glProgramUniformMatrix4x2dv;
      PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC m_glProgramUniformMatrix3x4dv;
      PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC m_glProgramUniformMatrix4x3dv;
      PFNGLVALIDATEPROGRAMPIPELINEPROC m_glValidateProgramPipeline;
      PFNGLGETPROGRAMPIPELINEINFOLOGPROC m_glGetProgramPipelineInfoLog;
      PFNGLVERTEXATTRIBL1DPROC m_glVertexAttribL1d;
      PFNGLVERTEXATTRIBL2DPROC m_glVertexAttribL2d;
      PFNGLVERTEXATTRIBL3DPROC m_glVertexAttribL3d;
      PFNGLVERTEXATTRIBL4DPROC m_glVertexAttribL4d;
      PFNGLVERTEXATTRIBL1DVPROC m_glVertexAttribL1dv;
      PFNGLVERTEXATTRIBL2DVPROC m_glVertexAttribL2dv;
      PFNGLVERTEXATTRIBL3DVPROC m_glVertexAttribL3dv;
      PFNGLVERTEXATTRIBL4DVPROC m_glVertexAttribL4dv;
      PFNGLVERTEXATTRIBLPOINTERPROC m_glVertexAttribLPointer;
      PFNGLGETVERTEXATTRIBLDVPROC m_glGetVertexAttribLdv;
      PFNGLVIEWPORTARRAYVPROC m_glViewportArrayv;
      PFNGLVIEWPORTINDEXEDFPROC m_glViewportIndexedf;
      PFNGLVIEWPORTINDEXEDFVPROC m_glViewportIndexedfv;
      PFNGLSCISSORARRAYVPROC m_glScissorArrayv;
      PFNGLSCISSORINDEXEDPROC m_glScissorIndexed;
      PFNGLSCISSORINDEXEDVPROC m_glScissorIndexedv;
      PFNGLDEPTHRANGEARRAYVPROC m_glDepthRangeArrayv;
      PFNGLDEPTHRANGEINDEXEDPROC m_glDepthRangeIndexed;
      PFNGLGETFLOATI_VPROC m_glGetFloati_v;
      PFNGLGETDOUBLEI_VPROC m_glGetDoublei_v;
      PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC m_glDrawArraysInstancedBaseInstance;
      PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC m_glDrawElementsInstancedBaseInstance;
      PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC m_glDrawElementsInstancedBaseVertexBaseInstance;
      PFNGLGETINTERNALFORMATIVPROC m_glGetInternalformativ;
      PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC m_glGetActiveAtomicCounterBufferiv;
      PFNGLBINDIMAGETEXTUREPROC m_glBindImageTexture;
      PFNGLMEMORYBARRIERPROC m_glMemoryBarrier;
      PFNGLTEXSTORAGE1DPROC m_glTexStorage1D;
      PFNGLTEXSTORAGE2DPROC m_glTexStorage2D;
      PFNGLTEXSTORAGE3DPROC m_glTexStorage3D;
      PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC m_glDrawTransformFeedbackInstanced;
      PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC m_glDrawTransformFeedbackStreamInstanced;
      PFNGLCLEARBUFFERDATAPROC m_glClearBufferData;
      PFNGLCLEARBUFFERSUBDATAPROC m_glClearBufferSubData;
      PFNGLDISPATCHCOMPUTEPROC m_glDispatchCompute;
      PFNGLDISPATCHCOMPUTEINDIRECTPROC m_glDispatchComputeIndirect;
      PFNGLCOPYIMAGESUBDATAPROC m_glCopyImageSubData;
      PFNGLFRAMEBUFFERPARAMETERIPROC m_glFramebufferParameteri;
      PFNGLGETFRAMEBUFFERPARAMETERIVPROC m_glGetFramebufferParameteriv;
      PFNGLGETINTERNALFORMATI64VPROC m_glGetInternalformati64v;
      PFNGLINVALIDATETEXSUBIMAGEPROC m_glInvalidateTexSubImage;
      PFNGLINVALIDATETEXIMAGEPROC m_glInvalidateTexImage;
      PFNGLINVALIDATEBUFFERSUBDATAPROC m_glInvalidateBufferSubData;
      PFNGLINVALIDATEBUFFERDATAPROC m_glInvalidateBufferData;
      PFNGLINVALIDATEFRAMEBUFFERPROC m_glInvalidateFramebuffer;
      PFNGLINVALIDATESUBFRAMEBUFFERPROC m_glInvalidateSubFramebuffer;
      PFNGLMULTIDRAWARRAYSINDIRECTPROC m_glMultiDrawArraysIndirect;
      PFNGLMULTIDRAWELEMENTSINDIRECTPROC m_glMultiDrawElementsIndirect;
      PFNGLGETPROGRAMINTERFACEIVPROC m_glGetProgramInterfaceiv;
      PFNGLGETPROGRAMRESOURCEINDEXPROC m_glGetProgramResourceIndex;
      PFNGLGETPROGRAMRESOURCENAMEPROC m_glGetProgramResourceName;
      PFNGLGETPROGRAMRESOURCEIVPROC m_glGetProgramResourceiv;
      PFNGLGETPROGRAMRESOURCELOCATIONPROC m_glGetProgramResourceLocation;
      PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC m_glGetProgramResourceLocationIndex;
      PFNGLSHADERSTORAGEBLOCKBINDINGPROC m_glShaderStorageBlockBinding;
      PFNGLTEXBUFFERRANGEPROC m_glTexBufferRange;
      PFNGLTEXSTORAGE2DMULTISAMPLEPROC m_glTexStorage2DMultisample;
      PFNGLTEXSTORAGE3DMULTISAMPLEPROC m_glTexStorage3DMultisample;
      PFNGLTEXTUREVIEWPROC m_glTextureView;
      PFNGLBINDVERTEXBUFFERPROC m_glBindVertexBuffer;
      PFNGLVERTEXATTRIBFORMATPROC m_glVertexAttribFormat;
      PFNGLVERTEXATTRIBIFORMATPROC m_glVertexAttribIFormat;
      PFNGLVERTEXATTRIBLFORMATPROC m_glVertexAttribLFormat;
      PFNGLVERTEXATTRIBBINDINGPROC m_glVertexAttribBinding;
      PFNGLVERTEXBINDINGDIVISORPROC m_glVertexBindingDivisor;
      PFNGLDEBUGMESSAGECONTROLPROC m_glDebugMessageControl;
      PFNGLDEBUGMESSAGEINSERTPROC m_glDebugMessageInsert;
      PFNGLDEBUGMESSAGECALLBACKPROC m_glDebugMessageCallback;
      PFNGLGETDEBUGMESSAGELOGPROC m_glGetDebugMessageLog;
      PFNGLPUSHDEBUGGROUPPROC m_glPushDebugGroup;
      PFNGLPOPDEBUGGROUPPROC m_glPopDebugGroup;
      PFNGLOBJECTLABELPROC m_glObjectLabel;
      PFNGLGETOBJECTLABELPROC m_glGetObjectLabel;
      PFNGLOBJECTPTRLABELPROC m_glObjectPtrLabel;
      PFNGLGETOBJECTPTRLABELPROC m_glGetObjectPtrLabel;
      PFNGLBUFFERSTORAGEPROC m_glBufferStorage;
      PFNGLCLEARTEXIMAGEPROC m_glClearTexImage;
      PFNGLCLEARTEXSUBIMAGEPROC m_glClearTexSubImage;
      PFNGLBINDBUFFERSBASEPROC m_glBindBuffersBase;
      PFNGLBINDBUFFERSRANGEPROC m_glBindBuffersRange;
      PFNGLBINDTEXTURESPROC m_glBindTextures;
      PFNGLBINDSAMPLERSPROC m_glBindSamplers;
      PFNGLBINDIMAGETEXTURESPROC m_glBindImageTextures;
      PFNGLBINDVERTEXBUFFERSPROC m_glBindVertexBuffers;
      PFNGLCLIPCONTROLPROC m_glClipControl;
      PFNGLCREATETRANSFORMFEEDBACKSPROC m_glCreateTransformFeedbacks;
      PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC m_glTransformFeedbackBufferBase;
      PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC m_glTransformFeedbackBufferRange;
      PFNGLGETTRANSFORMFEEDBACKIVPROC m_glGetTransformFeedbackiv;
      PFNGLGETTRANSFORMFEEDBACKI_VPROC m_glGetTransformFeedbacki_v;
      PFNGLGETTRANSFORMFEEDBACKI64_VPROC m_glGetTransformFeedbacki64_v;
      PFNGLCREATEBUFFERSPROC m_glCreateBuffers;
      PFNGLNAMEDBUFFERSTORAGEPROC m_glNamedBufferStorage;
      PFNGLNAMEDBUFFERDATAPROC m_glNamedBufferData;
      PFNGLNAMEDBUFFERSUBDATAPROC m_glNamedBufferSubData;
      PFNGLCOPYNAMEDBUFFERSUBDATAPROC m_glCopyNamedBufferSubData;
      PFNGLCLEARNAMEDBUFFERDATAPROC m_glClearNamedBufferData;
      PFNGLCLEARNAMEDBUFFERSUBDATAPROC m_glClearNamedBufferSubData;
      PFNGLMAPNAMEDBUFFERPROC m_glMapNamedBuffer;
      PFNGLMAPNAMEDBUFFERRANGEPROC m_glMapNamedBufferRange;
      PFNGLUNMAPNAMEDBUFFERPROC m_glUnmapNamedBuffer;
      PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC m_glFlushMappedNamedBufferRange;
      PFNGLGETNAMEDBUFFERPARAMETERIVPROC m_glGetNamedBufferParameteriv;
      PFNGLGETNAMEDBUFFERPARAMETERI64VPROC m_glGetNamedBufferParameteri64v;
      PFNGLGETNAMEDBUFFERPOINTERVPROC m_glGetNamedBufferPointerv;
      PFNGLGETNAMEDBUFFERSUBDATAPROC m_glGetNamedBufferSubData;
      PFNGLCREATEFRAMEBUFFERSPROC m_glCreateFramebuffers;
      PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC m_glNamedFramebufferRenderbuffer;
      PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC m_glNamedFramebufferParameteri;
      PFNGLNAMEDFRAMEBUFFERTEXTUREPROC m_glNamedFramebufferTexture;
      PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC m_glNamedFramebufferTextureLayer;
      PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC m_glNamedFramebufferDrawBuffer;
      PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC m_glNamedFramebufferDrawBuffers;
      PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC m_glNamedFramebufferReadBuffer;
      PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC m_glInvalidateNamedFramebufferData;
      PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC m_glInvalidateNamedFramebufferSubData;
      PFNGLCLEARNAMEDFRAMEBUFFERIVPROC m_glClearNamedFramebufferiv;
      PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC m_glClearNamedFramebufferuiv;
      PFNGLCLEARNAMEDFRAMEBUFFERFVPROC m_glClearNamedFramebufferfv;
      PFNGLCLEARNAMEDFRAMEBUFFERFIPROC m_glClearNamedFramebufferfi;
      PFNGLBLITNAMEDFRAMEBUFFERPROC m_glBlitNamedFramebuffer;
      PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC m_glCheckNamedFramebufferStatus;
      PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC m_glGetNamedFramebufferParameteriv;
      PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC m_glGetNamedFramebufferAttachmentParameteriv;
      PFNGLCREATERENDERBUFFERSPROC m_glCreateRenderbuffers;
      PFNGLNAMEDRENDERBUFFERSTORAGEPROC m_glNamedRenderbufferStorage;
      PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC m_glNamedRenderbufferStorageMultisample;
      PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC m_glGetNamedRenderbufferParameteriv;
      PFNGLCREATETEXTURESPROC m_glCreateTextures;
      PFNGLTEXTUREBUFFERPROC m_glTextureBuffer;
      PFNGLTEXTUREBUFFERRANGEPROC m_glTextureBufferRange;
      PFNGLTEXTURESTORAGE1DPROC m_glTextureStorage1D;
      PFNGLTEXTURESTORAGE2DPROC m_glTextureStorage2D;
      PFNGLTEXTURESTORAGE3DPROC m_glTextureStorage3D;
      PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC m_glTextureStorage2DMultisample;
      PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC m_glTextureStorage3DMultisample;
      PFNGLTEXTURESUBIMAGE1DPROC m_glTextureSubImage1D;
      PFNGLTEXTURESUBIMAGE2DPROC m_glTextureSubImage2D;
      PFNGLTEXTURESUBIMAGE3DPROC m_glTextureSubImage3D;
      PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC m_glCompressedTextureSubImage1D;
      PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC m_glCompressedTextureSubImage2D;
      PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC m_glCompressedTextureSubImage3D;
      PFNGLCOPYTEXTURESUBIMAGE1DPROC m_glCopyTextureSubImage1D;
      PFNGLCOPYTEXTURESUBIMAGE2DPROC m_glCopyTextureSubImage2D;
      PFNGLCOPYTEXTURESUBIMAGE3DPROC m_glCopyTextureSubImage3D;
      PFNGLTEXTUREPARAMETERFPROC m_glTextureParameterf;
      PFNGLTEXTUREPARAMETERFVPROC m_glTextureParameterfv;
      PFNGLTEXTUREPARAMETERIPROC m_glTextureParameteri;
      PFNGLTEXTUREPARAMETERIIVPROC m_glTextureParameterIiv;
      PFNGLTEXTUREPARAMETERIUIVPROC m_glTextureParameterIuiv;
      PFNGLTEXTUREPARAMETERIVPROC m_glTextureParameteriv;
      PFNGLGENERATETEXTUREMIPMAPPROC m_glGenerateTextureMipmap;
      PFNGLBINDTEXTUREUNITPROC m_glBindTextureUnit;
      PFNGLGETTEXTUREIMAGEPROC m_glGetTextureImage;
      PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC m_glGetCompressedTextureImage;
      PFNGLGETTEXTURELEVELPARAMETERFVPROC m_glGetTextureLevelParameterfv;
      PFNGLGETTEXTURELEVELPARAMETERIVPROC m_glGetTextureLevelParameteriv;
      PFNGLGETTEXTUREPARAMETERFVPROC m_glGetTextureParameterfv;
      PFNGLGETTEXTUREPARAMETERIIVPROC m_glGetTextureParameterIiv;
      PFNGLGETTEXTUREPARAMETERIUIVPROC m_glGetTextureParameterIuiv;
      PFNGLGETTEXTUREPARAMETERIVPROC m_glGetTextureParameteriv;
      PFNGLCREATEVERTEXARRAYSPROC m_glCreateVertexArrays;
      PFNGLDISABLEVERTEXARRAYATTRIBPROC m_glDisableVertexArrayAttrib;
      PFNGLENABLEVERTEXARRAYATTRIBPROC m_glEnableVertexArrayAttrib;
      PFNGLVERTEXARRAYELEMENTBUFFERPROC m_glVertexArrayElementBuffer;
      PFNGLVERTEXARRAYVERTEXBUFFERPROC m_glVertexArrayVertexBuffer;
      PFNGLVERTEXARRAYVERTEXBUFFERSPROC m_glVertexArrayVertexBuffers;
      PFNGLVERTEXARRAYATTRIBBINDINGPROC m_glVertexArrayAttribBinding;
      PFNGLVERTEXARRAYATTRIBFORMATPROC m_glVertexArrayAttribFormat;
      PFNGLVERTEXARRAYATTRIBIFORMATPROC m_glVertexArrayAttribIFormat;
      PFNGLVERTEXARRAYATTRIBLFORMATPROC m_glVertexArrayAttribLFormat;
      PFNGLVERTEXARRAYBINDINGDIVISORPROC m_glVertexArrayBindingDivisor;
      PFNGLGETVERTEXARRAYIVPROC m_glGetVertexArrayiv;
      PFNGLGETVERTEXARRAYINDEXEDIVPROC m_glGetVertexArrayIndexediv;
      PFNGLGETVERTEXARRAYINDEXED64IVPROC m_glGetVertexArrayIndexed64iv;
      PFNGLCREATESAMPLERSPROC m_glCreateSamplers;
      PFNGLCREATEPROGRAMPIPELINESPROC m_glCreateProgramPipelines;
      PFNGLCREATEQUERIESPROC m_glCreateQueries;
      PFNGLGETQUERYBUFFEROBJECTI64VPROC m_glGetQueryBufferObjecti64v;
      PFNGLGETQUERYBUFFEROBJECTIVPROC m_glGetQueryBufferObjectiv;
      PFNGLGETQUERYBUFFEROBJECTUI64VPROC m_glGetQueryBufferObjectui64v;
      PFNGLGETQUERYBUFFEROBJECTUIVPROC m_glGetQueryBufferObjectuiv;
      PFNGLMEMORYBARRIERBYREGIONPROC m_glMemoryBarrierByRegion;
      PFNGLGETTEXTURESUBIMAGEPROC m_glGetTextureSubImage;
      PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC m_glGetCompressedTextureSubImage;
      PFNGLGETGRAPHICSRESETSTATUSPROC m_glGetGraphicsResetStatus;
      PFNGLGETNCOMPRESSEDTEXIMAGEPROC m_glGetnCompressedTexImage;
      PFNGLGETNTEXIMAGEPROC m_glGetnTexImage;
      PFNGLGETNUNIFORMDVPROC m_glGetnUniformdv;
      PFNGLGETNUNIFORMFVPROC m_glGetnUniformfv;
      PFNGLGETNUNIFORMIVPROC m_glGetnUniformiv;
      PFNGLGETNUNIFORMUIVPROC m_glGetnUniformuiv;
      PFNGLREADNPIXELSPROC m_glReadnPixels;
      PFNGLGETNMAPDVPROC m_glGetnMapdv;
      PFNGLGETNMAPFVPROC m_glGetnMapfv;
      PFNGLGETNMAPIVPROC m_glGetnMapiv;
      PFNGLGETNPIXELMAPFVPROC m_glGetnPixelMapfv;
      PFNGLGETNPIXELMAPUIVPROC m_glGetnPixelMapuiv;
      PFNGLGETNPIXELMAPUSVPROC m_glGetnPixelMapusv;
      PFNGLGETNPOLYGONSTIPPLEPROC m_glGetnPolygonStipple;
      PFNGLGETNCOLORTABLEPROC m_glGetnColorTable;
      PFNGLGETNCONVOLUTIONFILTERPROC m_glGetnConvolutionFilter;
      PFNGLGETNSEPARABLEFILTERPROC m_glGetnSeparableFilter;
      PFNGLGETNHISTOGRAMPROC m_glGetnHistogram;
      PFNGLGETNMINMAXPROC m_glGetnMinmax;
      PFNGLTEXTUREBARRIERPROC m_glTextureBarrier;
      PFNGLTBUFFERMASK3DFXPROC m_glTbufferMask3DFX;
      PFNGLDEBUGMESSAGEENABLEAMDPROC m_glDebugMessageEnableAMD;
      PFNGLDEBUGMESSAGEINSERTAMDPROC m_glDebugMessageInsertAMD;
      PFNGLDEBUGMESSAGECALLBACKAMDPROC m_glDebugMessageCallbackAMD;
      PFNGLGETDEBUGMESSAGELOGAMDPROC m_glGetDebugMessageLogAMD;
      PFNGLBLENDFUNCINDEXEDAMDPROC m_glBlendFuncIndexedAMD;
      PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC m_glBlendFuncSeparateIndexedAMD;
      PFNGLBLENDEQUATIONINDEXEDAMDPROC m_glBlendEquationIndexedAMD;
      PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC m_glBlendEquationSeparateIndexedAMD;
      PFNGLUNIFORM1I64NVPROC m_glUniform1i64NV;
      PFNGLUNIFORM2I64NVPROC m_glUniform2i64NV;
      PFNGLUNIFORM3I64NVPROC m_glUniform3i64NV;
      PFNGLUNIFORM4I64NVPROC m_glUniform4i64NV;
      PFNGLUNIFORM1I64VNVPROC m_glUniform1i64vNV;
      PFNGLUNIFORM2I64VNVPROC m_glUniform2i64vNV;
      PFNGLUNIFORM3I64VNVPROC m_glUniform3i64vNV;
      PFNGLUNIFORM4I64VNVPROC m_glUniform4i64vNV;
      PFNGLUNIFORM1UI64NVPROC m_glUniform1ui64NV;
      PFNGLUNIFORM2UI64NVPROC m_glUniform2ui64NV;
      PFNGLUNIFORM3UI64NVPROC m_glUniform3ui64NV;
      PFNGLUNIFORM4UI64NVPROC m_glUniform4ui64NV;
      PFNGLUNIFORM1UI64VNVPROC m_glUniform1ui64vNV;
      PFNGLUNIFORM2UI64VNVPROC m_glUniform2ui64vNV;
      PFNGLUNIFORM3UI64VNVPROC m_glUniform3ui64vNV;
      PFNGLUNIFORM4UI64VNVPROC m_glUniform4ui64vNV;
      PFNGLGETUNIFORMI64VNVPROC m_glGetUniformi64vNV;
      PFNGLGETUNIFORMUI64VNVPROC m_glGetUniformui64vNV;
      PFNGLPROGRAMUNIFORM1I64NVPROC m_glProgramUniform1i64NV;
      PFNGLPROGRAMUNIFORM2I64NVPROC m_glProgramUniform2i64NV;
      PFNGLPROGRAMUNIFORM3I64NVPROC m_glProgramUniform3i64NV;
      PFNGLPROGRAMUNIFORM4I64NVPROC m_glProgramUniform4i64NV;
      PFNGLPROGRAMUNIFORM1I64VNVPROC m_glProgramUniform1i64vNV;
      PFNGLPROGRAMUNIFORM2I64VNVPROC m_glProgramUniform2i64vNV;
      PFNGLPROGRAMUNIFORM3I64VNVPROC m_glProgramUniform3i64vNV;
      PFNGLPROGRAMUNIFORM4I64VNVPROC m_glProgramUniform4i64vNV;
      PFNGLPROGRAMUNIFORM1UI64NVPROC m_glProgramUniform1ui64NV;
      PFNGLPROGRAMUNIFORM2UI64NVPROC m_glProgramUniform2ui64NV;
      PFNGLPROGRAMUNIFORM3UI64NVPROC m_glProgramUniform3ui64NV;
      PFNGLPROGRAMUNIFORM4UI64NVPROC m_glProgramUniform4ui64NV;
      PFNGLPROGRAMUNIFORM1UI64VNVPROC m_glProgramUniform1ui64vNV;
      PFNGLPROGRAMUNIFORM2UI64VNVPROC m_glProgramUniform2ui64vNV;
      PFNGLPROGRAMUNIFORM3UI64VNVPROC m_glProgramUniform3ui64vNV;
      PFNGLPROGRAMUNIFORM4UI64VNVPROC m_glProgramUniform4ui64vNV;
      PFNGLVERTEXATTRIBPARAMETERIAMDPROC m_glVertexAttribParameteriAMD;
      PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC m_glMultiDrawArraysIndirectAMD;
      PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC m_glMultiDrawElementsIndirectAMD;
      PFNGLGENNAMESAMDPROC m_glGenNamesAMD;
      PFNGLDELETENAMESAMDPROC m_glDeleteNamesAMD;
      PFNGLISNAMEAMDPROC m_glIsNameAMD;
      PFNGLQUERYOBJECTPARAMETERUIAMDPROC m_glQueryObjectParameteruiAMD;
      PFNGLGETPERFMONITORGROUPSAMDPROC m_glGetPerfMonitorGroupsAMD;
      PFNGLGETPERFMONITORCOUNTERSAMDPROC m_glGetPerfMonitorCountersAMD;
      PFNGLGETPERFMONITORGROUPSTRINGAMDPROC m_glGetPerfMonitorGroupStringAMD;
      PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC m_glGetPerfMonitorCounterStringAMD;
      PFNGLGETPERFMONITORCOUNTERINFOAMDPROC m_glGetPerfMonitorCounterInfoAMD;
      PFNGLGENPERFMONITORSAMDPROC m_glGenPerfMonitorsAMD;
      PFNGLDELETEPERFMONITORSAMDPROC m_glDeletePerfMonitorsAMD;
      PFNGLSELECTPERFMONITORCOUNTERSAMDPROC m_glSelectPerfMonitorCountersAMD;
      PFNGLBEGINPERFMONITORAMDPROC m_glBeginPerfMonitorAMD;
      PFNGLENDPERFMONITORAMDPROC m_glEndPerfMonitorAMD;
      PFNGLGETPERFMONITORCOUNTERDATAAMDPROC m_glGetPerfMonitorCounterDataAMD;
      PFNGLSETMULTISAMPLEFVAMDPROC m_glSetMultisamplefvAMD;
      PFNGLTEXSTORAGESPARSEAMDPROC m_glTexStorageSparseAMD;
      PFNGLTEXTURESTORAGESPARSEAMDPROC m_glTextureStorageSparseAMD;
      PFNGLSTENCILOPVALUEAMDPROC m_glStencilOpValueAMD;
      PFNGLTESSELLATIONFACTORAMDPROC m_glTessellationFactorAMD;
      PFNGLTESSELLATIONMODEAMDPROC m_glTessellationModeAMD;
      PFNGLELEMENTPOINTERAPPLEPROC m_glElementPointerAPPLE;
      PFNGLDRAWELEMENTARRAYAPPLEPROC m_glDrawElementArrayAPPLE;
      PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC m_glDrawRangeElementArrayAPPLE;
      PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC m_glMultiDrawElementArrayAPPLE;
      PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC m_glMultiDrawRangeElementArrayAPPLE;
      PFNGLGENFENCESAPPLEPROC m_glGenFencesAPPLE;
      PFNGLDELETEFENCESAPPLEPROC m_glDeleteFencesAPPLE;
      PFNGLSETFENCEAPPLEPROC m_glSetFenceAPPLE;
      PFNGLISFENCEAPPLEPROC m_glIsFenceAPPLE;
      PFNGLTESTFENCEAPPLEPROC m_glTestFenceAPPLE;
      PFNGLFINISHFENCEAPPLEPROC m_glFinishFenceAPPLE;
      PFNGLTESTOBJECTAPPLEPROC m_glTestObjectAPPLE;
      PFNGLFINISHOBJECTAPPLEPROC m_glFinishObjectAPPLE;
      PFNGLBUFFERPARAMETERIAPPLEPROC m_glBufferParameteriAPPLE;
      PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC m_glFlushMappedBufferRangeAPPLE;
      PFNGLOBJECTPURGEABLEAPPLEPROC m_glObjectPurgeableAPPLE;
      PFNGLOBJECTUNPURGEABLEAPPLEPROC m_glObjectUnpurgeableAPPLE;
      PFNGLGETOBJECTPARAMETERIVAPPLEPROC m_glGetObjectParameterivAPPLE;
      PFNGLTEXTURERANGEAPPLEPROC m_glTextureRangeAPPLE;
      PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC m_glGetTexParameterPointervAPPLE;
      PFNGLBINDVERTEXARRAYAPPLEPROC m_glBindVertexArrayAPPLE;
      PFNGLDELETEVERTEXARRAYSAPPLEPROC m_glDeleteVertexArraysAPPLE;
      PFNGLGENVERTEXARRAYSAPPLEPROC m_glGenVertexArraysAPPLE;
      PFNGLISVERTEXARRAYAPPLEPROC m_glIsVertexArrayAPPLE;
      PFNGLVERTEXARRAYRANGEAPPLEPROC m_glVertexArrayRangeAPPLE;
      PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC m_glFlushVertexArrayRangeAPPLE;
      PFNGLVERTEXARRAYPARAMETERIAPPLEPROC m_glVertexArrayParameteriAPPLE;
      PFNGLENABLEVERTEXATTRIBAPPLEPROC m_glEnableVertexAttribAPPLE;
      PFNGLDISABLEVERTEXATTRIBAPPLEPROC m_glDisableVertexAttribAPPLE;
      PFNGLISVERTEXATTRIBENABLEDAPPLEPROC m_glIsVertexAttribEnabledAPPLE;
      PFNGLMAPVERTEXATTRIB1DAPPLEPROC m_glMapVertexAttrib1dAPPLE;
      PFNGLMAPVERTEXATTRIB1FAPPLEPROC m_glMapVertexAttrib1fAPPLE;
      PFNGLMAPVERTEXATTRIB2DAPPLEPROC m_glMapVertexAttrib2dAPPLE;
      PFNGLMAPVERTEXATTRIB2FAPPLEPROC m_glMapVertexAttrib2fAPPLE;
      PFNGLGETTEXTUREHANDLEARBPROC m_glGetTextureHandleARB;
      PFNGLGETTEXTURESAMPLERHANDLEARBPROC m_glGetTextureSamplerHandleARB;
      PFNGLMAKETEXTUREHANDLERESIDENTARBPROC m_glMakeTextureHandleResidentARB;
      PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC m_glMakeTextureHandleNonResidentARB;
      PFNGLGETIMAGEHANDLEARBPROC m_glGetImageHandleARB;
      PFNGLMAKEIMAGEHANDLERESIDENTARBPROC m_glMakeImageHandleResidentARB;
      PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC m_glMakeImageHandleNonResidentARB;
      PFNGLUNIFORMHANDLEUI64ARBPROC m_glUniformHandleui64ARB;
      PFNGLUNIFORMHANDLEUI64VARBPROC m_glUniformHandleui64vARB;
      PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC m_glProgramUniformHandleui64ARB;
      PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC m_glProgramUniformHandleui64vARB;
      PFNGLISTEXTUREHANDLERESIDENTARBPROC m_glIsTextureHandleResidentARB;
      PFNGLISIMAGEHANDLERESIDENTARBPROC m_glIsImageHandleResidentARB;
      PFNGLVERTEXATTRIBL1UI64ARBPROC m_glVertexAttribL1ui64ARB;
      PFNGLVERTEXATTRIBL1UI64VARBPROC m_glVertexAttribL1ui64vARB;
      PFNGLGETVERTEXATTRIBLUI64VARBPROC m_glGetVertexAttribLui64vARB;
      PFNGLCREATESYNCFROMCLEVENTARBPROC m_glCreateSyncFromCLeventARB;
      PFNGLCLAMPCOLORARBPROC m_glClampColorARB;
      PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC m_glDispatchComputeGroupSizeARB;
      PFNGLDEBUGMESSAGECONTROLARBPROC m_glDebugMessageControlARB;
      PFNGLDEBUGMESSAGEINSERTARBPROC m_glDebugMessageInsertARB;
      PFNGLDEBUGMESSAGECALLBACKARBPROC m_glDebugMessageCallbackARB;
      PFNGLGETDEBUGMESSAGELOGARBPROC m_glGetDebugMessageLogARB;
      PFNGLDRAWBUFFERSARBPROC m_glDrawBuffersARB;
      PFNGLBLENDEQUATIONIARBPROC m_glBlendEquationiARB;
      PFNGLBLENDEQUATIONSEPARATEIARBPROC m_glBlendEquationSeparateiARB;
      PFNGLBLENDFUNCIARBPROC m_glBlendFunciARB;
      PFNGLBLENDFUNCSEPARATEIARBPROC m_glBlendFuncSeparateiARB;
      PFNGLDRAWARRAYSINSTANCEDARBPROC m_glDrawArraysInstancedARB;
      PFNGLDRAWELEMENTSINSTANCEDARBPROC m_glDrawElementsInstancedARB;
      PFNGLPROGRAMSTRINGARBPROC m_glProgramStringARB;
      PFNGLBINDPROGRAMARBPROC m_glBindProgramARB;
      PFNGLDELETEPROGRAMSARBPROC m_glDeleteProgramsARB;
      PFNGLGENPROGRAMSARBPROC m_glGenProgramsARB;
      PFNGLPROGRAMENVPARAMETER4DARBPROC m_glProgramEnvParameter4dARB;
      PFNGLPROGRAMENVPARAMETER4DVARBPROC m_glProgramEnvParameter4dvARB;
      PFNGLPROGRAMENVPARAMETER4FARBPROC m_glProgramEnvParameter4fARB;
      PFNGLPROGRAMENVPARAMETER4FVARBPROC m_glProgramEnvParameter4fvARB;
      PFNGLPROGRAMLOCALPARAMETER4DARBPROC m_glProgramLocalParameter4dARB;
      PFNGLPROGRAMLOCALPARAMETER4DVARBPROC m_glProgramLocalParameter4dvARB;
      PFNGLPROGRAMLOCALPARAMETER4FARBPROC m_glProgramLocalParameter4fARB;
      PFNGLPROGRAMLOCALPARAMETER4FVARBPROC m_glProgramLocalParameter4fvARB;
      PFNGLGETPROGRAMENVPARAMETERDVARBPROC m_glGetProgramEnvParameterdvARB;
      PFNGLGETPROGRAMENVPARAMETERFVARBPROC m_glGetProgramEnvParameterfvARB;
      PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC m_glGetProgramLocalParameterdvARB;
      PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC m_glGetProgramLocalParameterfvARB;
      PFNGLGETPROGRAMIVARBPROC m_glGetProgramivARB;
      PFNGLGETPROGRAMSTRINGARBPROC m_glGetProgramStringARB;
      PFNGLISPROGRAMARBPROC m_glIsProgramARB;
      PFNGLPROGRAMPARAMETERIARBPROC m_glProgramParameteriARB;
      PFNGLFRAMEBUFFERTEXTUREARBPROC m_glFramebufferTextureARB;
      PFNGLFRAMEBUFFERTEXTURELAYERARBPROC m_glFramebufferTextureLayerARB;
      PFNGLFRAMEBUFFERTEXTUREFACEARBPROC m_glFramebufferTextureFaceARB;
      PFNGLCOLORTABLEPROC m_glColorTable;
      PFNGLCOLORTABLEPARAMETERFVPROC m_glColorTableParameterfv;
      PFNGLCOLORTABLEPARAMETERIVPROC m_glColorTableParameteriv;
      PFNGLCOPYCOLORTABLEPROC m_glCopyColorTable;
      PFNGLGETCOLORTABLEPROC m_glGetColorTable;
      PFNGLGETCOLORTABLEPARAMETERFVPROC m_glGetColorTableParameterfv;
      PFNGLGETCOLORTABLEPARAMETERIVPROC m_glGetColorTableParameteriv;
      PFNGLCOLORSUBTABLEPROC m_glColorSubTable;
      PFNGLCOPYCOLORSUBTABLEPROC m_glCopyColorSubTable;
      PFNGLCONVOLUTIONFILTER1DPROC m_glConvolutionFilter1D;
      PFNGLCONVOLUTIONFILTER2DPROC m_glConvolutionFilter2D;
      PFNGLCONVOLUTIONPARAMETERFPROC m_glConvolutionParameterf;
      PFNGLCONVOLUTIONPARAMETERFVPROC m_glConvolutionParameterfv;
      PFNGLCONVOLUTIONPARAMETERIPROC m_glConvolutionParameteri;
      PFNGLCONVOLUTIONPARAMETERIVPROC m_glConvolutionParameteriv;
      PFNGLCOPYCONVOLUTIONFILTER1DPROC m_glCopyConvolutionFilter1D;
      PFNGLCOPYCONVOLUTIONFILTER2DPROC m_glCopyConvolutionFilter2D;
      PFNGLGETCONVOLUTIONFILTERPROC m_glGetConvolutionFilter;
      PFNGLGETCONVOLUTIONPARAMETERFVPROC m_glGetConvolutionParameterfv;
      PFNGLGETCONVOLUTIONPARAMETERIVPROC m_glGetConvolutionParameteriv;
      PFNGLGETSEPARABLEFILTERPROC m_glGetSeparableFilter;
      PFNGLSEPARABLEFILTER2DPROC m_glSeparableFilter2D;
      PFNGLGETHISTOGRAMPROC m_glGetHistogram;
      PFNGLGETHISTOGRAMPARAMETERFVPROC m_glGetHistogramParameterfv;
      PFNGLGETHISTOGRAMPARAMETERIVPROC m_glGetHistogramParameteriv;
      PFNGLGETMINMAXPROC m_glGetMinmax;
      PFNGLGETMINMAXPARAMETERFVPROC m_glGetMinmaxParameterfv;
      PFNGLGETMINMAXPARAMETERIVPROC m_glGetMinmaxParameteriv;
      PFNGLHISTOGRAMPROC m_glHistogram;
      PFNGLMINMAXPROC m_glMinmax;
      PFNGLRESETHISTOGRAMPROC m_glResetHistogram;
      PFNGLRESETMINMAXPROC m_glResetMinmax;
      PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC m_glMultiDrawArraysIndirectCountARB;
      PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC m_glMultiDrawElementsIndirectCountARB;
      PFNGLVERTEXATTRIBDIVISORARBPROC m_glVertexAttribDivisorARB;
      PFNGLCURRENTPALETTEMATRIXARBPROC m_glCurrentPaletteMatrixARB;
      PFNGLMATRIXINDEXUBVARBPROC m_glMatrixIndexubvARB;
      PFNGLMATRIXINDEXUSVARBPROC m_glMatrixIndexusvARB;
      PFNGLMATRIXINDEXUIVARBPROC m_glMatrixIndexuivARB;
      PFNGLMATRIXINDEXPOINTERARBPROC m_glMatrixIndexPointerARB;
      PFNGLSAMPLECOVERAGEARBPROC m_glSampleCoverageARB;
      PFNGLACTIVETEXTUREARBPROC m_glActiveTextureARB;
      PFNGLCLIENTACTIVETEXTUREARBPROC m_glClientActiveTextureARB;
      PFNGLMULTITEXCOORD1DARBPROC m_glMultiTexCoord1dARB;
      PFNGLMULTITEXCOORD1DVARBPROC m_glMultiTexCoord1dvARB;
      PFNGLMULTITEXCOORD1FARBPROC m_glMultiTexCoord1fARB;
      PFNGLMULTITEXCOORD1FVARBPROC m_glMultiTexCoord1fvARB;
      PFNGLMULTITEXCOORD1IARBPROC m_glMultiTexCoord1iARB;
      PFNGLMULTITEXCOORD1IVARBPROC m_glMultiTexCoord1ivARB;
      PFNGLMULTITEXCOORD1SARBPROC m_glMultiTexCoord1sARB;
      PFNGLMULTITEXCOORD1SVARBPROC m_glMultiTexCoord1svARB;
      PFNGLMULTITEXCOORD2DARBPROC m_glMultiTexCoord2dARB;
      PFNGLMULTITEXCOORD2DVARBPROC m_glMultiTexCoord2dvARB;
      PFNGLMULTITEXCOORD2FARBPROC m_glMultiTexCoord2fARB;
      PFNGLMULTITEXCOORD2FVARBPROC m_glMultiTexCoord2fvARB;
      PFNGLMULTITEXCOORD2IARBPROC m_glMultiTexCoord2iARB;
      PFNGLMULTITEXCOORD2IVARBPROC m_glMultiTexCoord2ivARB;
      PFNGLMULTITEXCOORD2SARBPROC m_glMultiTexCoord2sARB;
      PFNGLMULTITEXCOORD2SVARBPROC m_glMultiTexCoord2svARB;
      PFNGLMULTITEXCOORD3DARBPROC m_glMultiTexCoord3dARB;
      PFNGLMULTITEXCOORD3DVARBPROC m_glMultiTexCoord3dvARB;
      PFNGLMULTITEXCOORD3FARBPROC m_glMultiTexCoord3fARB;
      PFNGLMULTITEXCOORD3FVARBPROC m_glMultiTexCoord3fvARB;
      PFNGLMULTITEXCOORD3IARBPROC m_glMultiTexCoord3iARB;
      PFNGLMULTITEXCOORD3IVARBPROC m_glMultiTexCoord3ivARB;
      PFNGLMULTITEXCOORD3SARBPROC m_glMultiTexCoord3sARB;
      PFNGLMULTITEXCOORD3SVARBPROC m_glMultiTexCoord3svARB;
      PFNGLMULTITEXCOORD4DARBPROC m_glMultiTexCoord4dARB;
      PFNGLMULTITEXCOORD4DVARBPROC m_glMultiTexCoord4dvARB;
      PFNGLMULTITEXCOORD4FARBPROC m_glMultiTexCoord4fARB;
      PFNGLMULTITEXCOORD4FVARBPROC m_glMultiTexCoord4fvARB;
      PFNGLMULTITEXCOORD4IARBPROC m_glMultiTexCoord4iARB;
      PFNGLMULTITEXCOORD4IVARBPROC m_glMultiTexCoord4ivARB;
      PFNGLMULTITEXCOORD4SARBPROC m_glMultiTexCoord4sARB;
      PFNGLMULTITEXCOORD4SVARBPROC m_glMultiTexCoord4svARB;
      PFNGLGENQUERIESARBPROC m_glGenQueriesARB;
      PFNGLDELETEQUERIESARBPROC m_glDeleteQueriesARB;
      PFNGLISQUERYARBPROC m_glIsQueryARB;
      PFNGLBEGINQUERYARBPROC m_glBeginQueryARB;
      PFNGLENDQUERYARBPROC m_glEndQueryARB;
      PFNGLGETQUERYIVARBPROC m_glGetQueryivARB;
      PFNGLGETQUERYOBJECTIVARBPROC m_glGetQueryObjectivARB;
      PFNGLGETQUERYOBJECTUIVARBPROC m_glGetQueryObjectuivARB;
      PFNGLPOINTPARAMETERFARBPROC m_glPointParameterfARB;
      PFNGLPOINTPARAMETERFVARBPROC m_glPointParameterfvARB;
      PFNGLGETGRAPHICSRESETSTATUSARBPROC m_glGetGraphicsResetStatusARB;
      PFNGLGETNTEXIMAGEARBPROC m_glGetnTexImageARB;
      PFNGLREADNPIXELSARBPROC m_glReadnPixelsARB;
      PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC m_glGetnCompressedTexImageARB;
      PFNGLGETNUNIFORMFVARBPROC m_glGetnUniformfvARB;
      PFNGLGETNUNIFORMIVARBPROC m_glGetnUniformivARB;
      PFNGLGETNUNIFORMUIVARBPROC m_glGetnUniformuivARB;
      PFNGLGETNUNIFORMDVARBPROC m_glGetnUniformdvARB;
      PFNGLGETNMAPDVARBPROC m_glGetnMapdvARB;
      PFNGLGETNMAPFVARBPROC m_glGetnMapfvARB;
      PFNGLGETNMAPIVARBPROC m_glGetnMapivARB;
      PFNGLGETNPIXELMAPFVARBPROC m_glGetnPixelMapfvARB;
      PFNGLGETNPIXELMAPUIVARBPROC m_glGetnPixelMapuivARB;
      PFNGLGETNPIXELMAPUSVARBPROC m_glGetnPixelMapusvARB;
      PFNGLGETNPOLYGONSTIPPLEARBPROC m_glGetnPolygonStippleARB;
      PFNGLGETNCOLORTABLEARBPROC m_glGetnColorTableARB;
      PFNGLGETNCONVOLUTIONFILTERARBPROC m_glGetnConvolutionFilterARB;
      PFNGLGETNSEPARABLEFILTERARBPROC m_glGetnSeparableFilterARB;
      PFNGLGETNHISTOGRAMARBPROC m_glGetnHistogramARB;
      PFNGLGETNMINMAXARBPROC m_glGetnMinmaxARB;
      PFNGLMINSAMPLESHADINGARBPROC m_glMinSampleShadingARB;
      PFNGLDELETEOBJECTARBPROC m_glDeleteObjectARB;
      PFNGLGETHANDLEARBPROC m_glGetHandleARB;
      PFNGLDETACHOBJECTARBPROC m_glDetachObjectARB;
      PFNGLCREATESHADEROBJECTARBPROC m_glCreateShaderObjectARB;
      PFNGLSHADERSOURCEARBPROC m_glShaderSourceARB;
      PFNGLCOMPILESHADERARBPROC m_glCompileShaderARB;
      PFNGLCREATEPROGRAMOBJECTARBPROC m_glCreateProgramObjectARB;
      PFNGLATTACHOBJECTARBPROC m_glAttachObjectARB;
      PFNGLLINKPROGRAMARBPROC m_glLinkProgramARB;
      PFNGLUSEPROGRAMOBJECTARBPROC m_glUseProgramObjectARB;
      PFNGLVALIDATEPROGRAMARBPROC m_glValidateProgramARB;
      PFNGLUNIFORM1FARBPROC m_glUniform1fARB;
      PFNGLUNIFORM2FARBPROC m_glUniform2fARB;
      PFNGLUNIFORM3FARBPROC m_glUniform3fARB;
      PFNGLUNIFORM4FARBPROC m_glUniform4fARB;
      PFNGLUNIFORM1IARBPROC m_glUniform1iARB;
      PFNGLUNIFORM2IARBPROC m_glUniform2iARB;
      PFNGLUNIFORM3IARBPROC m_glUniform3iARB;
      PFNGLUNIFORM4IARBPROC m_glUniform4iARB;
      PFNGLUNIFORM1FVARBPROC m_glUniform1fvARB;
      PFNGLUNIFORM2FVARBPROC m_glUniform2fvARB;
      PFNGLUNIFORM3FVARBPROC m_glUniform3fvARB;
      PFNGLUNIFORM4FVARBPROC m_glUniform4fvARB;
      PFNGLUNIFORM1IVARBPROC m_glUniform1ivARB;
      PFNGLUNIFORM2IVARBPROC m_glUniform2ivARB;
      PFNGLUNIFORM3IVARBPROC m_glUniform3ivARB;
      PFNGLUNIFORM4IVARBPROC m_glUniform4ivARB;
      PFNGLUNIFORMMATRIX2FVARBPROC m_glUniformMatrix2fvARB;
      PFNGLUNIFORMMATRIX3FVARBPROC m_glUniformMatrix3fvARB;
      PFNGLUNIFORMMATRIX4FVARBPROC m_glUniformMatrix4fvARB;
      PFNGLGETOBJECTPARAMETERFVARBPROC m_glGetObjectParameterfvARB;
      PFNGLGETOBJECTPARAMETERIVARBPROC m_glGetObjectParameterivARB;
      PFNGLGETINFOLOGARBPROC m_glGetInfoLogARB;
      PFNGLGETATTACHEDOBJECTSARBPROC m_glGetAttachedObjectsARB;
      PFNGLGETUNIFORMLOCATIONARBPROC m_glGetUniformLocationARB;
      PFNGLGETACTIVEUNIFORMARBPROC m_glGetActiveUniformARB;
      PFNGLGETUNIFORMFVARBPROC m_glGetUniformfvARB;
      PFNGLGETUNIFORMIVARBPROC m_glGetUniformivARB;
      PFNGLGETSHADERSOURCEARBPROC m_glGetShaderSourceARB;
      PFNGLNAMEDSTRINGARBPROC m_glNamedStringARB;
      PFNGLDELETENAMEDSTRINGARBPROC m_glDeleteNamedStringARB;
      PFNGLCOMPILESHADERINCLUDEARBPROC m_glCompileShaderIncludeARB;
      PFNGLISNAMEDSTRINGARBPROC m_glIsNamedStringARB;
      PFNGLGETNAMEDSTRINGARBPROC m_glGetNamedStringARB;
      PFNGLGETNAMEDSTRINGIVARBPROC m_glGetNamedStringivARB;
      PFNGLBUFFERPAGECOMMITMENTARBPROC m_glBufferPageCommitmentARB;
      PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC m_glNamedBufferPageCommitmentEXT;
      PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC m_glNamedBufferPageCommitmentARB;
      PFNGLTEXPAGECOMMITMENTARBPROC m_glTexPageCommitmentARB;
      PFNGLTEXBUFFERARBPROC m_glTexBufferARB;
      PFNGLCOMPRESSEDTEXIMAGE3DARBPROC m_glCompressedTexImage3DARB;
      PFNGLCOMPRESSEDTEXIMAGE2DARBPROC m_glCompressedTexImage2DARB;
      PFNGLCOMPRESSEDTEXIMAGE1DARBPROC m_glCompressedTexImage1DARB;
      PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC m_glCompressedTexSubImage3DARB;
      PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC m_glCompressedTexSubImage2DARB;
      PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC m_glCompressedTexSubImage1DARB;
      PFNGLGETCOMPRESSEDTEXIMAGEARBPROC m_glGetCompressedTexImageARB;
      PFNGLLOADTRANSPOSEMATRIXFARBPROC m_glLoadTransposeMatrixfARB;
      PFNGLLOADTRANSPOSEMATRIXDARBPROC m_glLoadTransposeMatrixdARB;
      PFNGLMULTTRANSPOSEMATRIXFARBPROC m_glMultTransposeMatrixfARB;
      PFNGLMULTTRANSPOSEMATRIXDARBPROC m_glMultTransposeMatrixdARB;
      PFNGLWEIGHTBVARBPROC m_glWeightbvARB;
      PFNGLWEIGHTSVARBPROC m_glWeightsvARB;
      PFNGLWEIGHTIVARBPROC m_glWeightivARB;
      PFNGLWEIGHTFVARBPROC m_glWeightfvARB;
      PFNGLWEIGHTDVARBPROC m_glWeightdvARB;
      PFNGLWEIGHTUBVARBPROC m_glWeightubvARB;
      PFNGLWEIGHTUSVARBPROC m_glWeightusvARB;
      PFNGLWEIGHTUIVARBPROC m_glWeightuivARB;
      PFNGLWEIGHTPOINTERARBPROC m_glWeightPointerARB;
      PFNGLVERTEXBLENDARBPROC m_glVertexBlendARB;
      PFNGLBINDBUFFERARBPROC m_glBindBufferARB;
      PFNGLDELETEBUFFERSARBPROC m_glDeleteBuffersARB;
      PFNGLGENBUFFERSARBPROC m_glGenBuffersARB;
      PFNGLISBUFFERARBPROC m_glIsBufferARB;
      PFNGLBUFFERDATAARBPROC m_glBufferDataARB;
      PFNGLBUFFERSUBDATAARBPROC m_glBufferSubDataARB;
      PFNGLGETBUFFERSUBDATAARBPROC m_glGetBufferSubDataARB;
      PFNGLMAPBUFFERARBPROC m_glMapBufferARB;
      PFNGLUNMAPBUFFERARBPROC m_glUnmapBufferARB;
      PFNGLGETBUFFERPARAMETERIVARBPROC m_glGetBufferParameterivARB;
      PFNGLGETBUFFERPOINTERVARBPROC m_glGetBufferPointervARB;
      PFNGLVERTEXATTRIB1DARBPROC m_glVertexAttrib1dARB;
      PFNGLVERTEXATTRIB1DVARBPROC m_glVertexAttrib1dvARB;
      PFNGLVERTEXATTRIB1FARBPROC m_glVertexAttrib1fARB;
      PFNGLVERTEXATTRIB1FVARBPROC m_glVertexAttrib1fvARB;
      PFNGLVERTEXATTRIB1SARBPROC m_glVertexAttrib1sARB;
      PFNGLVERTEXATTRIB1SVARBPROC m_glVertexAttrib1svARB;
      PFNGLVERTEXATTRIB2DARBPROC m_glVertexAttrib2dARB;
      PFNGLVERTEXATTRIB2DVARBPROC m_glVertexAttrib2dvARB;
      PFNGLVERTEXATTRIB2FARBPROC m_glVertexAttrib2fARB;
      PFNGLVERTEXATTRIB2FVARBPROC m_glVertexAttrib2fvARB;
      PFNGLVERTEXATTRIB2SARBPROC m_glVertexAttrib2sARB;
      PFNGLVERTEXATTRIB2SVARBPROC m_glVertexAttrib2svARB;
      PFNGLVERTEXATTRIB3DARBPROC m_glVertexAttrib3dARB;
      PFNGLVERTEXATTRIB3DVARBPROC m_glVertexAttrib3dvARB;
      PFNGLVERTEXATTRIB3FARBPROC m_glVertexAttrib3fARB;
      PFNGLVERTEXATTRIB3FVARBPROC m_glVertexAttrib3fvARB;
      PFNGLVERTEXATTRIB3SARBPROC m_glVertexAttrib3sARB;
      PFNGLVERTEXATTRIB3SVARBPROC m_glVertexAttrib3svARB;
      PFNGLVERTEXATTRIB4NBVARBPROC m_glVertexAttrib4NbvARB;
      PFNGLVERTEXATTRIB4NIVARBPROC m_glVertexAttrib4NivARB;
      PFNGLVERTEXATTRIB4NSVARBPROC m_glVertexAttrib4NsvARB;
      PFNGLVERTEXATTRIB4NUBARBPROC m_glVertexAttrib4NubARB;
      PFNGLVERTEXATTRIB4NUBVARBPROC m_glVertexAttrib4NubvARB;
      PFNGLVERTEXATTRIB4NUIVARBPROC m_glVertexAttrib4NuivARB;
      PFNGLVERTEXATTRIB4NUSVARBPROC m_glVertexAttrib4NusvARB;
      PFNGLVERTEXATTRIB4BVARBPROC m_glVertexAttrib4bvARB;
      PFNGLVERTEXATTRIB4DARBPROC m_glVertexAttrib4dARB;
      PFNGLVERTEXATTRIB4DVARBPROC m_glVertexAttrib4dvARB;
      PFNGLVERTEXATTRIB4FARBPROC m_glVertexAttrib4fARB;
      PFNGLVERTEXATTRIB4FVARBPROC m_glVertexAttrib4fvARB;
      PFNGLVERTEXATTRIB4IVARBPROC m_glVertexAttrib4ivARB;
      PFNGLVERTEXATTRIB4SARBPROC m_glVertexAttrib4sARB;
      PFNGLVERTEXATTRIB4SVARBPROC m_glVertexAttrib4svARB;
      PFNGLVERTEXATTRIB4UBVARBPROC m_glVertexAttrib4ubvARB;
      PFNGLVERTEXATTRIB4UIVARBPROC m_glVertexAttrib4uivARB;
      PFNGLVERTEXATTRIB4USVARBPROC m_glVertexAttrib4usvARB;
      PFNGLVERTEXATTRIBPOINTERARBPROC m_glVertexAttribPointerARB;
      PFNGLENABLEVERTEXATTRIBARRAYARBPROC m_glEnableVertexAttribArrayARB;
      PFNGLDISABLEVERTEXATTRIBARRAYARBPROC m_glDisableVertexAttribArrayARB;
      PFNGLGETVERTEXATTRIBDVARBPROC m_glGetVertexAttribdvARB;
      PFNGLGETVERTEXATTRIBFVARBPROC m_glGetVertexAttribfvARB;
      PFNGLGETVERTEXATTRIBIVARBPROC m_glGetVertexAttribivARB;
      PFNGLGETVERTEXATTRIBPOINTERVARBPROC m_glGetVertexAttribPointervARB;
      PFNGLBINDATTRIBLOCATIONARBPROC m_glBindAttribLocationARB;
      PFNGLGETACTIVEATTRIBARBPROC m_glGetActiveAttribARB;
      PFNGLGETATTRIBLOCATIONARBPROC m_glGetAttribLocationARB;
      PFNGLWINDOWPOS2DARBPROC m_glWindowPos2dARB;
      PFNGLWINDOWPOS2DVARBPROC m_glWindowPos2dvARB;
      PFNGLWINDOWPOS2FARBPROC m_glWindowPos2fARB;
      PFNGLWINDOWPOS2FVARBPROC m_glWindowPos2fvARB;
      PFNGLWINDOWPOS2IARBPROC m_glWindowPos2iARB;
      PFNGLWINDOWPOS2IVARBPROC m_glWindowPos2ivARB;
      PFNGLWINDOWPOS2SARBPROC m_glWindowPos2sARB;
      PFNGLWINDOWPOS2SVARBPROC m_glWindowPos2svARB;
      PFNGLWINDOWPOS3DARBPROC m_glWindowPos3dARB;
      PFNGLWINDOWPOS3DVARBPROC m_glWindowPos3dvARB;
      PFNGLWINDOWPOS3FARBPROC m_glWindowPos3fARB;
      PFNGLWINDOWPOS3FVARBPROC m_glWindowPos3fvARB;
      PFNGLWINDOWPOS3IARBPROC m_glWindowPos3iARB;
      PFNGLWINDOWPOS3IVARBPROC m_glWindowPos3ivARB;
      PFNGLWINDOWPOS3SARBPROC m_glWindowPos3sARB;
      PFNGLWINDOWPOS3SVARBPROC m_glWindowPos3svARB;
      PFNGLDRAWBUFFERSATIPROC m_glDrawBuffersATI;
      PFNGLELEMENTPOINTERATIPROC m_glElementPointerATI;
      PFNGLDRAWELEMENTARRAYATIPROC m_glDrawElementArrayATI;
      PFNGLDRAWRANGEELEMENTARRAYATIPROC m_glDrawRangeElementArrayATI;
      PFNGLTEXBUMPPARAMETERIVATIPROC m_glTexBumpParameterivATI;
      PFNGLTEXBUMPPARAMETERFVATIPROC m_glTexBumpParameterfvATI;
      PFNGLGETTEXBUMPPARAMETERIVATIPROC m_glGetTexBumpParameterivATI;
      PFNGLGETTEXBUMPPARAMETERFVATIPROC m_glGetTexBumpParameterfvATI;
      PFNGLGENFRAGMENTSHADERSATIPROC m_glGenFragmentShadersATI;
      PFNGLBINDFRAGMENTSHADERATIPROC m_glBindFragmentShaderATI;
      PFNGLDELETEFRAGMENTSHADERATIPROC m_glDeleteFragmentShaderATI;
      PFNGLBEGINFRAGMENTSHADERATIPROC m_glBeginFragmentShaderATI;
      PFNGLENDFRAGMENTSHADERATIPROC m_glEndFragmentShaderATI;
      PFNGLPASSTEXCOORDATIPROC m_glPassTexCoordATI;
      PFNGLSAMPLEMAPATIPROC m_glSampleMapATI;
      PFNGLCOLORFRAGMENTOP1ATIPROC m_glColorFragmentOp1ATI;
      PFNGLCOLORFRAGMENTOP2ATIPROC m_glColorFragmentOp2ATI;
      PFNGLCOLORFRAGMENTOP3ATIPROC m_glColorFragmentOp3ATI;
      PFNGLALPHAFRAGMENTOP1ATIPROC m_glAlphaFragmentOp1ATI;
      PFNGLALPHAFRAGMENTOP2ATIPROC m_glAlphaFragmentOp2ATI;
      PFNGLALPHAFRAGMENTOP3ATIPROC m_glAlphaFragmentOp3ATI;
      PFNGLSETFRAGMENTSHADERCONSTANTATIPROC m_glSetFragmentShaderConstantATI;
      PFNGLMAPOBJECTBUFFERATIPROC m_glMapObjectBufferATI;
      PFNGLUNMAPOBJECTBUFFERATIPROC m_glUnmapObjectBufferATI;
      PFNGLPNTRIANGLESIATIPROC m_glPNTrianglesiATI;
      PFNGLPNTRIANGLESFATIPROC m_glPNTrianglesfATI;
      PFNGLSTENCILOPSEPARATEATIPROC m_glStencilOpSeparateATI;
      PFNGLSTENCILFUNCSEPARATEATIPROC m_glStencilFuncSeparateATI;
      PFNGLNEWOBJECTBUFFERATIPROC m_glNewObjectBufferATI;
      PFNGLISOBJECTBUFFERATIPROC m_glIsObjectBufferATI;
      PFNGLUPDATEOBJECTBUFFERATIPROC m_glUpdateObjectBufferATI;
      PFNGLGETOBJECTBUFFERFVATIPROC m_glGetObjectBufferfvATI;
      PFNGLGETOBJECTBUFFERIVATIPROC m_glGetObjectBufferivATI;
      PFNGLFREEOBJECTBUFFERATIPROC m_glFreeObjectBufferATI;
      PFNGLARRAYOBJECTATIPROC m_glArrayObjectATI;
      PFNGLGETARRAYOBJECTFVATIPROC m_glGetArrayObjectfvATI;
      PFNGLGETARRAYOBJECTIVATIPROC m_glGetArrayObjectivATI;
      PFNGLVARIANTARRAYOBJECTATIPROC m_glVariantArrayObjectATI;
      PFNGLGETVARIANTARRAYOBJECTFVATIPROC m_glGetVariantArrayObjectfvATI;
      PFNGLGETVARIANTARRAYOBJECTIVATIPROC m_glGetVariantArrayObjectivATI;
      PFNGLVERTEXATTRIBARRAYOBJECTATIPROC m_glVertexAttribArrayObjectATI;
      PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC m_glGetVertexAttribArrayObjectfvATI;
      PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC m_glGetVertexAttribArrayObjectivATI;
      PFNGLVERTEXSTREAM1SATIPROC m_glVertexStream1sATI;
      PFNGLVERTEXSTREAM1SVATIPROC m_glVertexStream1svATI;
      PFNGLVERTEXSTREAM1IATIPROC m_glVertexStream1iATI;
      PFNGLVERTEXSTREAM1IVATIPROC m_glVertexStream1ivATI;
      PFNGLVERTEXSTREAM1FATIPROC m_glVertexStream1fATI;
      PFNGLVERTEXSTREAM1FVATIPROC m_glVertexStream1fvATI;
      PFNGLVERTEXSTREAM1DATIPROC m_glVertexStream1dATI;
      PFNGLVERTEXSTREAM1DVATIPROC m_glVertexStream1dvATI;
      PFNGLVERTEXSTREAM2SATIPROC m_glVertexStream2sATI;
      PFNGLVERTEXSTREAM2SVATIPROC m_glVertexStream2svATI;
      PFNGLVERTEXSTREAM2IATIPROC m_glVertexStream2iATI;
      PFNGLVERTEXSTREAM2IVATIPROC m_glVertexStream2ivATI;
      PFNGLVERTEXSTREAM2FATIPROC m_glVertexStream2fATI;
      PFNGLVERTEXSTREAM2FVATIPROC m_glVertexStream2fvATI;
      PFNGLVERTEXSTREAM2DATIPROC m_glVertexStream2dATI;
      PFNGLVERTEXSTREAM2DVATIPROC m_glVertexStream2dvATI;
      PFNGLVERTEXSTREAM3SATIPROC m_glVertexStream3sATI;
      PFNGLVERTEXSTREAM3SVATIPROC m_glVertexStream3svATI;
      PFNGLVERTEXSTREAM3IATIPROC m_glVertexStream3iATI;
      PFNGLVERTEXSTREAM3IVATIPROC m_glVertexStream3ivATI;
      PFNGLVERTEXSTREAM3FATIPROC m_glVertexStream3fATI;
      PFNGLVERTEXSTREAM3FVATIPROC m_glVertexStream3fvATI;
      PFNGLVERTEXSTREAM3DATIPROC m_glVertexStream3dATI;
      PFNGLVERTEXSTREAM3DVATIPROC m_glVertexStream3dvATI;
      PFNGLVERTEXSTREAM4SATIPROC m_glVertexStream4sATI;
      PFNGLVERTEXSTREAM4SVATIPROC m_glVertexStream4svATI;
      PFNGLVERTEXSTREAM4IATIPROC m_glVertexStream4iATI;
      PFNGLVERTEXSTREAM4IVATIPROC m_glVertexStream4ivATI;
      PFNGLVERTEXSTREAM4FATIPROC m_glVertexStream4fATI;
      PFNGLVERTEXSTREAM4FVATIPROC m_glVertexStream4fvATI;
      PFNGLVERTEXSTREAM4DATIPROC m_glVertexStream4dATI;
      PFNGLVERTEXSTREAM4DVATIPROC m_glVertexStream4dvATI;
      PFNGLNORMALSTREAM3BATIPROC m_glNormalStream3bATI;
      PFNGLNORMALSTREAM3BVATIPROC m_glNormalStream3bvATI;
      PFNGLNORMALSTREAM3SATIPROC m_glNormalStream3sATI;
      PFNGLNORMALSTREAM3SVATIPROC m_glNormalStream3svATI;
      PFNGLNORMALSTREAM3IATIPROC m_glNormalStream3iATI;
      PFNGLNORMALSTREAM3IVATIPROC m_glNormalStream3ivATI;
      PFNGLNORMALSTREAM3FATIPROC m_glNormalStream3fATI;
      PFNGLNORMALSTREAM3FVATIPROC m_glNormalStream3fvATI;
      PFNGLNORMALSTREAM3DATIPROC m_glNormalStream3dATI;
      PFNGLNORMALSTREAM3DVATIPROC m_glNormalStream3dvATI;
      PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC m_glClientActiveVertexStreamATI;
      PFNGLVERTEXBLENDENVIATIPROC m_glVertexBlendEnviATI;
      PFNGLVERTEXBLENDENVFATIPROC m_glVertexBlendEnvfATI;
      PFNGLUNIFORMBUFFEREXTPROC m_glUniformBufferEXT;
      PFNGLGETUNIFORMBUFFERSIZEEXTPROC m_glGetUniformBufferSizeEXT;
      PFNGLGETUNIFORMOFFSETEXTPROC m_glGetUniformOffsetEXT;
      PFNGLBLENDCOLOREXTPROC m_glBlendColorEXT;
      PFNGLBLENDEQUATIONSEPARATEEXTPROC m_glBlendEquationSeparateEXT;
      PFNGLBLENDFUNCSEPARATEEXTPROC m_glBlendFuncSeparateEXT;
      PFNGLBLENDEQUATIONEXTPROC m_glBlendEquationEXT;
      PFNGLCOLORSUBTABLEEXTPROC m_glColorSubTableEXT;
      PFNGLCOPYCOLORSUBTABLEEXTPROC m_glCopyColorSubTableEXT;
      PFNGLLOCKARRAYSEXTPROC m_glLockArraysEXT;
      PFNGLUNLOCKARRAYSEXTPROC m_glUnlockArraysEXT;
      PFNGLCONVOLUTIONFILTER1DEXTPROC m_glConvolutionFilter1DEXT;
      PFNGLCONVOLUTIONFILTER2DEXTPROC m_glConvolutionFilter2DEXT;
      PFNGLCONVOLUTIONPARAMETERFEXTPROC m_glConvolutionParameterfEXT;
      PFNGLCONVOLUTIONPARAMETERFVEXTPROC m_glConvolutionParameterfvEXT;
      PFNGLCONVOLUTIONPARAMETERIEXTPROC m_glConvolutionParameteriEXT;
      PFNGLCONVOLUTIONPARAMETERIVEXTPROC m_glConvolutionParameterivEXT;
      PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC m_glCopyConvolutionFilter1DEXT;
      PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC m_glCopyConvolutionFilter2DEXT;
      PFNGLGETCONVOLUTIONFILTEREXTPROC m_glGetConvolutionFilterEXT;
      PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC m_glGetConvolutionParameterfvEXT;
      PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC m_glGetConvolutionParameterivEXT;
      PFNGLGETSEPARABLEFILTEREXTPROC m_glGetSeparableFilterEXT;
      PFNGLSEPARABLEFILTER2DEXTPROC m_glSeparableFilter2DEXT;
      PFNGLTANGENT3BEXTPROC m_glTangent3bEXT;
      PFNGLTANGENT3BVEXTPROC m_glTangent3bvEXT;
      PFNGLTANGENT3DEXTPROC m_glTangent3dEXT;
      PFNGLTANGENT3DVEXTPROC m_glTangent3dvEXT;
      PFNGLTANGENT3FEXTPROC m_glTangent3fEXT;
      PFNGLTANGENT3FVEXTPROC m_glTangent3fvEXT;
      PFNGLTANGENT3IEXTPROC m_glTangent3iEXT;
      PFNGLTANGENT3IVEXTPROC m_glTangent3ivEXT;
      PFNGLTANGENT3SEXTPROC m_glTangent3sEXT;
      PFNGLTANGENT3SVEXTPROC m_glTangent3svEXT;
      PFNGLBINORMAL3BEXTPROC m_glBinormal3bEXT;
      PFNGLBINORMAL3BVEXTPROC m_glBinormal3bvEXT;
      PFNGLBINORMAL3DEXTPROC m_glBinormal3dEXT;
      PFNGLBINORMAL3DVEXTPROC m_glBinormal3dvEXT;
      PFNGLBINORMAL3FEXTPROC m_glBinormal3fEXT;
      PFNGLBINORMAL3FVEXTPROC m_glBinormal3fvEXT;
      PFNGLBINORMAL3IEXTPROC m_glBinormal3iEXT;
      PFNGLBINORMAL3IVEXTPROC m_glBinormal3ivEXT;
      PFNGLBINORMAL3SEXTPROC m_glBinormal3sEXT;
      PFNGLBINORMAL3SVEXTPROC m_glBinormal3svEXT;
      PFNGLTANGENTPOINTEREXTPROC m_glTangentPointerEXT;
      PFNGLBINORMALPOINTEREXTPROC m_glBinormalPointerEXT;
      PFNGLCOPYTEXIMAGE1DEXTPROC m_glCopyTexImage1DEXT;
      PFNGLCOPYTEXIMAGE2DEXTPROC m_glCopyTexImage2DEXT;
      PFNGLCOPYTEXSUBIMAGE1DEXTPROC m_glCopyTexSubImage1DEXT;
      PFNGLCOPYTEXSUBIMAGE2DEXTPROC m_glCopyTexSubImage2DEXT;
      PFNGLCOPYTEXSUBIMAGE3DEXTPROC m_glCopyTexSubImage3DEXT;
      PFNGLCULLPARAMETERDVEXTPROC m_glCullParameterdvEXT;
      PFNGLCULLPARAMETERFVEXTPROC m_glCullParameterfvEXT;
      PFNGLLABELOBJECTEXTPROC m_glLabelObjectEXT;
      PFNGLGETOBJECTLABELEXTPROC m_glGetObjectLabelEXT;
      PFNGLINSERTEVENTMARKEREXTPROC m_glInsertEventMarkerEXT;
      PFNGLPUSHGROUPMARKEREXTPROC m_glPushGroupMarkerEXT;
      PFNGLPOPGROUPMARKEREXTPROC m_glPopGroupMarkerEXT;
      PFNGLDEPTHBOUNDSEXTPROC m_glDepthBoundsEXT;
      PFNGLMATRIXLOADFEXTPROC m_glMatrixLoadfEXT;
      PFNGLMATRIXLOADDEXTPROC m_glMatrixLoaddEXT;
      PFNGLMATRIXMULTFEXTPROC m_glMatrixMultfEXT;
      PFNGLMATRIXMULTDEXTPROC m_glMatrixMultdEXT;
      PFNGLMATRIXLOADIDENTITYEXTPROC m_glMatrixLoadIdentityEXT;
      PFNGLMATRIXROTATEFEXTPROC m_glMatrixRotatefEXT;
      PFNGLMATRIXROTATEDEXTPROC m_glMatrixRotatedEXT;
      PFNGLMATRIXSCALEFEXTPROC m_glMatrixScalefEXT;
      PFNGLMATRIXSCALEDEXTPROC m_glMatrixScaledEXT;
      PFNGLMATRIXTRANSLATEFEXTPROC m_glMatrixTranslatefEXT;
      PFNGLMATRIXTRANSLATEDEXTPROC m_glMatrixTranslatedEXT;
      PFNGLMATRIXFRUSTUMEXTPROC m_glMatrixFrustumEXT;
      PFNGLMATRIXORTHOEXTPROC m_glMatrixOrthoEXT;
      PFNGLMATRIXPOPEXTPROC m_glMatrixPopEXT;
      PFNGLMATRIXPUSHEXTPROC m_glMatrixPushEXT;
      PFNGLCLIENTATTRIBDEFAULTEXTPROC m_glClientAttribDefaultEXT;
      PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC m_glPushClientAttribDefaultEXT;
      PFNGLTEXTUREPARAMETERFEXTPROC m_glTextureParameterfEXT;
      PFNGLTEXTUREPARAMETERFVEXTPROC m_glTextureParameterfvEXT;
      PFNGLTEXTUREPARAMETERIEXTPROC m_glTextureParameteriEXT;
      PFNGLTEXTUREPARAMETERIVEXTPROC m_glTextureParameterivEXT;
      PFNGLTEXTUREIMAGE1DEXTPROC m_glTextureImage1DEXT;
      PFNGLTEXTUREIMAGE2DEXTPROC m_glTextureImage2DEXT;
      PFNGLTEXTURESUBIMAGE1DEXTPROC m_glTextureSubImage1DEXT;
      PFNGLTEXTURESUBIMAGE2DEXTPROC m_glTextureSubImage2DEXT;
      PFNGLCOPYTEXTUREIMAGE1DEXTPROC m_glCopyTextureImage1DEXT;
      PFNGLCOPYTEXTUREIMAGE2DEXTPROC m_glCopyTextureImage2DEXT;
      PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC m_glCopyTextureSubImage1DEXT;
      PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC m_glCopyTextureSubImage2DEXT;
      PFNGLGETTEXTUREIMAGEEXTPROC m_glGetTextureImageEXT;
      PFNGLGETTEXTUREPARAMETERFVEXTPROC m_glGetTextureParameterfvEXT;
      PFNGLGETTEXTUREPARAMETERIVEXTPROC m_glGetTextureParameterivEXT;
      PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC m_glGetTextureLevelParameterfvEXT;
      PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC m_glGetTextureLevelParameterivEXT;
      PFNGLTEXTUREIMAGE3DEXTPROC m_glTextureImage3DEXT;
      PFNGLTEXTURESUBIMAGE3DEXTPROC m_glTextureSubImage3DEXT;
      PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC m_glCopyTextureSubImage3DEXT;
      PFNGLBINDMULTITEXTUREEXTPROC m_glBindMultiTextureEXT;
      PFNGLMULTITEXCOORDPOINTEREXTPROC m_glMultiTexCoordPointerEXT;
      PFNGLMULTITEXENVFEXTPROC m_glMultiTexEnvfEXT;
      PFNGLMULTITEXENVFVEXTPROC m_glMultiTexEnvfvEXT;
      PFNGLMULTITEXENVIEXTPROC m_glMultiTexEnviEXT;
      PFNGLMULTITEXENVIVEXTPROC m_glMultiTexEnvivEXT;
      PFNGLMULTITEXGENDEXTPROC m_glMultiTexGendEXT;
      PFNGLMULTITEXGENDVEXTPROC m_glMultiTexGendvEXT;
      PFNGLMULTITEXGENFEXTPROC m_glMultiTexGenfEXT;
      PFNGLMULTITEXGENFVEXTPROC m_glMultiTexGenfvEXT;
      PFNGLMULTITEXGENIEXTPROC m_glMultiTexGeniEXT;
      PFNGLMULTITEXGENIVEXTPROC m_glMultiTexGenivEXT;
      PFNGLGETMULTITEXENVFVEXTPROC m_glGetMultiTexEnvfvEXT;
      PFNGLGETMULTITEXENVIVEXTPROC m_glGetMultiTexEnvivEXT;
      PFNGLGETMULTITEXGENDVEXTPROC m_glGetMultiTexGendvEXT;
      PFNGLGETMULTITEXGENFVEXTPROC m_glGetMultiTexGenfvEXT;
      PFNGLGETMULTITEXGENIVEXTPROC m_glGetMultiTexGenivEXT;
      PFNGLMULTITEXPARAMETERIEXTPROC m_glMultiTexParameteriEXT;
      PFNGLMULTITEXPARAMETERIVEXTPROC m_glMultiTexParameterivEXT;
      PFNGLMULTITEXPARAMETERFEXTPROC m_glMultiTexParameterfEXT;
      PFNGLMULTITEXPARAMETERFVEXTPROC m_glMultiTexParameterfvEXT;
      PFNGLMULTITEXIMAGE1DEXTPROC m_glMultiTexImage1DEXT;
      PFNGLMULTITEXIMAGE2DEXTPROC m_glMultiTexImage2DEXT;
      PFNGLMULTITEXSUBIMAGE1DEXTPROC m_glMultiTexSubImage1DEXT;
      PFNGLMULTITEXSUBIMAGE2DEXTPROC m_glMultiTexSubImage2DEXT;
      PFNGLCOPYMULTITEXIMAGE1DEXTPROC m_glCopyMultiTexImage1DEXT;
      PFNGLCOPYMULTITEXIMAGE2DEXTPROC m_glCopyMultiTexImage2DEXT;
      PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC m_glCopyMultiTexSubImage1DEXT;
      PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC m_glCopyMultiTexSubImage2DEXT;
      PFNGLGETMULTITEXIMAGEEXTPROC m_glGetMultiTexImageEXT;
      PFNGLGETMULTITEXPARAMETERFVEXTPROC m_glGetMultiTexParameterfvEXT;
      PFNGLGETMULTITEXPARAMETERIVEXTPROC m_glGetMultiTexParameterivEXT;
      PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC m_glGetMultiTexLevelParameterfvEXT;
      PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC m_glGetMultiTexLevelParameterivEXT;
      PFNGLMULTITEXIMAGE3DEXTPROC m_glMultiTexImage3DEXT;
      PFNGLMULTITEXSUBIMAGE3DEXTPROC m_glMultiTexSubImage3DEXT;
      PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC m_glCopyMultiTexSubImage3DEXT;
      PFNGLENABLECLIENTSTATEINDEXEDEXTPROC m_glEnableClientStateIndexedEXT;
      PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC m_glDisableClientStateIndexedEXT;
      PFNGLGETFLOATINDEXEDVEXTPROC m_glGetFloatIndexedvEXT;
      PFNGLGETDOUBLEINDEXEDVEXTPROC m_glGetDoubleIndexedvEXT;
      PFNGLGETPOINTERINDEXEDVEXTPROC m_glGetPointerIndexedvEXT;
      PFNGLENABLEINDEXEDEXTPROC m_glEnableIndexedEXT;
      PFNGLDISABLEINDEXEDEXTPROC m_glDisableIndexedEXT;
      PFNGLISENABLEDINDEXEDEXTPROC m_glIsEnabledIndexedEXT;
      PFNGLGETINTEGERINDEXEDVEXTPROC m_glGetIntegerIndexedvEXT;
      PFNGLGETBOOLEANINDEXEDVEXTPROC m_glGetBooleanIndexedvEXT;
      PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC m_glCompressedTextureImage3DEXT;
      PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC m_glCompressedTextureImage2DEXT;
      PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC m_glCompressedTextureImage1DEXT;
      PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC m_glCompressedTextureSubImage3DEXT;
      PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC m_glCompressedTextureSubImage2DEXT;
      PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC m_glCompressedTextureSubImage1DEXT;
      PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC m_glGetCompressedTextureImageEXT;
      PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC m_glCompressedMultiTexImage3DEXT;
      PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC m_glCompressedMultiTexImage2DEXT;
      PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC m_glCompressedMultiTexImage1DEXT;
      PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC m_glCompressedMultiTexSubImage3DEXT;
      PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC m_glCompressedMultiTexSubImage2DEXT;
      PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC m_glCompressedMultiTexSubImage1DEXT;
      PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC m_glGetCompressedMultiTexImageEXT;
      PFNGLMATRIXLOADTRANSPOSEFEXTPROC m_glMatrixLoadTransposefEXT;
      PFNGLMATRIXLOADTRANSPOSEDEXTPROC m_glMatrixLoadTransposedEXT;
      PFNGLMATRIXMULTTRANSPOSEFEXTPROC m_glMatrixMultTransposefEXT;
      PFNGLMATRIXMULTTRANSPOSEDEXTPROC m_glMatrixMultTransposedEXT;
      PFNGLNAMEDBUFFERDATAEXTPROC m_glNamedBufferDataEXT;
      PFNGLNAMEDBUFFERSUBDATAEXTPROC m_glNamedBufferSubDataEXT;
      PFNGLMAPNAMEDBUFFEREXTPROC m_glMapNamedBufferEXT;
      PFNGLUNMAPNAMEDBUFFEREXTPROC m_glUnmapNamedBufferEXT;
      PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC m_glGetNamedBufferParameterivEXT;
      PFNGLGETNAMEDBUFFERPOINTERVEXTPROC m_glGetNamedBufferPointervEXT;
      PFNGLGETNAMEDBUFFERSUBDATAEXTPROC m_glGetNamedBufferSubDataEXT;
      PFNGLPROGRAMUNIFORM1FEXTPROC m_glProgramUniform1fEXT;
      PFNGLPROGRAMUNIFORM2FEXTPROC m_glProgramUniform2fEXT;
      PFNGLPROGRAMUNIFORM3FEXTPROC m_glProgramUniform3fEXT;
      PFNGLPROGRAMUNIFORM4FEXTPROC m_glProgramUniform4fEXT;
      PFNGLPROGRAMUNIFORM1IEXTPROC m_glProgramUniform1iEXT;
      PFNGLPROGRAMUNIFORM2IEXTPROC m_glProgramUniform2iEXT;
      PFNGLPROGRAMUNIFORM3IEXTPROC m_glProgramUniform3iEXT;
      PFNGLPROGRAMUNIFORM4IEXTPROC m_glProgramUniform4iEXT;
      PFNGLPROGRAMUNIFORM1FVEXTPROC m_glProgramUniform1fvEXT;
      PFNGLPROGRAMUNIFORM2FVEXTPROC m_glProgramUniform2fvEXT;
      PFNGLPROGRAMUNIFORM3FVEXTPROC m_glProgramUniform3fvEXT;
      PFNGLPROGRAMUNIFORM4FVEXTPROC m_glProgramUniform4fvEXT;
      PFNGLPROGRAMUNIFORM1IVEXTPROC m_glProgramUniform1ivEXT;
      PFNGLPROGRAMUNIFORM2IVEXTPROC m_glProgramUniform2ivEXT;
      PFNGLPROGRAMUNIFORM3IVEXTPROC m_glProgramUniform3ivEXT;
      PFNGLPROGRAMUNIFORM4IVEXTPROC m_glProgramUniform4ivEXT;
      PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC m_glProgramUniformMatrix2fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC m_glProgramUniformMatrix3fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC m_glProgramUniformMatrix4fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC m_glProgramUniformMatrix2x3fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC m_glProgramUniformMatrix3x2fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC m_glProgramUniformMatrix2x4fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC m_glProgramUniformMatrix4x2fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC m_glProgramUniformMatrix3x4fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC m_glProgramUniformMatrix4x3fvEXT;
      PFNGLTEXTUREBUFFEREXTPROC m_glTextureBufferEXT;
      PFNGLMULTITEXBUFFEREXTPROC m_glMultiTexBufferEXT;
      PFNGLTEXTUREPARAMETERIIVEXTPROC m_glTextureParameterIivEXT;
      PFNGLTEXTUREPARAMETERIUIVEXTPROC m_glTextureParameterIuivEXT;
      PFNGLGETTEXTUREPARAMETERIIVEXTPROC m_glGetTextureParameterIivEXT;
      PFNGLGETTEXTUREPARAMETERIUIVEXTPROC m_glGetTextureParameterIuivEXT;
      PFNGLMULTITEXPARAMETERIIVEXTPROC m_glMultiTexParameterIivEXT;
      PFNGLMULTITEXPARAMETERIUIVEXTPROC m_glMultiTexParameterIuivEXT;
      PFNGLGETMULTITEXPARAMETERIIVEXTPROC m_glGetMultiTexParameterIivEXT;
      PFNGLGETMULTITEXPARAMETERIUIVEXTPROC m_glGetMultiTexParameterIuivEXT;
      PFNGLPROGRAMUNIFORM1UIEXTPROC m_glProgramUniform1uiEXT;
      PFNGLPROGRAMUNIFORM2UIEXTPROC m_glProgramUniform2uiEXT;
      PFNGLPROGRAMUNIFORM3UIEXTPROC m_glProgramUniform3uiEXT;
      PFNGLPROGRAMUNIFORM4UIEXTPROC m_glProgramUniform4uiEXT;
      PFNGLPROGRAMUNIFORM1UIVEXTPROC m_glProgramUniform1uivEXT;
      PFNGLPROGRAMUNIFORM2UIVEXTPROC m_glProgramUniform2uivEXT;
      PFNGLPROGRAMUNIFORM3UIVEXTPROC m_glProgramUniform3uivEXT;
      PFNGLPROGRAMUNIFORM4UIVEXTPROC m_glProgramUniform4uivEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC m_glNamedProgramLocalParameters4fvEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC m_glNamedProgramLocalParameterI4iEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC m_glNamedProgramLocalParameterI4ivEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC m_glNamedProgramLocalParametersI4ivEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC m_glNamedProgramLocalParameterI4uiEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC m_glNamedProgramLocalParameterI4uivEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC m_glNamedProgramLocalParametersI4uivEXT;
      PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC m_glGetNamedProgramLocalParameterIivEXT;
      PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC m_glGetNamedProgramLocalParameterIuivEXT;
      PFNGLENABLECLIENTSTATEIEXTPROC m_glEnableClientStateiEXT;
      PFNGLDISABLECLIENTSTATEIEXTPROC m_glDisableClientStateiEXT;
      PFNGLGETFLOATI_VEXTPROC m_glGetFloati_vEXT;
      PFNGLGETDOUBLEI_VEXTPROC m_glGetDoublei_vEXT;
      PFNGLGETPOINTERI_VEXTPROC m_glGetPointeri_vEXT;
      PFNGLNAMEDPROGRAMSTRINGEXTPROC m_glNamedProgramStringEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC m_glNamedProgramLocalParameter4dEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC m_glNamedProgramLocalParameter4dvEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC m_glNamedProgramLocalParameter4fEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC m_glNamedProgramLocalParameter4fvEXT;
      PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC m_glGetNamedProgramLocalParameterdvEXT;
      PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC m_glGetNamedProgramLocalParameterfvEXT;
      PFNGLGETNAMEDPROGRAMIVEXTPROC m_glGetNamedProgramivEXT;
      PFNGLGETNAMEDPROGRAMSTRINGEXTPROC m_glGetNamedProgramStringEXT;
      PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC m_glNamedRenderbufferStorageEXT;
      PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC m_glGetNamedRenderbufferParameterivEXT;
      PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC m_glNamedRenderbufferStorageMultisampleEXT;
      PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC m_glNamedRenderbufferStorageMultisampleCoverageEXT;
      PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC m_glCheckNamedFramebufferStatusEXT;
      PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC m_glNamedFramebufferTexture1DEXT;
      PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC m_glNamedFramebufferTexture2DEXT;
      PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC m_glNamedFramebufferTexture3DEXT;
      PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC m_glNamedFramebufferRenderbufferEXT;
      PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC m_glGetNamedFramebufferAttachmentParameterivEXT;
      PFNGLGENERATETEXTUREMIPMAPEXTPROC m_glGenerateTextureMipmapEXT;
      PFNGLGENERATEMULTITEXMIPMAPEXTPROC m_glGenerateMultiTexMipmapEXT;
      PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC m_glFramebufferDrawBufferEXT;
      PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC m_glFramebufferDrawBuffersEXT;
      PFNGLFRAMEBUFFERREADBUFFEREXTPROC m_glFramebufferReadBufferEXT;
      PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC m_glGetFramebufferParameterivEXT;
      PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC m_glNamedCopyBufferSubDataEXT;
      PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC m_glNamedFramebufferTextureEXT;
      PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC m_glNamedFramebufferTextureLayerEXT;
      PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC m_glNamedFramebufferTextureFaceEXT;
      PFNGLTEXTURERENDERBUFFEREXTPROC m_glTextureRenderbufferEXT;
      PFNGLMULTITEXRENDERBUFFEREXTPROC m_glMultiTexRenderbufferEXT;
      PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC m_glVertexArrayVertexOffsetEXT;
      PFNGLVERTEXARRAYCOLOROFFSETEXTPROC m_glVertexArrayColorOffsetEXT;
      PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC m_glVertexArrayEdgeFlagOffsetEXT;
      PFNGLVERTEXARRAYINDEXOFFSETEXTPROC m_glVertexArrayIndexOffsetEXT;
      PFNGLVERTEXARRAYNORMALOFFSETEXTPROC m_glVertexArrayNormalOffsetEXT;
      PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC m_glVertexArrayTexCoordOffsetEXT;
      PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC m_glVertexArrayMultiTexCoordOffsetEXT;
      PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC m_glVertexArrayFogCoordOffsetEXT;
      PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC m_glVertexArraySecondaryColorOffsetEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC m_glVertexArrayVertexAttribOffsetEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC m_glVertexArrayVertexAttribIOffsetEXT;
      PFNGLENABLEVERTEXARRAYEXTPROC m_glEnableVertexArrayEXT;
      PFNGLDISABLEVERTEXARRAYEXTPROC m_glDisableVertexArrayEXT;
      PFNGLENABLEVERTEXARRAYATTRIBEXTPROC m_glEnableVertexArrayAttribEXT;
      PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC m_glDisableVertexArrayAttribEXT;
      PFNGLGETVERTEXARRAYINTEGERVEXTPROC m_glGetVertexArrayIntegervEXT;
      PFNGLGETVERTEXARRAYPOINTERVEXTPROC m_glGetVertexArrayPointervEXT;
      PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC m_glGetVertexArrayIntegeri_vEXT;
      PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC m_glGetVertexArrayPointeri_vEXT;
      PFNGLMAPNAMEDBUFFERRANGEEXTPROC m_glMapNamedBufferRangeEXT;
      PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC m_glFlushMappedNamedBufferRangeEXT;
      PFNGLNAMEDBUFFERSTORAGEEXTPROC m_glNamedBufferStorageEXT;
      PFNGLCLEARNAMEDBUFFERDATAEXTPROC m_glClearNamedBufferDataEXT;
      PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC m_glClearNamedBufferSubDataEXT;
      PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC m_glNamedFramebufferParameteriEXT;
      PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC m_glGetNamedFramebufferParameterivEXT;
      PFNGLPROGRAMUNIFORM1DEXTPROC m_glProgramUniform1dEXT;
      PFNGLPROGRAMUNIFORM2DEXTPROC m_glProgramUniform2dEXT;
      PFNGLPROGRAMUNIFORM3DEXTPROC m_glProgramUniform3dEXT;
      PFNGLPROGRAMUNIFORM4DEXTPROC m_glProgramUniform4dEXT;
      PFNGLPROGRAMUNIFORM1DVEXTPROC m_glProgramUniform1dvEXT;
      PFNGLPROGRAMUNIFORM2DVEXTPROC m_glProgramUniform2dvEXT;
      PFNGLPROGRAMUNIFORM3DVEXTPROC m_glProgramUniform3dvEXT;
      PFNGLPROGRAMUNIFORM4DVEXTPROC m_glProgramUniform4dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC m_glProgramUniformMatrix2dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC m_glProgramUniformMatrix3dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC m_glProgramUniformMatrix4dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC m_glProgramUniformMatrix2x3dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC m_glProgramUniformMatrix2x4dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC m_glProgramUniformMatrix3x2dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC m_glProgramUniformMatrix3x4dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC m_glProgramUniformMatrix4x2dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC m_glProgramUniformMatrix4x3dvEXT;
      PFNGLTEXTUREBUFFERRANGEEXTPROC m_glTextureBufferRangeEXT;
      PFNGLTEXTURESTORAGE1DEXTPROC m_glTextureStorage1DEXT;
      PFNGLTEXTURESTORAGE2DEXTPROC m_glTextureStorage2DEXT;
      PFNGLTEXTURESTORAGE3DEXTPROC m_glTextureStorage3DEXT;
      PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC m_glTextureStorage2DMultisampleEXT;
      PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC m_glTextureStorage3DMultisampleEXT;
      PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC m_glVertexArrayBindVertexBufferEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC m_glVertexArrayVertexAttribFormatEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC m_glVertexArrayVertexAttribIFormatEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC m_glVertexArrayVertexAttribLFormatEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC m_glVertexArrayVertexAttribBindingEXT;
      PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC m_glVertexArrayVertexBindingDivisorEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC m_glVertexArrayVertexAttribLOffsetEXT;
      PFNGLTEXTUREPAGECOMMITMENTEXTPROC m_glTexturePageCommitmentEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC m_glVertexArrayVertexAttribDivisorEXT;
      PFNGLCOLORMASKINDEXEDEXTPROC m_glColorMaskIndexedEXT;
      PFNGLDRAWARRAYSINSTANCEDEXTPROC m_glDrawArraysInstancedEXT;
      PFNGLDRAWELEMENTSINSTANCEDEXTPROC m_glDrawElementsInstancedEXT;
      PFNGLDRAWRANGEELEMENTSEXTPROC m_glDrawRangeElementsEXT;
      PFNGLFOGCOORDFEXTPROC m_glFogCoordfEXT;
      PFNGLFOGCOORDFVEXTPROC m_glFogCoordfvEXT;
      PFNGLFOGCOORDDEXTPROC m_glFogCoorddEXT;
      PFNGLFOGCOORDDVEXTPROC m_glFogCoorddvEXT;
      PFNGLFOGCOORDPOINTEREXTPROC m_glFogCoordPointerEXT;
      PFNGLBLITFRAMEBUFFEREXTPROC m_glBlitFramebufferEXT;
      PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC m_glRenderbufferStorageMultisampleEXT;
      PFNGLISRENDERBUFFEREXTPROC m_glIsRenderbufferEXT;
      PFNGLBINDRENDERBUFFEREXTPROC m_glBindRenderbufferEXT;
      PFNGLDELETERENDERBUFFERSEXTPROC m_glDeleteRenderbuffersEXT;
      PFNGLGENRENDERBUFFERSEXTPROC m_glGenRenderbuffersEXT;
      PFNGLRENDERBUFFERSTORAGEEXTPROC m_glRenderbufferStorageEXT;
      PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC m_glGetRenderbufferParameterivEXT;
      PFNGLISFRAMEBUFFEREXTPROC m_glIsFramebufferEXT;
      PFNGLBINDFRAMEBUFFEREXTPROC m_glBindFramebufferEXT;
      PFNGLDELETEFRAMEBUFFERSEXTPROC m_glDeleteFramebuffersEXT;
      PFNGLGENFRAMEBUFFERSEXTPROC m_glGenFramebuffersEXT;
      PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC m_glCheckFramebufferStatusEXT;
      PFNGLFRAMEBUFFERTEXTURE1DEXTPROC m_glFramebufferTexture1DEXT;
      PFNGLFRAMEBUFFERTEXTURE2DEXTPROC m_glFramebufferTexture2DEXT;
      PFNGLFRAMEBUFFERTEXTURE3DEXTPROC m_glFramebufferTexture3DEXT;
      PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC m_glFramebufferRenderbufferEXT;
      PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC m_glGetFramebufferAttachmentParameterivEXT;
      PFNGLGENERATEMIPMAPEXTPROC m_glGenerateMipmapEXT;
      PFNGLPROGRAMPARAMETERIEXTPROC m_glProgramParameteriEXT;
      PFNGLPROGRAMENVPARAMETERS4FVEXTPROC m_glProgramEnvParameters4fvEXT;
      PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC m_glProgramLocalParameters4fvEXT;
      PFNGLGETUNIFORMUIVEXTPROC m_glGetUniformuivEXT;
      PFNGLBINDFRAGDATALOCATIONEXTPROC m_glBindFragDataLocationEXT;
      PFNGLGETFRAGDATALOCATIONEXTPROC m_glGetFragDataLocationEXT;
      PFNGLUNIFORM1UIEXTPROC m_glUniform1uiEXT;
      PFNGLUNIFORM2UIEXTPROC m_glUniform2uiEXT;
      PFNGLUNIFORM3UIEXTPROC m_glUniform3uiEXT;
      PFNGLUNIFORM4UIEXTPROC m_glUniform4uiEXT;
      PFNGLUNIFORM1UIVEXTPROC m_glUniform1uivEXT;
      PFNGLUNIFORM2UIVEXTPROC m_glUniform2uivEXT;
      PFNGLUNIFORM3UIVEXTPROC m_glUniform3uivEXT;
      PFNGLUNIFORM4UIVEXTPROC m_glUniform4uivEXT;
      PFNGLGETHISTOGRAMEXTPROC m_glGetHistogramEXT;
      PFNGLGETHISTOGRAMPARAMETERFVEXTPROC m_glGetHistogramParameterfvEXT;
      PFNGLGETHISTOGRAMPARAMETERIVEXTPROC m_glGetHistogramParameterivEXT;
      PFNGLGETMINMAXEXTPROC m_glGetMinmaxEXT;
      PFNGLGETMINMAXPARAMETERFVEXTPROC m_glGetMinmaxParameterfvEXT;
      PFNGLGETMINMAXPARAMETERIVEXTPROC m_glGetMinmaxParameterivEXT;
      PFNGLHISTOGRAMEXTPROC m_glHistogramEXT;
      PFNGLMINMAXEXTPROC m_glMinmaxEXT;
      PFNGLRESETHISTOGRAMEXTPROC m_glResetHistogramEXT;
      PFNGLRESETMINMAXEXTPROC m_glResetMinmaxEXT;
      PFNGLINDEXFUNCEXTPROC m_glIndexFuncEXT;
      PFNGLINDEXMATERIALEXTPROC m_glIndexMaterialEXT;
      PFNGLAPPLYTEXTUREEXTPROC m_glApplyTextureEXT;
      PFNGLTEXTURELIGHTEXTPROC m_glTextureLightEXT;
      PFNGLTEXTUREMATERIALEXTPROC m_glTextureMaterialEXT;
      PFNGLMULTIDRAWARRAYSEXTPROC m_glMultiDrawArraysEXT;
      PFNGLMULTIDRAWELEMENTSEXTPROC m_glMultiDrawElementsEXT;
      PFNGLSAMPLEMASKEXTPROC m_glSampleMaskEXT;
      PFNGLSAMPLEPATTERNEXTPROC m_glSamplePatternEXT;
      PFNGLCOLORTABLEEXTPROC m_glColorTableEXT;
      PFNGLGETCOLORTABLEEXTPROC m_glGetColorTableEXT;
      PFNGLGETCOLORTABLEPARAMETERIVEXTPROC m_glGetColorTableParameterivEXT;
      PFNGLGETCOLORTABLEPARAMETERFVEXTPROC m_glGetColorTableParameterfvEXT;
      PFNGLPIXELTRANSFORMPARAMETERIEXTPROC m_glPixelTransformParameteriEXT;
      PFNGLPIXELTRANSFORMPARAMETERFEXTPROC m_glPixelTransformParameterfEXT;
      PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC m_glPixelTransformParameterivEXT;
      PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC m_glPixelTransformParameterfvEXT;
      PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC m_glGetPixelTransformParameterivEXT;
      PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC m_glGetPixelTransformParameterfvEXT;
      PFNGLPOINTPARAMETERFEXTPROC m_glPointParameterfEXT;
      PFNGLPOINTPARAMETERFVEXTPROC m_glPointParameterfvEXT;
      PFNGLPOLYGONOFFSETEXTPROC m_glPolygonOffsetEXT;
      PFNGLPOLYGONOFFSETCLAMPEXTPROC m_glPolygonOffsetClampEXT;
      PFNGLPROVOKINGVERTEXEXTPROC m_glProvokingVertexEXT;
      PFNGLRASTERSAMPLESEXTPROC m_glRasterSamplesEXT;
      PFNGLSECONDARYCOLOR3BEXTPROC m_glSecondaryColor3bEXT;
      PFNGLSECONDARYCOLOR3BVEXTPROC m_glSecondaryColor3bvEXT;
      PFNGLSECONDARYCOLOR3DEXTPROC m_glSecondaryColor3dEXT;
      PFNGLSECONDARYCOLOR3DVEXTPROC m_glSecondaryColor3dvEXT;
      PFNGLSECONDARYCOLOR3FEXTPROC m_glSecondaryColor3fEXT;
      PFNGLSECONDARYCOLOR3FVEXTPROC m_glSecondaryColor3fvEXT;
      PFNGLSECONDARYCOLOR3IEXTPROC m_glSecondaryColor3iEXT;
      PFNGLSECONDARYCOLOR3IVEXTPROC m_glSecondaryColor3ivEXT;
      PFNGLSECONDARYCOLOR3SEXTPROC m_glSecondaryColor3sEXT;
      PFNGLSECONDARYCOLOR3SVEXTPROC m_glSecondaryColor3svEXT;
      PFNGLSECONDARYCOLOR3UBEXTPROC m_glSecondaryColor3ubEXT;
      PFNGLSECONDARYCOLOR3UBVEXTPROC m_glSecondaryColor3ubvEXT;
      PFNGLSECONDARYCOLOR3UIEXTPROC m_glSecondaryColor3uiEXT;
      PFNGLSECONDARYCOLOR3UIVEXTPROC m_glSecondaryColor3uivEXT;
      PFNGLSECONDARYCOLOR3USEXTPROC m_glSecondaryColor3usEXT;
      PFNGLSECONDARYCOLOR3USVEXTPROC m_glSecondaryColor3usvEXT;
      PFNGLSECONDARYCOLORPOINTEREXTPROC m_glSecondaryColorPointerEXT;
      PFNGLUSESHADERPROGRAMEXTPROC m_glUseShaderProgramEXT;
      PFNGLACTIVEPROGRAMEXTPROC m_glActiveProgramEXT;
      PFNGLCREATESHADERPROGRAMEXTPROC m_glCreateShaderProgramEXT;
      PFNGLBINDIMAGETEXTUREEXTPROC m_glBindImageTextureEXT;
      PFNGLMEMORYBARRIEREXTPROC m_glMemoryBarrierEXT;
      PFNGLSTENCILCLEARTAGEXTPROC m_glStencilClearTagEXT;
      PFNGLACTIVESTENCILFACEEXTPROC m_glActiveStencilFaceEXT;
      PFNGLTEXSUBIMAGE1DEXTPROC m_glTexSubImage1DEXT;
      PFNGLTEXSUBIMAGE2DEXTPROC m_glTexSubImage2DEXT;
      PFNGLTEXIMAGE3DEXTPROC m_glTexImage3DEXT;
      PFNGLTEXSUBIMAGE3DEXTPROC m_glTexSubImage3DEXT;
      PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC m_glFramebufferTextureLayerEXT;
      PFNGLTEXBUFFEREXTPROC m_glTexBufferEXT;
      PFNGLTEXPARAMETERIIVEXTPROC m_glTexParameterIivEXT;
      PFNGLTEXPARAMETERIUIVEXTPROC m_glTexParameterIuivEXT;
      PFNGLGETTEXPARAMETERIIVEXTPROC m_glGetTexParameterIivEXT;
      PFNGLGETTEXPARAMETERIUIVEXTPROC m_glGetTexParameterIuivEXT;
      PFNGLCLEARCOLORIIEXTPROC m_glClearColorIiEXT;
      PFNGLCLEARCOLORIUIEXTPROC m_glClearColorIuiEXT;
      PFNGLARETEXTURESRESIDENTEXTPROC m_glAreTexturesResidentEXT;
      PFNGLBINDTEXTUREEXTPROC m_glBindTextureEXT;
      PFNGLDELETETEXTURESEXTPROC m_glDeleteTexturesEXT;
      PFNGLGENTEXTURESEXTPROC m_glGenTexturesEXT;
      PFNGLISTEXTUREEXTPROC m_glIsTextureEXT;
      PFNGLPRIORITIZETEXTURESEXTPROC m_glPrioritizeTexturesEXT;
      PFNGLTEXTURENORMALEXTPROC m_glTextureNormalEXT;
      PFNGLGETQUERYOBJECTI64VEXTPROC m_glGetQueryObjecti64vEXT;
      PFNGLGETQUERYOBJECTUI64VEXTPROC m_glGetQueryObjectui64vEXT;
      PFNGLBEGINTRANSFORMFEEDBACKEXTPROC m_glBeginTransformFeedbackEXT;
      PFNGLENDTRANSFORMFEEDBACKEXTPROC m_glEndTransformFeedbackEXT;
      PFNGLBINDBUFFERRANGEEXTPROC m_glBindBufferRangeEXT;
      PFNGLBINDBUFFEROFFSETEXTPROC m_glBindBufferOffsetEXT;
      PFNGLBINDBUFFERBASEEXTPROC m_glBindBufferBaseEXT;
      PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC m_glTransformFeedbackVaryingsEXT;
      PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC m_glGetTransformFeedbackVaryingEXT;
      PFNGLARRAYELEMENTEXTPROC m_glArrayElementEXT;
      PFNGLCOLORPOINTEREXTPROC m_glColorPointerEXT;
      PFNGLDRAWARRAYSEXTPROC m_glDrawArraysEXT;
      PFNGLEDGEFLAGPOINTEREXTPROC m_glEdgeFlagPointerEXT;
      PFNGLGETPOINTERVEXTPROC m_glGetPointervEXT;
      PFNGLINDEXPOINTEREXTPROC m_glIndexPointerEXT;
      PFNGLNORMALPOINTEREXTPROC m_glNormalPointerEXT;
      PFNGLTEXCOORDPOINTEREXTPROC m_glTexCoordPointerEXT;
      PFNGLVERTEXPOINTEREXTPROC m_glVertexPointerEXT;
      PFNGLVERTEXATTRIBL1DEXTPROC m_glVertexAttribL1dEXT;
      PFNGLVERTEXATTRIBL2DEXTPROC m_glVertexAttribL2dEXT;
      PFNGLVERTEXATTRIBL3DEXTPROC m_glVertexAttribL3dEXT;
      PFNGLVERTEXATTRIBL4DEXTPROC m_glVertexAttribL4dEXT;
      PFNGLVERTEXATTRIBL1DVEXTPROC m_glVertexAttribL1dvEXT;
      PFNGLVERTEXATTRIBL2DVEXTPROC m_glVertexAttribL2dvEXT;
      PFNGLVERTEXATTRIBL3DVEXTPROC m_glVertexAttribL3dvEXT;
      PFNGLVERTEXATTRIBL4DVEXTPROC m_glVertexAttribL4dvEXT;
      PFNGLVERTEXATTRIBLPOINTEREXTPROC m_glVertexAttribLPointerEXT;
      PFNGLGETVERTEXATTRIBLDVEXTPROC m_glGetVertexAttribLdvEXT;
      PFNGLBEGINVERTEXSHADEREXTPROC m_glBeginVertexShaderEXT;
      PFNGLENDVERTEXSHADEREXTPROC m_glEndVertexShaderEXT;
      PFNGLBINDVERTEXSHADEREXTPROC m_glBindVertexShaderEXT;
      PFNGLGENVERTEXSHADERSEXTPROC m_glGenVertexShadersEXT;
      PFNGLDELETEVERTEXSHADEREXTPROC m_glDeleteVertexShaderEXT;
      PFNGLSHADEROP1EXTPROC m_glShaderOp1EXT;
      PFNGLSHADEROP2EXTPROC m_glShaderOp2EXT;
      PFNGLSHADEROP3EXTPROC m_glShaderOp3EXT;
      PFNGLSWIZZLEEXTPROC m_glSwizzleEXT;
      PFNGLWRITEMASKEXTPROC m_glWriteMaskEXT;
      PFNGLINSERTCOMPONENTEXTPROC m_glInsertComponentEXT;
      PFNGLEXTRACTCOMPONENTEXTPROC m_glExtractComponentEXT;
      PFNGLGENSYMBOLSEXTPROC m_glGenSymbolsEXT;
      PFNGLSETINVARIANTEXTPROC m_glSetInvariantEXT;
      PFNGLSETLOCALCONSTANTEXTPROC m_glSetLocalConstantEXT;
      PFNGLVARIANTBVEXTPROC m_glVariantbvEXT;
      PFNGLVARIANTSVEXTPROC m_glVariantsvEXT;
      PFNGLVARIANTIVEXTPROC m_glVariantivEXT;
      PFNGLVARIANTFVEXTPROC m_glVariantfvEXT;
      PFNGLVARIANTDVEXTPROC m_glVariantdvEXT;
      PFNGLVARIANTUBVEXTPROC m_glVariantubvEXT;
      PFNGLVARIANTUSVEXTPROC m_glVariantusvEXT;
      PFNGLVARIANTUIVEXTPROC m_glVariantuivEXT;
      PFNGLVARIANTPOINTEREXTPROC m_glVariantPointerEXT;
      PFNGLENABLEVARIANTCLIENTSTATEEXTPROC m_glEnableVariantClientStateEXT;
      PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC m_glDisableVariantClientStateEXT;
      PFNGLBINDLIGHTPARAMETEREXTPROC m_glBindLightParameterEXT;
      PFNGLBINDMATERIALPARAMETEREXTPROC m_glBindMaterialParameterEXT;
      PFNGLBINDTEXGENPARAMETEREXTPROC m_glBindTexGenParameterEXT;
      PFNGLBINDTEXTUREUNITPARAMETEREXTPROC m_glBindTextureUnitParameterEXT;
      PFNGLBINDPARAMETEREXTPROC m_glBindParameterEXT;
      PFNGLISVARIANTENABLEDEXTPROC m_glIsVariantEnabledEXT;
      PFNGLGETVARIANTBOOLEANVEXTPROC m_glGetVariantBooleanvEXT;
      PFNGLGETVARIANTINTEGERVEXTPROC m_glGetVariantIntegervEXT;
      PFNGLGETVARIANTFLOATVEXTPROC m_glGetVariantFloatvEXT;
      PFNGLGETVARIANTPOINTERVEXTPROC m_glGetVariantPointervEXT;
      PFNGLGETINVARIANTBOOLEANVEXTPROC m_glGetInvariantBooleanvEXT;
      PFNGLGETINVARIANTINTEGERVEXTPROC m_glGetInvariantIntegervEXT;
      PFNGLGETINVARIANTFLOATVEXTPROC m_glGetInvariantFloatvEXT;
      PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC m_glGetLocalConstantBooleanvEXT;
      PFNGLGETLOCALCONSTANTINTEGERVEXTPROC m_glGetLocalConstantIntegervEXT;
      PFNGLGETLOCALCONSTANTFLOATVEXTPROC m_glGetLocalConstantFloatvEXT;
      PFNGLVERTEXWEIGHTFEXTPROC m_glVertexWeightfEXT;
      PFNGLVERTEXWEIGHTFVEXTPROC m_glVertexWeightfvEXT;
      PFNGLVERTEXWEIGHTPOINTEREXTPROC m_glVertexWeightPointerEXT;
      PFNGLIMPORTSYNCEXTPROC m_glImportSyncEXT;
      PFNGLFRAMETERMINATORGREMEDYPROC m_glFrameTerminatorGREMEDY;
      PFNGLSTRINGMARKERGREMEDYPROC m_glStringMarkerGREMEDY;
      PFNGLIMAGETRANSFORMPARAMETERIHPPROC m_glImageTransformParameteriHP;
      PFNGLIMAGETRANSFORMPARAMETERFHPPROC m_glImageTransformParameterfHP;
      PFNGLIMAGETRANSFORMPARAMETERIVHPPROC m_glImageTransformParameterivHP;
      PFNGLIMAGETRANSFORMPARAMETERFVHPPROC m_glImageTransformParameterfvHP;
      PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC m_glGetImageTransformParameterivHP;
      PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC m_glGetImageTransformParameterfvHP;
      PFNGLMULTIMODEDRAWARRAYSIBMPROC m_glMultiModeDrawArraysIBM;
      PFNGLMULTIMODEDRAWELEMENTSIBMPROC m_glMultiModeDrawElementsIBM;
      PFNGLFLUSHSTATICDATAIBMPROC m_glFlushStaticDataIBM;
      PFNGLCOLORPOINTERLISTIBMPROC m_glColorPointerListIBM;
      PFNGLSECONDARYCOLORPOINTERLISTIBMPROC m_glSecondaryColorPointerListIBM;
      PFNGLEDGEFLAGPOINTERLISTIBMPROC m_glEdgeFlagPointerListIBM;
      PFNGLFOGCOORDPOINTERLISTIBMPROC m_glFogCoordPointerListIBM;
      PFNGLINDEXPOINTERLISTIBMPROC m_glIndexPointerListIBM;
      PFNGLNORMALPOINTERLISTIBMPROC m_glNormalPointerListIBM;
      PFNGLTEXCOORDPOINTERLISTIBMPROC m_glTexCoordPointerListIBM;
      PFNGLVERTEXPOINTERLISTIBMPROC m_glVertexPointerListIBM;
      PFNGLBLENDFUNCSEPARATEINGRPROC m_glBlendFuncSeparateINGR;
      PFNGLSYNCTEXTUREINTELPROC m_glSyncTextureINTEL;
      PFNGLUNMAPTEXTURE2DINTELPROC m_glUnmapTexture2DINTEL;
      PFNGLMAPTEXTURE2DINTELPROC m_glMapTexture2DINTEL;
      PFNGLVERTEXPOINTERVINTELPROC m_glVertexPointervINTEL;
      PFNGLNORMALPOINTERVINTELPROC m_glNormalPointervINTEL;
      PFNGLCOLORPOINTERVINTELPROC m_glColorPointervINTEL;
      PFNGLTEXCOORDPOINTERVINTELPROC m_glTexCoordPointervINTEL;
      PFNGLBEGINPERFQUERYINTELPROC m_glBeginPerfQueryINTEL;
      PFNGLCREATEPERFQUERYINTELPROC m_glCreatePerfQueryINTEL;
      PFNGLDELETEPERFQUERYINTELPROC m_glDeletePerfQueryINTEL;
      PFNGLENDPERFQUERYINTELPROC m_glEndPerfQueryINTEL;
      PFNGLGETFIRSTPERFQUERYIDINTELPROC m_glGetFirstPerfQueryIdINTEL;
      PFNGLGETNEXTPERFQUERYIDINTELPROC m_glGetNextPerfQueryIdINTEL;
      PFNGLGETPERFCOUNTERINFOINTELPROC m_glGetPerfCounterInfoINTEL;
      PFNGLGETPERFQUERYDATAINTELPROC m_glGetPerfQueryDataINTEL;
      PFNGLGETPERFQUERYIDBYNAMEINTELPROC m_glGetPerfQueryIdByNameINTEL;
      PFNGLGETPERFQUERYINFOINTELPROC m_glGetPerfQueryInfoINTEL;
      PFNGLBLENDBARRIERKHRPROC m_glBlendBarrierKHR;
      PFNGLRESIZEBUFFERSMESAPROC m_glResizeBuffersMESA;
      PFNGLWINDOWPOS2DMESAPROC m_glWindowPos2dMESA;
      PFNGLWINDOWPOS2DVMESAPROC m_glWindowPos2dvMESA;
      PFNGLWINDOWPOS2FMESAPROC m_glWindowPos2fMESA;
      PFNGLWINDOWPOS2FVMESAPROC m_glWindowPos2fvMESA;
      PFNGLWINDOWPOS2IMESAPROC m_glWindowPos2iMESA;
      PFNGLWINDOWPOS2IVMESAPROC m_glWindowPos2ivMESA;
      PFNGLWINDOWPOS2SMESAPROC m_glWindowPos2sMESA;
      PFNGLWINDOWPOS2SVMESAPROC m_glWindowPos2svMESA;
      PFNGLWINDOWPOS3DMESAPROC m_glWindowPos3dMESA;
      PFNGLWINDOWPOS3DVMESAPROC m_glWindowPos3dvMESA;
      PFNGLWINDOWPOS3FMESAPROC m_glWindowPos3fMESA;
      PFNGLWINDOWPOS3FVMESAPROC m_glWindowPos3fvMESA;
      PFNGLWINDOWPOS3IMESAPROC m_glWindowPos3iMESA;
      PFNGLWINDOWPOS3IVMESAPROC m_glWindowPos3ivMESA;
      PFNGLWINDOWPOS3SMESAPROC m_glWindowPos3sMESA;
      PFNGLWINDOWPOS3SVMESAPROC m_glWindowPos3svMESA;
      PFNGLWINDOWPOS4DMESAPROC m_glWindowPos4dMESA;
      PFNGLWINDOWPOS4DVMESAPROC m_glWindowPos4dvMESA;
      PFNGLWINDOWPOS4FMESAPROC m_glWindowPos4fMESA;
      PFNGLWINDOWPOS4FVMESAPROC m_glWindowPos4fvMESA;
      PFNGLWINDOWPOS4IMESAPROC m_glWindowPos4iMESA;
      PFNGLWINDOWPOS4IVMESAPROC m_glWindowPos4ivMESA;
      PFNGLWINDOWPOS4SMESAPROC m_glWindowPos4sMESA;
      PFNGLWINDOWPOS4SVMESAPROC m_glWindowPos4svMESA;
      PFNGLBEGINCONDITIONALRENDERNVXPROC m_glBeginConditionalRenderNVX;
      PFNGLENDCONDITIONALRENDERNVXPROC m_glEndConditionalRenderNVX;
      PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC m_glMultiDrawArraysIndirectBindlessNV;
      PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC m_glMultiDrawElementsIndirectBindlessNV;
      PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC m_glMultiDrawArraysIndirectBindlessCountNV;
      PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC m_glMultiDrawElementsIndirectBindlessCountNV;
      PFNGLGETTEXTUREHANDLENVPROC m_glGetTextureHandleNV;
      PFNGLGETTEXTURESAMPLERHANDLENVPROC m_glGetTextureSamplerHandleNV;
      PFNGLMAKETEXTUREHANDLERESIDENTNVPROC m_glMakeTextureHandleResidentNV;
      PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC m_glMakeTextureHandleNonResidentNV;
      PFNGLGETIMAGEHANDLENVPROC m_glGetImageHandleNV;
      PFNGLMAKEIMAGEHANDLERESIDENTNVPROC m_glMakeImageHandleResidentNV;
      PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC m_glMakeImageHandleNonResidentNV;
      PFNGLUNIFORMHANDLEUI64NVPROC m_glUniformHandleui64NV;
      PFNGLUNIFORMHANDLEUI64VNVPROC m_glUniformHandleui64vNV;
      PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC m_glProgramUniformHandleui64NV;
      PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC m_glProgramUniformHandleui64vNV;
      PFNGLISTEXTUREHANDLERESIDENTNVPROC m_glIsTextureHandleResidentNV;
      PFNGLISIMAGEHANDLERESIDENTNVPROC m_glIsImageHandleResidentNV;
      PFNGLBLENDPARAMETERINVPROC m_glBlendParameteriNV;
      PFNGLBLENDBARRIERNVPROC m_glBlendBarrierNV;
      PFNGLCREATESTATESNVPROC m_glCreateStatesNV;
      PFNGLDELETESTATESNVPROC m_glDeleteStatesNV;
      PFNGLISSTATENVPROC m_glIsStateNV;
      PFNGLSTATECAPTURENVPROC m_glStateCaptureNV;
      PFNGLGETCOMMANDHEADERNVPROC m_glGetCommandHeaderNV;
      PFNGLGETSTAGEINDEXNVPROC m_glGetStageIndexNV;
      PFNGLDRAWCOMMANDSNVPROC m_glDrawCommandsNV;
      PFNGLDRAWCOMMANDSADDRESSNVPROC m_glDrawCommandsAddressNV;
      PFNGLDRAWCOMMANDSSTATESNVPROC m_glDrawCommandsStatesNV;
      PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC m_glDrawCommandsStatesAddressNV;
      PFNGLCREATECOMMANDLISTSNVPROC m_glCreateCommandListsNV;
      PFNGLDELETECOMMANDLISTSNVPROC m_glDeleteCommandListsNV;
      PFNGLISCOMMANDLISTNVPROC m_glIsCommandListNV;
      PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC m_glListDrawCommandsStatesClientNV;
      PFNGLCOMMANDLISTSEGMENTSNVPROC m_glCommandListSegmentsNV;
      PFNGLCOMPILECOMMANDLISTNVPROC m_glCompileCommandListNV;
      PFNGLCALLCOMMANDLISTNVPROC m_glCallCommandListNV;
      PFNGLBEGINCONDITIONALRENDERNVPROC m_glBeginConditionalRenderNV;
      PFNGLENDCONDITIONALRENDERNVPROC m_glEndConditionalRenderNV;
      PFNGLSUBPIXELPRECISIONBIASNVPROC m_glSubpixelPrecisionBiasNV;
      PFNGLCOPYIMAGESUBDATANVPROC m_glCopyImageSubDataNV;
      PFNGLDEPTHRANGEDNVPROC m_glDepthRangedNV;
      PFNGLCLEARDEPTHDNVPROC m_glClearDepthdNV;
      PFNGLDEPTHBOUNDSDNVPROC m_glDepthBoundsdNV;
      PFNGLDRAWTEXTURENVPROC m_glDrawTextureNV;
      PFNGLMAPCONTROLPOINTSNVPROC m_glMapControlPointsNV;
      PFNGLMAPPARAMETERIVNVPROC m_glMapParameterivNV;
      PFNGLMAPPARAMETERFVNVPROC m_glMapParameterfvNV;
      PFNGLGETMAPCONTROLPOINTSNVPROC m_glGetMapControlPointsNV;
      PFNGLGETMAPPARAMETERIVNVPROC m_glGetMapParameterivNV;
      PFNGLGETMAPPARAMETERFVNVPROC m_glGetMapParameterfvNV;
      PFNGLGETMAPATTRIBPARAMETERIVNVPROC m_glGetMapAttribParameterivNV;
      PFNGLGETMAPATTRIBPARAMETERFVNVPROC m_glGetMapAttribParameterfvNV;
      PFNGLEVALMAPSNVPROC m_glEvalMapsNV;
      PFNGLGETMULTISAMPLEFVNVPROC m_glGetMultisamplefvNV;
      PFNGLSAMPLEMASKINDEXEDNVPROC m_glSampleMaskIndexedNV;
      PFNGLTEXRENDERBUFFERNVPROC m_glTexRenderbufferNV;
      PFNGLDELETEFENCESNVPROC m_glDeleteFencesNV;
      PFNGLGENFENCESNVPROC m_glGenFencesNV;
      PFNGLISFENCENVPROC m_glIsFenceNV;
      PFNGLTESTFENCENVPROC m_glTestFenceNV;
      PFNGLGETFENCEIVNVPROC m_glGetFenceivNV;
      PFNGLFINISHFENCENVPROC m_glFinishFenceNV;
      PFNGLSETFENCENVPROC m_glSetFenceNV;
      PFNGLFRAGMENTCOVERAGECOLORNVPROC m_glFragmentCoverageColorNV;
      PFNGLPROGRAMNAMEDPARAMETER4FNVPROC m_glProgramNamedParameter4fNV;
      PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC m_glProgramNamedParameter4fvNV;
      PFNGLPROGRAMNAMEDPARAMETER4DNVPROC m_glProgramNamedParameter4dNV;
      PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC m_glProgramNamedParameter4dvNV;
      PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC m_glGetProgramNamedParameterfvNV;
      PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC m_glGetProgramNamedParameterdvNV;
      PFNGLCOVERAGEMODULATIONTABLENVPROC m_glCoverageModulationTableNV;
      PFNGLGETCOVERAGEMODULATIONTABLENVPROC m_glGetCoverageModulationTableNV;
      PFNGLCOVERAGEMODULATIONNVPROC m_glCoverageModulationNV;
      PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC m_glRenderbufferStorageMultisampleCoverageNV;
      PFNGLPROGRAMVERTEXLIMITNVPROC m_glProgramVertexLimitNV;
      PFNGLFRAMEBUFFERTEXTUREEXTPROC m_glFramebufferTextureEXT;
      PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC m_glFramebufferTextureFaceEXT;
      PFNGLPROGRAMLOCALPARAMETERI4INVPROC m_glProgramLocalParameterI4iNV;
      PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC m_glProgramLocalParameterI4ivNV;
      PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC m_glProgramLocalParametersI4ivNV;
      PFNGLPROGRAMLOCALPARAMETERI4UINVPROC m_glProgramLocalParameterI4uiNV;
      PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC m_glProgramLocalParameterI4uivNV;
      PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC m_glProgramLocalParametersI4uivNV;
      PFNGLPROGRAMENVPARAMETERI4INVPROC m_glProgramEnvParameterI4iNV;
      PFNGLPROGRAMENVPARAMETERI4IVNVPROC m_glProgramEnvParameterI4ivNV;
      PFNGLPROGRAMENVPARAMETERSI4IVNVPROC m_glProgramEnvParametersI4ivNV;
      PFNGLPROGRAMENVPARAMETERI4UINVPROC m_glProgramEnvParameterI4uiNV;
      PFNGLPROGRAMENVPARAMETERI4UIVNVPROC m_glProgramEnvParameterI4uivNV;
      PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC m_glProgramEnvParametersI4uivNV;
      PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC m_glGetProgramLocalParameterIivNV;
      PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC m_glGetProgramLocalParameterIuivNV;
      PFNGLGETPROGRAMENVPARAMETERIIVNVPROC m_glGetProgramEnvParameterIivNV;
      PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC m_glGetProgramEnvParameterIuivNV;
      PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC m_glProgramSubroutineParametersuivNV;
      PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC m_glGetProgramSubroutineParameteruivNV;
      PFNGLVERTEX2HNVPROC m_glVertex2hNV;
      PFNGLVERTEX2HVNVPROC m_glVertex2hvNV;
      PFNGLVERTEX3HNVPROC m_glVertex3hNV;
      PFNGLVERTEX3HVNVPROC m_glVertex3hvNV;
      PFNGLVERTEX4HNVPROC m_glVertex4hNV;
      PFNGLVERTEX4HVNVPROC m_glVertex4hvNV;
      PFNGLNORMAL3HNVPROC m_glNormal3hNV;
      PFNGLNORMAL3HVNVPROC m_glNormal3hvNV;
      PFNGLCOLOR3HNVPROC m_glColor3hNV;
      PFNGLCOLOR3HVNVPROC m_glColor3hvNV;
      PFNGLCOLOR4HNVPROC m_glColor4hNV;
      PFNGLCOLOR4HVNVPROC m_glColor4hvNV;
      PFNGLTEXCOORD1HNVPROC m_glTexCoord1hNV;
      PFNGLTEXCOORD1HVNVPROC m_glTexCoord1hvNV;
      PFNGLTEXCOORD2HNVPROC m_glTexCoord2hNV;
      PFNGLTEXCOORD2HVNVPROC m_glTexCoord2hvNV;
      PFNGLTEXCOORD3HNVPROC m_glTexCoord3hNV;
      PFNGLTEXCOORD3HVNVPROC m_glTexCoord3hvNV;
      PFNGLTEXCOORD4HNVPROC m_glTexCoord4hNV;
      PFNGLTEXCOORD4HVNVPROC m_glTexCoord4hvNV;
      PFNGLMULTITEXCOORD1HNVPROC m_glMultiTexCoord1hNV;
      PFNGLMULTITEXCOORD1HVNVPROC m_glMultiTexCoord1hvNV;
      PFNGLMULTITEXCOORD2HNVPROC m_glMultiTexCoord2hNV;
      PFNGLMULTITEXCOORD2HVNVPROC m_glMultiTexCoord2hvNV;
      PFNGLMULTITEXCOORD3HNVPROC m_glMultiTexCoord3hNV;
      PFNGLMULTITEXCOORD3HVNVPROC m_glMultiTexCoord3hvNV;
      PFNGLMULTITEXCOORD4HNVPROC m_glMultiTexCoord4hNV;
      PFNGLMULTITEXCOORD4HVNVPROC m_glMultiTexCoord4hvNV;
      PFNGLFOGCOORDHNVPROC m_glFogCoordhNV;
      PFNGLFOGCOORDHVNVPROC m_glFogCoordhvNV;
      PFNGLSECONDARYCOLOR3HNVPROC m_glSecondaryColor3hNV;
      PFNGLSECONDARYCOLOR3HVNVPROC m_glSecondaryColor3hvNV;
      PFNGLVERTEXWEIGHTHNVPROC m_glVertexWeighthNV;
      PFNGLVERTEXWEIGHTHVNVPROC m_glVertexWeighthvNV;
      PFNGLVERTEXATTRIB1HNVPROC m_glVertexAttrib1hNV;
      PFNGLVERTEXATTRIB1HVNVPROC m_glVertexAttrib1hvNV;
      PFNGLVERTEXATTRIB2HNVPROC m_glVertexAttrib2hNV;
      PFNGLVERTEXATTRIB2HVNVPROC m_glVertexAttrib2hvNV;
      PFNGLVERTEXATTRIB3HNVPROC m_glVertexAttrib3hNV;
      PFNGLVERTEXATTRIB3HVNVPROC m_glVertexAttrib3hvNV;
      PFNGLVERTEXATTRIB4HNVPROC m_glVertexAttrib4hNV;
      PFNGLVERTEXATTRIB4HVNVPROC m_glVertexAttrib4hvNV;
      PFNGLVERTEXATTRIBS1HVNVPROC m_glVertexAttribs1hvNV;
      PFNGLVERTEXATTRIBS2HVNVPROC m_glVertexAttribs2hvNV;
      PFNGLVERTEXATTRIBS3HVNVPROC m_glVertexAttribs3hvNV;
      PFNGLVERTEXATTRIBS4HVNVPROC m_glVertexAttribs4hvNV;
      PFNGLGETINTERNALFORMATSAMPLEIVNVPROC m_glGetInternalformatSampleivNV;
      PFNGLGENOCCLUSIONQUERIESNVPROC m_glGenOcclusionQueriesNV;
      PFNGLDELETEOCCLUSIONQUERIESNVPROC m_glDeleteOcclusionQueriesNV;
      PFNGLISOCCLUSIONQUERYNVPROC m_glIsOcclusionQueryNV;
      PFNGLBEGINOCCLUSIONQUERYNVPROC m_glBeginOcclusionQueryNV;
      PFNGLENDOCCLUSIONQUERYNVPROC m_glEndOcclusionQueryNV;
      PFNGLGETOCCLUSIONQUERYIVNVPROC m_glGetOcclusionQueryivNV;
      PFNGLGETOCCLUSIONQUERYUIVNVPROC m_glGetOcclusionQueryuivNV;
      PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC m_glProgramBufferParametersfvNV;
      PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC m_glProgramBufferParametersIivNV;
      PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC m_glProgramBufferParametersIuivNV;
      PFNGLGENPATHSNVPROC m_glGenPathsNV;
      PFNGLDELETEPATHSNVPROC m_glDeletePathsNV;
      PFNGLISPATHNVPROC m_glIsPathNV;
      PFNGLPATHCOMMANDSNVPROC m_glPathCommandsNV;
      PFNGLPATHCOORDSNVPROC m_glPathCoordsNV;
      PFNGLPATHSUBCOMMANDSNVPROC m_glPathSubCommandsNV;
      PFNGLPATHSUBCOORDSNVPROC m_glPathSubCoordsNV;
      PFNGLPATHSTRINGNVPROC m_glPathStringNV;
      PFNGLPATHGLYPHSNVPROC m_glPathGlyphsNV;
      PFNGLPATHGLYPHRANGENVPROC m_glPathGlyphRangeNV;
      PFNGLWEIGHTPATHSNVPROC m_glWeightPathsNV;
      PFNGLCOPYPATHNVPROC m_glCopyPathNV;
      PFNGLINTERPOLATEPATHSNVPROC m_glInterpolatePathsNV;
      PFNGLTRANSFORMPATHNVPROC m_glTransformPathNV;
      PFNGLPATHPARAMETERIVNVPROC m_glPathParameterivNV;
      PFNGLPATHPARAMETERINVPROC m_glPathParameteriNV;
      PFNGLPATHPARAMETERFVNVPROC m_glPathParameterfvNV;
      PFNGLPATHPARAMETERFNVPROC m_glPathParameterfNV;
      PFNGLPATHDASHARRAYNVPROC m_glPathDashArrayNV;
      PFNGLPATHSTENCILFUNCNVPROC m_glPathStencilFuncNV;
      PFNGLPATHSTENCILDEPTHOFFSETNVPROC m_glPathStencilDepthOffsetNV;
      PFNGLSTENCILFILLPATHNVPROC m_glStencilFillPathNV;
      PFNGLSTENCILSTROKEPATHNVPROC m_glStencilStrokePathNV;
      PFNGLSTENCILFILLPATHINSTANCEDNVPROC m_glStencilFillPathInstancedNV;
      PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC m_glStencilStrokePathInstancedNV;
      PFNGLPATHCOVERDEPTHFUNCNVPROC m_glPathCoverDepthFuncNV;
      PFNGLCOVERFILLPATHNVPROC m_glCoverFillPathNV;
      PFNGLCOVERSTROKEPATHNVPROC m_glCoverStrokePathNV;
      PFNGLCOVERFILLPATHINSTANCEDNVPROC m_glCoverFillPathInstancedNV;
      PFNGLCOVERSTROKEPATHINSTANCEDNVPROC m_glCoverStrokePathInstancedNV;
      PFNGLGETPATHPARAMETERIVNVPROC m_glGetPathParameterivNV;
      PFNGLGETPATHPARAMETERFVNVPROC m_glGetPathParameterfvNV;
      PFNGLGETPATHCOMMANDSNVPROC m_glGetPathCommandsNV;
      PFNGLGETPATHCOORDSNVPROC m_glGetPathCoordsNV;
      PFNGLGETPATHDASHARRAYNVPROC m_glGetPathDashArrayNV;
      PFNGLGETPATHMETRICSNVPROC m_glGetPathMetricsNV;
      PFNGLGETPATHMETRICRANGENVPROC m_glGetPathMetricRangeNV;
      PFNGLGETPATHSPACINGNVPROC m_glGetPathSpacingNV;
      PFNGLISPOINTINFILLPATHNVPROC m_glIsPointInFillPathNV;
      PFNGLISPOINTINSTROKEPATHNVPROC m_glIsPointInStrokePathNV;
      PFNGLGETPATHLENGTHNVPROC m_glGetPathLengthNV;
      PFNGLPOINTALONGPATHNVPROC m_glPointAlongPathNV;
      PFNGLMATRIXLOAD3X2FNVPROC m_glMatrixLoad3x2fNV;
      PFNGLMATRIXLOAD3X3FNVPROC m_glMatrixLoad3x3fNV;
      PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC m_glMatrixLoadTranspose3x3fNV;
      PFNGLMATRIXMULT3X2FNVPROC m_glMatrixMult3x2fNV;
      PFNGLMATRIXMULT3X3FNVPROC m_glMatrixMult3x3fNV;
      PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC m_glMatrixMultTranspose3x3fNV;
      PFNGLSTENCILTHENCOVERFILLPATHNVPROC m_glStencilThenCoverFillPathNV;
      PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC m_glStencilThenCoverStrokePathNV;
      PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC m_glStencilThenCoverFillPathInstancedNV;
      PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC m_glStencilThenCoverStrokePathInstancedNV;
      PFNGLPATHGLYPHINDEXRANGENVPROC m_glPathGlyphIndexRangeNV;
      PFNGLPATHGLYPHINDEXARRAYNVPROC m_glPathGlyphIndexArrayNV;
      PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC m_glPathMemoryGlyphIndexArrayNV;
      PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC m_glProgramPathFragmentInputGenNV;
      PFNGLGETPROGRAMRESOURCEFVNVPROC m_glGetProgramResourcefvNV;
      PFNGLPATHCOLORGENNVPROC m_glPathColorGenNV;
      PFNGLPATHTEXGENNVPROC m_glPathTexGenNV;
      PFNGLPATHFOGGENNVPROC m_glPathFogGenNV;
      PFNGLGETPATHCOLORGENIVNVPROC m_glGetPathColorGenivNV;
      PFNGLGETPATHCOLORGENFVNVPROC m_glGetPathColorGenfvNV;
      PFNGLGETPATHTEXGENIVNVPROC m_glGetPathTexGenivNV;
      PFNGLGETPATHTEXGENFVNVPROC m_glGetPathTexGenfvNV;
      PFNGLPIXELDATARANGENVPROC m_glPixelDataRangeNV;
      PFNGLFLUSHPIXELDATARANGENVPROC m_glFlushPixelDataRangeNV;
      PFNGLPOINTPARAMETERINVPROC m_glPointParameteriNV;
      PFNGLPOINTPARAMETERIVNVPROC m_glPointParameterivNV;
      PFNGLPRESENTFRAMEKEYEDNVPROC m_glPresentFrameKeyedNV;
      PFNGLPRESENTFRAMEDUALFILLNVPROC m_glPresentFrameDualFillNV;
      PFNGLGETVIDEOIVNVPROC m_glGetVideoivNV;
      PFNGLGETVIDEOUIVNVPROC m_glGetVideouivNV;
      PFNGLGETVIDEOI64VNVPROC m_glGetVideoi64vNV;
      PFNGLGETVIDEOUI64VNVPROC m_glGetVideoui64vNV;
      PFNGLPRIMITIVERESTARTNVPROC m_glPrimitiveRestartNV;
      PFNGLPRIMITIVERESTARTINDEXNVPROC m_glPrimitiveRestartIndexNV;
      PFNGLCOMBINERPARAMETERFVNVPROC m_glCombinerParameterfvNV;
      PFNGLCOMBINERPARAMETERFNVPROC m_glCombinerParameterfNV;
      PFNGLCOMBINERPARAMETERIVNVPROC m_glCombinerParameterivNV;
      PFNGLCOMBINERPARAMETERINVPROC m_glCombinerParameteriNV;
      PFNGLCOMBINERINPUTNVPROC m_glCombinerInputNV;
      PFNGLCOMBINEROUTPUTNVPROC m_glCombinerOutputNV;
      PFNGLFINALCOMBINERINPUTNVPROC m_glFinalCombinerInputNV;
      PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC m_glGetCombinerInputParameterfvNV;
      PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC m_glGetCombinerInputParameterivNV;
      PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC m_glGetCombinerOutputParameterfvNV;
      PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC m_glGetCombinerOutputParameterivNV;
      PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC m_glGetFinalCombinerInputParameterfvNV;
      PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC m_glGetFinalCombinerInputParameterivNV;
      PFNGLCOMBINERSTAGEPARAMETERFVNVPROC m_glCombinerStageParameterfvNV;
      PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC m_glGetCombinerStageParameterfvNV;
      PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC m_glFramebufferSampleLocationsfvNV;
      PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC m_glNamedFramebufferSampleLocationsfvNV;
      PFNGLRESOLVEDEPTHVALUESNVPROC m_glResolveDepthValuesNV;
      PFNGLMAKEBUFFERRESIDENTNVPROC m_glMakeBufferResidentNV;
      PFNGLMAKEBUFFERNONRESIDENTNVPROC m_glMakeBufferNonResidentNV;
      PFNGLISBUFFERRESIDENTNVPROC m_glIsBufferResidentNV;
      PFNGLMAKENAMEDBUFFERRESIDENTNVPROC m_glMakeNamedBufferResidentNV;
      PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC m_glMakeNamedBufferNonResidentNV;
      PFNGLISNAMEDBUFFERRESIDENTNVPROC m_glIsNamedBufferResidentNV;
      PFNGLGETBUFFERPARAMETERUI64VNVPROC m_glGetBufferParameterui64vNV;
      PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC m_glGetNamedBufferParameterui64vNV;
      PFNGLGETINTEGERUI64VNVPROC m_glGetIntegerui64vNV;
      PFNGLUNIFORMUI64NVPROC m_glUniformui64NV;
      PFNGLUNIFORMUI64VNVPROC m_glUniformui64vNV;
      PFNGLPROGRAMUNIFORMUI64NVPROC m_glProgramUniformui64NV;
      PFNGLPROGRAMUNIFORMUI64VNVPROC m_glProgramUniformui64vNV;
      PFNGLTEXTUREBARRIERNVPROC m_glTextureBarrierNV;
      PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC m_glTexImage2DMultisampleCoverageNV;
      PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC m_glTexImage3DMultisampleCoverageNV;
      PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC m_glTextureImage2DMultisampleNV;
      PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC m_glTextureImage3DMultisampleNV;
      PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC m_glTextureImage2DMultisampleCoverageNV;
      PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC m_glTextureImage3DMultisampleCoverageNV;
      PFNGLBEGINTRANSFORMFEEDBACKNVPROC m_glBeginTransformFeedbackNV;
      PFNGLENDTRANSFORMFEEDBACKNVPROC m_glEndTransformFeedbackNV;
      PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC m_glTransformFeedbackAttribsNV;
      PFNGLBINDBUFFERRANGENVPROC m_glBindBufferRangeNV;
      PFNGLBINDBUFFEROFFSETNVPROC m_glBindBufferOffsetNV;
      PFNGLBINDBUFFERBASENVPROC m_glBindBufferBaseNV;
      PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC m_glTransformFeedbackVaryingsNV;
      PFNGLACTIVEVARYINGNVPROC m_glActiveVaryingNV;
      PFNGLGETVARYINGLOCATIONNVPROC m_glGetVaryingLocationNV;
      PFNGLGETACTIVEVARYINGNVPROC m_glGetActiveVaryingNV;
      PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC m_glGetTransformFeedbackVaryingNV;
      PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC m_glTransformFeedbackStreamAttribsNV;
      PFNGLBINDTRANSFORMFEEDBACKNVPROC m_glBindTransformFeedbackNV;
      PFNGLDELETETRANSFORMFEEDBACKSNVPROC m_glDeleteTransformFeedbacksNV;
      PFNGLGENTRANSFORMFEEDBACKSNVPROC m_glGenTransformFeedbacksNV;
      PFNGLISTRANSFORMFEEDBACKNVPROC m_glIsTransformFeedbackNV;
      PFNGLPAUSETRANSFORMFEEDBACKNVPROC m_glPauseTransformFeedbackNV;
      PFNGLRESUMETRANSFORMFEEDBACKNVPROC m_glResumeTransformFeedbackNV;
      PFNGLDRAWTRANSFORMFEEDBACKNVPROC m_glDrawTransformFeedbackNV;
      PFNGLVDPAUINITNVPROC m_glVDPAUInitNV;
      PFNGLVDPAUFININVPROC m_glVDPAUFiniNV;
      PFNGLVDPAUREGISTERVIDEOSURFACENVPROC m_glVDPAURegisterVideoSurfaceNV;
      PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC m_glVDPAURegisterOutputSurfaceNV;
      PFNGLVDPAUISSURFACENVPROC m_glVDPAUIsSurfaceNV;
      PFNGLVDPAUUNREGISTERSURFACENVPROC m_glVDPAUUnregisterSurfaceNV;
      PFNGLVDPAUGETSURFACEIVNVPROC m_glVDPAUGetSurfaceivNV;
      PFNGLVDPAUSURFACEACCESSNVPROC m_glVDPAUSurfaceAccessNV;
      PFNGLVDPAUMAPSURFACESNVPROC m_glVDPAUMapSurfacesNV;
      PFNGLVDPAUUNMAPSURFACESNVPROC m_glVDPAUUnmapSurfacesNV;
      PFNGLFLUSHVERTEXARRAYRANGENVPROC m_glFlushVertexArrayRangeNV;
      PFNGLVERTEXARRAYRANGENVPROC m_glVertexArrayRangeNV;
      PFNGLVERTEXATTRIBL1I64NVPROC m_glVertexAttribL1i64NV;
      PFNGLVERTEXATTRIBL2I64NVPROC m_glVertexAttribL2i64NV;
      PFNGLVERTEXATTRIBL3I64NVPROC m_glVertexAttribL3i64NV;
      PFNGLVERTEXATTRIBL4I64NVPROC m_glVertexAttribL4i64NV;
      PFNGLVERTEXATTRIBL1I64VNVPROC m_glVertexAttribL1i64vNV;
      PFNGLVERTEXATTRIBL2I64VNVPROC m_glVertexAttribL2i64vNV;
      PFNGLVERTEXATTRIBL3I64VNVPROC m_glVertexAttribL3i64vNV;
      PFNGLVERTEXATTRIBL4I64VNVPROC m_glVertexAttribL4i64vNV;
      PFNGLVERTEXATTRIBL1UI64NVPROC m_glVertexAttribL1ui64NV;
      PFNGLVERTEXATTRIBL2UI64NVPROC m_glVertexAttribL2ui64NV;
      PFNGLVERTEXATTRIBL3UI64NVPROC m_glVertexAttribL3ui64NV;
      PFNGLVERTEXATTRIBL4UI64NVPROC m_glVertexAttribL4ui64NV;
      PFNGLVERTEXATTRIBL1UI64VNVPROC m_glVertexAttribL1ui64vNV;
      PFNGLVERTEXATTRIBL2UI64VNVPROC m_glVertexAttribL2ui64vNV;
      PFNGLVERTEXATTRIBL3UI64VNVPROC m_glVertexAttribL3ui64vNV;
      PFNGLVERTEXATTRIBL4UI64VNVPROC m_glVertexAttribL4ui64vNV;
      PFNGLGETVERTEXATTRIBLI64VNVPROC m_glGetVertexAttribLi64vNV;
      PFNGLGETVERTEXATTRIBLUI64VNVPROC m_glGetVertexAttribLui64vNV;
      PFNGLVERTEXATTRIBLFORMATNVPROC m_glVertexAttribLFormatNV;
      PFNGLBUFFERADDRESSRANGENVPROC m_glBufferAddressRangeNV;
      PFNGLVERTEXFORMATNVPROC m_glVertexFormatNV;
      PFNGLNORMALFORMATNVPROC m_glNormalFormatNV;
      PFNGLCOLORFORMATNVPROC m_glColorFormatNV;
      PFNGLINDEXFORMATNVPROC m_glIndexFormatNV;
      PFNGLTEXCOORDFORMATNVPROC m_glTexCoordFormatNV;
      PFNGLEDGEFLAGFORMATNVPROC m_glEdgeFlagFormatNV;
      PFNGLSECONDARYCOLORFORMATNVPROC m_glSecondaryColorFormatNV;
      PFNGLFOGCOORDFORMATNVPROC m_glFogCoordFormatNV;
      PFNGLVERTEXATTRIBFORMATNVPROC m_glVertexAttribFormatNV;
      PFNGLVERTEXATTRIBIFORMATNVPROC m_glVertexAttribIFormatNV;
      PFNGLGETINTEGERUI64I_VNVPROC m_glGetIntegerui64i_vNV;
      PFNGLAREPROGRAMSRESIDENTNVPROC m_glAreProgramsResidentNV;
      PFNGLBINDPROGRAMNVPROC m_glBindProgramNV;
      PFNGLDELETEPROGRAMSNVPROC m_glDeleteProgramsNV;
      PFNGLEXECUTEPROGRAMNVPROC m_glExecuteProgramNV;
      PFNGLGENPROGRAMSNVPROC m_glGenProgramsNV;
      PFNGLGETPROGRAMPARAMETERDVNVPROC m_glGetProgramParameterdvNV;
      PFNGLGETPROGRAMPARAMETERFVNVPROC m_glGetProgramParameterfvNV;
      PFNGLGETPROGRAMIVNVPROC m_glGetProgramivNV;
      PFNGLGETPROGRAMSTRINGNVPROC m_glGetProgramStringNV;
      PFNGLGETTRACKMATRIXIVNVPROC m_glGetTrackMatrixivNV;
      PFNGLGETVERTEXATTRIBDVNVPROC m_glGetVertexAttribdvNV;
      PFNGLGETVERTEXATTRIBFVNVPROC m_glGetVertexAttribfvNV;
      PFNGLGETVERTEXATTRIBIVNVPROC m_glGetVertexAttribivNV;
      PFNGLGETVERTEXATTRIBPOINTERVNVPROC m_glGetVertexAttribPointervNV;
      PFNGLISPROGRAMNVPROC m_glIsProgramNV;
      PFNGLLOADPROGRAMNVPROC m_glLoadProgramNV;
      PFNGLPROGRAMPARAMETER4DNVPROC m_glProgramParameter4dNV;
      PFNGLPROGRAMPARAMETER4DVNVPROC m_glProgramParameter4dvNV;
      PFNGLPROGRAMPARAMETER4FNVPROC m_glProgramParameter4fNV;
      PFNGLPROGRAMPARAMETER4FVNVPROC m_glProgramParameter4fvNV;
      PFNGLPROGRAMPARAMETERS4DVNVPROC m_glProgramParameters4dvNV;
      PFNGLPROGRAMPARAMETERS4FVNVPROC m_glProgramParameters4fvNV;
      PFNGLREQUESTRESIDENTPROGRAMSNVPROC m_glRequestResidentProgramsNV;
      PFNGLTRACKMATRIXNVPROC m_glTrackMatrixNV;
      PFNGLVERTEXATTRIBPOINTERNVPROC m_glVertexAttribPointerNV;
      PFNGLVERTEXATTRIB1DNVPROC m_glVertexAttrib1dNV;
      PFNGLVERTEXATTRIB1DVNVPROC m_glVertexAttrib1dvNV;
      PFNGLVERTEXATTRIB1FNVPROC m_glVertexAttrib1fNV;
      PFNGLVERTEXATTRIB1FVNVPROC m_glVertexAttrib1fvNV;
      PFNGLVERTEXATTRIB1SNVPROC m_glVertexAttrib1sNV;
      PFNGLVERTEXATTRIB1SVNVPROC m_glVertexAttrib1svNV;
      PFNGLVERTEXATTRIB2DNVPROC m_glVertexAttrib2dNV;
      PFNGLVERTEXATTRIB2DVNVPROC m_glVertexAttrib2dvNV;
      PFNGLVERTEXATTRIB2FNVPROC m_glVertexAttrib2fNV;
      PFNGLVERTEXATTRIB2FVNVPROC m_glVertexAttrib2fvNV;
      PFNGLVERTEXATTRIB2SNVPROC m_glVertexAttrib2sNV;
      PFNGLVERTEXATTRIB2SVNVPROC m_glVertexAttrib2svNV;
      PFNGLVERTEXATTRIB3DNVPROC m_glVertexAttrib3dNV;
      PFNGLVERTEXATTRIB3DVNVPROC m_glVertexAttrib3dvNV;
      PFNGLVERTEXATTRIB3FNVPROC m_glVertexAttrib3fNV;
      PFNGLVERTEXATTRIB3FVNVPROC m_glVertexAttrib3fvNV;
      PFNGLVERTEXATTRIB3SNVPROC m_glVertexAttrib3sNV;
      PFNGLVERTEXATTRIB3SVNVPROC m_glVertexAttrib3svNV;
      PFNGLVERTEXATTRIB4DNVPROC m_glVertexAttrib4dNV;
      PFNGLVERTEXATTRIB4DVNVPROC m_glVertexAttrib4dvNV;
      PFNGLVERTEXATTRIB4FNVPROC m_glVertexAttrib4fNV;
      PFNGLVERTEXATTRIB4FVNVPROC m_glVertexAttrib4fvNV;
      PFNGLVERTEXATTRIB4SNVPROC m_glVertexAttrib4sNV;
      PFNGLVERTEXATTRIB4SVNVPROC m_glVertexAttrib4svNV;
      PFNGLVERTEXATTRIB4UBNVPROC m_glVertexAttrib4ubNV;
      PFNGLVERTEXATTRIB4UBVNVPROC m_glVertexAttrib4ubvNV;
      PFNGLVERTEXATTRIBS1DVNVPROC m_glVertexAttribs1dvNV;
      PFNGLVERTEXATTRIBS1FVNVPROC m_glVertexAttribs1fvNV;
      PFNGLVERTEXATTRIBS1SVNVPROC m_glVertexAttribs1svNV;
      PFNGLVERTEXATTRIBS2DVNVPROC m_glVertexAttribs2dvNV;
      PFNGLVERTEXATTRIBS2FVNVPROC m_glVertexAttribs2fvNV;
      PFNGLVERTEXATTRIBS2SVNVPROC m_glVertexAttribs2svNV;
      PFNGLVERTEXATTRIBS3DVNVPROC m_glVertexAttribs3dvNV;
      PFNGLVERTEXATTRIBS3FVNVPROC m_glVertexAttribs3fvNV;
      PFNGLVERTEXATTRIBS3SVNVPROC m_glVertexAttribs3svNV;
      PFNGLVERTEXATTRIBS4DVNVPROC m_glVertexAttribs4dvNV;
      PFNGLVERTEXATTRIBS4FVNVPROC m_glVertexAttribs4fvNV;
      PFNGLVERTEXATTRIBS4SVNVPROC m_glVertexAttribs4svNV;
      PFNGLVERTEXATTRIBS4UBVNVPROC m_glVertexAttribs4ubvNV;
      PFNGLVERTEXATTRIBI1IEXTPROC m_glVertexAttribI1iEXT;
      PFNGLVERTEXATTRIBI2IEXTPROC m_glVertexAttribI2iEXT;
      PFNGLVERTEXATTRIBI3IEXTPROC m_glVertexAttribI3iEXT;
      PFNGLVERTEXATTRIBI4IEXTPROC m_glVertexAttribI4iEXT;
      PFNGLVERTEXATTRIBI1UIEXTPROC m_glVertexAttribI1uiEXT;
      PFNGLVERTEXATTRIBI2UIEXTPROC m_glVertexAttribI2uiEXT;
      PFNGLVERTEXATTRIBI3UIEXTPROC m_glVertexAttribI3uiEXT;
      PFNGLVERTEXATTRIBI4UIEXTPROC m_glVertexAttribI4uiEXT;
      PFNGLVERTEXATTRIBI1IVEXTPROC m_glVertexAttribI1ivEXT;
      PFNGLVERTEXATTRIBI2IVEXTPROC m_glVertexAttribI2ivEXT;
      PFNGLVERTEXATTRIBI3IVEXTPROC m_glVertexAttribI3ivEXT;
      PFNGLVERTEXATTRIBI4IVEXTPROC m_glVertexAttribI4ivEXT;
      PFNGLVERTEXATTRIBI1UIVEXTPROC m_glVertexAttribI1uivEXT;
      PFNGLVERTEXATTRIBI2UIVEXTPROC m_glVertexAttribI2uivEXT;
      PFNGLVERTEXATTRIBI3UIVEXTPROC m_glVertexAttribI3uivEXT;
      PFNGLVERTEXATTRIBI4UIVEXTPROC m_glVertexAttribI4uivEXT;
      PFNGLVERTEXATTRIBI4BVEXTPROC m_glVertexAttribI4bvEXT;
      PFNGLVERTEXATTRIBI4SVEXTPROC m_glVertexAttribI4svEXT;
      PFNGLVERTEXATTRIBI4UBVEXTPROC m_glVertexAttribI4ubvEXT;
      PFNGLVERTEXATTRIBI4USVEXTPROC m_glVertexAttribI4usvEXT;
      PFNGLVERTEXATTRIBIPOINTEREXTPROC m_glVertexAttribIPointerEXT;
      PFNGLGETVERTEXATTRIBIIVEXTPROC m_glGetVertexAttribIivEXT;
      PFNGLGETVERTEXATTRIBIUIVEXTPROC m_glGetVertexAttribIuivEXT;
      PFNGLBEGINVIDEOCAPTURENVPROC m_glBeginVideoCaptureNV;
      PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC m_glBindVideoCaptureStreamBufferNV;
      PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC m_glBindVideoCaptureStreamTextureNV;
      PFNGLENDVIDEOCAPTURENVPROC m_glEndVideoCaptureNV;
      PFNGLGETVIDEOCAPTUREIVNVPROC m_glGetVideoCaptureivNV;
      PFNGLGETVIDEOCAPTURESTREAMIVNVPROC m_glGetVideoCaptureStreamivNV;
      PFNGLGETVIDEOCAPTURESTREAMFVNVPROC m_glGetVideoCaptureStreamfvNV;
      PFNGLGETVIDEOCAPTURESTREAMDVNVPROC m_glGetVideoCaptureStreamdvNV;
      PFNGLVIDEOCAPTURENVPROC m_glVideoCaptureNV;
      PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC m_glVideoCaptureStreamParameterivNV;
      PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC m_glVideoCaptureStreamParameterfvNV;
      PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC m_glVideoCaptureStreamParameterdvNV;
      PFNGLMULTITEXCOORD1BOESPROC m_glMultiTexCoord1bOES;
      PFNGLMULTITEXCOORD1BVOESPROC m_glMultiTexCoord1bvOES;
      PFNGLMULTITEXCOORD2BOESPROC m_glMultiTexCoord2bOES;
      PFNGLMULTITEXCOORD2BVOESPROC m_glMultiTexCoord2bvOES;
      PFNGLMULTITEXCOORD3BOESPROC m_glMultiTexCoord3bOES;
      PFNGLMULTITEXCOORD3BVOESPROC m_glMultiTexCoord3bvOES;
      PFNGLMULTITEXCOORD4BOESPROC m_glMultiTexCoord4bOES;
      PFNGLMULTITEXCOORD4BVOESPROC m_glMultiTexCoord4bvOES;
      PFNGLTEXCOORD1BOESPROC m_glTexCoord1bOES;
      PFNGLTEXCOORD1BVOESPROC m_glTexCoord1bvOES;
      PFNGLTEXCOORD2BOESPROC m_glTexCoord2bOES;
      PFNGLTEXCOORD2BVOESPROC m_glTexCoord2bvOES;
      PFNGLTEXCOORD3BOESPROC m_glTexCoord3bOES;
      PFNGLTEXCOORD3BVOESPROC m_glTexCoord3bvOES;
      PFNGLTEXCOORD4BOESPROC m_glTexCoord4bOES;
      PFNGLTEXCOORD4BVOESPROC m_glTexCoord4bvOES;
      PFNGLVERTEX2BOESPROC m_glVertex2bOES;
      PFNGLVERTEX2BVOESPROC m_glVertex2bvOES;
      PFNGLVERTEX3BOESPROC m_glVertex3bOES;
      PFNGLVERTEX3BVOESPROC m_glVertex3bvOES;
      PFNGLVERTEX4BOESPROC m_glVertex4bOES;
      PFNGLVERTEX4BVOESPROC m_glVertex4bvOES;
      PFNGLALPHAFUNCXOESPROC m_glAlphaFuncxOES;
      PFNGLCLEARCOLORXOESPROC m_glClearColorxOES;
      PFNGLCLEARDEPTHXOESPROC m_glClearDepthxOES;
      PFNGLCLIPPLANEXOESPROC m_glClipPlanexOES;
      PFNGLCOLOR4XOESPROC m_glColor4xOES;
      PFNGLDEPTHRANGEXOESPROC m_glDepthRangexOES;
      PFNGLFOGXOESPROC m_glFogxOES;
      PFNGLFOGXVOESPROC m_glFogxvOES;
      PFNGLFRUSTUMXOESPROC m_glFrustumxOES;
      PFNGLGETCLIPPLANEXOESPROC m_glGetClipPlanexOES;
      PFNGLGETFIXEDVOESPROC m_glGetFixedvOES;
      PFNGLGETTEXENVXVOESPROC m_glGetTexEnvxvOES;
      PFNGLGETTEXPARAMETERXVOESPROC m_glGetTexParameterxvOES;
      PFNGLLIGHTMODELXOESPROC m_glLightModelxOES;
      PFNGLLIGHTMODELXVOESPROC m_glLightModelxvOES;
      PFNGLLIGHTXOESPROC m_glLightxOES;
      PFNGLLIGHTXVOESPROC m_glLightxvOES;
      PFNGLLINEWIDTHXOESPROC m_glLineWidthxOES;
      PFNGLLOADMATRIXXOESPROC m_glLoadMatrixxOES;
      PFNGLMATERIALXOESPROC m_glMaterialxOES;
      PFNGLMATERIALXVOESPROC m_glMaterialxvOES;
      PFNGLMULTMATRIXXOESPROC m_glMultMatrixxOES;
      PFNGLMULTITEXCOORD4XOESPROC m_glMultiTexCoord4xOES;
      PFNGLNORMAL3XOESPROC m_glNormal3xOES;
      PFNGLORTHOXOESPROC m_glOrthoxOES;
      PFNGLPOINTPARAMETERXVOESPROC m_glPointParameterxvOES;
      PFNGLPOINTSIZEXOESPROC m_glPointSizexOES;
      PFNGLPOLYGONOFFSETXOESPROC m_glPolygonOffsetxOES;
      PFNGLROTATEXOESPROC m_glRotatexOES;
      PFNGLSCALEXOESPROC m_glScalexOES;
      PFNGLTEXENVXOESPROC m_glTexEnvxOES;
      PFNGLTEXENVXVOESPROC m_glTexEnvxvOES;
      PFNGLTEXPARAMETERXOESPROC m_glTexParameterxOES;
      PFNGLTEXPARAMETERXVOESPROC m_glTexParameterxvOES;
      PFNGLTRANSLATEXOESPROC m_glTranslatexOES;
      PFNGLACCUMXOESPROC m_glAccumxOES;
      PFNGLBITMAPXOESPROC m_glBitmapxOES;
      PFNGLBLENDCOLORXOESPROC m_glBlendColorxOES;
      PFNGLCLEARACCUMXOESPROC m_glClearAccumxOES;
      PFNGLCOLOR3XOESPROC m_glColor3xOES;
      PFNGLCOLOR3XVOESPROC m_glColor3xvOES;
      PFNGLCOLOR4XVOESPROC m_glColor4xvOES;
      PFNGLCONVOLUTIONPARAMETERXOESPROC m_glConvolutionParameterxOES;
      PFNGLCONVOLUTIONPARAMETERXVOESPROC m_glConvolutionParameterxvOES;
      PFNGLEVALCOORD1XOESPROC m_glEvalCoord1xOES;
      PFNGLEVALCOORD1XVOESPROC m_glEvalCoord1xvOES;
      PFNGLEVALCOORD2XOESPROC m_glEvalCoord2xOES;
      PFNGLEVALCOORD2XVOESPROC m_glEvalCoord2xvOES;
      PFNGLFEEDBACKBUFFERXOESPROC m_glFeedbackBufferxOES;
      PFNGLGETCONVOLUTIONPARAMETERXVOESPROC m_glGetConvolutionParameterxvOES;
      PFNGLGETHISTOGRAMPARAMETERXVOESPROC m_glGetHistogramParameterxvOES;
      PFNGLGETLIGHTXOESPROC m_glGetLightxOES;
      PFNGLGETMAPXVOESPROC m_glGetMapxvOES;
      PFNGLGETMATERIALXOESPROC m_glGetMaterialxOES;
      PFNGLGETPIXELMAPXVPROC m_glGetPixelMapxv;
      PFNGLGETTEXGENXVOESPROC m_glGetTexGenxvOES;
      PFNGLGETTEXLEVELPARAMETERXVOESPROC m_glGetTexLevelParameterxvOES;
      PFNGLINDEXXOESPROC m_glIndexxOES;
      PFNGLINDEXXVOESPROC m_glIndexxvOES;
      PFNGLLOADTRANSPOSEMATRIXXOESPROC m_glLoadTransposeMatrixxOES;
      PFNGLMAP1XOESPROC m_glMap1xOES;
      PFNGLMAP2XOESPROC m_glMap2xOES;
      PFNGLMAPGRID1XOESPROC m_glMapGrid1xOES;
      PFNGLMAPGRID2XOESPROC m_glMapGrid2xOES;
      PFNGLMULTTRANSPOSEMATRIXXOESPROC m_glMultTransposeMatrixxOES;
      PFNGLMULTITEXCOORD1XOESPROC m_glMultiTexCoord1xOES;
      PFNGLMULTITEXCOORD1XVOESPROC m_glMultiTexCoord1xvOES;
      PFNGLMULTITEXCOORD2XOESPROC m_glMultiTexCoord2xOES;
      PFNGLMULTITEXCOORD2XVOESPROC m_glMultiTexCoord2xvOES;
      PFNGLMULTITEXCOORD3XOESPROC m_glMultiTexCoord3xOES;
      PFNGLMULTITEXCOORD3XVOESPROC m_glMultiTexCoord3xvOES;
      PFNGLMULTITEXCOORD4XVOESPROC m_glMultiTexCoord4xvOES;
      PFNGLNORMAL3XVOESPROC m_glNormal3xvOES;
      PFNGLPASSTHROUGHXOESPROC m_glPassThroughxOES;
      PFNGLPIXELMAPXPROC m_glPixelMapx;
      PFNGLPIXELSTOREXPROC m_glPixelStorex;
      PFNGLPIXELTRANSFERXOESPROC m_glPixelTransferxOES;
      PFNGLPIXELZOOMXOESPROC m_glPixelZoomxOES;
      PFNGLPRIORITIZETEXTURESXOESPROC m_glPrioritizeTexturesxOES;
      PFNGLRASTERPOS2XOESPROC m_glRasterPos2xOES;
      PFNGLRASTERPOS2XVOESPROC m_glRasterPos2xvOES;
      PFNGLRASTERPOS3XOESPROC m_glRasterPos3xOES;
      PFNGLRASTERPOS3XVOESPROC m_glRasterPos3xvOES;
      PFNGLRASTERPOS4XOESPROC m_glRasterPos4xOES;
      PFNGLRASTERPOS4XVOESPROC m_glRasterPos4xvOES;
      PFNGLRECTXOESPROC m_glRectxOES;
      PFNGLRECTXVOESPROC m_glRectxvOES;
      PFNGLTEXCOORD1XOESPROC m_glTexCoord1xOES;
      PFNGLTEXCOORD1XVOESPROC m_glTexCoord1xvOES;
      PFNGLTEXCOORD2XOESPROC m_glTexCoord2xOES;
      PFNGLTEXCOORD2XVOESPROC m_glTexCoord2xvOES;
      PFNGLTEXCOORD3XOESPROC m_glTexCoord3xOES;
      PFNGLTEXCOORD3XVOESPROC m_glTexCoord3xvOES;
      PFNGLTEXCOORD4XOESPROC m_glTexCoord4xOES;
      PFNGLTEXCOORD4XVOESPROC m_glTexCoord4xvOES;
      PFNGLTEXGENXOESPROC m_glTexGenxOES;
      PFNGLTEXGENXVOESPROC m_glTexGenxvOES;
      PFNGLVERTEX2XOESPROC m_glVertex2xOES;
      PFNGLVERTEX2XVOESPROC m_glVertex2xvOES;
      PFNGLVERTEX3XOESPROC m_glVertex3xOES;
      PFNGLVERTEX3XVOESPROC m_glVertex3xvOES;
      PFNGLVERTEX4XOESPROC m_glVertex4xOES;
      PFNGLVERTEX4XVOESPROC m_glVertex4xvOES;
      PFNGLQUERYMATRIXXOESPROC m_glQueryMatrixxOES;
      PFNGLCLEARDEPTHFOESPROC m_glClearDepthfOES;
      PFNGLCLIPPLANEFOESPROC m_glClipPlanefOES;
      PFNGLDEPTHRANGEFOESPROC m_glDepthRangefOES;
      PFNGLFRUSTUMFOESPROC m_glFrustumfOES;
      PFNGLGETCLIPPLANEFOESPROC m_glGetClipPlanefOES;
      PFNGLORTHOFOESPROC m_glOrthofOES;
      PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC m_glFramebufferTextureMultiviewOVR;
      PFNGLHINTPGIPROC m_glHintPGI;
      PFNGLDETAILTEXFUNCSGISPROC m_glDetailTexFuncSGIS;
      PFNGLGETDETAILTEXFUNCSGISPROC m_glGetDetailTexFuncSGIS;
      PFNGLFOGFUNCSGISPROC m_glFogFuncSGIS;
      PFNGLGETFOGFUNCSGISPROC m_glGetFogFuncSGIS;
      PFNGLSAMPLEMASKSGISPROC m_glSampleMaskSGIS;
      PFNGLSAMPLEPATTERNSGISPROC m_glSamplePatternSGIS;
      PFNGLPIXELTEXGENPARAMETERISGISPROC m_glPixelTexGenParameteriSGIS;
      PFNGLPIXELTEXGENPARAMETERIVSGISPROC m_glPixelTexGenParameterivSGIS;
      PFNGLPIXELTEXGENPARAMETERFSGISPROC m_glPixelTexGenParameterfSGIS;
      PFNGLPIXELTEXGENPARAMETERFVSGISPROC m_glPixelTexGenParameterfvSGIS;
      PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC m_glGetPixelTexGenParameterivSGIS;
      PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC m_glGetPixelTexGenParameterfvSGIS;
      PFNGLPOINTPARAMETERFSGISPROC m_glPointParameterfSGIS;
      PFNGLPOINTPARAMETERFVSGISPROC m_glPointParameterfvSGIS;
      PFNGLSHARPENTEXFUNCSGISPROC m_glSharpenTexFuncSGIS;
      PFNGLGETSHARPENTEXFUNCSGISPROC m_glGetSharpenTexFuncSGIS;
      PFNGLTEXIMAGE4DSGISPROC m_glTexImage4DSGIS;
      PFNGLTEXSUBIMAGE4DSGISPROC m_glTexSubImage4DSGIS;
      PFNGLTEXTURECOLORMASKSGISPROC m_glTextureColorMaskSGIS;
      PFNGLGETTEXFILTERFUNCSGISPROC m_glGetTexFilterFuncSGIS;
      PFNGLTEXFILTERFUNCSGISPROC m_glTexFilterFuncSGIS;
      PFNGLASYNCMARKERSGIXPROC m_glAsyncMarkerSGIX;
      PFNGLFINISHASYNCSGIXPROC m_glFinishAsyncSGIX;
      PFNGLPOLLASYNCSGIXPROC m_glPollAsyncSGIX;
      PFNGLGENASYNCMARKERSSGIXPROC m_glGenAsyncMarkersSGIX;
      PFNGLDELETEASYNCMARKERSSGIXPROC m_glDeleteAsyncMarkersSGIX;
      PFNGLISASYNCMARKERSGIXPROC m_glIsAsyncMarkerSGIX;
      PFNGLFLUSHRASTERSGIXPROC m_glFlushRasterSGIX;
      PFNGLFRAGMENTCOLORMATERIALSGIXPROC m_glFragmentColorMaterialSGIX;
      PFNGLFRAGMENTLIGHTFSGIXPROC m_glFragmentLightfSGIX;
      PFNGLFRAGMENTLIGHTFVSGIXPROC m_glFragmentLightfvSGIX;
      PFNGLFRAGMENTLIGHTISGIXPROC m_glFragmentLightiSGIX;
      PFNGLFRAGMENTLIGHTIVSGIXPROC m_glFragmentLightivSGIX;
      PFNGLFRAGMENTLIGHTMODELFSGIXPROC m_glFragmentLightModelfSGIX;
      PFNGLFRAGMENTLIGHTMODELFVSGIXPROC m_glFragmentLightModelfvSGIX;
      PFNGLFRAGMENTLIGHTMODELISGIXPROC m_glFragmentLightModeliSGIX;
      PFNGLFRAGMENTLIGHTMODELIVSGIXPROC m_glFragmentLightModelivSGIX;
      PFNGLFRAGMENTMATERIALFSGIXPROC m_glFragmentMaterialfSGIX;
      PFNGLFRAGMENTMATERIALFVSGIXPROC m_glFragmentMaterialfvSGIX;
      PFNGLFRAGMENTMATERIALISGIXPROC m_glFragmentMaterialiSGIX;
      PFNGLFRAGMENTMATERIALIVSGIXPROC m_glFragmentMaterialivSGIX;
      PFNGLGETFRAGMENTLIGHTFVSGIXPROC m_glGetFragmentLightfvSGIX;
      PFNGLGETFRAGMENTLIGHTIVSGIXPROC m_glGetFragmentLightivSGIX;
      PFNGLGETFRAGMENTMATERIALFVSGIXPROC m_glGetFragmentMaterialfvSGIX;
      PFNGLGETFRAGMENTMATERIALIVSGIXPROC m_glGetFragmentMaterialivSGIX;
      PFNGLLIGHTENVISGIXPROC m_glLightEnviSGIX;
      PFNGLFRAMEZOOMSGIXPROC m_glFrameZoomSGIX;
      PFNGLIGLOOINTERFACESGIXPROC m_glIglooInterfaceSGIX;
      PFNGLGETINSTRUMENTSSGIXPROC m_glGetInstrumentsSGIX;
      PFNGLINSTRUMENTSBUFFERSGIXPROC m_glInstrumentsBufferSGIX;
      PFNGLPOLLINSTRUMENTSSGIXPROC m_glPollInstrumentsSGIX;
      PFNGLREADINSTRUMENTSSGIXPROC m_glReadInstrumentsSGIX;
      PFNGLSTARTINSTRUMENTSSGIXPROC m_glStartInstrumentsSGIX;
      PFNGLSTOPINSTRUMENTSSGIXPROC m_glStopInstrumentsSGIX;
      PFNGLGETLISTPARAMETERFVSGIXPROC m_glGetListParameterfvSGIX;
      PFNGLGETLISTPARAMETERIVSGIXPROC m_glGetListParameterivSGIX;
      PFNGLLISTPARAMETERFSGIXPROC m_glListParameterfSGIX;
      PFNGLLISTPARAMETERFVSGIXPROC m_glListParameterfvSGIX;
      PFNGLLISTPARAMETERISGIXPROC m_glListParameteriSGIX;
      PFNGLLISTPARAMETERIVSGIXPROC m_glListParameterivSGIX;
      PFNGLPIXELTEXGENSGIXPROC m_glPixelTexGenSGIX;
      PFNGLDEFORMATIONMAP3DSGIXPROC m_glDeformationMap3dSGIX;
      PFNGLDEFORMATIONMAP3FSGIXPROC m_glDeformationMap3fSGIX;
      PFNGLDEFORMSGIXPROC m_glDeformSGIX;
      PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC m_glLoadIdentityDeformationMapSGIX;
      PFNGLREFERENCEPLANESGIXPROC m_glReferencePlaneSGIX;
      PFNGLSPRITEPARAMETERFSGIXPROC m_glSpriteParameterfSGIX;
      PFNGLSPRITEPARAMETERFVSGIXPROC m_glSpriteParameterfvSGIX;
      PFNGLSPRITEPARAMETERISGIXPROC m_glSpriteParameteriSGIX;
      PFNGLSPRITEPARAMETERIVSGIXPROC m_glSpriteParameterivSGIX;
      PFNGLTAGSAMPLEBUFFERSGIXPROC m_glTagSampleBufferSGIX;
      PFNGLCOLORTABLESGIPROC m_glColorTableSGI;
      PFNGLCOLORTABLEPARAMETERFVSGIPROC m_glColorTableParameterfvSGI;
      PFNGLCOLORTABLEPARAMETERIVSGIPROC m_glColorTableParameterivSGI;
      PFNGLCOPYCOLORTABLESGIPROC m_glCopyColorTableSGI;
      PFNGLGETCOLORTABLESGIPROC m_glGetColorTableSGI;
      PFNGLGETCOLORTABLEPARAMETERFVSGIPROC m_glGetColorTableParameterfvSGI;
      PFNGLGETCOLORTABLEPARAMETERIVSGIPROC m_glGetColorTableParameterivSGI;
      PFNGLFINISHTEXTURESUNXPROC m_glFinishTextureSUNX;
      PFNGLGLOBALALPHAFACTORBSUNPROC m_glGlobalAlphaFactorbSUN;
      PFNGLGLOBALALPHAFACTORSSUNPROC m_glGlobalAlphaFactorsSUN;
      PFNGLGLOBALALPHAFACTORISUNPROC m_glGlobalAlphaFactoriSUN;
      PFNGLGLOBALALPHAFACTORFSUNPROC m_glGlobalAlphaFactorfSUN;
      PFNGLGLOBALALPHAFACTORDSUNPROC m_glGlobalAlphaFactordSUN;
      PFNGLGLOBALALPHAFACTORUBSUNPROC m_glGlobalAlphaFactorubSUN;
      PFNGLGLOBALALPHAFACTORUSSUNPROC m_glGlobalAlphaFactorusSUN;
      PFNGLGLOBALALPHAFACTORUISUNPROC m_glGlobalAlphaFactoruiSUN;
      PFNGLDRAWMESHARRAYSSUNPROC m_glDrawMeshArraysSUN;
      PFNGLREPLACEMENTCODEUISUNPROC m_glReplacementCodeuiSUN;
      PFNGLREPLACEMENTCODEUSSUNPROC m_glReplacementCodeusSUN;
      PFNGLREPLACEMENTCODEUBSUNPROC m_glReplacementCodeubSUN;
      PFNGLREPLACEMENTCODEUIVSUNPROC m_glReplacementCodeuivSUN;
      PFNGLREPLACEMENTCODEUSVSUNPROC m_glReplacementCodeusvSUN;
      PFNGLREPLACEMENTCODEUBVSUNPROC m_glReplacementCodeubvSUN;
      PFNGLREPLACEMENTCODEPOINTERSUNPROC m_glReplacementCodePointerSUN;
      PFNGLCOLOR4UBVERTEX2FSUNPROC m_glColor4ubVertex2fSUN;
      PFNGLCOLOR4UBVERTEX2FVSUNPROC m_glColor4ubVertex2fvSUN;
      PFNGLCOLOR4UBVERTEX3FSUNPROC m_glColor4ubVertex3fSUN;
      PFNGLCOLOR4UBVERTEX3FVSUNPROC m_glColor4ubVertex3fvSUN;
      PFNGLCOLOR3FVERTEX3FSUNPROC m_glColor3fVertex3fSUN;
      PFNGLCOLOR3FVERTEX3FVSUNPROC m_glColor3fVertex3fvSUN;
      PFNGLNORMAL3FVERTEX3FSUNPROC m_glNormal3fVertex3fSUN;
      PFNGLNORMAL3FVERTEX3FVSUNPROC m_glNormal3fVertex3fvSUN;
      PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC m_glColor4fNormal3fVertex3fSUN;
      PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC m_glColor4fNormal3fVertex3fvSUN;
      PFNGLTEXCOORD2FVERTEX3FSUNPROC m_glTexCoord2fVertex3fSUN;
      PFNGLTEXCOORD2FVERTEX3FVSUNPROC m_glTexCoord2fVertex3fvSUN;
      PFNGLTEXCOORD4FVERTEX4FSUNPROC m_glTexCoord4fVertex4fSUN;
      PFNGLTEXCOORD4FVERTEX4FVSUNPROC m_glTexCoord4fVertex4fvSUN;
      PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC m_glTexCoord2fColor4ubVertex3fSUN;
      PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC m_glTexCoord2fColor4ubVertex3fvSUN;
      PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC m_glTexCoord2fColor3fVertex3fSUN;
      PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC m_glTexCoord2fColor3fVertex3fvSUN;
      PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC m_glTexCoord2fNormal3fVertex3fSUN;
      PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC m_glTexCoord2fNormal3fVertex3fvSUN;
      PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC m_glTexCoord2fColor4fNormal3fVertex3fSUN;
      PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC m_glTexCoord2fColor4fNormal3fVertex3fvSUN;
      PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC m_glTexCoord4fColor4fNormal3fVertex4fSUN;
      PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC m_glTexCoord4fColor4fNormal3fVertex4fvSUN;
      PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC m_glReplacementCodeuiVertex3fSUN;
      PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC m_glReplacementCodeuiVertex3fvSUN;
      PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC m_glReplacementCodeuiColor4ubVertex3fSUN;
      PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC m_glReplacementCodeuiColor4ubVertex3fvSUN;
      PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC m_glReplacementCodeuiColor3fVertex3fSUN;
      PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC m_glReplacementCodeuiColor3fVertex3fvSUN;
      PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC m_glReplacementCodeuiNormal3fVertex3fSUN;
      PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC m_glReplacementCodeuiNormal3fVertex3fvSUN;
      PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC m_glReplacementCodeuiColor4fNormal3fVertex3fSUN;
      PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC m_glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
      PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC m_glReplacementCodeuiTexCoord2fVertex3fSUN;
      PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC m_glReplacementCodeuiTexCoord2fVertex3fvSUN;
      PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC m_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
      PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC m_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
      PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC m_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
      PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC m_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
    };

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public:

    static void Initialise ();

    static void Deinitialise ();

    static void SetConfig (glew::gl::DeviceConfig &deviceConfig) { s_deviceConfig = deviceConfig; }

    static glew::gl::DeviceConfig &GetConfig () { return s_deviceConfig; }

  protected:

    static glew::gl::DeviceConfig s_deviceConfig;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public:

    static void glDrawArrays (GLenum mode, GLint first, GLsizei count);
    static void glDrawElements (GLenum mode, GLsizei count, GLenum type, const void * indices);
    static void glGetPointerv (GLenum pname, void ** params);
    static void glPolygonOffset (GLfloat factor, GLfloat units);
    static void glCopyTexImage1D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
    static void glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
    static void glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    static void glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
    static void glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
    static void glBindTexture (GLenum target, GLuint texture);
    static void glDeleteTextures (GLsizei n, const GLuint * textures);
    static void glGenTextures (GLsizei n, GLuint * textures);
    static GLboolean glIsTexture (GLuint texture);
    static void glArrayElement (GLint i);
    static void glColorPointer (GLint size, GLenum type, GLsizei stride, const void * pointer);
    static void glDisableClientState (GLenum array);
    static void glEdgeFlagPointer (GLsizei stride, const void * pointer);
    static void glEnableClientState (GLenum array);
    static void glIndexPointer (GLenum type, GLsizei stride, const void * pointer);
    static void glInterleavedArrays (GLenum format, GLsizei stride, const void * pointer);
    static void glNormalPointer (GLenum type, GLsizei stride, const void * pointer);
    static void glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const void * pointer);
    static void glVertexPointer (GLint size, GLenum type, GLsizei stride, const void * pointer);
    static GLboolean glAreTexturesResident (GLsizei n, const GLuint * textures, GLboolean * residences);
    static void glPrioritizeTextures (GLsizei n, const GLuint * textures, const GLfloat * priorities);
    static void glIndexub (GLubyte c);
    static void glIndexubv (const GLubyte * c);
    static void glPopClientAttrib ();
    static void glPushClientAttrib (GLbitfield mask);
    static void glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
    static void glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
    static void glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
    static void glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glActiveTexture (GLenum texture);
    static void glSampleCoverage (GLfloat value, GLboolean invert);
    static void glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
    static void glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
    static void glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
    static void glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
    static void glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
    static void glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
    static void glGetCompressedTexImage (GLenum target, GLint level, void * img);
    static void glClientActiveTexture (GLenum texture);
    static void glMultiTexCoord1d (GLenum target, GLdouble s);
    static void glMultiTexCoord1dv (GLenum target, const GLdouble * v);
    static void glMultiTexCoord1f (GLenum target, GLfloat s);
    static void glMultiTexCoord1fv (GLenum target, const GLfloat * v);
    static void glMultiTexCoord1i (GLenum target, GLint s);
    static void glMultiTexCoord1iv (GLenum target, const GLint * v);
    static void glMultiTexCoord1s (GLenum target, GLshort s);
    static void glMultiTexCoord1sv (GLenum target, const GLshort * v);
    static void glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t);
    static void glMultiTexCoord2dv (GLenum target, const GLdouble * v);
    static void glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t);
    static void glMultiTexCoord2fv (GLenum target, const GLfloat * v);
    static void glMultiTexCoord2i (GLenum target, GLint s, GLint t);
    static void glMultiTexCoord2iv (GLenum target, const GLint * v);
    static void glMultiTexCoord2s (GLenum target, GLshort s, GLshort t);
    static void glMultiTexCoord2sv (GLenum target, const GLshort * v);
    static void glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r);
    static void glMultiTexCoord3dv (GLenum target, const GLdouble * v);
    static void glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r);
    static void glMultiTexCoord3fv (GLenum target, const GLfloat * v);
    static void glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r);
    static void glMultiTexCoord3iv (GLenum target, const GLint * v);
    static void glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r);
    static void glMultiTexCoord3sv (GLenum target, const GLshort * v);
    static void glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
    static void glMultiTexCoord4dv (GLenum target, const GLdouble * v);
    static void glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
    static void glMultiTexCoord4fv (GLenum target, const GLfloat * v);
    static void glMultiTexCoord4i (GLenum target, GLint s, GLint t, GLint r, GLint q);
    static void glMultiTexCoord4iv (GLenum target, const GLint * v);
    static void glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
    static void glMultiTexCoord4sv (GLenum target, const GLshort * v);
    static void glLoadTransposeMatrixf (const GLfloat * m);
    static void glLoadTransposeMatrixd (const GLdouble * m);
    static void glMultTransposeMatrixf (const GLfloat * m);
    static void glMultTransposeMatrixd (const GLdouble * m);
    static void glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
    static void glMultiDrawArrays (GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
    static void glMultiDrawElements (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
    static void glPointParameterf (GLenum pname, GLfloat param);
    static void glPointParameterfv (GLenum pname, const GLfloat * params);
    static void glPointParameteri (GLenum pname, GLint param);
    static void glPointParameteriv (GLenum pname, const GLint * params);
    static void glFogCoordf (GLfloat coord);
    static void glFogCoordfv (const GLfloat * coord);
    static void glFogCoordd (GLdouble coord);
    static void glFogCoorddv (const GLdouble * coord);
    static void glFogCoordPointer (GLenum type, GLsizei stride, const void * pointer);
    static void glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue);
    static void glSecondaryColor3bv (const GLbyte * v);
    static void glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue);
    static void glSecondaryColor3dv (const GLdouble * v);
    static void glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue);
    static void glSecondaryColor3fv (const GLfloat * v);
    static void glSecondaryColor3i (GLint red, GLint green, GLint blue);
    static void glSecondaryColor3iv (const GLint * v);
    static void glSecondaryColor3s (GLshort red, GLshort green, GLshort blue);
    static void glSecondaryColor3sv (const GLshort * v);
    static void glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue);
    static void glSecondaryColor3ubv (const GLubyte * v);
    static void glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue);
    static void glSecondaryColor3uiv (const GLuint * v);
    static void glSecondaryColor3us (GLushort red, GLushort green, GLushort blue);
    static void glSecondaryColor3usv (const GLushort * v);
    static void glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, const void * pointer);
    static void glWindowPos2d (GLdouble x, GLdouble y);
    static void glWindowPos2dv (const GLdouble * v);
    static void glWindowPos2f (GLfloat x, GLfloat y);
    static void glWindowPos2fv (const GLfloat * v);
    static void glWindowPos2i (GLint x, GLint y);
    static void glWindowPos2iv (const GLint * v);
    static void glWindowPos2s (GLshort x, GLshort y);
    static void glWindowPos2sv (const GLshort * v);
    static void glWindowPos3d (GLdouble x, GLdouble y, GLdouble z);
    static void glWindowPos3dv (const GLdouble * v);
    static void glWindowPos3f (GLfloat x, GLfloat y, GLfloat z);
    static void glWindowPos3fv (const GLfloat * v);
    static void glWindowPos3i (GLint x, GLint y, GLint z);
    static void glWindowPos3iv (const GLint * v);
    static void glWindowPos3s (GLshort x, GLshort y, GLshort z);
    static void glWindowPos3sv (const GLshort * v);
    static void glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
    static void glBlendEquation (GLenum mode);
    static void glGenQueries (GLsizei n, GLuint * ids);
    static void glDeleteQueries (GLsizei n, const GLuint * ids);
    static GLboolean glIsQuery (GLuint id);
    static void glBeginQuery (GLenum target, GLuint id);
    static void glEndQuery (GLenum target);
    static void glGetQueryiv (GLenum target, GLenum pname, GLint * params);
    static void glGetQueryObjectiv (GLuint id, GLenum pname, GLint * params);
    static void glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint * params);
    static void glBindBuffer (GLenum target, GLuint buffer);
    static void glDeleteBuffers (GLsizei n, const GLuint * buffers);
    static void glGenBuffers (GLsizei n, GLuint * buffers);
    static GLboolean glIsBuffer (GLuint buffer);
    static void glBufferData (GLenum target, GLsizeiptr size, const void * data, GLenum usage);
    static void glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
    static void glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, void * data);
    static void * glMapBuffer (GLenum target, GLenum access);
    static GLboolean glUnmapBuffer (GLenum target);
    static void glGetBufferParameteriv (GLenum target, GLenum pname, GLint * params);
    static void glGetBufferPointerv (GLenum target, GLenum pname, void ** params);
    static void glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);
    static void glDrawBuffers (GLsizei n, const GLenum * bufs);
    static void glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
    static void glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);
    static void glStencilMaskSeparate (GLenum face, GLuint mask);
    static void glAttachShader (GLuint program, GLuint shader);
    static void glBindAttribLocation (GLuint program, GLuint index, const GLchar * name);
    static void glCompileShader (GLuint shader);
    static GLuint glCreateProgram ();
    static GLuint glCreateShader (GLenum type);
    static void glDeleteProgram (GLuint program);
    static void glDeleteShader (GLuint shader);
    static void glDetachShader (GLuint program, GLuint shader);
    static void glDisableVertexAttribArray (GLuint index);
    static void glEnableVertexAttribArray (GLuint index);
    static void glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
    static void glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
    static void glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
    static GLint glGetAttribLocation (GLuint program, const GLchar * name);
    static void glGetProgramiv (GLuint program, GLenum pname, GLint * params);
    static void glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
    static void glGetShaderiv (GLuint shader, GLenum pname, GLint * params);
    static void glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
    static void glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
    static GLint glGetUniformLocation (GLuint program, const GLchar * name);
    static void glGetUniformfv (GLuint program, GLint location, GLfloat * params);
    static void glGetUniformiv (GLuint program, GLint location, GLint * params);
    static void glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble * params);
    static void glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat * params);
    static void glGetVertexAttribiv (GLuint index, GLenum pname, GLint * params);
    static void glGetVertexAttribPointerv (GLuint index, GLenum pname, void ** pointer);
    static GLboolean glIsProgram (GLuint program);
    static GLboolean glIsShader (GLuint shader);
    static void glLinkProgram (GLuint program);
    static void glShaderSource (GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
    static void glUseProgram (GLuint program);
    static void glUniform1f (GLint location, GLfloat v0);
    static void glUniform2f (GLint location, GLfloat v0, GLfloat v1);
    static void glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    static void glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    static void glUniform1i (GLint location, GLint v0);
    static void glUniform2i (GLint location, GLint v0, GLint v1);
    static void glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);
    static void glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    static void glUniform1fv (GLint location, GLsizei count, const GLfloat * value);
    static void glUniform2fv (GLint location, GLsizei count, const GLfloat * value);
    static void glUniform3fv (GLint location, GLsizei count, const GLfloat * value);
    static void glUniform4fv (GLint location, GLsizei count, const GLfloat * value);
    static void glUniform1iv (GLint location, GLsizei count, const GLint * value);
    static void glUniform2iv (GLint location, GLsizei count, const GLint * value);
    static void glUniform3iv (GLint location, GLsizei count, const GLint * value);
    static void glUniform4iv (GLint location, GLsizei count, const GLint * value);
    static void glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glValidateProgram (GLuint program);
    static void glVertexAttrib1d (GLuint index, GLdouble x);
    static void glVertexAttrib1dv (GLuint index, const GLdouble * v);
    static void glVertexAttrib1f (GLuint index, GLfloat x);
    static void glVertexAttrib1fv (GLuint index, const GLfloat * v);
    static void glVertexAttrib1s (GLuint index, GLshort x);
    static void glVertexAttrib1sv (GLuint index, const GLshort * v);
    static void glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);
    static void glVertexAttrib2dv (GLuint index, const GLdouble * v);
    static void glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);
    static void glVertexAttrib2fv (GLuint index, const GLfloat * v);
    static void glVertexAttrib2s (GLuint index, GLshort x, GLshort y);
    static void glVertexAttrib2sv (GLuint index, const GLshort * v);
    static void glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);
    static void glVertexAttrib3dv (GLuint index, const GLdouble * v);
    static void glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);
    static void glVertexAttrib3fv (GLuint index, const GLfloat * v);
    static void glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);
    static void glVertexAttrib3sv (GLuint index, const GLshort * v);
    static void glVertexAttrib4Nbv (GLuint index, const GLbyte * v);
    static void glVertexAttrib4Niv (GLuint index, const GLint * v);
    static void glVertexAttrib4Nsv (GLuint index, const GLshort * v);
    static void glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
    static void glVertexAttrib4Nubv (GLuint index, const GLubyte * v);
    static void glVertexAttrib4Nuiv (GLuint index, const GLuint * v);
    static void glVertexAttrib4Nusv (GLuint index, const GLushort * v);
    static void glVertexAttrib4bv (GLuint index, const GLbyte * v);
    static void glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glVertexAttrib4dv (GLuint index, const GLdouble * v);
    static void glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    static void glVertexAttrib4fv (GLuint index, const GLfloat * v);
    static void glVertexAttrib4iv (GLuint index, const GLint * v);
    static void glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
    static void glVertexAttrib4sv (GLuint index, const GLshort * v);
    static void glVertexAttrib4ubv (GLuint index, const GLubyte * v);
    static void glVertexAttrib4uiv (GLuint index, const GLuint * v);
    static void glVertexAttrib4usv (GLuint index, const GLushort * v);
    static void glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
    static void glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glColorMaski (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
    static void glGetBooleani_v (GLenum target, GLuint index, GLboolean * data);
    static void glGetIntegeri_v (GLenum target, GLuint index, GLint * data);
    static void glEnablei (GLenum target, GLuint index);
    static void glDisablei (GLenum target, GLuint index);
    static GLboolean glIsEnabledi (GLenum target, GLuint index);
    static void glBeginTransformFeedback (GLenum primitiveMode);
    static void glEndTransformFeedback ();
    static void glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    static void glBindBufferBase (GLenum target, GLuint index, GLuint buffer);
    static void glTransformFeedbackVaryings (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
    static void glGetTransformFeedbackVarying (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
    static void glClampColor (GLenum target, GLenum clamp);
    static void glBeginConditionalRender (GLuint id, GLenum mode);
    static void glEndConditionalRender ();
    static void glVertexAttribIPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
    static void glGetVertexAttribIiv (GLuint index, GLenum pname, GLint * params);
    static void glGetVertexAttribIuiv (GLuint index, GLenum pname, GLuint * params);
    static void glVertexAttribI1i (GLuint index, GLint x);
    static void glVertexAttribI2i (GLuint index, GLint x, GLint y);
    static void glVertexAttribI3i (GLuint index, GLint x, GLint y, GLint z);
    static void glVertexAttribI4i (GLuint index, GLint x, GLint y, GLint z, GLint w);
    static void glVertexAttribI1ui (GLuint index, GLuint x);
    static void glVertexAttribI2ui (GLuint index, GLuint x, GLuint y);
    static void glVertexAttribI3ui (GLuint index, GLuint x, GLuint y, GLuint z);
    static void glVertexAttribI4ui (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    static void glVertexAttribI1iv (GLuint index, const GLint * v);
    static void glVertexAttribI2iv (GLuint index, const GLint * v);
    static void glVertexAttribI3iv (GLuint index, const GLint * v);
    static void glVertexAttribI4iv (GLuint index, const GLint * v);
    static void glVertexAttribI1uiv (GLuint index, const GLuint * v);
    static void glVertexAttribI2uiv (GLuint index, const GLuint * v);
    static void glVertexAttribI3uiv (GLuint index, const GLuint * v);
    static void glVertexAttribI4uiv (GLuint index, const GLuint * v);
    static void glVertexAttribI4bv (GLuint index, const GLbyte * v);
    static void glVertexAttribI4sv (GLuint index, const GLshort * v);
    static void glVertexAttribI4ubv (GLuint index, const GLubyte * v);
    static void glVertexAttribI4usv (GLuint index, const GLushort * v);
    static void glGetUniformuiv (GLuint program, GLint location, GLuint * params);
    static void glBindFragDataLocation (GLuint program, GLuint color, const GLchar * name);
    static GLint glGetFragDataLocation (GLuint program, const GLchar * name);
    static void glUniform1ui (GLint location, GLuint v0);
    static void glUniform2ui (GLint location, GLuint v0, GLuint v1);
    static void glUniform3ui (GLint location, GLuint v0, GLuint v1, GLuint v2);
    static void glUniform4ui (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    static void glUniform1uiv (GLint location, GLsizei count, const GLuint * value);
    static void glUniform2uiv (GLint location, GLsizei count, const GLuint * value);
    static void glUniform3uiv (GLint location, GLsizei count, const GLuint * value);
    static void glUniform4uiv (GLint location, GLsizei count, const GLuint * value);
    static void glTexParameterIiv (GLenum target, GLenum pname, const GLint * params);
    static void glTexParameterIuiv (GLenum target, GLenum pname, const GLuint * params);
    static void glGetTexParameterIiv (GLenum target, GLenum pname, GLint * params);
    static void glGetTexParameterIuiv (GLenum target, GLenum pname, GLuint * params);
    static void glClearBufferiv (GLenum buffer, GLint drawbuffer, const GLint * value);
    static void glClearBufferuiv (GLenum buffer, GLint drawbuffer, const GLuint * value);
    static void glClearBufferfv (GLenum buffer, GLint drawbuffer, const GLfloat * value);
    static void glClearBufferfi (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
    static const GLubyte * glGetStringi (GLenum name, GLuint index);
    static GLboolean glIsRenderbuffer (GLuint renderbuffer);
    static void glBindRenderbuffer (GLenum target, GLuint renderbuffer);
    static void glDeleteRenderbuffers (GLsizei n, const GLuint * renderbuffers);
    static void glGenRenderbuffers (GLsizei n, GLuint * renderbuffers);
    static void glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
    static void glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint * params);
    static GLboolean glIsFramebuffer (GLuint framebuffer);
    static void glBindFramebuffer (GLenum target, GLuint framebuffer);
    static void glDeleteFramebuffers (GLsizei n, const GLuint * framebuffers);
    static void glGenFramebuffers (GLsizei n, GLuint * framebuffers);
    static GLenum glCheckFramebufferStatus (GLenum target);
    static void glFramebufferTexture1D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    static void glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    static void glFramebufferTexture3D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
    static void glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    static void glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint * params);
    static void glGenerateMipmap (GLenum target);
    static void glBlitFramebuffer (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    static void glRenderbufferStorageMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    static void glFramebufferTextureLayer (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
    static void * glMapBufferRange (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
    static void glFlushMappedBufferRange (GLenum target, GLintptr offset, GLsizeiptr length);
    static void glBindVertexArray (GLuint array);
    static void glDeleteVertexArrays (GLsizei n, const GLuint * arrays);
    static void glGenVertexArrays (GLsizei n, GLuint * arrays);
    static GLboolean glIsVertexArray (GLuint array);
    static void glDrawArraysInstanced (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
    static void glDrawElementsInstanced (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
    static void glTexBuffer (GLenum target, GLenum internalformat, GLuint buffer);
    static void glPrimitiveRestartIndex (GLuint index);
    static void glCopyBufferSubData (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    static void glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
    static void glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
    static void glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
    static GLuint glGetUniformBlockIndex (GLuint program, const GLchar * uniformBlockName);
    static void glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
    static void glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
    static void glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
    static void glDrawElementsBaseVertex (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
    static void glDrawRangeElementsBaseVertex (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
    static void glDrawElementsInstancedBaseVertex (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
    static void glMultiDrawElementsBaseVertex (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
    static void glProvokingVertex (GLenum mode);
    static GLsync glFenceSync (GLenum condition, GLbitfield flags);
    static GLboolean glIsSync (GLsync sync);
    static void glDeleteSync (GLsync sync);
    static GLenum glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);
    static void glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);
    static void glGetInteger64v (GLenum pname, GLint64 * data);
    static void glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
    static void glGetInteger64i_v (GLenum target, GLuint index, GLint64 * data);
    static void glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 * params);
    static void glFramebufferTexture (GLenum target, GLenum attachment, GLuint texture, GLint level);
    static void glTexImage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    static void glTexImage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    static void glGetMultisamplefv (GLenum pname, GLuint index, GLfloat * val);
    static void glSampleMaski (GLuint maskNumber, GLbitfield mask);
    static void glBindFragDataLocationIndexed (GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
    static GLint glGetFragDataIndex (GLuint program, const GLchar * name);
    static void glGenSamplers (GLsizei count, GLuint * samplers);
    static void glDeleteSamplers (GLsizei count, const GLuint * samplers);
    static GLboolean glIsSampler (GLuint sampler);
    static void glBindSampler (GLuint unit, GLuint sampler);
    static void glSamplerParameteri (GLuint sampler, GLenum pname, GLint param);
    static void glSamplerParameteriv (GLuint sampler, GLenum pname, const GLint * param);
    static void glSamplerParameterf (GLuint sampler, GLenum pname, GLfloat param);
    static void glSamplerParameterfv (GLuint sampler, GLenum pname, const GLfloat * param);
    static void glSamplerParameterIiv (GLuint sampler, GLenum pname, const GLint * param);
    static void glSamplerParameterIuiv (GLuint sampler, GLenum pname, const GLuint * param);
    static void glGetSamplerParameteriv (GLuint sampler, GLenum pname, GLint * params);
    static void glGetSamplerParameterIiv (GLuint sampler, GLenum pname, GLint * params);
    static void glGetSamplerParameterfv (GLuint sampler, GLenum pname, GLfloat * params);
    static void glGetSamplerParameterIuiv (GLuint sampler, GLenum pname, GLuint * params);
    static void glQueryCounter (GLuint id, GLenum target);
    static void glGetQueryObjecti64v (GLuint id, GLenum pname, GLint64 * params);
    static void glGetQueryObjectui64v (GLuint id, GLenum pname, GLuint64 * params);
    static void glVertexAttribDivisor (GLuint index, GLuint divisor);
    static void glVertexAttribP1ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);
    static void glVertexAttribP1uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
    static void glVertexAttribP2ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);
    static void glVertexAttribP2uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
    static void glVertexAttribP3ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);
    static void glVertexAttribP3uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
    static void glVertexAttribP4ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);
    static void glVertexAttribP4uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
    static void glVertexP2ui (GLenum type, GLuint value);
    static void glVertexP2uiv (GLenum type, const GLuint * value);
    static void glVertexP3ui (GLenum type, GLuint value);
    static void glVertexP3uiv (GLenum type, const GLuint * value);
    static void glVertexP4ui (GLenum type, GLuint value);
    static void glVertexP4uiv (GLenum type, const GLuint * value);
    static void glTexCoordP1ui (GLenum type, GLuint coords);
    static void glTexCoordP1uiv (GLenum type, const GLuint * coords);
    static void glTexCoordP2ui (GLenum type, GLuint coords);
    static void glTexCoordP2uiv (GLenum type, const GLuint * coords);
    static void glTexCoordP3ui (GLenum type, GLuint coords);
    static void glTexCoordP3uiv (GLenum type, const GLuint * coords);
    static void glTexCoordP4ui (GLenum type, GLuint coords);
    static void glTexCoordP4uiv (GLenum type, const GLuint * coords);
    static void glMultiTexCoordP1ui (GLenum texture, GLenum type, GLuint coords);
    static void glMultiTexCoordP1uiv (GLenum texture, GLenum type, const GLuint * coords);
    static void glMultiTexCoordP2ui (GLenum texture, GLenum type, GLuint coords);
    static void glMultiTexCoordP2uiv (GLenum texture, GLenum type, const GLuint * coords);
    static void glMultiTexCoordP3ui (GLenum texture, GLenum type, GLuint coords);
    static void glMultiTexCoordP3uiv (GLenum texture, GLenum type, const GLuint * coords);
    static void glMultiTexCoordP4ui (GLenum texture, GLenum type, GLuint coords);
    static void glMultiTexCoordP4uiv (GLenum texture, GLenum type, const GLuint * coords);
    static void glNormalP3ui (GLenum type, GLuint coords);
    static void glNormalP3uiv (GLenum type, const GLuint * coords);
    static void glColorP3ui (GLenum type, GLuint color);
    static void glColorP3uiv (GLenum type, const GLuint * color);
    static void glColorP4ui (GLenum type, GLuint color);
    static void glColorP4uiv (GLenum type, const GLuint * color);
    static void glSecondaryColorP3ui (GLenum type, GLuint color);
    static void glSecondaryColorP3uiv (GLenum type, const GLuint * color);
    static void glMinSampleShading (GLfloat value);
    static void glBlendEquationi (GLuint buf, GLenum mode);
    static void glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    static void glBlendFunci (GLuint buf, GLenum src, GLenum dst);
    static void glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    static void glDrawArraysIndirect (GLenum mode, const void * indirect);
    static void glDrawElementsIndirect (GLenum mode, GLenum type, const void * indirect);
    static void glUniform1d (GLint location, GLdouble x);
    static void glUniform2d (GLint location, GLdouble x, GLdouble y);
    static void glUniform3d (GLint location, GLdouble x, GLdouble y, GLdouble z);
    static void glUniform4d (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glUniform1dv (GLint location, GLsizei count, const GLdouble * value);
    static void glUniform2dv (GLint location, GLsizei count, const GLdouble * value);
    static void glUniform3dv (GLint location, GLsizei count, const GLdouble * value);
    static void glUniform4dv (GLint location, GLsizei count, const GLdouble * value);
    static void glUniformMatrix2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glUniformMatrix3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glUniformMatrix4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glUniformMatrix2x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glUniformMatrix2x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glUniformMatrix3x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glUniformMatrix3x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glUniformMatrix4x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glUniformMatrix4x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glGetUniformdv (GLuint program, GLint location, GLdouble * params);
    static GLint glGetSubroutineUniformLocation (GLuint program, GLenum shadertype, const GLchar * name);
    static GLuint glGetSubroutineIndex (GLuint program, GLenum shadertype, const GLchar * name);
    static void glGetActiveSubroutineUniformiv (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
    static void glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
    static void glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
    static void glUniformSubroutinesuiv (GLenum shadertype, GLsizei count, const GLuint * indices);
    static void glGetUniformSubroutineuiv (GLenum shadertype, GLint location, GLuint * params);
    static void glGetProgramStageiv (GLuint program, GLenum shadertype, GLenum pname, GLint * values);
    static void glPatchParameteri (GLenum pname, GLint value);
    static void glPatchParameterfv (GLenum pname, const GLfloat * values);
    static void glBindTransformFeedback (GLenum target, GLuint id);
    static void glDeleteTransformFeedbacks (GLsizei n, const GLuint * ids);
    static void glGenTransformFeedbacks (GLsizei n, GLuint * ids);
    static GLboolean glIsTransformFeedback (GLuint id);
    static void glPauseTransformFeedback ();
    static void glResumeTransformFeedback ();
    static void glDrawTransformFeedback (GLenum mode, GLuint id);
    static void glDrawTransformFeedbackStream (GLenum mode, GLuint id, GLuint stream);
    static void glBeginQueryIndexed (GLenum target, GLuint index, GLuint id);
    static void glEndQueryIndexed (GLenum target, GLuint index);
    static void glGetQueryIndexediv (GLenum target, GLuint index, GLenum pname, GLint * params);
    static void glReleaseShaderCompiler ();
    static void glShaderBinary (GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length);
    static void glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
    static void glDepthRangef (GLfloat n, GLfloat f);
    static void glClearDepthf (GLfloat d);
    static void glGetProgramBinary (GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
    static void glProgramBinary (GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
    static void glProgramParameteri (GLuint program, GLenum pname, GLint value);
    static void glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program);
    static void glActiveShaderProgram (GLuint pipeline, GLuint program);
    static GLuint glCreateShaderProgramv (GLenum type, GLsizei count, const GLchar *const* strings);
    static void glBindProgramPipeline (GLuint pipeline);
    static void glDeleteProgramPipelines (GLsizei n, const GLuint * pipelines);
    static void glGenProgramPipelines (GLsizei n, GLuint * pipelines);
    static GLboolean glIsProgramPipeline (GLuint pipeline);
    static void glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint * params);
    static void glProgramUniform1i (GLuint program, GLint location, GLint v0);
    static void glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GLint * value);
    static void glProgramUniform1f (GLuint program, GLint location, GLfloat v0);
    static void glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GLfloat * value);
    static void glProgramUniform1d (GLuint program, GLint location, GLdouble v0);
    static void glProgramUniform1dv (GLuint program, GLint location, GLsizei count, const GLdouble * value);
    static void glProgramUniform1ui (GLuint program, GLint location, GLuint v0);
    static void glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const GLuint * value);
    static void glProgramUniform2i (GLuint program, GLint location, GLint v0, GLint v1);
    static void glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GLint * value);
    static void glProgramUniform2f (GLuint program, GLint location, GLfloat v0, GLfloat v1);
    static void glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GLfloat * value);
    static void glProgramUniform2d (GLuint program, GLint location, GLdouble v0, GLdouble v1);
    static void glProgramUniform2dv (GLuint program, GLint location, GLsizei count, const GLdouble * value);
    static void glProgramUniform2ui (GLuint program, GLint location, GLuint v0, GLuint v1);
    static void glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const GLuint * value);
    static void glProgramUniform3i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
    static void glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GLint * value);
    static void glProgramUniform3f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    static void glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GLfloat * value);
    static void glProgramUniform3d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
    static void glProgramUniform3dv (GLuint program, GLint location, GLsizei count, const GLdouble * value);
    static void glProgramUniform3ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
    static void glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const GLuint * value);
    static void glProgramUniform4i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    static void glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GLint * value);
    static void glProgramUniform4f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    static void glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GLfloat * value);
    static void glProgramUniform4d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
    static void glProgramUniform4dv (GLuint program, GLint location, GLsizei count, const GLdouble * value);
    static void glProgramUniform4ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    static void glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const GLuint * value);
    static void glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix2x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix3x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix2x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix4x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix3x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix4x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glValidateProgramPipeline (GLuint pipeline);
    static void glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
    static void glVertexAttribL1d (GLuint index, GLdouble x);
    static void glVertexAttribL2d (GLuint index, GLdouble x, GLdouble y);
    static void glVertexAttribL3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);
    static void glVertexAttribL4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glVertexAttribL1dv (GLuint index, const GLdouble * v);
    static void glVertexAttribL2dv (GLuint index, const GLdouble * v);
    static void glVertexAttribL3dv (GLuint index, const GLdouble * v);
    static void glVertexAttribL4dv (GLuint index, const GLdouble * v);
    static void glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
    static void glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble * params);
    static void glViewportArrayv (GLuint first, GLsizei count, const GLfloat * v);
    static void glViewportIndexedf (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
    static void glViewportIndexedfv (GLuint index, const GLfloat * v);
    static void glScissorArrayv (GLuint first, GLsizei count, const GLint * v);
    static void glScissorIndexed (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
    static void glScissorIndexedv (GLuint index, const GLint * v);
    static void glDepthRangeArrayv (GLuint first, GLsizei count, const GLdouble * v);
    static void glDepthRangeIndexed (GLuint index, GLdouble n, GLdouble f);
    static void glGetFloati_v (GLenum target, GLuint index, GLfloat * data);
    static void glGetDoublei_v (GLenum target, GLuint index, GLdouble * data);
    static void glDrawArraysInstancedBaseInstance (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
    static void glDrawElementsInstancedBaseInstance (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
    static void glDrawElementsInstancedBaseVertexBaseInstance (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
    static void glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params);
    static void glGetActiveAtomicCounterBufferiv (GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
    static void glBindImageTexture (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
    static void glMemoryBarrier (GLbitfield barriers);
    static void glTexStorage1D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
    static void glTexStorage2D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    static void glTexStorage3D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    static void glDrawTransformFeedbackInstanced (GLenum mode, GLuint id, GLsizei instancecount);
    static void glDrawTransformFeedbackStreamInstanced (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
    static void glClearBufferData (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
    static void glClearBufferSubData (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
    static void glDispatchCompute (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
    static void glDispatchComputeIndirect (GLintptr indirect);
    static void glCopyImageSubData (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
    static void glFramebufferParameteri (GLenum target, GLenum pname, GLint param);
    static void glGetFramebufferParameteriv (GLenum target, GLenum pname, GLint * params);
    static void glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 * params);
    static void glInvalidateTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
    static void glInvalidateTexImage (GLuint texture, GLint level);
    static void glInvalidateBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr length);
    static void glInvalidateBufferData (GLuint buffer);
    static void glInvalidateFramebuffer (GLenum target, GLsizei numAttachments, const GLenum * attachments);
    static void glInvalidateSubFramebuffer (GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glMultiDrawArraysIndirect (GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
    static void glMultiDrawElementsIndirect (GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
    static void glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pname, GLint * params);
    static GLuint glGetProgramResourceIndex (GLuint program, GLenum programInterface, const GLchar * name);
    static void glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
    static void glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params);
    static GLint glGetProgramResourceLocation (GLuint program, GLenum programInterface, const GLchar * name);
    static GLint glGetProgramResourceLocationIndex (GLuint program, GLenum programInterface, const GLchar * name);
    static void glShaderStorageBlockBinding (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
    static void glTexBufferRange (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    static void glTexStorage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    static void glTexStorage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    static void glTextureView (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
    static void glBindVertexBuffer (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
    static void glVertexAttribFormat (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
    static void glVertexAttribIFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    static void glVertexAttribLFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    static void glVertexAttribBinding (GLuint attribindex, GLuint bindingindex);
    static void glVertexBindingDivisor (GLuint bindingindex, GLuint divisor);
    static void glDebugMessageControl (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
    static void glDebugMessageInsert (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
    static void glDebugMessageCallback (GLDEBUGPROC callback, const void * userParam);
    static GLuint glGetDebugMessageLog (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
    static void glPushDebugGroup (GLenum source, GLuint id, GLsizei length, const GLchar * message);
    static void glPopDebugGroup ();
    static void glObjectLabel (GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
    static void glGetObjectLabel (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
    static void glObjectPtrLabel (const void * ptr, GLsizei length, const GLchar * label);
    static void glGetObjectPtrLabel (const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
    static void glBufferStorage (GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
    static void glClearTexImage (GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
    static void glClearTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
    static void glBindBuffersBase (GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
    static void glBindBuffersRange (GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
    static void glBindTextures (GLuint first, GLsizei count, const GLuint * textures);
    static void glBindSamplers (GLuint first, GLsizei count, const GLuint * samplers);
    static void glBindImageTextures (GLuint first, GLsizei count, const GLuint * textures);
    static void glBindVertexBuffers (GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
    static void glClipControl (GLenum origin, GLenum depth);
    static void glCreateTransformFeedbacks (GLsizei n, GLuint * ids);
    static void glTransformFeedbackBufferBase (GLuint xfb, GLuint index, GLuint buffer);
    static void glTransformFeedbackBufferRange (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    static void glGetTransformFeedbackiv (GLuint xfb, GLenum pname, GLint * param);
    static void glGetTransformFeedbacki_v (GLuint xfb, GLenum pname, GLuint index, GLint * param);
    static void glGetTransformFeedbacki64_v (GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
    static void glCreateBuffers (GLsizei n, GLuint * buffers);
    static void glNamedBufferStorage (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
    static void glNamedBufferData (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
    static void glNamedBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
    static void glCopyNamedBufferSubData (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    static void glClearNamedBufferData (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
    static void glClearNamedBufferSubData (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
    static void * glMapNamedBuffer (GLuint buffer, GLenum access);
    static void * glMapNamedBufferRange (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
    static GLboolean glUnmapNamedBuffer (GLuint buffer);
    static void glFlushMappedNamedBufferRange (GLuint buffer, GLintptr offset, GLsizeiptr length);
    static void glGetNamedBufferParameteriv (GLuint buffer, GLenum pname, GLint * params);
    static void glGetNamedBufferParameteri64v (GLuint buffer, GLenum pname, GLint64 * params);
    static void glGetNamedBufferPointerv (GLuint buffer, GLenum pname, void ** params);
    static void glGetNamedBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
    static void glCreateFramebuffers (GLsizei n, GLuint * framebuffers);
    static void glNamedFramebufferRenderbuffer (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    static void glNamedFramebufferParameteri (GLuint framebuffer, GLenum pname, GLint param);
    static void glNamedFramebufferTexture (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
    static void glNamedFramebufferTextureLayer (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
    static void glNamedFramebufferDrawBuffer (GLuint framebuffer, GLenum buf);
    static void glNamedFramebufferDrawBuffers (GLuint framebuffer, GLsizei n, const GLenum * bufs);
    static void glNamedFramebufferReadBuffer (GLuint framebuffer, GLenum src);
    static void glInvalidateNamedFramebufferData (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
    static void glInvalidateNamedFramebufferSubData (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glClearNamedFramebufferiv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
    static void glClearNamedFramebufferuiv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
    static void glClearNamedFramebufferfv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
    static void glClearNamedFramebufferfi (GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil);
    static void glBlitNamedFramebuffer (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    static GLenum glCheckNamedFramebufferStatus (GLuint framebuffer, GLenum target);
    static void glGetNamedFramebufferParameteriv (GLuint framebuffer, GLenum pname, GLint * param);
    static void glGetNamedFramebufferAttachmentParameteriv (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
    static void glCreateRenderbuffers (GLsizei n, GLuint * renderbuffers);
    static void glNamedRenderbufferStorage (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
    static void glNamedRenderbufferStorageMultisample (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    static void glGetNamedRenderbufferParameteriv (GLuint renderbuffer, GLenum pname, GLint * params);
    static void glCreateTextures (GLenum target, GLsizei n, GLuint * textures);
    static void glTextureBuffer (GLuint texture, GLenum internalformat, GLuint buffer);
    static void glTextureBufferRange (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    static void glTextureStorage1D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
    static void glTextureStorage2D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    static void glTextureStorage3D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    static void glTextureStorage2DMultisample (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    static void glTextureStorage3DMultisample (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    static void glTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
    static void glTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
    static void glTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
    static void glCompressedTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
    static void glCompressedTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
    static void glCompressedTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
    static void glCopyTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    static void glCopyTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glCopyTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glTextureParameterf (GLuint texture, GLenum pname, GLfloat param);
    static void glTextureParameterfv (GLuint texture, GLenum pname, const GLfloat * param);
    static void glTextureParameteri (GLuint texture, GLenum pname, GLint param);
    static void glTextureParameterIiv (GLuint texture, GLenum pname, const GLint * params);
    static void glTextureParameterIuiv (GLuint texture, GLenum pname, const GLuint * params);
    static void glTextureParameteriv (GLuint texture, GLenum pname, const GLint * param);
    static void glGenerateTextureMipmap (GLuint texture);
    static void glBindTextureUnit (GLuint unit, GLuint texture);
    static void glGetTextureImage (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
    static void glGetCompressedTextureImage (GLuint texture, GLint level, GLsizei bufSize, void * pixels);
    static void glGetTextureLevelParameterfv (GLuint texture, GLint level, GLenum pname, GLfloat * params);
    static void glGetTextureLevelParameteriv (GLuint texture, GLint level, GLenum pname, GLint * params);
    static void glGetTextureParameterfv (GLuint texture, GLenum pname, GLfloat * params);
    static void glGetTextureParameterIiv (GLuint texture, GLenum pname, GLint * params);
    static void glGetTextureParameterIuiv (GLuint texture, GLenum pname, GLuint * params);
    static void glGetTextureParameteriv (GLuint texture, GLenum pname, GLint * params);
    static void glCreateVertexArrays (GLsizei n, GLuint * arrays);
    static void glDisableVertexArrayAttrib (GLuint vaobj, GLuint index);
    static void glEnableVertexArrayAttrib (GLuint vaobj, GLuint index);
    static void glVertexArrayElementBuffer (GLuint vaobj, GLuint buffer);
    static void glVertexArrayVertexBuffer (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
    static void glVertexArrayVertexBuffers (GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
    static void glVertexArrayAttribBinding (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
    static void glVertexArrayAttribFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
    static void glVertexArrayAttribIFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    static void glVertexArrayAttribLFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    static void glVertexArrayBindingDivisor (GLuint vaobj, GLuint bindingindex, GLuint divisor);
    static void glGetVertexArrayiv (GLuint vaobj, GLenum pname, GLint * param);
    static void glGetVertexArrayIndexediv (GLuint vaobj, GLuint index, GLenum pname, GLint * param);
    static void glGetVertexArrayIndexed64iv (GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
    static void glCreateSamplers (GLsizei n, GLuint * samplers);
    static void glCreateProgramPipelines (GLsizei n, GLuint * pipelines);
    static void glCreateQueries (GLenum target, GLsizei n, GLuint * ids);
    static void glGetQueryBufferObjecti64v (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    static void glGetQueryBufferObjectiv (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    static void glGetQueryBufferObjectui64v (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    static void glGetQueryBufferObjectuiv (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    static void glMemoryBarrierByRegion (GLbitfield barriers);
    static void glGetTextureSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
    static void glGetCompressedTextureSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
    static GLenum glGetGraphicsResetStatus ();
    static void glGetnCompressedTexImage (GLenum target, GLint lod, GLsizei bufSize, void * pixels);
    static void glGetnTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
    static void glGetnUniformdv (GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
    static void glGetnUniformfv (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
    static void glGetnUniformiv (GLuint program, GLint location, GLsizei bufSize, GLint * params);
    static void glGetnUniformuiv (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
    static void glReadnPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
    static void glGetnMapdv (GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
    static void glGetnMapfv (GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
    static void glGetnMapiv (GLenum target, GLenum query, GLsizei bufSize, GLint * v);
    static void glGetnPixelMapfv (GLenum map, GLsizei bufSize, GLfloat * values);
    static void glGetnPixelMapuiv (GLenum map, GLsizei bufSize, GLuint * values);
    static void glGetnPixelMapusv (GLenum map, GLsizei bufSize, GLushort * values);
    static void glGetnPolygonStipple (GLsizei bufSize, GLubyte * pattern);
    static void glGetnColorTable (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
    static void glGetnConvolutionFilter (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
    static void glGetnSeparableFilter (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
    static void glGetnHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
    static void glGetnMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
    static void glTextureBarrier ();
    static void glTbufferMask3DFX (GLuint mask);
    static void glDebugMessageEnableAMD (GLenum category, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
    static void glDebugMessageInsertAMD (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar * buf);
    static void glDebugMessageCallbackAMD (GLDEBUGPROCAMD callback, void * userParam);
    static GLuint glGetDebugMessageLogAMD (GLuint count, GLsizei bufsize, GLenum * categories, GLuint * severities, GLuint * ids, GLsizei * lengths, GLchar * message);
    static void glBlendFuncIndexedAMD (GLuint buf, GLenum src, GLenum dst);
    static void glBlendFuncSeparateIndexedAMD (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    static void glBlendEquationIndexedAMD (GLuint buf, GLenum mode);
    static void glBlendEquationSeparateIndexedAMD (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    static void glUniform1i64NV (GLint location, GLint64EXT x);
    static void glUniform2i64NV (GLint location, GLint64EXT x, GLint64EXT y);
    static void glUniform3i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
    static void glUniform4i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
    static void glUniform1i64vNV (GLint location, GLsizei count, const GLint64EXT * value);
    static void glUniform2i64vNV (GLint location, GLsizei count, const GLint64EXT * value);
    static void glUniform3i64vNV (GLint location, GLsizei count, const GLint64EXT * value);
    static void glUniform4i64vNV (GLint location, GLsizei count, const GLint64EXT * value);
    static void glUniform1ui64NV (GLint location, GLuint64EXT x);
    static void glUniform2ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y);
    static void glUniform3ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
    static void glUniform4ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
    static void glUniform1ui64vNV (GLint location, GLsizei count, const GLuint64EXT * value);
    static void glUniform2ui64vNV (GLint location, GLsizei count, const GLuint64EXT * value);
    static void glUniform3ui64vNV (GLint location, GLsizei count, const GLuint64EXT * value);
    static void glUniform4ui64vNV (GLint location, GLsizei count, const GLuint64EXT * value);
    static void glGetUniformi64vNV (GLuint program, GLint location, GLint64EXT * params);
    static void glGetUniformui64vNV (GLuint program, GLint location, GLuint64EXT * params);
    static void glProgramUniform1i64NV (GLuint program, GLint location, GLint64EXT x);
    static void glProgramUniform2i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
    static void glProgramUniform3i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
    static void glProgramUniform4i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
    static void glProgramUniform1i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
    static void glProgramUniform2i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
    static void glProgramUniform3i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
    static void glProgramUniform4i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
    static void glProgramUniform1ui64NV (GLuint program, GLint location, GLuint64EXT x);
    static void glProgramUniform2ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
    static void glProgramUniform3ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
    static void glProgramUniform4ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
    static void glProgramUniform1ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
    static void glProgramUniform2ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
    static void glProgramUniform3ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
    static void glProgramUniform4ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
    static void glVertexAttribParameteriAMD (GLuint index, GLenum pname, GLint param);
    static void glMultiDrawArraysIndirectAMD (GLenum mode, const void * indirect, GLsizei primcount, GLsizei stride);
    static void glMultiDrawElementsIndirectAMD (GLenum mode, GLenum type, const void * indirect, GLsizei primcount, GLsizei stride);
    static void glGenNamesAMD (GLenum identifier, GLuint num, GLuint * names);
    static void glDeleteNamesAMD (GLenum identifier, GLuint num, const GLuint * names);
    static GLboolean glIsNameAMD (GLenum identifier, GLuint name);
    static void glQueryObjectParameteruiAMD (GLenum target, GLuint id, GLenum pname, GLuint param);
    static void glGetPerfMonitorGroupsAMD (GLint * numGroups, GLsizei groupsSize, GLuint * groups);
    static void glGetPerfMonitorCountersAMD (GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters);
    static void glGetPerfMonitorGroupStringAMD (GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString);
    static void glGetPerfMonitorCounterStringAMD (GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString);
    static void glGetPerfMonitorCounterInfoAMD (GLuint group, GLuint counter, GLenum pname, void * data);
    static void glGenPerfMonitorsAMD (GLsizei n, GLuint * monitors);
    static void glDeletePerfMonitorsAMD (GLsizei n, GLuint * monitors);
    static void glSelectPerfMonitorCountersAMD (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList);
    static void glBeginPerfMonitorAMD (GLuint monitor);
    static void glEndPerfMonitorAMD (GLuint monitor);
    static void glGetPerfMonitorCounterDataAMD (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten);
    static void glSetMultisamplefvAMD (GLenum pname, GLuint index, const GLfloat * val);
    static void glTexStorageSparseAMD (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
    static void glTextureStorageSparseAMD (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
    static void glStencilOpValueAMD (GLenum face, GLuint value);
    static void glTessellationFactorAMD (GLfloat factor);
    static void glTessellationModeAMD (GLenum mode);
    static void glElementPointerAPPLE (GLenum type, const void * pointer);
    static void glDrawElementArrayAPPLE (GLenum mode, GLint first, GLsizei count);
    static void glDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
    static void glMultiDrawElementArrayAPPLE (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
    static void glMultiDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, const GLint * first, const GLsizei * count, GLsizei primcount);
    static void glGenFencesAPPLE (GLsizei n, GLuint * fences);
    static void glDeleteFencesAPPLE (GLsizei n, const GLuint * fences);
    static void glSetFenceAPPLE (GLuint fence);
    static GLboolean glIsFenceAPPLE (GLuint fence);
    static GLboolean glTestFenceAPPLE (GLuint fence);
    static void glFinishFenceAPPLE (GLuint fence);
    static GLboolean glTestObjectAPPLE (GLenum object, GLuint name);
    static void glFinishObjectAPPLE (GLenum object, GLint name);
    static void glBufferParameteriAPPLE (GLenum target, GLenum pname, GLint param);
    static void glFlushMappedBufferRangeAPPLE (GLenum target, GLintptr offset, GLsizeiptr size);
    static GLenum glObjectPurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);
    static GLenum glObjectUnpurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);
    static void glGetObjectParameterivAPPLE (GLenum objectType, GLuint name, GLenum pname, GLint * params);
    static void glTextureRangeAPPLE (GLenum target, GLsizei length, const void * pointer);
    static void glGetTexParameterPointervAPPLE (GLenum target, GLenum pname, void ** params);
    static void glBindVertexArrayAPPLE (GLuint array);
    static void glDeleteVertexArraysAPPLE (GLsizei n, const GLuint * arrays);
    static void glGenVertexArraysAPPLE (GLsizei n, GLuint * arrays);
    static GLboolean glIsVertexArrayAPPLE (GLuint array);
    static void glVertexArrayRangeAPPLE (GLsizei length, void * pointer);
    static void glFlushVertexArrayRangeAPPLE (GLsizei length, void * pointer);
    static void glVertexArrayParameteriAPPLE (GLenum pname, GLint param);
    static void glEnableVertexAttribAPPLE (GLuint index, GLenum pname);
    static void glDisableVertexAttribAPPLE (GLuint index, GLenum pname);
    static GLboolean glIsVertexAttribEnabledAPPLE (GLuint index, GLenum pname);
    static void glMapVertexAttrib1dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
    static void glMapVertexAttrib1fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
    static void glMapVertexAttrib2dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
    static void glMapVertexAttrib2fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
    static GLuint64 glGetTextureHandleARB (GLuint texture);
    static GLuint64 glGetTextureSamplerHandleARB (GLuint texture, GLuint sampler);
    static void glMakeTextureHandleResidentARB (GLuint64 handle);
    static void glMakeTextureHandleNonResidentARB (GLuint64 handle);
    static GLuint64 glGetImageHandleARB (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
    static void glMakeImageHandleResidentARB (GLuint64 handle, GLenum access);
    static void glMakeImageHandleNonResidentARB (GLuint64 handle);
    static void glUniformHandleui64ARB (GLint location, GLuint64 value);
    static void glUniformHandleui64vARB (GLint location, GLsizei count, const GLuint64 * value);
    static void glProgramUniformHandleui64ARB (GLuint program, GLint location, GLuint64 value);
    static void glProgramUniformHandleui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 * values);
    static GLboolean glIsTextureHandleResidentARB (GLuint64 handle);
    static GLboolean glIsImageHandleResidentARB (GLuint64 handle);
    static void glVertexAttribL1ui64ARB (GLuint index, GLuint64EXT x);
    static void glVertexAttribL1ui64vARB (GLuint index, const GLuint64EXT * v);
    static void glGetVertexAttribLui64vARB (GLuint index, GLenum pname, GLuint64EXT * params);
    static GLsync glCreateSyncFromCLeventARB (struct _cl_context * context, struct _cl_event * event, GLbitfield flags);
    static void glClampColorARB (GLenum target, GLenum clamp);
    static void glDispatchComputeGroupSizeARB (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
    static void glDebugMessageControlARB (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
    static void glDebugMessageInsertARB (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
    static void glDebugMessageCallbackARB (GLDEBUGPROCARB callback, const void * userParam);
    static GLuint glGetDebugMessageLogARB (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
    static void glDrawBuffersARB (GLsizei n, const GLenum * bufs);
    static void glBlendEquationiARB (GLuint buf, GLenum mode);
    static void glBlendEquationSeparateiARB (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    static void glBlendFunciARB (GLuint buf, GLenum src, GLenum dst);
    static void glBlendFuncSeparateiARB (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    static void glDrawArraysInstancedARB (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
    static void glDrawElementsInstancedARB (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
    static void glProgramStringARB (GLenum target, GLenum format, GLsizei len, const void * string);
    static void glBindProgramARB (GLenum target, GLuint program);
    static void glDeleteProgramsARB (GLsizei n, const GLuint * programs);
    static void glGenProgramsARB (GLsizei n, GLuint * programs);
    static void glProgramEnvParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glProgramEnvParameter4dvARB (GLenum target, GLuint index, const GLdouble * params);
    static void glProgramEnvParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    static void glProgramEnvParameter4fvARB (GLenum target, GLuint index, const GLfloat * params);
    static void glProgramLocalParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glProgramLocalParameter4dvARB (GLenum target, GLuint index, const GLdouble * params);
    static void glProgramLocalParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    static void glProgramLocalParameter4fvARB (GLenum target, GLuint index, const GLfloat * params);
    static void glGetProgramEnvParameterdvARB (GLenum target, GLuint index, GLdouble * params);
    static void glGetProgramEnvParameterfvARB (GLenum target, GLuint index, GLfloat * params);
    static void glGetProgramLocalParameterdvARB (GLenum target, GLuint index, GLdouble * params);
    static void glGetProgramLocalParameterfvARB (GLenum target, GLuint index, GLfloat * params);
    static void glGetProgramivARB (GLenum target, GLenum pname, GLint * params);
    static void glGetProgramStringARB (GLenum target, GLenum pname, void * string);
    static GLboolean glIsProgramARB (GLuint program);
    static void glProgramParameteriARB (GLuint program, GLenum pname, GLint value);
    static void glFramebufferTextureARB (GLenum target, GLenum attachment, GLuint texture, GLint level);
    static void glFramebufferTextureLayerARB (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
    static void glFramebufferTextureFaceARB (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
    static void glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
    static void glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat * params);
    static void glColorTableParameteriv (GLenum target, GLenum pname, const GLint * params);
    static void glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
    static void glGetColorTable (GLenum target, GLenum format, GLenum type, void * table);
    static void glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat * params);
    static void glGetColorTableParameteriv (GLenum target, GLenum pname, GLint * params);
    static void glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
    static void glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
    static void glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
    static void glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
    static void glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params);
    static void glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat * params);
    static void glConvolutionParameteri (GLenum target, GLenum pname, GLint params);
    static void glConvolutionParameteriv (GLenum target, GLenum pname, const GLint * params);
    static void glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
    static void glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, void * image);
    static void glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat * params);
    static void glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint * params);
    static void glGetSeparableFilter (GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
    static void glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
    static void glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
    static void glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat * params);
    static void glGetHistogramParameteriv (GLenum target, GLenum pname, GLint * params);
    static void glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
    static void glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat * params);
    static void glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint * params);
    static void glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
    static void glMinmax (GLenum target, GLenum internalformat, GLboolean sink);
    static void glResetHistogram (GLenum target);
    static void glResetMinmax (GLenum target);
    static void glMultiDrawArraysIndirectCountARB (GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
    static void glMultiDrawElementsIndirectCountARB (GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
    static void glVertexAttribDivisorARB (GLuint index, GLuint divisor);
    static void glCurrentPaletteMatrixARB (GLint index);
    static void glMatrixIndexubvARB (GLint size, const GLubyte * indices);
    static void glMatrixIndexusvARB (GLint size, const GLushort * indices);
    static void glMatrixIndexuivARB (GLint size, const GLuint * indices);
    static void glMatrixIndexPointerARB (GLint size, GLenum type, GLsizei stride, const void * pointer);
    static void glSampleCoverageARB (GLfloat value, GLboolean invert);
    static void glActiveTextureARB (GLenum texture);
    static void glClientActiveTextureARB (GLenum texture);
    static void glMultiTexCoord1dARB (GLenum target, GLdouble s);
    static void glMultiTexCoord1dvARB (GLenum target, const GLdouble * v);
    static void glMultiTexCoord1fARB (GLenum target, GLfloat s);
    static void glMultiTexCoord1fvARB (GLenum target, const GLfloat * v);
    static void glMultiTexCoord1iARB (GLenum target, GLint s);
    static void glMultiTexCoord1ivARB (GLenum target, const GLint * v);
    static void glMultiTexCoord1sARB (GLenum target, GLshort s);
    static void glMultiTexCoord1svARB (GLenum target, const GLshort * v);
    static void glMultiTexCoord2dARB (GLenum target, GLdouble s, GLdouble t);
    static void glMultiTexCoord2dvARB (GLenum target, const GLdouble * v);
    static void glMultiTexCoord2fARB (GLenum target, GLfloat s, GLfloat t);
    static void glMultiTexCoord2fvARB (GLenum target, const GLfloat * v);
    static void glMultiTexCoord2iARB (GLenum target, GLint s, GLint t);
    static void glMultiTexCoord2ivARB (GLenum target, const GLint * v);
    static void glMultiTexCoord2sARB (GLenum target, GLshort s, GLshort t);
    static void glMultiTexCoord2svARB (GLenum target, const GLshort * v);
    static void glMultiTexCoord3dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r);
    static void glMultiTexCoord3dvARB (GLenum target, const GLdouble * v);
    static void glMultiTexCoord3fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r);
    static void glMultiTexCoord3fvARB (GLenum target, const GLfloat * v);
    static void glMultiTexCoord3iARB (GLenum target, GLint s, GLint t, GLint r);
    static void glMultiTexCoord3ivARB (GLenum target, const GLint * v);
    static void glMultiTexCoord3sARB (GLenum target, GLshort s, GLshort t, GLshort r);
    static void glMultiTexCoord3svARB (GLenum target, const GLshort * v);
    static void glMultiTexCoord4dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
    static void glMultiTexCoord4dvARB (GLenum target, const GLdouble * v);
    static void glMultiTexCoord4fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
    static void glMultiTexCoord4fvARB (GLenum target, const GLfloat * v);
    static void glMultiTexCoord4iARB (GLenum target, GLint s, GLint t, GLint r, GLint q);
    static void glMultiTexCoord4ivARB (GLenum target, const GLint * v);
    static void glMultiTexCoord4sARB (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
    static void glMultiTexCoord4svARB (GLenum target, const GLshort * v);
    static void glGenQueriesARB (GLsizei n, GLuint * ids);
    static void glDeleteQueriesARB (GLsizei n, const GLuint * ids);
    static GLboolean glIsQueryARB (GLuint id);
    static void glBeginQueryARB (GLenum target, GLuint id);
    static void glEndQueryARB (GLenum target);
    static void glGetQueryivARB (GLenum target, GLenum pname, GLint * params);
    static void glGetQueryObjectivARB (GLuint id, GLenum pname, GLint * params);
    static void glGetQueryObjectuivARB (GLuint id, GLenum pname, GLuint * params);
    static void glPointParameterfARB (GLenum pname, GLfloat param);
    static void glPointParameterfvARB (GLenum pname, const GLfloat * params);
    static GLenum glGetGraphicsResetStatusARB ();
    static void glGetnTexImageARB (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * img);
    static void glReadnPixelsARB (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
    static void glGetnCompressedTexImageARB (GLenum target, GLint lod, GLsizei bufSize, void * img);
    static void glGetnUniformfvARB (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
    static void glGetnUniformivARB (GLuint program, GLint location, GLsizei bufSize, GLint * params);
    static void glGetnUniformuivARB (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
    static void glGetnUniformdvARB (GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
    static void glGetnMapdvARB (GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
    static void glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
    static void glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint * v);
    static void glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat * values);
    static void glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint * values);
    static void glGetnPixelMapusvARB (GLenum map, GLsizei bufSize, GLushort * values);
    static void glGetnPolygonStippleARB (GLsizei bufSize, GLubyte * pattern);
    static void glGetnColorTableARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
    static void glGetnConvolutionFilterARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
    static void glGetnSeparableFilterARB (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
    static void glGetnHistogramARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
    static void glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
    static void glMinSampleShadingARB (GLfloat value);
    static void glDeleteObjectARB (GLhandleARB obj);
    static GLhandleARB glGetHandleARB (GLenum pname);
    static void glDetachObjectARB (GLhandleARB containerObj, GLhandleARB attachedObj);
    static GLhandleARB glCreateShaderObjectARB (GLenum shaderType);
    static void glShaderSourceARB (GLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint * length);
    static void glCompileShaderARB (GLhandleARB shaderObj);
    static GLhandleARB glCreateProgramObjectARB ();
    static void glAttachObjectARB (GLhandleARB containerObj, GLhandleARB obj);
    static void glLinkProgramARB (GLhandleARB programObj);
    static void glUseProgramObjectARB (GLhandleARB programObj);
    static void glValidateProgramARB (GLhandleARB programObj);
    static void glUniform1fARB (GLint location, GLfloat v0);
    static void glUniform2fARB (GLint location, GLfloat v0, GLfloat v1);
    static void glUniform3fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    static void glUniform4fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    static void glUniform1iARB (GLint location, GLint v0);
    static void glUniform2iARB (GLint location, GLint v0, GLint v1);
    static void glUniform3iARB (GLint location, GLint v0, GLint v1, GLint v2);
    static void glUniform4iARB (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    static void glUniform1fvARB (GLint location, GLsizei count, const GLfloat * value);
    static void glUniform2fvARB (GLint location, GLsizei count, const GLfloat * value);
    static void glUniform3fvARB (GLint location, GLsizei count, const GLfloat * value);
    static void glUniform4fvARB (GLint location, GLsizei count, const GLfloat * value);
    static void glUniform1ivARB (GLint location, GLsizei count, const GLint * value);
    static void glUniform2ivARB (GLint location, GLsizei count, const GLint * value);
    static void glUniform3ivARB (GLint location, GLsizei count, const GLint * value);
    static void glUniform4ivARB (GLint location, GLsizei count, const GLint * value);
    static void glUniformMatrix2fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glUniformMatrix3fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glUniformMatrix4fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glGetObjectParameterfvARB (GLhandleARB obj, GLenum pname, GLfloat * params);
    static void glGetObjectParameterivARB (GLhandleARB obj, GLenum pname, GLint * params);
    static void glGetInfoLogARB (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);
    static void glGetAttachedObjectsARB (GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj);
    static GLint glGetUniformLocationARB (GLhandleARB programObj, const GLcharARB * name);
    static void glGetActiveUniformARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
    static void glGetUniformfvARB (GLhandleARB programObj, GLint location, GLfloat * params);
    static void glGetUniformivARB (GLhandleARB programObj, GLint location, GLint * params);
    static void glGetShaderSourceARB (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);
    static void glNamedStringARB (GLenum type, GLint namelen, const GLchar * name, GLint stringlen, const GLchar * string);
    static void glDeleteNamedStringARB (GLint namelen, const GLchar * name);
    static void glCompileShaderIncludeARB (GLuint shader, GLsizei count, const GLchar *const* path, const GLint * length);
    static GLboolean glIsNamedStringARB (GLint namelen, const GLchar * name);
    static void glGetNamedStringARB (GLint namelen, const GLchar * name, GLsizei bufSize, GLint * stringlen, GLchar * string);
    static void glGetNamedStringivARB (GLint namelen, const GLchar * name, GLenum pname, GLint * params);
    static void glBufferPageCommitmentARB (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
    static void glNamedBufferPageCommitmentEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
    static void glNamedBufferPageCommitmentARB (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
    static void glTexPageCommitmentARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
    static void glTexBufferARB (GLenum target, GLenum internalformat, GLuint buffer);
    static void glCompressedTexImage3DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
    static void glCompressedTexImage2DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
    static void glCompressedTexImage1DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
    static void glCompressedTexSubImage3DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
    static void glCompressedTexSubImage2DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
    static void glCompressedTexSubImage1DARB (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
    static void glGetCompressedTexImageARB (GLenum target, GLint level, void * img);
    static void glLoadTransposeMatrixfARB (const GLfloat * m);
    static void glLoadTransposeMatrixdARB (const GLdouble * m);
    static void glMultTransposeMatrixfARB (const GLfloat * m);
    static void glMultTransposeMatrixdARB (const GLdouble * m);
    static void glWeightbvARB (GLint size, const GLbyte * weights);
    static void glWeightsvARB (GLint size, const GLshort * weights);
    static void glWeightivARB (GLint size, const GLint * weights);
    static void glWeightfvARB (GLint size, const GLfloat * weights);
    static void glWeightdvARB (GLint size, const GLdouble * weights);
    static void glWeightubvARB (GLint size, const GLubyte * weights);
    static void glWeightusvARB (GLint size, const GLushort * weights);
    static void glWeightuivARB (GLint size, const GLuint * weights);
    static void glWeightPointerARB (GLint size, GLenum type, GLsizei stride, const void * pointer);
    static void glVertexBlendARB (GLint count);
    static void glBindBufferARB (GLenum target, GLuint buffer);
    static void glDeleteBuffersARB (GLsizei n, const GLuint * buffers);
    static void glGenBuffersARB (GLsizei n, GLuint * buffers);
    static GLboolean glIsBufferARB (GLuint buffer);
    static void glBufferDataARB (GLenum target, GLsizeiptrARB size, const void * data, GLenum usage);
    static void glBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data);
    static void glGetBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
    static void * glMapBufferARB (GLenum target, GLenum access);
    static GLboolean glUnmapBufferARB (GLenum target);
    static void glGetBufferParameterivARB (GLenum target, GLenum pname, GLint * params);
    static void glGetBufferPointervARB (GLenum target, GLenum pname, void ** params);
    static void glVertexAttrib1dARB (GLuint index, GLdouble x);
    static void glVertexAttrib1dvARB (GLuint index, const GLdouble * v);
    static void glVertexAttrib1fARB (GLuint index, GLfloat x);
    static void glVertexAttrib1fvARB (GLuint index, const GLfloat * v);
    static void glVertexAttrib1sARB (GLuint index, GLshort x);
    static void glVertexAttrib1svARB (GLuint index, const GLshort * v);
    static void glVertexAttrib2dARB (GLuint index, GLdouble x, GLdouble y);
    static void glVertexAttrib2dvARB (GLuint index, const GLdouble * v);
    static void glVertexAttrib2fARB (GLuint index, GLfloat x, GLfloat y);
    static void glVertexAttrib2fvARB (GLuint index, const GLfloat * v);
    static void glVertexAttrib2sARB (GLuint index, GLshort x, GLshort y);
    static void glVertexAttrib2svARB (GLuint index, const GLshort * v);
    static void glVertexAttrib3dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z);
    static void glVertexAttrib3dvARB (GLuint index, const GLdouble * v);
    static void glVertexAttrib3fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z);
    static void glVertexAttrib3fvARB (GLuint index, const GLfloat * v);
    static void glVertexAttrib3sARB (GLuint index, GLshort x, GLshort y, GLshort z);
    static void glVertexAttrib3svARB (GLuint index, const GLshort * v);
    static void glVertexAttrib4NbvARB (GLuint index, const GLbyte * v);
    static void glVertexAttrib4NivARB (GLuint index, const GLint * v);
    static void glVertexAttrib4NsvARB (GLuint index, const GLshort * v);
    static void glVertexAttrib4NubARB (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
    static void glVertexAttrib4NubvARB (GLuint index, const GLubyte * v);
    static void glVertexAttrib4NuivARB (GLuint index, const GLuint * v);
    static void glVertexAttrib4NusvARB (GLuint index, const GLushort * v);
    static void glVertexAttrib4bvARB (GLuint index, const GLbyte * v);
    static void glVertexAttrib4dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glVertexAttrib4dvARB (GLuint index, const GLdouble * v);
    static void glVertexAttrib4fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    static void glVertexAttrib4fvARB (GLuint index, const GLfloat * v);
    static void glVertexAttrib4ivARB (GLuint index, const GLint * v);
    static void glVertexAttrib4sARB (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
    static void glVertexAttrib4svARB (GLuint index, const GLshort * v);
    static void glVertexAttrib4ubvARB (GLuint index, const GLubyte * v);
    static void glVertexAttrib4uivARB (GLuint index, const GLuint * v);
    static void glVertexAttrib4usvARB (GLuint index, const GLushort * v);
    static void glVertexAttribPointerARB (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
    static void glEnableVertexAttribArrayARB (GLuint index);
    static void glDisableVertexAttribArrayARB (GLuint index);
    static void glGetVertexAttribdvARB (GLuint index, GLenum pname, GLdouble * params);
    static void glGetVertexAttribfvARB (GLuint index, GLenum pname, GLfloat * params);
    static void glGetVertexAttribivARB (GLuint index, GLenum pname, GLint * params);
    static void glGetVertexAttribPointervARB (GLuint index, GLenum pname, void ** pointer);
    static void glBindAttribLocationARB (GLhandleARB programObj, GLuint index, const GLcharARB * name);
    static void glGetActiveAttribARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
    static GLint glGetAttribLocationARB (GLhandleARB programObj, const GLcharARB * name);
    static void glWindowPos2dARB (GLdouble x, GLdouble y);
    static void glWindowPos2dvARB (const GLdouble * v);
    static void glWindowPos2fARB (GLfloat x, GLfloat y);
    static void glWindowPos2fvARB (const GLfloat * v);
    static void glWindowPos2iARB (GLint x, GLint y);
    static void glWindowPos2ivARB (const GLint * v);
    static void glWindowPos2sARB (GLshort x, GLshort y);
    static void glWindowPos2svARB (const GLshort * v);
    static void glWindowPos3dARB (GLdouble x, GLdouble y, GLdouble z);
    static void glWindowPos3dvARB (const GLdouble * v);
    static void glWindowPos3fARB (GLfloat x, GLfloat y, GLfloat z);
    static void glWindowPos3fvARB (const GLfloat * v);
    static void glWindowPos3iARB (GLint x, GLint y, GLint z);
    static void glWindowPos3ivARB (const GLint * v);
    static void glWindowPos3sARB (GLshort x, GLshort y, GLshort z);
    static void glWindowPos3svARB (const GLshort * v);
    static void glDrawBuffersATI (GLsizei n, const GLenum * bufs);
    static void glElementPointerATI (GLenum type, const void * pointer);
    static void glDrawElementArrayATI (GLenum mode, GLsizei count);
    static void glDrawRangeElementArrayATI (GLenum mode, GLuint start, GLuint end, GLsizei count);
    static void glTexBumpParameterivATI (GLenum pname, const GLint * param);
    static void glTexBumpParameterfvATI (GLenum pname, const GLfloat * param);
    static void glGetTexBumpParameterivATI (GLenum pname, GLint * param);
    static void glGetTexBumpParameterfvATI (GLenum pname, GLfloat * param);
    static GLuint glGenFragmentShadersATI (GLuint range);
    static void glBindFragmentShaderATI (GLuint id);
    static void glDeleteFragmentShaderATI (GLuint id);
    static void glBeginFragmentShaderATI ();
    static void glEndFragmentShaderATI ();
    static void glPassTexCoordATI (GLuint dst, GLuint coord, GLenum swizzle);
    static void glSampleMapATI (GLuint dst, GLuint interp, GLenum swizzle);
    static void glColorFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
    static void glColorFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
    static void glColorFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
    static void glAlphaFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
    static void glAlphaFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
    static void glAlphaFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
    static void glSetFragmentShaderConstantATI (GLuint dst, const GLfloat * value);
    static void * glMapObjectBufferATI (GLuint buffer);
    static void glUnmapObjectBufferATI (GLuint buffer);
    static void glPNTrianglesiATI (GLenum pname, GLint param);
    static void glPNTrianglesfATI (GLenum pname, GLfloat param);
    static void glStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
    static void glStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
    static GLuint glNewObjectBufferATI (GLsizei size, const void * pointer, GLenum usage);
    static GLboolean glIsObjectBufferATI (GLuint buffer);
    static void glUpdateObjectBufferATI (GLuint buffer, GLuint offset, GLsizei size, const void * pointer, GLenum preserve);
    static void glGetObjectBufferfvATI (GLuint buffer, GLenum pname, GLfloat * params);
    static void glGetObjectBufferivATI (GLuint buffer, GLenum pname, GLint * params);
    static void glFreeObjectBufferATI (GLuint buffer);
    static void glArrayObjectATI (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
    static void glGetArrayObjectfvATI (GLenum array, GLenum pname, GLfloat * params);
    static void glGetArrayObjectivATI (GLenum array, GLenum pname, GLint * params);
    static void glVariantArrayObjectATI (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
    static void glGetVariantArrayObjectfvATI (GLuint id, GLenum pname, GLfloat * params);
    static void glGetVariantArrayObjectivATI (GLuint id, GLenum pname, GLint * params);
    static void glVertexAttribArrayObjectATI (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
    static void glGetVertexAttribArrayObjectfvATI (GLuint index, GLenum pname, GLfloat * params);
    static void glGetVertexAttribArrayObjectivATI (GLuint index, GLenum pname, GLint * params);
    static void glVertexStream1sATI (GLenum stream, GLshort x);
    static void glVertexStream1svATI (GLenum stream, const GLshort * coords);
    static void glVertexStream1iATI (GLenum stream, GLint x);
    static void glVertexStream1ivATI (GLenum stream, const GLint * coords);
    static void glVertexStream1fATI (GLenum stream, GLfloat x);
    static void glVertexStream1fvATI (GLenum stream, const GLfloat * coords);
    static void glVertexStream1dATI (GLenum stream, GLdouble x);
    static void glVertexStream1dvATI (GLenum stream, const GLdouble * coords);
    static void glVertexStream2sATI (GLenum stream, GLshort x, GLshort y);
    static void glVertexStream2svATI (GLenum stream, const GLshort * coords);
    static void glVertexStream2iATI (GLenum stream, GLint x, GLint y);
    static void glVertexStream2ivATI (GLenum stream, const GLint * coords);
    static void glVertexStream2fATI (GLenum stream, GLfloat x, GLfloat y);
    static void glVertexStream2fvATI (GLenum stream, const GLfloat * coords);
    static void glVertexStream2dATI (GLenum stream, GLdouble x, GLdouble y);
    static void glVertexStream2dvATI (GLenum stream, const GLdouble * coords);
    static void glVertexStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z);
    static void glVertexStream3svATI (GLenum stream, const GLshort * coords);
    static void glVertexStream3iATI (GLenum stream, GLint x, GLint y, GLint z);
    static void glVertexStream3ivATI (GLenum stream, const GLint * coords);
    static void glVertexStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
    static void glVertexStream3fvATI (GLenum stream, const GLfloat * coords);
    static void glVertexStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
    static void glVertexStream3dvATI (GLenum stream, const GLdouble * coords);
    static void glVertexStream4sATI (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
    static void glVertexStream4svATI (GLenum stream, const GLshort * coords);
    static void glVertexStream4iATI (GLenum stream, GLint x, GLint y, GLint z, GLint w);
    static void glVertexStream4ivATI (GLenum stream, const GLint * coords);
    static void glVertexStream4fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    static void glVertexStream4fvATI (GLenum stream, const GLfloat * coords);
    static void glVertexStream4dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glVertexStream4dvATI (GLenum stream, const GLdouble * coords);
    static void glNormalStream3bATI (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
    static void glNormalStream3bvATI (GLenum stream, const GLbyte * coords);
    static void glNormalStream3sATI (GLenum stream, GLshort nx, GLshort ny, GLshort nz);
    static void glNormalStream3svATI (GLenum stream, const GLshort * coords);
    static void glNormalStream3iATI (GLenum stream, GLint nx, GLint ny, GLint nz);
    static void glNormalStream3ivATI (GLenum stream, const GLint * coords);
    static void glNormalStream3fATI (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
    static void glNormalStream3fvATI (GLenum stream, const GLfloat * coords);
    static void glNormalStream3dATI (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
    static void glNormalStream3dvATI (GLenum stream, const GLdouble * coords);
    static void glClientActiveVertexStreamATI (GLenum stream);
    static void glVertexBlendEnviATI (GLenum pname, GLint param);
    static void glVertexBlendEnvfATI (GLenum pname, GLfloat param);
    static void glUniformBufferEXT (GLuint program, GLint location, GLuint buffer);
    static GLint glGetUniformBufferSizeEXT (GLuint program, GLint location);
    static GLintptr glGetUniformOffsetEXT (GLuint program, GLint location);
    static void glBlendColorEXT (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
    static void glBlendEquationSeparateEXT (GLenum modeRGB, GLenum modeAlpha);
    static void glBlendFuncSeparateEXT (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
    static void glBlendEquationEXT (GLenum mode);
    static void glColorSubTableEXT (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
    static void glCopyColorSubTableEXT (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
    static void glLockArraysEXT (GLint first, GLsizei count);
    static void glUnlockArraysEXT ();
    static void glConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
    static void glConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
    static void glConvolutionParameterfEXT (GLenum target, GLenum pname, GLfloat params);
    static void glConvolutionParameterfvEXT (GLenum target, GLenum pname, const GLfloat * params);
    static void glConvolutionParameteriEXT (GLenum target, GLenum pname, GLint params);
    static void glConvolutionParameterivEXT (GLenum target, GLenum pname, const GLint * params);
    static void glCopyConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
    static void glCopyConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glGetConvolutionFilterEXT (GLenum target, GLenum format, GLenum type, void * image);
    static void glGetConvolutionParameterfvEXT (GLenum target, GLenum pname, GLfloat * params);
    static void glGetConvolutionParameterivEXT (GLenum target, GLenum pname, GLint * params);
    static void glGetSeparableFilterEXT (GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
    static void glSeparableFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
    static void glTangent3bEXT (GLbyte tx, GLbyte ty, GLbyte tz);
    static void glTangent3bvEXT (const GLbyte * v);
    static void glTangent3dEXT (GLdouble tx, GLdouble ty, GLdouble tz);
    static void glTangent3dvEXT (const GLdouble * v);
    static void glTangent3fEXT (GLfloat tx, GLfloat ty, GLfloat tz);
    static void glTangent3fvEXT (const GLfloat * v);
    static void glTangent3iEXT (GLint tx, GLint ty, GLint tz);
    static void glTangent3ivEXT (const GLint * v);
    static void glTangent3sEXT (GLshort tx, GLshort ty, GLshort tz);
    static void glTangent3svEXT (const GLshort * v);
    static void glBinormal3bEXT (GLbyte bx, GLbyte by, GLbyte bz);
    static void glBinormal3bvEXT (const GLbyte * v);
    static void glBinormal3dEXT (GLdouble bx, GLdouble by, GLdouble bz);
    static void glBinormal3dvEXT (const GLdouble * v);
    static void glBinormal3fEXT (GLfloat bx, GLfloat by, GLfloat bz);
    static void glBinormal3fvEXT (const GLfloat * v);
    static void glBinormal3iEXT (GLint bx, GLint by, GLint bz);
    static void glBinormal3ivEXT (const GLint * v);
    static void glBinormal3sEXT (GLshort bx, GLshort by, GLshort bz);
    static void glBinormal3svEXT (const GLshort * v);
    static void glTangentPointerEXT (GLenum type, GLsizei stride, const void * pointer);
    static void glBinormalPointerEXT (GLenum type, GLsizei stride, const void * pointer);
    static void glCopyTexImage1DEXT (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
    static void glCopyTexImage2DEXT (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
    static void glCopyTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    static void glCopyTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glCopyTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glCullParameterdvEXT (GLenum pname, GLdouble * params);
    static void glCullParameterfvEXT (GLenum pname, GLfloat * params);
    static void glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const GLchar * label);
    static void glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label);
    static void glInsertEventMarkerEXT (GLsizei length, const GLchar * marker);
    static void glPushGroupMarkerEXT (GLsizei length, const GLchar * marker);
    static void glPopGroupMarkerEXT ();
    static void glDepthBoundsEXT (GLclampd zmin, GLclampd zmax);
    static void glMatrixLoadfEXT (GLenum mode, const GLfloat * m);
    static void glMatrixLoaddEXT (GLenum mode, const GLdouble * m);
    static void glMatrixMultfEXT (GLenum mode, const GLfloat * m);
    static void glMatrixMultdEXT (GLenum mode, const GLdouble * m);
    static void glMatrixLoadIdentityEXT (GLenum mode);
    static void glMatrixRotatefEXT (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
    static void glMatrixRotatedEXT (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
    static void glMatrixScalefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
    static void glMatrixScaledEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
    static void glMatrixTranslatefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
    static void glMatrixTranslatedEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
    static void glMatrixFrustumEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
    static void glMatrixOrthoEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
    static void glMatrixPopEXT (GLenum mode);
    static void glMatrixPushEXT (GLenum mode);
    static void glClientAttribDefaultEXT (GLbitfield mask);
    static void glPushClientAttribDefaultEXT (GLbitfield mask);
    static void glTextureParameterfEXT (GLuint texture, GLenum target, GLenum pname, GLfloat param);
    static void glTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, const GLfloat * params);
    static void glTextureParameteriEXT (GLuint texture, GLenum target, GLenum pname, GLint param);
    static void glTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, const GLint * params);
    static void glTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
    static void glTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
    static void glTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
    static void glTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
    static void glCopyTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
    static void glCopyTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
    static void glCopyTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    static void glCopyTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glGetTextureImageEXT (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
    static void glGetTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, GLfloat * params);
    static void glGetTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, GLint * params);
    static void glGetTextureLevelParameterfvEXT (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params);
    static void glGetTextureLevelParameterivEXT (GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params);
    static void glTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
    static void glTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
    static void glCopyTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glBindMultiTextureEXT (GLenum texunit, GLenum target, GLuint texture);
    static void glMultiTexCoordPointerEXT (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer);
    static void glMultiTexEnvfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
    static void glMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
    static void glMultiTexEnviEXT (GLenum texunit, GLenum target, GLenum pname, GLint param);
    static void glMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint * params);
    static void glMultiTexGendEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
    static void glMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params);
    static void glMultiTexGenfEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
    static void glMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params);
    static void glMultiTexGeniEXT (GLenum texunit, GLenum coord, GLenum pname, GLint param);
    static void glMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, const GLint * params);
    static void glGetMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
    static void glGetMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, GLint * params);
    static void glGetMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble * params);
    static void glGetMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat * params);
    static void glGetMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, GLint * params);
    static void glMultiTexParameteriEXT (GLenum texunit, GLenum target, GLenum pname, GLint param);
    static void glMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint * params);
    static void glMultiTexParameterfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
    static void glMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
    static void glMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
    static void glMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
    static void glMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
    static void glMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
    static void glCopyMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
    static void glCopyMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
    static void glCopyMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    static void glCopyMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glGetMultiTexImageEXT (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
    static void glGetMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
    static void glGetMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, GLint * params);
    static void glGetMultiTexLevelParameterfvEXT (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params);
    static void glGetMultiTexLevelParameterivEXT (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params);
    static void glMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
    static void glMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
    static void glCopyMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    static void glEnableClientStateIndexedEXT (GLenum array, GLuint index);
    static void glDisableClientStateIndexedEXT (GLenum array, GLuint index);
    static void glGetFloatIndexedvEXT (GLenum target, GLuint index, GLfloat * data);
    static void glGetDoubleIndexedvEXT (GLenum target, GLuint index, GLdouble * data);
    static void glGetPointerIndexedvEXT (GLenum target, GLuint index, void ** data);
    static void glEnableIndexedEXT (GLenum target, GLuint index);
    static void glDisableIndexedEXT (GLenum target, GLuint index);
    static GLboolean glIsEnabledIndexedEXT (GLenum target, GLuint index);
    static void glGetIntegerIndexedvEXT (GLenum target, GLuint index, GLint * data);
    static void glGetBooleanIndexedvEXT (GLenum target, GLuint index, GLboolean * data);
    static void glCompressedTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
    static void glCompressedTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
    static void glCompressedTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
    static void glCompressedTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
    static void glCompressedTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
    static void glCompressedTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
    static void glGetCompressedTextureImageEXT (GLuint texture, GLenum target, GLint lod, void * img);
    static void glCompressedMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
    static void glCompressedMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
    static void glCompressedMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
    static void glCompressedMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
    static void glCompressedMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
    static void glCompressedMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
    static void glGetCompressedMultiTexImageEXT (GLenum texunit, GLenum target, GLint lod, void * img);
    static void glMatrixLoadTransposefEXT (GLenum mode, const GLfloat * m);
    static void glMatrixLoadTransposedEXT (GLenum mode, const GLdouble * m);
    static void glMatrixMultTransposefEXT (GLenum mode, const GLfloat * m);
    static void glMatrixMultTransposedEXT (GLenum mode, const GLdouble * m);
    static void glNamedBufferDataEXT (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
    static void glNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
    static void * glMapNamedBufferEXT (GLuint buffer, GLenum access);
    static GLboolean glUnmapNamedBufferEXT (GLuint buffer);
    static void glGetNamedBufferParameterivEXT (GLuint buffer, GLenum pname, GLint * params);
    static void glGetNamedBufferPointervEXT (GLuint buffer, GLenum pname, void ** params);
    static void glGetNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
    static void glProgramUniform1fEXT (GLuint program, GLint location, GLfloat v0);
    static void glProgramUniform2fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1);
    static void glProgramUniform3fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    static void glProgramUniform4fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    static void glProgramUniform1iEXT (GLuint program, GLint location, GLint v0);
    static void glProgramUniform2iEXT (GLuint program, GLint location, GLint v0, GLint v1);
    static void glProgramUniform3iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
    static void glProgramUniform4iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    static void glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat * value);
    static void glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat * value);
    static void glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat * value);
    static void glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat * value);
    static void glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei count, const GLint * value);
    static void glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei count, const GLint * value);
    static void glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei count, const GLint * value);
    static void glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei count, const GLint * value);
    static void glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix2x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix3x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix2x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix4x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix3x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glProgramUniformMatrix4x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
    static void glTextureBufferEXT (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
    static void glMultiTexBufferEXT (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
    static void glTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, const GLint * params);
    static void glTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, const GLuint * params);
    static void glGetTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, GLint * params);
    static void glGetTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, GLuint * params);
    static void glMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint * params);
    static void glMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, const GLuint * params);
    static void glGetMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, GLint * params);
    static void glGetMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, GLuint * params);
    static void glProgramUniform1uiEXT (GLuint program, GLint location, GLuint v0);
    static void glProgramUniform2uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1);
    static void glProgramUniform3uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
    static void glProgramUniform4uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    static void glProgramUniform1uivEXT (GLuint program, GLint location, GLsizei count, const GLuint * value);
    static void glProgramUniform2uivEXT (GLuint program, GLint location, GLsizei count, const GLuint * value);
    static void glProgramUniform3uivEXT (GLuint program, GLint location, GLsizei count, const GLuint * value);
    static void glProgramUniform4uivEXT (GLuint program, GLint location, GLsizei count, const GLuint * value);
    static void glNamedProgramLocalParameters4fvEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params);
    static void glNamedProgramLocalParameterI4iEXT (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
    static void glNamedProgramLocalParameterI4ivEXT (GLuint program, GLenum target, GLuint index, const GLint * params);
    static void glNamedProgramLocalParametersI4ivEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params);
    static void glNamedProgramLocalParameterI4uiEXT (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    static void glNamedProgramLocalParameterI4uivEXT (GLuint program, GLenum target, GLuint index, const GLuint * params);
    static void glNamedProgramLocalParametersI4uivEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params);
    static void glGetNamedProgramLocalParameterIivEXT (GLuint program, GLenum target, GLuint index, GLint * params);
    static void glGetNamedProgramLocalParameterIuivEXT (GLuint program, GLenum target, GLuint index, GLuint * params);
    static void glEnableClientStateiEXT (GLenum array, GLuint index);
    static void glDisableClientStateiEXT (GLenum array, GLuint index);
    static void glGetFloati_vEXT (GLenum pname, GLuint index, GLfloat * params);
    static void glGetDoublei_vEXT (GLenum pname, GLuint index, GLdouble * params);
    static void glGetPointeri_vEXT (GLenum pname, GLuint index, void ** params);
    static void glNamedProgramStringEXT (GLuint program, GLenum target, GLenum format, GLsizei len, const void * string);
    static void glNamedProgramLocalParameter4dEXT (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glNamedProgramLocalParameter4dvEXT (GLuint program, GLenum target, GLuint index, const GLdouble * params);
    static void glNamedProgramLocalParameter4fEXT (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    static void glNamedProgramLocalParameter4fvEXT (GLuint program, GLenum target, GLuint index, const GLfloat * params);
    static void glGetNamedProgramLocalParameterdvEXT (GLuint program, GLenum target, GLuint index, GLdouble * params);
    static void glGetNamedProgramLocalParameterfvEXT (GLuint program, GLenum target, GLuint index, GLfloat * params);
    static void glGetNamedProgramivEXT (GLuint program, GLenum target, GLenum pname, GLint * params);
    static void glGetNamedProgramStringEXT (GLuint program, GLenum target, GLenum pname, void * string);
    static void glNamedRenderbufferStorageEXT (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
    static void glGetNamedRenderbufferParameterivEXT (GLuint renderbuffer, GLenum pname, GLint * params);
    static void glNamedRenderbufferStorageMultisampleEXT (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    static void glNamedRenderbufferStorageMultisampleCoverageEXT (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
    static GLenum glCheckNamedFramebufferStatusEXT (GLuint framebuffer, GLenum target);
    static void glNamedFramebufferTexture1DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    static void glNamedFramebufferTexture2DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    static void glNamedFramebufferTexture3DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
    static void glNamedFramebufferRenderbufferEXT (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    static void glGetNamedFramebufferAttachmentParameterivEXT (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
    static void glGenerateTextureMipmapEXT (GLuint texture, GLenum target);
    static void glGenerateMultiTexMipmapEXT (GLenum texunit, GLenum target);
    static void glFramebufferDrawBufferEXT (GLuint framebuffer, GLenum mode);
    static void glFramebufferDrawBuffersEXT (GLuint framebuffer, GLsizei n, const GLenum * bufs);
    static void glFramebufferReadBufferEXT (GLuint framebuffer, GLenum mode);
    static void glGetFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint * params);
    static void glNamedCopyBufferSubDataEXT (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    static void glNamedFramebufferTextureEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
    static void glNamedFramebufferTextureLayerEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
    static void glNamedFramebufferTextureFaceEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
    static void glTextureRenderbufferEXT (GLuint texture, GLenum target, GLuint renderbuffer);
    static void glMultiTexRenderbufferEXT (GLenum texunit, GLenum target, GLuint renderbuffer);
    static void glVertexArrayVertexOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    static void glVertexArrayColorOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    static void glVertexArrayEdgeFlagOffsetEXT (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
    static void glVertexArrayIndexOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
    static void glVertexArrayNormalOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
    static void glVertexArrayTexCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    static void glVertexArrayMultiTexCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    static void glVertexArrayFogCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
    static void glVertexArraySecondaryColorOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    static void glVertexArrayVertexAttribOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
    static void glVertexArrayVertexAttribIOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    static void glEnableVertexArrayEXT (GLuint vaobj, GLenum array);
    static void glDisableVertexArrayEXT (GLuint vaobj, GLenum array);
    static void glEnableVertexArrayAttribEXT (GLuint vaobj, GLuint index);
    static void glDisableVertexArrayAttribEXT (GLuint vaobj, GLuint index);
    static void glGetVertexArrayIntegervEXT (GLuint vaobj, GLenum pname, GLint * param);
    static void glGetVertexArrayPointervEXT (GLuint vaobj, GLenum pname, void ** param);
    static void glGetVertexArrayIntegeri_vEXT (GLuint vaobj, GLuint index, GLenum pname, GLint * param);
    static void glGetVertexArrayPointeri_vEXT (GLuint vaobj, GLuint index, GLenum pname, void ** param);
    static void * glMapNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
    static void glFlushMappedNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length);
    static void glNamedBufferStorageEXT (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
    static void glClearNamedBufferDataEXT (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
    static void glClearNamedBufferSubDataEXT (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
    static void glNamedFramebufferParameteriEXT (GLuint framebuffer, GLenum pname, GLint param);
    static void glGetNamedFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint * params);
    static void glProgramUniform1dEXT (GLuint program, GLint location, GLdouble x);
    static void glProgramUniform2dEXT (GLuint program, GLint location, GLdouble x, GLdouble y);
    static void glProgramUniform3dEXT (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
    static void glProgramUniform4dEXT (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glProgramUniform1dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble * value);
    static void glProgramUniform2dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble * value);
    static void glProgramUniform3dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble * value);
    static void glProgramUniform4dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble * value);
    static void glProgramUniformMatrix2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix2x3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix2x4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix3x2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix3x4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix4x2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glProgramUniformMatrix4x3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
    static void glTextureBufferRangeEXT (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    static void glTextureStorage1DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
    static void glTextureStorage2DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    static void glTextureStorage3DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    static void glTextureStorage2DMultisampleEXT (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    static void glTextureStorage3DMultisampleEXT (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    static void glVertexArrayBindVertexBufferEXT (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
    static void glVertexArrayVertexAttribFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
    static void glVertexArrayVertexAttribIFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    static void glVertexArrayVertexAttribLFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    static void glVertexArrayVertexAttribBindingEXT (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
    static void glVertexArrayVertexBindingDivisorEXT (GLuint vaobj, GLuint bindingindex, GLuint divisor);
    static void glVertexArrayVertexAttribLOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
    static void glTexturePageCommitmentEXT (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
    static void glVertexArrayVertexAttribDivisorEXT (GLuint vaobj, GLuint index, GLuint divisor);
    static void glColorMaskIndexedEXT (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
    static void glDrawArraysInstancedEXT (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
    static void glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
    static void glDrawRangeElementsEXT (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
    static void glFogCoordfEXT (GLfloat coord);
    static void glFogCoordfvEXT (const GLfloat * coord);
    static void glFogCoorddEXT (GLdouble coord);
    static void glFogCoorddvEXT (const GLdouble * coord);
    static void glFogCoordPointerEXT (GLenum type, GLsizei stride, const void * pointer);
    static void glBlitFramebufferEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    static void glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    static GLboolean glIsRenderbufferEXT (GLuint renderbuffer);
    static void glBindRenderbufferEXT (GLenum target, GLuint renderbuffer);
    static void glDeleteRenderbuffersEXT (GLsizei n, const GLuint * renderbuffers);
    static void glGenRenderbuffersEXT (GLsizei n, GLuint * renderbuffers);
    static void glRenderbufferStorageEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
    static void glGetRenderbufferParameterivEXT (GLenum target, GLenum pname, GLint * params);
    static GLboolean glIsFramebufferEXT (GLuint framebuffer);
    static void glBindFramebufferEXT (GLenum target, GLuint framebuffer);
    static void glDeleteFramebuffersEXT (GLsizei n, const GLuint * framebuffers);
    static void glGenFramebuffersEXT (GLsizei n, GLuint * framebuffers);
    static GLenum glCheckFramebufferStatusEXT (GLenum target);
    static void glFramebufferTexture1DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    static void glFramebufferTexture2DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    static void glFramebufferTexture3DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
    static void glFramebufferRenderbufferEXT (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    static void glGetFramebufferAttachmentParameterivEXT (GLenum target, GLenum attachment, GLenum pname, GLint * params);
    static void glGenerateMipmapEXT (GLenum target);
    static void glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);
    static void glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat * params);
    static void glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat * params);
    static void glGetUniformuivEXT (GLuint program, GLint location, GLuint * params);
    static void glBindFragDataLocationEXT (GLuint program, GLuint color, const GLchar * name);
    static GLint glGetFragDataLocationEXT (GLuint program, const GLchar * name);
    static void glUniform1uiEXT (GLint location, GLuint v0);
    static void glUniform2uiEXT (GLint location, GLuint v0, GLuint v1);
    static void glUniform3uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2);
    static void glUniform4uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    static void glUniform1uivEXT (GLint location, GLsizei count, const GLuint * value);
    static void glUniform2uivEXT (GLint location, GLsizei count, const GLuint * value);
    static void glUniform3uivEXT (GLint location, GLsizei count, const GLuint * value);
    static void glUniform4uivEXT (GLint location, GLsizei count, const GLuint * value);
    static void glGetHistogramEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
    static void glGetHistogramParameterfvEXT (GLenum target, GLenum pname, GLfloat * params);
    static void glGetHistogramParameterivEXT (GLenum target, GLenum pname, GLint * params);
    static void glGetMinmaxEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
    static void glGetMinmaxParameterfvEXT (GLenum target, GLenum pname, GLfloat * params);
    static void glGetMinmaxParameterivEXT (GLenum target, GLenum pname, GLint * params);
    static void glHistogramEXT (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
    static void glMinmaxEXT (GLenum target, GLenum internalformat, GLboolean sink);
    static void glResetHistogramEXT (GLenum target);
    static void glResetMinmaxEXT (GLenum target);
    static void glIndexFuncEXT (GLenum func, GLclampf ref);
    static void glIndexMaterialEXT (GLenum face, GLenum mode);
    static void glApplyTextureEXT (GLenum mode);
    static void glTextureLightEXT (GLenum pname);
    static void glTextureMaterialEXT (GLenum face, GLenum mode);
    static void glMultiDrawArraysEXT (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
    static void glMultiDrawElementsEXT (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount);
    static void glSampleMaskEXT (GLclampf value, GLboolean invert);
    static void glSamplePatternEXT (GLenum pattern);
    static void glColorTableEXT (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void * table);
    static void glGetColorTableEXT (GLenum target, GLenum format, GLenum type, void * data);
    static void glGetColorTableParameterivEXT (GLenum target, GLenum pname, GLint * params);
    static void glGetColorTableParameterfvEXT (GLenum target, GLenum pname, GLfloat * params);
    static void glPixelTransformParameteriEXT (GLenum target, GLenum pname, GLint param);
    static void glPixelTransformParameterfEXT (GLenum target, GLenum pname, GLfloat param);
    static void glPixelTransformParameterivEXT (GLenum target, GLenum pname, const GLint * params);
    static void glPixelTransformParameterfvEXT (GLenum target, GLenum pname, const GLfloat * params);
    static void glGetPixelTransformParameterivEXT (GLenum target, GLenum pname, GLint * params);
    static void glGetPixelTransformParameterfvEXT (GLenum target, GLenum pname, GLfloat * params);
    static void glPointParameterfEXT (GLenum pname, GLfloat param);
    static void glPointParameterfvEXT (GLenum pname, const GLfloat * params);
    static void glPolygonOffsetEXT (GLfloat factor, GLfloat bias);
    static void glPolygonOffsetClampEXT (GLfloat factor, GLfloat units, GLfloat clamp);
    static void glProvokingVertexEXT (GLenum mode);
    static void glRasterSamplesEXT (GLuint samples, GLboolean fixedsamplelocations);
    static void glSecondaryColor3bEXT (GLbyte red, GLbyte green, GLbyte blue);
    static void glSecondaryColor3bvEXT (const GLbyte * v);
    static void glSecondaryColor3dEXT (GLdouble red, GLdouble green, GLdouble blue);
    static void glSecondaryColor3dvEXT (const GLdouble * v);
    static void glSecondaryColor3fEXT (GLfloat red, GLfloat green, GLfloat blue);
    static void glSecondaryColor3fvEXT (const GLfloat * v);
    static void glSecondaryColor3iEXT (GLint red, GLint green, GLint blue);
    static void glSecondaryColor3ivEXT (const GLint * v);
    static void glSecondaryColor3sEXT (GLshort red, GLshort green, GLshort blue);
    static void glSecondaryColor3svEXT (const GLshort * v);
    static void glSecondaryColor3ubEXT (GLubyte red, GLubyte green, GLubyte blue);
    static void glSecondaryColor3ubvEXT (const GLubyte * v);
    static void glSecondaryColor3uiEXT (GLuint red, GLuint green, GLuint blue);
    static void glSecondaryColor3uivEXT (const GLuint * v);
    static void glSecondaryColor3usEXT (GLushort red, GLushort green, GLushort blue);
    static void glSecondaryColor3usvEXT (const GLushort * v);
    static void glSecondaryColorPointerEXT (GLint size, GLenum type, GLsizei stride, const void * pointer);
    static void glUseShaderProgramEXT (GLenum type, GLuint program);
    static void glActiveProgramEXT (GLuint program);
    static GLuint glCreateShaderProgramEXT (GLenum type, const GLchar * string);
    static void glBindImageTextureEXT (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
    static void glMemoryBarrierEXT (GLbitfield barriers);
    static void glStencilClearTagEXT (GLsizei stencilTagBits, GLuint stencilClearTag);
    static void glActiveStencilFaceEXT (GLenum face);
    static void glTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
    static void glTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
    static void glTexImage3DEXT (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
    static void glTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
    static void glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
    static void glTexBufferEXT (GLenum target, GLenum internalformat, GLuint buffer);
    static void glTexParameterIivEXT (GLenum target, GLenum pname, const GLint * params);
    static void glTexParameterIuivEXT (GLenum target, GLenum pname, const GLuint * params);
    static void glGetTexParameterIivEXT (GLenum target, GLenum pname, GLint * params);
    static void glGetTexParameterIuivEXT (GLenum target, GLenum pname, GLuint * params);
    static void glClearColorIiEXT (GLint red, GLint green, GLint blue, GLint alpha);
    static void glClearColorIuiEXT (GLuint red, GLuint green, GLuint blue, GLuint alpha);
    static GLboolean glAreTexturesResidentEXT (GLsizei n, const GLuint * textures, GLboolean * residences);
    static void glBindTextureEXT (GLenum target, GLuint texture);
    static void glDeleteTexturesEXT (GLsizei n, const GLuint * textures);
    static void glGenTexturesEXT (GLsizei n, GLuint * textures);
    static GLboolean glIsTextureEXT (GLuint texture);
    static void glPrioritizeTexturesEXT (GLsizei n, const GLuint * textures, const GLclampf * priorities);
    static void glTextureNormalEXT (GLenum mode);
    static void glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64 * params);
    static void glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64 * params);
    static void glBeginTransformFeedbackEXT (GLenum primitiveMode);
    static void glEndTransformFeedbackEXT ();
    static void glBindBufferRangeEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    static void glBindBufferOffsetEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
    static void glBindBufferBaseEXT (GLenum target, GLuint index, GLuint buffer);
    static void glTransformFeedbackVaryingsEXT (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
    static void glGetTransformFeedbackVaryingEXT (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
    static void glArrayElementEXT (GLint i);
    static void glColorPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
    static void glDrawArraysEXT (GLenum mode, GLint first, GLsizei count);
    static void glEdgeFlagPointerEXT (GLsizei stride, GLsizei count, const GLboolean * pointer);
    static void glGetPointervEXT (GLenum pname, void ** params);
    static void glIndexPointerEXT (GLenum type, GLsizei stride, GLsizei count, const void * pointer);
    static void glNormalPointerEXT (GLenum type, GLsizei stride, GLsizei count, const void * pointer);
    static void glTexCoordPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
    static void glVertexPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
    static void glVertexAttribL1dEXT (GLuint index, GLdouble x);
    static void glVertexAttribL2dEXT (GLuint index, GLdouble x, GLdouble y);
    static void glVertexAttribL3dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z);
    static void glVertexAttribL4dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glVertexAttribL1dvEXT (GLuint index, const GLdouble * v);
    static void glVertexAttribL2dvEXT (GLuint index, const GLdouble * v);
    static void glVertexAttribL3dvEXT (GLuint index, const GLdouble * v);
    static void glVertexAttribL4dvEXT (GLuint index, const GLdouble * v);
    static void glVertexAttribLPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
    static void glGetVertexAttribLdvEXT (GLuint index, GLenum pname, GLdouble * params);
    static void glBeginVertexShaderEXT ();
    static void glEndVertexShaderEXT ();
    static void glBindVertexShaderEXT (GLuint id);
    static GLuint glGenVertexShadersEXT (GLuint range);
    static void glDeleteVertexShaderEXT (GLuint id);
    static void glShaderOp1EXT (GLenum op, GLuint res, GLuint arg1);
    static void glShaderOp2EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2);
    static void glShaderOp3EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
    static void glSwizzleEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
    static void glWriteMaskEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
    static void glInsertComponentEXT (GLuint res, GLuint src, GLuint num);
    static void glExtractComponentEXT (GLuint res, GLuint src, GLuint num);
    static GLuint glGenSymbolsEXT (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
    static void glSetInvariantEXT (GLuint id, GLenum type, const void * addr);
    static void glSetLocalConstantEXT (GLuint id, GLenum type, const void * addr);
    static void glVariantbvEXT (GLuint id, const GLbyte * addr);
    static void glVariantsvEXT (GLuint id, const GLshort * addr);
    static void glVariantivEXT (GLuint id, const GLint * addr);
    static void glVariantfvEXT (GLuint id, const GLfloat * addr);
    static void glVariantdvEXT (GLuint id, const GLdouble * addr);
    static void glVariantubvEXT (GLuint id, const GLubyte * addr);
    static void glVariantusvEXT (GLuint id, const GLushort * addr);
    static void glVariantuivEXT (GLuint id, const GLuint * addr);
    static void glVariantPointerEXT (GLuint id, GLenum type, GLuint stride, const void * addr);
    static void glEnableVariantClientStateEXT (GLuint id);
    static void glDisableVariantClientStateEXT (GLuint id);
    static GLuint glBindLightParameterEXT (GLenum light, GLenum value);
    static GLuint glBindMaterialParameterEXT (GLenum face, GLenum value);
    static GLuint glBindTexGenParameterEXT (GLenum unit, GLenum coord, GLenum value);
    static GLuint glBindTextureUnitParameterEXT (GLenum unit, GLenum value);
    static GLuint glBindParameterEXT (GLenum value);
    static GLboolean glIsVariantEnabledEXT (GLuint id, GLenum cap);
    static void glGetVariantBooleanvEXT (GLuint id, GLenum value, GLboolean * data);
    static void glGetVariantIntegervEXT (GLuint id, GLenum value, GLint * data);
    static void glGetVariantFloatvEXT (GLuint id, GLenum value, GLfloat * data);
    static void glGetVariantPointervEXT (GLuint id, GLenum value, void ** data);
    static void glGetInvariantBooleanvEXT (GLuint id, GLenum value, GLboolean * data);
    static void glGetInvariantIntegervEXT (GLuint id, GLenum value, GLint * data);
    static void glGetInvariantFloatvEXT (GLuint id, GLenum value, GLfloat * data);
    static void glGetLocalConstantBooleanvEXT (GLuint id, GLenum value, GLboolean * data);
    static void glGetLocalConstantIntegervEXT (GLuint id, GLenum value, GLint * data);
    static void glGetLocalConstantFloatvEXT (GLuint id, GLenum value, GLfloat * data);
    static void glVertexWeightfEXT (GLfloat weight);
    static void glVertexWeightfvEXT (const GLfloat * weight);
    static void glVertexWeightPointerEXT (GLint size, GLenum type, GLsizei stride, const void * pointer);
    static GLsync glImportSyncEXT (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
    static void glFrameTerminatorGREMEDY ();
    static void glStringMarkerGREMEDY (GLsizei len, const void * string);
    static void glImageTransformParameteriHP (GLenum target, GLenum pname, GLint param);
    static void glImageTransformParameterfHP (GLenum target, GLenum pname, GLfloat param);
    static void glImageTransformParameterivHP (GLenum target, GLenum pname, const GLint * params);
    static void glImageTransformParameterfvHP (GLenum target, GLenum pname, const GLfloat * params);
    static void glGetImageTransformParameterivHP (GLenum target, GLenum pname, GLint * params);
    static void glGetImageTransformParameterfvHP (GLenum target, GLenum pname, GLfloat * params);
    static void glMultiModeDrawArraysIBM (const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride);
    static void glMultiModeDrawElementsIBM (const GLenum * mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, GLint modestride);
    static void glFlushStaticDataIBM (GLenum target);
    static void glColorPointerListIBM (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
    static void glSecondaryColorPointerListIBM (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
    static void glEdgeFlagPointerListIBM (GLint stride, const GLboolean ** pointer, GLint ptrstride);
    static void glFogCoordPointerListIBM (GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
    static void glIndexPointerListIBM (GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
    static void glNormalPointerListIBM (GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
    static void glTexCoordPointerListIBM (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
    static void glVertexPointerListIBM (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
    static void glBlendFuncSeparateINGR (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
    static void glSyncTextureINTEL (GLuint texture);
    static void glUnmapTexture2DINTEL (GLuint texture, GLint level);
    static void * glMapTexture2DINTEL (GLuint texture, GLint level, GLbitfield access, GLint * stride, GLenum * layout);
    static void glVertexPointervINTEL (GLint size, GLenum type, const void ** pointer);
    static void glNormalPointervINTEL (GLenum type, const void ** pointer);
    static void glColorPointervINTEL (GLint size, GLenum type, const void ** pointer);
    static void glTexCoordPointervINTEL (GLint size, GLenum type, const void ** pointer);
    static void glBeginPerfQueryINTEL (GLuint queryHandle);
    static void glCreatePerfQueryINTEL (GLuint queryId, GLuint * queryHandle);
    static void glDeletePerfQueryINTEL (GLuint queryHandle);
    static void glEndPerfQueryINTEL (GLuint queryHandle);
    static void glGetFirstPerfQueryIdINTEL (GLuint * queryId);
    static void glGetNextPerfQueryIdINTEL (GLuint queryId, GLuint * nextQueryId);
    static void glGetPerfCounterInfoINTEL (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue);
    static void glGetPerfQueryDataINTEL (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid * data, GLuint * bytesWritten);
    static void glGetPerfQueryIdByNameINTEL (GLchar * queryName, GLuint * queryId);
    static void glGetPerfQueryInfoINTEL (GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask);
    static void glBlendBarrierKHR ();
    static void glResizeBuffersMESA ();
    static void glWindowPos2dMESA (GLdouble x, GLdouble y);
    static void glWindowPos2dvMESA (const GLdouble * v);
    static void glWindowPos2fMESA (GLfloat x, GLfloat y);
    static void glWindowPos2fvMESA (const GLfloat * v);
    static void glWindowPos2iMESA (GLint x, GLint y);
    static void glWindowPos2ivMESA (const GLint * v);
    static void glWindowPos2sMESA (GLshort x, GLshort y);
    static void glWindowPos2svMESA (const GLshort * v);
    static void glWindowPos3dMESA (GLdouble x, GLdouble y, GLdouble z);
    static void glWindowPos3dvMESA (const GLdouble * v);
    static void glWindowPos3fMESA (GLfloat x, GLfloat y, GLfloat z);
    static void glWindowPos3fvMESA (const GLfloat * v);
    static void glWindowPos3iMESA (GLint x, GLint y, GLint z);
    static void glWindowPos3ivMESA (const GLint * v);
    static void glWindowPos3sMESA (GLshort x, GLshort y, GLshort z);
    static void glWindowPos3svMESA (const GLshort * v);
    static void glWindowPos4dMESA (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glWindowPos4dvMESA (const GLdouble * v);
    static void glWindowPos4fMESA (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    static void glWindowPos4fvMESA (const GLfloat * v);
    static void glWindowPos4iMESA (GLint x, GLint y, GLint z, GLint w);
    static void glWindowPos4ivMESA (const GLint * v);
    static void glWindowPos4sMESA (GLshort x, GLshort y, GLshort z, GLshort w);
    static void glWindowPos4svMESA (const GLshort * v);
    static void glBeginConditionalRenderNVX (GLuint id);
    static void glEndConditionalRenderNVX ();
    static void glMultiDrawArraysIndirectBindlessNV (GLenum mode, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
    static void glMultiDrawElementsIndirectBindlessNV (GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
    static void glMultiDrawArraysIndirectBindlessCountNV (GLenum mode, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
    static void glMultiDrawElementsIndirectBindlessCountNV (GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
    static GLuint64 glGetTextureHandleNV (GLuint texture);
    static GLuint64 glGetTextureSamplerHandleNV (GLuint texture, GLuint sampler);
    static void glMakeTextureHandleResidentNV (GLuint64 handle);
    static void glMakeTextureHandleNonResidentNV (GLuint64 handle);
    static GLuint64 glGetImageHandleNV (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
    static void glMakeImageHandleResidentNV (GLuint64 handle, GLenum access);
    static void glMakeImageHandleNonResidentNV (GLuint64 handle);
    static void glUniformHandleui64NV (GLint location, GLuint64 value);
    static void glUniformHandleui64vNV (GLint location, GLsizei count, const GLuint64 * value);
    static void glProgramUniformHandleui64NV (GLuint program, GLint location, GLuint64 value);
    static void glProgramUniformHandleui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64 * values);
    static GLboolean glIsTextureHandleResidentNV (GLuint64 handle);
    static GLboolean glIsImageHandleResidentNV (GLuint64 handle);
    static void glBlendParameteriNV (GLenum pname, GLint value);
    static void glBlendBarrierNV ();
    static void glCreateStatesNV (GLsizei n, GLuint * states);
    static void glDeleteStatesNV (GLsizei n, const GLuint * states);
    static GLboolean glIsStateNV (GLuint state);
    static void glStateCaptureNV (GLuint state, GLenum mode);
    static GLuint glGetCommandHeaderNV (GLenum tokenID, GLuint size);
    static GLushort glGetStageIndexNV (GLenum shadertype);
    static void glDrawCommandsNV (GLenum primitiveMode, GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, GLuint count);
    static void glDrawCommandsAddressNV (GLenum primitiveMode, const GLuint64 * indirects, const GLsizei * sizes, GLuint count);
    static void glDrawCommandsStatesNV (GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
    static void glDrawCommandsStatesAddressNV (const GLuint64 * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
    static void glCreateCommandListsNV (GLsizei n, GLuint * lists);
    static void glDeleteCommandListsNV (GLsizei n, const GLuint * lists);
    static GLboolean glIsCommandListNV (GLuint list);
    static void glListDrawCommandsStatesClientNV (GLuint list, GLuint segment, const void ** indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
    static void glCommandListSegmentsNV (GLuint list, GLuint segments);
    static void glCompileCommandListNV (GLuint list);
    static void glCallCommandListNV (GLuint list);
    static void glBeginConditionalRenderNV (GLuint id, GLenum mode);
    static void glEndConditionalRenderNV ();
    static void glSubpixelPrecisionBiasNV (GLuint xbits, GLuint ybits);
    static void glCopyImageSubDataNV (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
    static void glDepthRangedNV (GLdouble zNear, GLdouble zFar);
    static void glClearDepthdNV (GLdouble depth);
    static void glDepthBoundsdNV (GLdouble zmin, GLdouble zmax);
    static void glDrawTextureNV (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
    static void glMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void * points);
    static void glMapParameterivNV (GLenum target, GLenum pname, const GLint * params);
    static void glMapParameterfvNV (GLenum target, GLenum pname, const GLfloat * params);
    static void glGetMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void * points);
    static void glGetMapParameterivNV (GLenum target, GLenum pname, GLint * params);
    static void glGetMapParameterfvNV (GLenum target, GLenum pname, GLfloat * params);
    static void glGetMapAttribParameterivNV (GLenum target, GLuint index, GLenum pname, GLint * params);
    static void glGetMapAttribParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat * params);
    static void glEvalMapsNV (GLenum target, GLenum mode);
    static void glGetMultisamplefvNV (GLenum pname, GLuint index, GLfloat * val);
    static void glSampleMaskIndexedNV (GLuint index, GLbitfield mask);
    static void glTexRenderbufferNV (GLenum target, GLuint renderbuffer);
    static void glDeleteFencesNV (GLsizei n, const GLuint * fences);
    static void glGenFencesNV (GLsizei n, GLuint * fences);
    static GLboolean glIsFenceNV (GLuint fence);
    static GLboolean glTestFenceNV (GLuint fence);
    static void glGetFenceivNV (GLuint fence, GLenum pname, GLint * params);
    static void glFinishFenceNV (GLuint fence);
    static void glSetFenceNV (GLuint fence, GLenum condition);
    static void glFragmentCoverageColorNV (GLuint color);
    static void glProgramNamedParameter4fNV (GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    static void glProgramNamedParameter4fvNV (GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
    static void glProgramNamedParameter4dNV (GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glProgramNamedParameter4dvNV (GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
    static void glGetProgramNamedParameterfvNV (GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);
    static void glGetProgramNamedParameterdvNV (GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);
    static void glCoverageModulationTableNV (GLsizei n, const GLfloat * v);
    static void glGetCoverageModulationTableNV (GLsizei bufsize, GLfloat * v);
    static void glCoverageModulationNV (GLenum components);
    static void glRenderbufferStorageMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
    static void glProgramVertexLimitNV (GLenum target, GLint limit);
    static void glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, GLint level);
    static void glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
    static void glProgramLocalParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
    static void glProgramLocalParameterI4ivNV (GLenum target, GLuint index, const GLint * params);
    static void glProgramLocalParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint * params);
    static void glProgramLocalParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    static void glProgramLocalParameterI4uivNV (GLenum target, GLuint index, const GLuint * params);
    static void glProgramLocalParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint * params);
    static void glProgramEnvParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
    static void glProgramEnvParameterI4ivNV (GLenum target, GLuint index, const GLint * params);
    static void glProgramEnvParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint * params);
    static void glProgramEnvParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    static void glProgramEnvParameterI4uivNV (GLenum target, GLuint index, const GLuint * params);
    static void glProgramEnvParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint * params);
    static void glGetProgramLocalParameterIivNV (GLenum target, GLuint index, GLint * params);
    static void glGetProgramLocalParameterIuivNV (GLenum target, GLuint index, GLuint * params);
    static void glGetProgramEnvParameterIivNV (GLenum target, GLuint index, GLint * params);
    static void glGetProgramEnvParameterIuivNV (GLenum target, GLuint index, GLuint * params);
    static void glProgramSubroutineParametersuivNV (GLenum target, GLsizei count, const GLuint * params);
    static void glGetProgramSubroutineParameteruivNV (GLenum target, GLuint index, GLuint * param);
    static void glVertex2hNV (GLhalfNV x, GLhalfNV y);
    static void glVertex2hvNV (const GLhalfNV * v);
    static void glVertex3hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z);
    static void glVertex3hvNV (const GLhalfNV * v);
    static void glVertex4hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
    static void glVertex4hvNV (const GLhalfNV * v);
    static void glNormal3hNV (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
    static void glNormal3hvNV (const GLhalfNV * v);
    static void glColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
    static void glColor3hvNV (const GLhalfNV * v);
    static void glColor4hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
    static void glColor4hvNV (const GLhalfNV * v);
    static void glTexCoord1hNV (GLhalfNV s);
    static void glTexCoord1hvNV (const GLhalfNV * v);
    static void glTexCoord2hNV (GLhalfNV s, GLhalfNV t);
    static void glTexCoord2hvNV (const GLhalfNV * v);
    static void glTexCoord3hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r);
    static void glTexCoord3hvNV (const GLhalfNV * v);
    static void glTexCoord4hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
    static void glTexCoord4hvNV (const GLhalfNV * v);
    static void glMultiTexCoord1hNV (GLenum target, GLhalfNV s);
    static void glMultiTexCoord1hvNV (GLenum target, const GLhalfNV * v);
    static void glMultiTexCoord2hNV (GLenum target, GLhalfNV s, GLhalfNV t);
    static void glMultiTexCoord2hvNV (GLenum target, const GLhalfNV * v);
    static void glMultiTexCoord3hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
    static void glMultiTexCoord3hvNV (GLenum target, const GLhalfNV * v);
    static void glMultiTexCoord4hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
    static void glMultiTexCoord4hvNV (GLenum target, const GLhalfNV * v);
    static void glFogCoordhNV (GLhalfNV fog);
    static void glFogCoordhvNV (const GLhalfNV * fog);
    static void glSecondaryColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
    static void glSecondaryColor3hvNV (const GLhalfNV * v);
    static void glVertexWeighthNV (GLhalfNV weight);
    static void glVertexWeighthvNV (const GLhalfNV * weight);
    static void glVertexAttrib1hNV (GLuint index, GLhalfNV x);
    static void glVertexAttrib1hvNV (GLuint index, const GLhalfNV * v);
    static void glVertexAttrib2hNV (GLuint index, GLhalfNV x, GLhalfNV y);
    static void glVertexAttrib2hvNV (GLuint index, const GLhalfNV * v);
    static void glVertexAttrib3hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
    static void glVertexAttrib3hvNV (GLuint index, const GLhalfNV * v);
    static void glVertexAttrib4hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
    static void glVertexAttrib4hvNV (GLuint index, const GLhalfNV * v);
    static void glVertexAttribs1hvNV (GLuint index, GLsizei n, const GLhalfNV * v);
    static void glVertexAttribs2hvNV (GLuint index, GLsizei n, const GLhalfNV * v);
    static void glVertexAttribs3hvNV (GLuint index, GLsizei n, const GLhalfNV * v);
    static void glVertexAttribs4hvNV (GLuint index, GLsizei n, const GLhalfNV * v);
    static void glGetInternalformatSampleivNV (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint * params);
    static void glGenOcclusionQueriesNV (GLsizei n, GLuint * ids);
    static void glDeleteOcclusionQueriesNV (GLsizei n, const GLuint * ids);
    static GLboolean glIsOcclusionQueryNV (GLuint id);
    static void glBeginOcclusionQueryNV (GLuint id);
    static void glEndOcclusionQueryNV ();
    static void glGetOcclusionQueryivNV (GLuint id, GLenum pname, GLint * params);
    static void glGetOcclusionQueryuivNV (GLuint id, GLenum pname, GLuint * params);
    static void glProgramBufferParametersfvNV (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat * params);
    static void glProgramBufferParametersIivNV (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint * params);
    static void glProgramBufferParametersIuivNV (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint * params);
    static GLuint glGenPathsNV (GLsizei range);
    static void glDeletePathsNV (GLuint path, GLsizei range);
    static GLboolean glIsPathNV (GLuint path);
    static void glPathCommandsNV (GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
    static void glPathCoordsNV (GLuint path, GLsizei numCoords, GLenum coordType, const void * coords);
    static void glPathSubCommandsNV (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
    static void glPathSubCoordsNV (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords);
    static void glPathStringNV (GLuint path, GLenum format, GLsizei length, const void * pathString);
    static void glPathGlyphsNV (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
    static void glPathGlyphRangeNV (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
    static void glWeightPathsNV (GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights);
    static void glCopyPathNV (GLuint resultPath, GLuint srcPath);
    static void glInterpolatePathsNV (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
    static void glTransformPathNV (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues);
    static void glPathParameterivNV (GLuint path, GLenum pname, const GLint * value);
    static void glPathParameteriNV (GLuint path, GLenum pname, GLint value);
    static void glPathParameterfvNV (GLuint path, GLenum pname, const GLfloat * value);
    static void glPathParameterfNV (GLuint path, GLenum pname, GLfloat value);
    static void glPathDashArrayNV (GLuint path, GLsizei dashCount, const GLfloat * dashArray);
    static void glPathStencilFuncNV (GLenum func, GLint ref, GLuint mask);
    static void glPathStencilDepthOffsetNV (GLfloat factor, GLfloat units);
    static void glStencilFillPathNV (GLuint path, GLenum fillMode, GLuint mask);
    static void glStencilStrokePathNV (GLuint path, GLint reference, GLuint mask);
    static void glStencilFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues);
    static void glStencilStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues);
    static void glPathCoverDepthFuncNV (GLenum func);
    static void glCoverFillPathNV (GLuint path, GLenum coverMode);
    static void glCoverStrokePathNV (GLuint path, GLenum coverMode);
    static void glCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
    static void glCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
    static void glGetPathParameterivNV (GLuint path, GLenum pname, GLint * value);
    static void glGetPathParameterfvNV (GLuint path, GLenum pname, GLfloat * value);
    static void glGetPathCommandsNV (GLuint path, GLubyte * commands);
    static void glGetPathCoordsNV (GLuint path, GLfloat * coords);
    static void glGetPathDashArrayNV (GLuint path, GLfloat * dashArray);
    static void glGetPathMetricsNV (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics);
    static void glGetPathMetricRangeNV (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics);
    static void glGetPathSpacingNV (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing);
    static GLboolean glIsPointInFillPathNV (GLuint path, GLuint mask, GLfloat x, GLfloat y);
    static GLboolean glIsPointInStrokePathNV (GLuint path, GLfloat x, GLfloat y);
    static GLfloat glGetPathLengthNV (GLuint path, GLsizei startSegment, GLsizei numSegments);
    static GLboolean glPointAlongPathNV (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY);
    static void glMatrixLoad3x2fNV (GLenum matrixMode, const GLfloat * m);
    static void glMatrixLoad3x3fNV (GLenum matrixMode, const GLfloat * m);
    static void glMatrixLoadTranspose3x3fNV (GLenum matrixMode, const GLfloat * m);
    static void glMatrixMult3x2fNV (GLenum matrixMode, const GLfloat * m);
    static void glMatrixMult3x3fNV (GLenum matrixMode, const GLfloat * m);
    static void glMatrixMultTranspose3x3fNV (GLenum matrixMode, const GLfloat * m);
    static void glStencilThenCoverFillPathNV (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
    static void glStencilThenCoverStrokePathNV (GLuint path, GLint reference, GLuint mask, GLenum coverMode);
    static void glStencilThenCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
    static void glStencilThenCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
    static GLenum glPathGlyphIndexRangeNV (GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
    static GLenum glPathGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
    static GLenum glPathMemoryGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void * fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
    static void glProgramPathFragmentInputGenNV (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat * coeffs);
    static void glGetProgramResourcefvNV (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLfloat * params);
    static void glPathColorGenNV (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat * coeffs);
    static void glPathTexGenNV (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat * coeffs);
    static void glPathFogGenNV (GLenum genMode);
    static void glGetPathColorGenivNV (GLenum color, GLenum pname, GLint * value);
    static void glGetPathColorGenfvNV (GLenum color, GLenum pname, GLfloat * value);
    static void glGetPathTexGenivNV (GLenum texCoordSet, GLenum pname, GLint * value);
    static void glGetPathTexGenfvNV (GLenum texCoordSet, GLenum pname, GLfloat * value);
    static void glPixelDataRangeNV (GLenum target, GLsizei length, const void * pointer);
    static void glFlushPixelDataRangeNV (GLenum target);
    static void glPointParameteriNV (GLenum pname, GLint param);
    static void glPointParameterivNV (GLenum pname, const GLint * params);
    static void glPresentFrameKeyedNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
    static void glPresentFrameDualFillNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
    static void glGetVideoivNV (GLuint video_slot, GLenum pname, GLint * params);
    static void glGetVideouivNV (GLuint video_slot, GLenum pname, GLuint * params);
    static void glGetVideoi64vNV (GLuint video_slot, GLenum pname, GLint64EXT * params);
    static void glGetVideoui64vNV (GLuint video_slot, GLenum pname, GLuint64EXT * params);
    static void glPrimitiveRestartNV ();
    static void glPrimitiveRestartIndexNV (GLuint index);
    static void glCombinerParameterfvNV (GLenum pname, const GLfloat * params);
    static void glCombinerParameterfNV (GLenum pname, GLfloat param);
    static void glCombinerParameterivNV (GLenum pname, const GLint * params);
    static void glCombinerParameteriNV (GLenum pname, GLint param);
    static void glCombinerInputNV (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
    static void glCombinerOutputNV (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
    static void glFinalCombinerInputNV (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
    static void glGetCombinerInputParameterfvNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);
    static void glGetCombinerInputParameterivNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);
    static void glGetCombinerOutputParameterfvNV (GLenum stage, GLenum portion, GLenum pname, GLfloat * params);
    static void glGetCombinerOutputParameterivNV (GLenum stage, GLenum portion, GLenum pname, GLint * params);
    static void glGetFinalCombinerInputParameterfvNV (GLenum variable, GLenum pname, GLfloat * params);
    static void glGetFinalCombinerInputParameterivNV (GLenum variable, GLenum pname, GLint * params);
    static void glCombinerStageParameterfvNV (GLenum stage, GLenum pname, const GLfloat * params);
    static void glGetCombinerStageParameterfvNV (GLenum stage, GLenum pname, GLfloat * params);
    static void glFramebufferSampleLocationsfvNV (GLenum target, GLuint start, GLsizei count, const GLfloat * v);
    static void glNamedFramebufferSampleLocationsfvNV (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
    static void glResolveDepthValuesNV ();
    static void glMakeBufferResidentNV (GLenum target, GLenum access);
    static void glMakeBufferNonResidentNV (GLenum target);
    static GLboolean glIsBufferResidentNV (GLenum target);
    static void glMakeNamedBufferResidentNV (GLuint buffer, GLenum access);
    static void glMakeNamedBufferNonResidentNV (GLuint buffer);
    static GLboolean glIsNamedBufferResidentNV (GLuint buffer);
    static void glGetBufferParameterui64vNV (GLenum target, GLenum pname, GLuint64EXT * params);
    static void glGetNamedBufferParameterui64vNV (GLuint buffer, GLenum pname, GLuint64EXT * params);
    static void glGetIntegerui64vNV (GLenum value, GLuint64EXT * result);
    static void glUniformui64NV (GLint location, GLuint64EXT value);
    static void glUniformui64vNV (GLint location, GLsizei count, const GLuint64EXT * value);
    static void glProgramUniformui64NV (GLuint program, GLint location, GLuint64EXT value);
    static void glProgramUniformui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
    static void glTextureBarrierNV ();
    static void glTexImage2DMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
    static void glTexImage3DMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
    static void glTextureImage2DMultisampleNV (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
    static void glTextureImage3DMultisampleNV (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
    static void glTextureImage2DMultisampleCoverageNV (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
    static void glTextureImage3DMultisampleCoverageNV (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
    static void glBeginTransformFeedbackNV (GLenum primitiveMode);
    static void glEndTransformFeedbackNV ();
    static void glTransformFeedbackAttribsNV (GLsizei count, const GLint * attribs, GLenum bufferMode);
    static void glBindBufferRangeNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    static void glBindBufferOffsetNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
    static void glBindBufferBaseNV (GLenum target, GLuint index, GLuint buffer);
    static void glTransformFeedbackVaryingsNV (GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode);
    static void glActiveVaryingNV (GLuint program, const GLchar * name);
    static GLint glGetVaryingLocationNV (GLuint program, const GLchar * name);
    static void glGetActiveVaryingNV (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
    static void glGetTransformFeedbackVaryingNV (GLuint program, GLuint index, GLint * location);
    static void glTransformFeedbackStreamAttribsNV (GLsizei count, const GLint * attribs, GLsizei nbuffers, const GLint * bufstreams, GLenum bufferMode);
    static void glBindTransformFeedbackNV (GLenum target, GLuint id);
    static void glDeleteTransformFeedbacksNV (GLsizei n, const GLuint * ids);
    static void glGenTransformFeedbacksNV (GLsizei n, GLuint * ids);
    static GLboolean glIsTransformFeedbackNV (GLuint id);
    static void glPauseTransformFeedbackNV ();
    static void glResumeTransformFeedbackNV ();
    static void glDrawTransformFeedbackNV (GLenum mode, GLuint id);
    static void glVDPAUInitNV (const void * vdpDevice, const void * getProcAddress);
    static void glVDPAUFiniNV ();
    static GLvdpauSurfaceNV glVDPAURegisterVideoSurfaceNV (const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
    static GLvdpauSurfaceNV glVDPAURegisterOutputSurfaceNV (const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
    static GLboolean glVDPAUIsSurfaceNV (GLvdpauSurfaceNV surface);
    static void glVDPAUUnregisterSurfaceNV (GLvdpauSurfaceNV surface);
    static void glVDPAUGetSurfaceivNV (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
    static void glVDPAUSurfaceAccessNV (GLvdpauSurfaceNV surface, GLenum access);
    static void glVDPAUMapSurfacesNV (GLsizei numSurfaces, const GLvdpauSurfaceNV * surfaces);
    static void glVDPAUUnmapSurfacesNV (GLsizei numSurface, const GLvdpauSurfaceNV * surfaces);
    static void glFlushVertexArrayRangeNV ();
    static void glVertexArrayRangeNV (GLsizei length, const void * pointer);
    static void glVertexAttribL1i64NV (GLuint index, GLint64EXT x);
    static void glVertexAttribL2i64NV (GLuint index, GLint64EXT x, GLint64EXT y);
    static void glVertexAttribL3i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
    static void glVertexAttribL4i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
    static void glVertexAttribL1i64vNV (GLuint index, const GLint64EXT * v);
    static void glVertexAttribL2i64vNV (GLuint index, const GLint64EXT * v);
    static void glVertexAttribL3i64vNV (GLuint index, const GLint64EXT * v);
    static void glVertexAttribL4i64vNV (GLuint index, const GLint64EXT * v);
    static void glVertexAttribL1ui64NV (GLuint index, GLuint64EXT x);
    static void glVertexAttribL2ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y);
    static void glVertexAttribL3ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
    static void glVertexAttribL4ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
    static void glVertexAttribL1ui64vNV (GLuint index, const GLuint64EXT * v);
    static void glVertexAttribL2ui64vNV (GLuint index, const GLuint64EXT * v);
    static void glVertexAttribL3ui64vNV (GLuint index, const GLuint64EXT * v);
    static void glVertexAttribL4ui64vNV (GLuint index, const GLuint64EXT * v);
    static void glGetVertexAttribLi64vNV (GLuint index, GLenum pname, GLint64EXT * params);
    static void glGetVertexAttribLui64vNV (GLuint index, GLenum pname, GLuint64EXT * params);
    static void glVertexAttribLFormatNV (GLuint index, GLint size, GLenum type, GLsizei stride);
    static void glBufferAddressRangeNV (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
    static void glVertexFormatNV (GLint size, GLenum type, GLsizei stride);
    static void glNormalFormatNV (GLenum type, GLsizei stride);
    static void glColorFormatNV (GLint size, GLenum type, GLsizei stride);
    static void glIndexFormatNV (GLenum type, GLsizei stride);
    static void glTexCoordFormatNV (GLint size, GLenum type, GLsizei stride);
    static void glEdgeFlagFormatNV (GLsizei stride);
    static void glSecondaryColorFormatNV (GLint size, GLenum type, GLsizei stride);
    static void glFogCoordFormatNV (GLenum type, GLsizei stride);
    static void glVertexAttribFormatNV (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
    static void glVertexAttribIFormatNV (GLuint index, GLint size, GLenum type, GLsizei stride);
    static void glGetIntegerui64i_vNV (GLenum value, GLuint index, GLuint64EXT * result);
    static GLboolean glAreProgramsResidentNV (GLsizei n, const GLuint * programs, GLboolean * residences);
    static void glBindProgramNV (GLenum target, GLuint id);
    static void glDeleteProgramsNV (GLsizei n, const GLuint * programs);
    static void glExecuteProgramNV (GLenum target, GLuint id, const GLfloat * params);
    static void glGenProgramsNV (GLsizei n, GLuint * programs);
    static void glGetProgramParameterdvNV (GLenum target, GLuint index, GLenum pname, GLdouble * params);
    static void glGetProgramParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat * params);
    static void glGetProgramivNV (GLuint id, GLenum pname, GLint * params);
    static void glGetProgramStringNV (GLuint id, GLenum pname, GLubyte * program);
    static void glGetTrackMatrixivNV (GLenum target, GLuint address, GLenum pname, GLint * params);
    static void glGetVertexAttribdvNV (GLuint index, GLenum pname, GLdouble * params);
    static void glGetVertexAttribfvNV (GLuint index, GLenum pname, GLfloat * params);
    static void glGetVertexAttribivNV (GLuint index, GLenum pname, GLint * params);
    static void glGetVertexAttribPointervNV (GLuint index, GLenum pname, void ** pointer);
    static GLboolean glIsProgramNV (GLuint id);
    static void glLoadProgramNV (GLenum target, GLuint id, GLsizei len, const GLubyte * program);
    static void glProgramParameter4dNV (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glProgramParameter4dvNV (GLenum target, GLuint index, const GLdouble * v);
    static void glProgramParameter4fNV (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    static void glProgramParameter4fvNV (GLenum target, GLuint index, const GLfloat * v);
    static void glProgramParameters4dvNV (GLenum target, GLuint index, GLsizei count, const GLdouble * v);
    static void glProgramParameters4fvNV (GLenum target, GLuint index, GLsizei count, const GLfloat * v);
    static void glRequestResidentProgramsNV (GLsizei n, const GLuint * programs);
    static void glTrackMatrixNV (GLenum target, GLuint address, GLenum matrix, GLenum transform);
    static void glVertexAttribPointerNV (GLuint index, GLint fsize, GLenum type, GLsizei stride, const void * pointer);
    static void glVertexAttrib1dNV (GLuint index, GLdouble x);
    static void glVertexAttrib1dvNV (GLuint index, const GLdouble * v);
    static void glVertexAttrib1fNV (GLuint index, GLfloat x);
    static void glVertexAttrib1fvNV (GLuint index, const GLfloat * v);
    static void glVertexAttrib1sNV (GLuint index, GLshort x);
    static void glVertexAttrib1svNV (GLuint index, const GLshort * v);
    static void glVertexAttrib2dNV (GLuint index, GLdouble x, GLdouble y);
    static void glVertexAttrib2dvNV (GLuint index, const GLdouble * v);
    static void glVertexAttrib2fNV (GLuint index, GLfloat x, GLfloat y);
    static void glVertexAttrib2fvNV (GLuint index, const GLfloat * v);
    static void glVertexAttrib2sNV (GLuint index, GLshort x, GLshort y);
    static void glVertexAttrib2svNV (GLuint index, const GLshort * v);
    static void glVertexAttrib3dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z);
    static void glVertexAttrib3dvNV (GLuint index, const GLdouble * v);
    static void glVertexAttrib3fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z);
    static void glVertexAttrib3fvNV (GLuint index, const GLfloat * v);
    static void glVertexAttrib3sNV (GLuint index, GLshort x, GLshort y, GLshort z);
    static void glVertexAttrib3svNV (GLuint index, const GLshort * v);
    static void glVertexAttrib4dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    static void glVertexAttrib4dvNV (GLuint index, const GLdouble * v);
    static void glVertexAttrib4fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    static void glVertexAttrib4fvNV (GLuint index, const GLfloat * v);
    static void glVertexAttrib4sNV (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
    static void glVertexAttrib4svNV (GLuint index, const GLshort * v);
    static void glVertexAttrib4ubNV (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
    static void glVertexAttrib4ubvNV (GLuint index, const GLubyte * v);
    static void glVertexAttribs1dvNV (GLuint index, GLsizei count, const GLdouble * v);
    static void glVertexAttribs1fvNV (GLuint index, GLsizei count, const GLfloat * v);
    static void glVertexAttribs1svNV (GLuint index, GLsizei count, const GLshort * v);
    static void glVertexAttribs2dvNV (GLuint index, GLsizei count, const GLdouble * v);
    static void glVertexAttribs2fvNV (GLuint index, GLsizei count, const GLfloat * v);
    static void glVertexAttribs2svNV (GLuint index, GLsizei count, const GLshort * v);
    static void glVertexAttribs3dvNV (GLuint index, GLsizei count, const GLdouble * v);
    static void glVertexAttribs3fvNV (GLuint index, GLsizei count, const GLfloat * v);
    static void glVertexAttribs3svNV (GLuint index, GLsizei count, const GLshort * v);
    static void glVertexAttribs4dvNV (GLuint index, GLsizei count, const GLdouble * v);
    static void glVertexAttribs4fvNV (GLuint index, GLsizei count, const GLfloat * v);
    static void glVertexAttribs4svNV (GLuint index, GLsizei count, const GLshort * v);
    static void glVertexAttribs4ubvNV (GLuint index, GLsizei count, const GLubyte * v);
    static void glVertexAttribI1iEXT (GLuint index, GLint x);
    static void glVertexAttribI2iEXT (GLuint index, GLint x, GLint y);
    static void glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z);
    static void glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w);
    static void glVertexAttribI1uiEXT (GLuint index, GLuint x);
    static void glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y);
    static void glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z);
    static void glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    static void glVertexAttribI1ivEXT (GLuint index, const GLint * v);
    static void glVertexAttribI2ivEXT (GLuint index, const GLint * v);
    static void glVertexAttribI3ivEXT (GLuint index, const GLint * v);
    static void glVertexAttribI4ivEXT (GLuint index, const GLint * v);
    static void glVertexAttribI1uivEXT (GLuint index, const GLuint * v);
    static void glVertexAttribI2uivEXT (GLuint index, const GLuint * v);
    static void glVertexAttribI3uivEXT (GLuint index, const GLuint * v);
    static void glVertexAttribI4uivEXT (GLuint index, const GLuint * v);
    static void glVertexAttribI4bvEXT (GLuint index, const GLbyte * v);
    static void glVertexAttribI4svEXT (GLuint index, const GLshort * v);
    static void glVertexAttribI4ubvEXT (GLuint index, const GLubyte * v);
    static void glVertexAttribI4usvEXT (GLuint index, const GLushort * v);
    static void glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
    static void glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint * params);
    static void glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint * params);
    static void glBeginVideoCaptureNV (GLuint video_capture_slot);
    static void glBindVideoCaptureStreamBufferNV (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
    static void glBindVideoCaptureStreamTextureNV (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
    static void glEndVideoCaptureNV (GLuint video_capture_slot);
    static void glGetVideoCaptureivNV (GLuint video_capture_slot, GLenum pname, GLint * params);
    static void glGetVideoCaptureStreamivNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint * params);
    static void glGetVideoCaptureStreamfvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat * params);
    static void glGetVideoCaptureStreamdvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble * params);
    static GLenum glVideoCaptureNV (GLuint video_capture_slot, GLuint * sequence_num, GLuint64EXT * capture_time);
    static void glVideoCaptureStreamParameterivNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint * params);
    static void glVideoCaptureStreamParameterfvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat * params);
    static void glVideoCaptureStreamParameterdvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble * params);
    static void glMultiTexCoord1bOES (GLenum texture, GLbyte s);
    static void glMultiTexCoord1bvOES (GLenum texture, const GLbyte * coords);
    static void glMultiTexCoord2bOES (GLenum texture, GLbyte s, GLbyte t);
    static void glMultiTexCoord2bvOES (GLenum texture, const GLbyte * coords);
    static void glMultiTexCoord3bOES (GLenum texture, GLbyte s, GLbyte t, GLbyte r);
    static void glMultiTexCoord3bvOES (GLenum texture, const GLbyte * coords);
    static void glMultiTexCoord4bOES (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
    static void glMultiTexCoord4bvOES (GLenum texture, const GLbyte * coords);
    static void glTexCoord1bOES (GLbyte s);
    static void glTexCoord1bvOES (const GLbyte * coords);
    static void glTexCoord2bOES (GLbyte s, GLbyte t);
    static void glTexCoord2bvOES (const GLbyte * coords);
    static void glTexCoord3bOES (GLbyte s, GLbyte t, GLbyte r);
    static void glTexCoord3bvOES (const GLbyte * coords);
    static void glTexCoord4bOES (GLbyte s, GLbyte t, GLbyte r, GLbyte q);
    static void glTexCoord4bvOES (const GLbyte * coords);
    static void glVertex2bOES (GLbyte x, GLbyte y);
    static void glVertex2bvOES (const GLbyte * coords);
    static void glVertex3bOES (GLbyte x, GLbyte y, GLbyte z);
    static void glVertex3bvOES (const GLbyte * coords);
    static void glVertex4bOES (GLbyte x, GLbyte y, GLbyte z, GLbyte w);
    static void glVertex4bvOES (const GLbyte * coords);
    static void glAlphaFuncxOES (GLenum func, GLfixed ref);
    static void glClearColorxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
    static void glClearDepthxOES (GLfixed depth);
    static void glClipPlanexOES (GLenum plane, const GLfixed * equation);
    static void glColor4xOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
    static void glDepthRangexOES (GLfixed n, GLfixed f);
    static void glFogxOES (GLenum pname, GLfixed param);
    static void glFogxvOES (GLenum pname, const GLfixed * param);
    static void glFrustumxOES (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
    static void glGetClipPlanexOES (GLenum plane, GLfixed * equation);
    static void glGetFixedvOES (GLenum pname, GLfixed * params);
    static void glGetTexEnvxvOES (GLenum target, GLenum pname, GLfixed * params);
    static void glGetTexParameterxvOES (GLenum target, GLenum pname, GLfixed * params);
    static void glLightModelxOES (GLenum pname, GLfixed param);
    static void glLightModelxvOES (GLenum pname, const GLfixed * param);
    static void glLightxOES (GLenum light, GLenum pname, GLfixed param);
    static void glLightxvOES (GLenum light, GLenum pname, const GLfixed * params);
    static void glLineWidthxOES (GLfixed width);
    static void glLoadMatrixxOES (const GLfixed * m);
    static void glMaterialxOES (GLenum face, GLenum pname, GLfixed param);
    static void glMaterialxvOES (GLenum face, GLenum pname, const GLfixed * param);
    static void glMultMatrixxOES (const GLfixed * m);
    static void glMultiTexCoord4xOES (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
    static void glNormal3xOES (GLfixed nx, GLfixed ny, GLfixed nz);
    static void glOrthoxOES (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
    static void glPointParameterxvOES (GLenum pname, const GLfixed * params);
    static void glPointSizexOES (GLfixed size);
    static void glPolygonOffsetxOES (GLfixed factor, GLfixed units);
    static void glRotatexOES (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
    static void glScalexOES (GLfixed x, GLfixed y, GLfixed z);
    static void glTexEnvxOES (GLenum target, GLenum pname, GLfixed param);
    static void glTexEnvxvOES (GLenum target, GLenum pname, const GLfixed * params);
    static void glTexParameterxOES (GLenum target, GLenum pname, GLfixed param);
    static void glTexParameterxvOES (GLenum target, GLenum pname, const GLfixed * params);
    static void glTranslatexOES (GLfixed x, GLfixed y, GLfixed z);
    static void glAccumxOES (GLenum op, GLfixed value);
    static void glBitmapxOES (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte * bitmap);
    static void glBlendColorxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
    static void glClearAccumxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
    static void glColor3xOES (GLfixed red, GLfixed green, GLfixed blue);
    static void glColor3xvOES (const GLfixed * components);
    static void glColor4xvOES (const GLfixed * components);
    static void glConvolutionParameterxOES (GLenum target, GLenum pname, GLfixed param);
    static void glConvolutionParameterxvOES (GLenum target, GLenum pname, const GLfixed * params);
    static void glEvalCoord1xOES (GLfixed u);
    static void glEvalCoord1xvOES (const GLfixed * coords);
    static void glEvalCoord2xOES (GLfixed u, GLfixed v);
    static void glEvalCoord2xvOES (const GLfixed * coords);
    static void glFeedbackBufferxOES (GLsizei n, GLenum type, const GLfixed * buffer);
    static void glGetConvolutionParameterxvOES (GLenum target, GLenum pname, GLfixed * params);
    static void glGetHistogramParameterxvOES (GLenum target, GLenum pname, GLfixed * params);
    static void glGetLightxOES (GLenum light, GLenum pname, GLfixed * params);
    static void glGetMapxvOES (GLenum target, GLenum query, GLfixed * v);
    static void glGetMaterialxOES (GLenum face, GLenum pname, GLfixed param);
    static void glGetPixelMapxv (GLenum map, GLint size, GLfixed * values);
    static void glGetTexGenxvOES (GLenum coord, GLenum pname, GLfixed * params);
    static void glGetTexLevelParameterxvOES (GLenum target, GLint level, GLenum pname, GLfixed * params);
    static void glIndexxOES (GLfixed component);
    static void glIndexxvOES (const GLfixed * component);
    static void glLoadTransposeMatrixxOES (const GLfixed * m);
    static void glMap1xOES (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
    static void glMap2xOES (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
    static void glMapGrid1xOES (GLint n, GLfixed u1, GLfixed u2);
    static void glMapGrid2xOES (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
    static void glMultTransposeMatrixxOES (const GLfixed * m);
    static void glMultiTexCoord1xOES (GLenum texture, GLfixed s);
    static void glMultiTexCoord1xvOES (GLenum texture, const GLfixed * coords);
    static void glMultiTexCoord2xOES (GLenum texture, GLfixed s, GLfixed t);
    static void glMultiTexCoord2xvOES (GLenum texture, const GLfixed * coords);
    static void glMultiTexCoord3xOES (GLenum texture, GLfixed s, GLfixed t, GLfixed r);
    static void glMultiTexCoord3xvOES (GLenum texture, const GLfixed * coords);
    static void glMultiTexCoord4xvOES (GLenum texture, const GLfixed * coords);
    static void glNormal3xvOES (const GLfixed * coords);
    static void glPassThroughxOES (GLfixed token);
    static void glPixelMapx (GLenum map, GLint size, const GLfixed * values);
    static void glPixelStorex (GLenum pname, GLfixed param);
    static void glPixelTransferxOES (GLenum pname, GLfixed param);
    static void glPixelZoomxOES (GLfixed xfactor, GLfixed yfactor);
    static void glPrioritizeTexturesxOES (GLsizei n, const GLuint * textures, const GLfixed * priorities);
    static void glRasterPos2xOES (GLfixed x, GLfixed y);
    static void glRasterPos2xvOES (const GLfixed * coords);
    static void glRasterPos3xOES (GLfixed x, GLfixed y, GLfixed z);
    static void glRasterPos3xvOES (const GLfixed * coords);
    static void glRasterPos4xOES (GLfixed x, GLfixed y, GLfixed z, GLfixed w);
    static void glRasterPos4xvOES (const GLfixed * coords);
    static void glRectxOES (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
    static void glRectxvOES (const GLfixed * v1, const GLfixed * v2);
    static void glTexCoord1xOES (GLfixed s);
    static void glTexCoord1xvOES (const GLfixed * coords);
    static void glTexCoord2xOES (GLfixed s, GLfixed t);
    static void glTexCoord2xvOES (const GLfixed * coords);
    static void glTexCoord3xOES (GLfixed s, GLfixed t, GLfixed r);
    static void glTexCoord3xvOES (const GLfixed * coords);
    static void glTexCoord4xOES (GLfixed s, GLfixed t, GLfixed r, GLfixed q);
    static void glTexCoord4xvOES (const GLfixed * coords);
    static void glTexGenxOES (GLenum coord, GLenum pname, GLfixed param);
    static void glTexGenxvOES (GLenum coord, GLenum pname, const GLfixed * params);
    static void glVertex2xOES (GLfixed x);
    static void glVertex2xvOES (const GLfixed * coords);
    static void glVertex3xOES (GLfixed x, GLfixed y);
    static void glVertex3xvOES (const GLfixed * coords);
    static void glVertex4xOES (GLfixed x, GLfixed y, GLfixed z);
    static void glVertex4xvOES (const GLfixed * coords);
    static GLbitfield glQueryMatrixxOES (GLfixed * mantissa, GLint * exponent);
    static void glClearDepthfOES (GLclampf depth);
    static void glClipPlanefOES (GLenum plane, const GLfloat * equation);
    static void glDepthRangefOES (GLclampf n, GLclampf f);
    static void glFrustumfOES (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
    static void glGetClipPlanefOES (GLenum plane, GLfloat * equation);
    static void glOrthofOES (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
    static void glFramebufferTextureMultiviewOVR (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
    static void glHintPGI (GLenum target, GLint mode);
    static void glDetailTexFuncSGIS (GLenum target, GLsizei n, const GLfloat * points);
    static void glGetDetailTexFuncSGIS (GLenum target, GLfloat * points);
    static void glFogFuncSGIS (GLsizei n, const GLfloat * points);
    static void glGetFogFuncSGIS (GLfloat * points);
    static void glSampleMaskSGIS (GLclampf value, GLboolean invert);
    static void glSamplePatternSGIS (GLenum pattern);
    static void glPixelTexGenParameteriSGIS (GLenum pname, GLint param);
    static void glPixelTexGenParameterivSGIS (GLenum pname, const GLint * params);
    static void glPixelTexGenParameterfSGIS (GLenum pname, GLfloat param);
    static void glPixelTexGenParameterfvSGIS (GLenum pname, const GLfloat * params);
    static void glGetPixelTexGenParameterivSGIS (GLenum pname, GLint * params);
    static void glGetPixelTexGenParameterfvSGIS (GLenum pname, GLfloat * params);
    static void glPointParameterfSGIS (GLenum pname, GLfloat param);
    static void glPointParameterfvSGIS (GLenum pname, const GLfloat * params);
    static void glSharpenTexFuncSGIS (GLenum target, GLsizei n, const GLfloat * points);
    static void glGetSharpenTexFuncSGIS (GLenum target, GLfloat * points);
    static void glTexImage4DSGIS (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void * pixels);
    static void glTexSubImage4DSGIS (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void * pixels);
    static void glTextureColorMaskSGIS (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
    static void glGetTexFilterFuncSGIS (GLenum target, GLenum filter, GLfloat * weights);
    static void glTexFilterFuncSGIS (GLenum target, GLenum filter, GLsizei n, const GLfloat * weights);
    static void glAsyncMarkerSGIX (GLuint marker);
    static GLint glFinishAsyncSGIX (GLuint * markerp);
    static GLint glPollAsyncSGIX (GLuint * markerp);
    static GLuint glGenAsyncMarkersSGIX (GLsizei range);
    static void glDeleteAsyncMarkersSGIX (GLuint marker, GLsizei range);
    static GLboolean glIsAsyncMarkerSGIX (GLuint marker);
    static void glFlushRasterSGIX ();
    static void glFragmentColorMaterialSGIX (GLenum face, GLenum mode);
    static void glFragmentLightfSGIX (GLenum light, GLenum pname, GLfloat param);
    static void glFragmentLightfvSGIX (GLenum light, GLenum pname, const GLfloat * params);
    static void glFragmentLightiSGIX (GLenum light, GLenum pname, GLint param);
    static void glFragmentLightivSGIX (GLenum light, GLenum pname, const GLint * params);
    static void glFragmentLightModelfSGIX (GLenum pname, GLfloat param);
    static void glFragmentLightModelfvSGIX (GLenum pname, const GLfloat * params);
    static void glFragmentLightModeliSGIX (GLenum pname, GLint param);
    static void glFragmentLightModelivSGIX (GLenum pname, const GLint * params);
    static void glFragmentMaterialfSGIX (GLenum face, GLenum pname, GLfloat param);
    static void glFragmentMaterialfvSGIX (GLenum face, GLenum pname, const GLfloat * params);
    static void glFragmentMaterialiSGIX (GLenum face, GLenum pname, GLint param);
    static void glFragmentMaterialivSGIX (GLenum face, GLenum pname, const GLint * params);
    static void glGetFragmentLightfvSGIX (GLenum light, GLenum pname, GLfloat * params);
    static void glGetFragmentLightivSGIX (GLenum light, GLenum pname, GLint * params);
    static void glGetFragmentMaterialfvSGIX (GLenum face, GLenum pname, GLfloat * params);
    static void glGetFragmentMaterialivSGIX (GLenum face, GLenum pname, GLint * params);
    static void glLightEnviSGIX (GLenum pname, GLint param);
    static void glFrameZoomSGIX (GLint factor);
    static void glIglooInterfaceSGIX (GLenum pname, const void * params);
    static GLint glGetInstrumentsSGIX ();
    static void glInstrumentsBufferSGIX (GLsizei size, GLint * buffer);
    static GLint glPollInstrumentsSGIX (GLint * marker_p);
    static void glReadInstrumentsSGIX (GLint marker);
    static void glStartInstrumentsSGIX ();
    static void glStopInstrumentsSGIX (GLint marker);
    static void glGetListParameterfvSGIX (GLuint list, GLenum pname, GLfloat * params);
    static void glGetListParameterivSGIX (GLuint list, GLenum pname, GLint * params);
    static void glListParameterfSGIX (GLuint list, GLenum pname, GLfloat param);
    static void glListParameterfvSGIX (GLuint list, GLenum pname, const GLfloat * params);
    static void glListParameteriSGIX (GLuint list, GLenum pname, GLint param);
    static void glListParameterivSGIX (GLuint list, GLenum pname, const GLint * params);
    static void glPixelTexGenSGIX (GLenum mode);
    static void glDeformationMap3dSGIX (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble * points);
    static void glDeformationMap3fSGIX (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat * points);
    static void glDeformSGIX (GLbitfield mask);
    static void glLoadIdentityDeformationMapSGIX (GLbitfield mask);
    static void glReferencePlaneSGIX (const GLdouble * equation);
    static void glSpriteParameterfSGIX (GLenum pname, GLfloat param);
    static void glSpriteParameterfvSGIX (GLenum pname, const GLfloat * params);
    static void glSpriteParameteriSGIX (GLenum pname, GLint param);
    static void glSpriteParameterivSGIX (GLenum pname, const GLint * params);
    static void glTagSampleBufferSGIX ();
    static void glColorTableSGI (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
    static void glColorTableParameterfvSGI (GLenum target, GLenum pname, const GLfloat * params);
    static void glColorTableParameterivSGI (GLenum target, GLenum pname, const GLint * params);
    static void glCopyColorTableSGI (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
    static void glGetColorTableSGI (GLenum target, GLenum format, GLenum type, void * table);
    static void glGetColorTableParameterfvSGI (GLenum target, GLenum pname, GLfloat * params);
    static void glGetColorTableParameterivSGI (GLenum target, GLenum pname, GLint * params);
    static void glFinishTextureSUNX ();
    static void glGlobalAlphaFactorbSUN (GLbyte factor);
    static void glGlobalAlphaFactorsSUN (GLshort factor);
    static void glGlobalAlphaFactoriSUN (GLint factor);
    static void glGlobalAlphaFactorfSUN (GLfloat factor);
    static void glGlobalAlphaFactordSUN (GLdouble factor);
    static void glGlobalAlphaFactorubSUN (GLubyte factor);
    static void glGlobalAlphaFactorusSUN (GLushort factor);
    static void glGlobalAlphaFactoruiSUN (GLuint factor);
    static void glDrawMeshArraysSUN (GLenum mode, GLint first, GLsizei count, GLsizei width);
    static void glReplacementCodeuiSUN (GLuint code);
    static void glReplacementCodeusSUN (GLushort code);
    static void glReplacementCodeubSUN (GLubyte code);
    static void glReplacementCodeuivSUN (const GLuint * code);
    static void glReplacementCodeusvSUN (const GLushort * code);
    static void glReplacementCodeubvSUN (const GLubyte * code);
    static void glReplacementCodePointerSUN (GLenum type, GLsizei stride, const void ** pointer);
    static void glColor4ubVertex2fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
    static void glColor4ubVertex2fvSUN (const GLubyte * c, const GLfloat * v);
    static void glColor4ubVertex3fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
    static void glColor4ubVertex3fvSUN (const GLubyte * c, const GLfloat * v);
    static void glColor3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
    static void glColor3fVertex3fvSUN (const GLfloat * c, const GLfloat * v);
    static void glNormal3fVertex3fSUN (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    static void glNormal3fVertex3fvSUN (const GLfloat * n, const GLfloat * v);
    static void glColor4fNormal3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    static void glColor4fNormal3fVertex3fvSUN (const GLfloat * c, const GLfloat * n, const GLfloat * v);
    static void glTexCoord2fVertex3fSUN (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
    static void glTexCoord2fVertex3fvSUN (const GLfloat * tc, const GLfloat * v);
    static void glTexCoord4fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    static void glTexCoord4fVertex4fvSUN (const GLfloat * tc, const GLfloat * v);
    static void glTexCoord2fColor4ubVertex3fSUN (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
    static void glTexCoord2fColor4ubVertex3fvSUN (const GLfloat * tc, const GLubyte * c, const GLfloat * v);
    static void glTexCoord2fColor3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
    static void glTexCoord2fColor3fVertex3fvSUN (const GLfloat * tc, const GLfloat * c, const GLfloat * v);
    static void glTexCoord2fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    static void glTexCoord2fNormal3fVertex3fvSUN (const GLfloat * tc, const GLfloat * n, const GLfloat * v);
    static void glTexCoord2fColor4fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    static void glTexCoord2fColor4fNormal3fVertex3fvSUN (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
    static void glTexCoord4fColor4fNormal3fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    static void glTexCoord4fColor4fNormal3fVertex4fvSUN (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
    static void glReplacementCodeuiVertex3fSUN (GLuint rc, GLfloat x, GLfloat y, GLfloat z);
    static void glReplacementCodeuiVertex3fvSUN (const GLuint * rc, const GLfloat * v);
    static void glReplacementCodeuiColor4ubVertex3fSUN (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
    static void glReplacementCodeuiColor4ubVertex3fvSUN (const GLuint * rc, const GLubyte * c, const GLfloat * v);
    static void glReplacementCodeuiColor3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
    static void glReplacementCodeuiColor3fVertex3fvSUN (const GLuint * rc, const GLfloat * c, const GLfloat * v);
    static void glReplacementCodeuiNormal3fVertex3fSUN (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    static void glReplacementCodeuiNormal3fVertex3fvSUN (const GLuint * rc, const GLfloat * n, const GLfloat * v);
    static void glReplacementCodeuiColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    static void glReplacementCodeuiColor4fNormal3fVertex3fvSUN (const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
    static void glReplacementCodeuiTexCoord2fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
    static void glReplacementCodeuiTexCoord2fVertex3fvSUN (const GLuint * rc, const GLfloat * tc, const GLfloat * v);
    static void glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    static void glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN (const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v);
    static void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
    static void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN (const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
  };
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define glDrawArrays glew::gl::glDrawArrays
#define glDrawElements glew::gl::glDrawElements
#define glGetPointerv glew::gl::glGetPointerv
#define glPolygonOffset glew::gl::glPolygonOffset
#define glCopyTexImage1D glew::gl::glCopyTexImage1D
#define glCopyTexImage2D glew::gl::glCopyTexImage2D
#define glCopyTexSubImage1D glew::gl::glCopyTexSubImage1D
#define glCopyTexSubImage2D glew::gl::glCopyTexSubImage2D
#define glTexSubImage1D glew::gl::glTexSubImage1D
#define glTexSubImage2D glew::gl::glTexSubImage2D
#define glBindTexture glew::gl::glBindTexture
#define glDeleteTextures glew::gl::glDeleteTextures
#define glGenTextures glew::gl::glGenTextures
#define glIsTexture glew::gl::glIsTexture
#define glArrayElement glew::gl::glArrayElement
#define glColorPointer glew::gl::glColorPointer
#define glDisableClientState glew::gl::glDisableClientState
#define glEdgeFlagPointer glew::gl::glEdgeFlagPointer
#define glEnableClientState glew::gl::glEnableClientState
#define glIndexPointer glew::gl::glIndexPointer
#define glInterleavedArrays glew::gl::glInterleavedArrays
#define glNormalPointer glew::gl::glNormalPointer
#define glTexCoordPointer glew::gl::glTexCoordPointer
#define glVertexPointer glew::gl::glVertexPointer
#define glAreTexturesResident glew::gl::glAreTexturesResident
#define glPrioritizeTextures glew::gl::glPrioritizeTextures
#define glIndexub glew::gl::glIndexub
#define glIndexubv glew::gl::glIndexubv
#define glPopClientAttrib glew::gl::glPopClientAttrib
#define glPushClientAttrib glew::gl::glPushClientAttrib
#define glDrawRangeElements glew::gl::glDrawRangeElements
#define glTexImage3D glew::gl::glTexImage3D
#define glTexSubImage3D glew::gl::glTexSubImage3D
#define glCopyTexSubImage3D glew::gl::glCopyTexSubImage3D
#define glActiveTexture glew::gl::glActiveTexture
#define glSampleCoverage glew::gl::glSampleCoverage
#define glCompressedTexImage3D glew::gl::glCompressedTexImage3D
#define glCompressedTexImage2D glew::gl::glCompressedTexImage2D
#define glCompressedTexImage1D glew::gl::glCompressedTexImage1D
#define glCompressedTexSubImage3D glew::gl::glCompressedTexSubImage3D
#define glCompressedTexSubImage2D glew::gl::glCompressedTexSubImage2D
#define glCompressedTexSubImage1D glew::gl::glCompressedTexSubImage1D
#define glGetCompressedTexImage glew::gl::glGetCompressedTexImage
#define glClientActiveTexture glew::gl::glClientActiveTexture
#define glMultiTexCoord1d glew::gl::glMultiTexCoord1d
#define glMultiTexCoord1dv glew::gl::glMultiTexCoord1dv
#define glMultiTexCoord1f glew::gl::glMultiTexCoord1f
#define glMultiTexCoord1fv glew::gl::glMultiTexCoord1fv
#define glMultiTexCoord1i glew::gl::glMultiTexCoord1i
#define glMultiTexCoord1iv glew::gl::glMultiTexCoord1iv
#define glMultiTexCoord1s glew::gl::glMultiTexCoord1s
#define glMultiTexCoord1sv glew::gl::glMultiTexCoord1sv
#define glMultiTexCoord2d glew::gl::glMultiTexCoord2d
#define glMultiTexCoord2dv glew::gl::glMultiTexCoord2dv
#define glMultiTexCoord2f glew::gl::glMultiTexCoord2f
#define glMultiTexCoord2fv glew::gl::glMultiTexCoord2fv
#define glMultiTexCoord2i glew::gl::glMultiTexCoord2i
#define glMultiTexCoord2iv glew::gl::glMultiTexCoord2iv
#define glMultiTexCoord2s glew::gl::glMultiTexCoord2s
#define glMultiTexCoord2sv glew::gl::glMultiTexCoord2sv
#define glMultiTexCoord3d glew::gl::glMultiTexCoord3d
#define glMultiTexCoord3dv glew::gl::glMultiTexCoord3dv
#define glMultiTexCoord3f glew::gl::glMultiTexCoord3f
#define glMultiTexCoord3fv glew::gl::glMultiTexCoord3fv
#define glMultiTexCoord3i glew::gl::glMultiTexCoord3i
#define glMultiTexCoord3iv glew::gl::glMultiTexCoord3iv
#define glMultiTexCoord3s glew::gl::glMultiTexCoord3s
#define glMultiTexCoord3sv glew::gl::glMultiTexCoord3sv
#define glMultiTexCoord4d glew::gl::glMultiTexCoord4d
#define glMultiTexCoord4dv glew::gl::glMultiTexCoord4dv
#define glMultiTexCoord4f glew::gl::glMultiTexCoord4f
#define glMultiTexCoord4fv glew::gl::glMultiTexCoord4fv
#define glMultiTexCoord4i glew::gl::glMultiTexCoord4i
#define glMultiTexCoord4iv glew::gl::glMultiTexCoord4iv
#define glMultiTexCoord4s glew::gl::glMultiTexCoord4s
#define glMultiTexCoord4sv glew::gl::glMultiTexCoord4sv
#define glLoadTransposeMatrixf glew::gl::glLoadTransposeMatrixf
#define glLoadTransposeMatrixd glew::gl::glLoadTransposeMatrixd
#define glMultTransposeMatrixf glew::gl::glMultTransposeMatrixf
#define glMultTransposeMatrixd glew::gl::glMultTransposeMatrixd
#define glBlendFuncSeparate glew::gl::glBlendFuncSeparate
#define glMultiDrawArrays glew::gl::glMultiDrawArrays
#define glMultiDrawElements glew::gl::glMultiDrawElements
#define glPointParameterf glew::gl::glPointParameterf
#define glPointParameterfv glew::gl::glPointParameterfv
#define glPointParameteri glew::gl::glPointParameteri
#define glPointParameteriv glew::gl::glPointParameteriv
#define glFogCoordf glew::gl::glFogCoordf
#define glFogCoordfv glew::gl::glFogCoordfv
#define glFogCoordd glew::gl::glFogCoordd
#define glFogCoorddv glew::gl::glFogCoorddv
#define glFogCoordPointer glew::gl::glFogCoordPointer
#define glSecondaryColor3b glew::gl::glSecondaryColor3b
#define glSecondaryColor3bv glew::gl::glSecondaryColor3bv
#define glSecondaryColor3d glew::gl::glSecondaryColor3d
#define glSecondaryColor3dv glew::gl::glSecondaryColor3dv
#define glSecondaryColor3f glew::gl::glSecondaryColor3f
#define glSecondaryColor3fv glew::gl::glSecondaryColor3fv
#define glSecondaryColor3i glew::gl::glSecondaryColor3i
#define glSecondaryColor3iv glew::gl::glSecondaryColor3iv
#define glSecondaryColor3s glew::gl::glSecondaryColor3s
#define glSecondaryColor3sv glew::gl::glSecondaryColor3sv
#define glSecondaryColor3ub glew::gl::glSecondaryColor3ub
#define glSecondaryColor3ubv glew::gl::glSecondaryColor3ubv
#define glSecondaryColor3ui glew::gl::glSecondaryColor3ui
#define glSecondaryColor3uiv glew::gl::glSecondaryColor3uiv
#define glSecondaryColor3us glew::gl::glSecondaryColor3us
#define glSecondaryColor3usv glew::gl::glSecondaryColor3usv
#define glSecondaryColorPointer glew::gl::glSecondaryColorPointer
#define glWindowPos2d glew::gl::glWindowPos2d
#define glWindowPos2dv glew::gl::glWindowPos2dv
#define glWindowPos2f glew::gl::glWindowPos2f
#define glWindowPos2fv glew::gl::glWindowPos2fv
#define glWindowPos2i glew::gl::glWindowPos2i
#define glWindowPos2iv glew::gl::glWindowPos2iv
#define glWindowPos2s glew::gl::glWindowPos2s
#define glWindowPos2sv glew::gl::glWindowPos2sv
#define glWindowPos3d glew::gl::glWindowPos3d
#define glWindowPos3dv glew::gl::glWindowPos3dv
#define glWindowPos3f glew::gl::glWindowPos3f
#define glWindowPos3fv glew::gl::glWindowPos3fv
#define glWindowPos3i glew::gl::glWindowPos3i
#define glWindowPos3iv glew::gl::glWindowPos3iv
#define glWindowPos3s glew::gl::glWindowPos3s
#define glWindowPos3sv glew::gl::glWindowPos3sv
#define glBlendColor glew::gl::glBlendColor
#define glBlendEquation glew::gl::glBlendEquation
#define glGenQueries glew::gl::glGenQueries
#define glDeleteQueries glew::gl::glDeleteQueries
#define glIsQuery glew::gl::glIsQuery
#define glBeginQuery glew::gl::glBeginQuery
#define glEndQuery glew::gl::glEndQuery
#define glGetQueryiv glew::gl::glGetQueryiv
#define glGetQueryObjectiv glew::gl::glGetQueryObjectiv
#define glGetQueryObjectuiv glew::gl::glGetQueryObjectuiv
#define glBindBuffer glew::gl::glBindBuffer
#define glDeleteBuffers glew::gl::glDeleteBuffers
#define glGenBuffers glew::gl::glGenBuffers
#define glIsBuffer glew::gl::glIsBuffer
#define glBufferData glew::gl::glBufferData
#define glBufferSubData glew::gl::glBufferSubData
#define glGetBufferSubData glew::gl::glGetBufferSubData
#define glMapBuffer glew::gl::glMapBuffer
#define glUnmapBuffer glew::gl::glUnmapBuffer
#define glGetBufferParameteriv glew::gl::glGetBufferParameteriv
#define glGetBufferPointerv glew::gl::glGetBufferPointerv
#define glBlendEquationSeparate glew::gl::glBlendEquationSeparate
#define glDrawBuffers glew::gl::glDrawBuffers
#define glStencilOpSeparate glew::gl::glStencilOpSeparate
#define glStencilFuncSeparate glew::gl::glStencilFuncSeparate
#define glStencilMaskSeparate glew::gl::glStencilMaskSeparate
#define glAttachShader glew::gl::glAttachShader
#define glBindAttribLocation glew::gl::glBindAttribLocation
#define glCompileShader glew::gl::glCompileShader
#define glCreateProgram glew::gl::glCreateProgram
#define glCreateShader glew::gl::glCreateShader
#define glDeleteProgram glew::gl::glDeleteProgram
#define glDeleteShader glew::gl::glDeleteShader
#define glDetachShader glew::gl::glDetachShader
#define glDisableVertexAttribArray glew::gl::glDisableVertexAttribArray
#define glEnableVertexAttribArray glew::gl::glEnableVertexAttribArray
#define glGetActiveAttrib glew::gl::glGetActiveAttrib
#define glGetActiveUniform glew::gl::glGetActiveUniform
#define glGetAttachedShaders glew::gl::glGetAttachedShaders
#define glGetAttribLocation glew::gl::glGetAttribLocation
#define glGetProgramiv glew::gl::glGetProgramiv
#define glGetProgramInfoLog glew::gl::glGetProgramInfoLog
#define glGetShaderiv glew::gl::glGetShaderiv
#define glGetShaderInfoLog glew::gl::glGetShaderInfoLog
#define glGetShaderSource glew::gl::glGetShaderSource
#define glGetUniformLocation glew::gl::glGetUniformLocation
#define glGetUniformfv glew::gl::glGetUniformfv
#define glGetUniformiv glew::gl::glGetUniformiv
#define glGetVertexAttribdv glew::gl::glGetVertexAttribdv
#define glGetVertexAttribfv glew::gl::glGetVertexAttribfv
#define glGetVertexAttribiv glew::gl::glGetVertexAttribiv
#define glGetVertexAttribPointerv glew::gl::glGetVertexAttribPointerv
#define glIsProgram glew::gl::glIsProgram
#define glIsShader glew::gl::glIsShader
#define glLinkProgram glew::gl::glLinkProgram
#define glShaderSource glew::gl::glShaderSource
#define glUseProgram glew::gl::glUseProgram
#define glUniform1f glew::gl::glUniform1f
#define glUniform2f glew::gl::glUniform2f
#define glUniform3f glew::gl::glUniform3f
#define glUniform4f glew::gl::glUniform4f
#define glUniform1i glew::gl::glUniform1i
#define glUniform2i glew::gl::glUniform2i
#define glUniform3i glew::gl::glUniform3i
#define glUniform4i glew::gl::glUniform4i
#define glUniform1fv glew::gl::glUniform1fv
#define glUniform2fv glew::gl::glUniform2fv
#define glUniform3fv glew::gl::glUniform3fv
#define glUniform4fv glew::gl::glUniform4fv
#define glUniform1iv glew::gl::glUniform1iv
#define glUniform2iv glew::gl::glUniform2iv
#define glUniform3iv glew::gl::glUniform3iv
#define glUniform4iv glew::gl::glUniform4iv
#define glUniformMatrix2fv glew::gl::glUniformMatrix2fv
#define glUniformMatrix3fv glew::gl::glUniformMatrix3fv
#define glUniformMatrix4fv glew::gl::glUniformMatrix4fv
#define glValidateProgram glew::gl::glValidateProgram
#define glVertexAttrib1d glew::gl::glVertexAttrib1d
#define glVertexAttrib1dv glew::gl::glVertexAttrib1dv
#define glVertexAttrib1f glew::gl::glVertexAttrib1f
#define glVertexAttrib1fv glew::gl::glVertexAttrib1fv
#define glVertexAttrib1s glew::gl::glVertexAttrib1s
#define glVertexAttrib1sv glew::gl::glVertexAttrib1sv
#define glVertexAttrib2d glew::gl::glVertexAttrib2d
#define glVertexAttrib2dv glew::gl::glVertexAttrib2dv
#define glVertexAttrib2f glew::gl::glVertexAttrib2f
#define glVertexAttrib2fv glew::gl::glVertexAttrib2fv
#define glVertexAttrib2s glew::gl::glVertexAttrib2s
#define glVertexAttrib2sv glew::gl::glVertexAttrib2sv
#define glVertexAttrib3d glew::gl::glVertexAttrib3d
#define glVertexAttrib3dv glew::gl::glVertexAttrib3dv
#define glVertexAttrib3f glew::gl::glVertexAttrib3f
#define glVertexAttrib3fv glew::gl::glVertexAttrib3fv
#define glVertexAttrib3s glew::gl::glVertexAttrib3s
#define glVertexAttrib3sv glew::gl::glVertexAttrib3sv
#define glVertexAttrib4Nbv glew::gl::glVertexAttrib4Nbv
#define glVertexAttrib4Niv glew::gl::glVertexAttrib4Niv
#define glVertexAttrib4Nsv glew::gl::glVertexAttrib4Nsv
#define glVertexAttrib4Nub glew::gl::glVertexAttrib4Nub
#define glVertexAttrib4Nubv glew::gl::glVertexAttrib4Nubv
#define glVertexAttrib4Nuiv glew::gl::glVertexAttrib4Nuiv
#define glVertexAttrib4Nusv glew::gl::glVertexAttrib4Nusv
#define glVertexAttrib4bv glew::gl::glVertexAttrib4bv
#define glVertexAttrib4d glew::gl::glVertexAttrib4d
#define glVertexAttrib4dv glew::gl::glVertexAttrib4dv
#define glVertexAttrib4f glew::gl::glVertexAttrib4f
#define glVertexAttrib4fv glew::gl::glVertexAttrib4fv
#define glVertexAttrib4iv glew::gl::glVertexAttrib4iv
#define glVertexAttrib4s glew::gl::glVertexAttrib4s
#define glVertexAttrib4sv glew::gl::glVertexAttrib4sv
#define glVertexAttrib4ubv glew::gl::glVertexAttrib4ubv
#define glVertexAttrib4uiv glew::gl::glVertexAttrib4uiv
#define glVertexAttrib4usv glew::gl::glVertexAttrib4usv
#define glVertexAttribPointer glew::gl::glVertexAttribPointer
#define glUniformMatrix2x3fv glew::gl::glUniformMatrix2x3fv
#define glUniformMatrix3x2fv glew::gl::glUniformMatrix3x2fv
#define glUniformMatrix2x4fv glew::gl::glUniformMatrix2x4fv
#define glUniformMatrix4x2fv glew::gl::glUniformMatrix4x2fv
#define glUniformMatrix3x4fv glew::gl::glUniformMatrix3x4fv
#define glUniformMatrix4x3fv glew::gl::glUniformMatrix4x3fv
#define glColorMaski glew::gl::glColorMaski
#define glGetBooleani_v glew::gl::glGetBooleani_v
#define glGetIntegeri_v glew::gl::glGetIntegeri_v
#define glEnablei glew::gl::glEnablei
#define glDisablei glew::gl::glDisablei
#define glIsEnabledi glew::gl::glIsEnabledi
#define glBeginTransformFeedback glew::gl::glBeginTransformFeedback
#define glEndTransformFeedback glew::gl::glEndTransformFeedback
#define glBindBufferRange glew::gl::glBindBufferRange
#define glBindBufferBase glew::gl::glBindBufferBase
#define glTransformFeedbackVaryings glew::gl::glTransformFeedbackVaryings
#define glGetTransformFeedbackVarying glew::gl::glGetTransformFeedbackVarying
#define glClampColor glew::gl::glClampColor
#define glBeginConditionalRender glew::gl::glBeginConditionalRender
#define glEndConditionalRender glew::gl::glEndConditionalRender
#define glVertexAttribIPointer glew::gl::glVertexAttribIPointer
#define glGetVertexAttribIiv glew::gl::glGetVertexAttribIiv
#define glGetVertexAttribIuiv glew::gl::glGetVertexAttribIuiv
#define glVertexAttribI1i glew::gl::glVertexAttribI1i
#define glVertexAttribI2i glew::gl::glVertexAttribI2i
#define glVertexAttribI3i glew::gl::glVertexAttribI3i
#define glVertexAttribI4i glew::gl::glVertexAttribI4i
#define glVertexAttribI1ui glew::gl::glVertexAttribI1ui
#define glVertexAttribI2ui glew::gl::glVertexAttribI2ui
#define glVertexAttribI3ui glew::gl::glVertexAttribI3ui
#define glVertexAttribI4ui glew::gl::glVertexAttribI4ui
#define glVertexAttribI1iv glew::gl::glVertexAttribI1iv
#define glVertexAttribI2iv glew::gl::glVertexAttribI2iv
#define glVertexAttribI3iv glew::gl::glVertexAttribI3iv
#define glVertexAttribI4iv glew::gl::glVertexAttribI4iv
#define glVertexAttribI1uiv glew::gl::glVertexAttribI1uiv
#define glVertexAttribI2uiv glew::gl::glVertexAttribI2uiv
#define glVertexAttribI3uiv glew::gl::glVertexAttribI3uiv
#define glVertexAttribI4uiv glew::gl::glVertexAttribI4uiv
#define glVertexAttribI4bv glew::gl::glVertexAttribI4bv
#define glVertexAttribI4sv glew::gl::glVertexAttribI4sv
#define glVertexAttribI4ubv glew::gl::glVertexAttribI4ubv
#define glVertexAttribI4usv glew::gl::glVertexAttribI4usv
#define glGetUniformuiv glew::gl::glGetUniformuiv
#define glBindFragDataLocation glew::gl::glBindFragDataLocation
#define glGetFragDataLocation glew::gl::glGetFragDataLocation
#define glUniform1ui glew::gl::glUniform1ui
#define glUniform2ui glew::gl::glUniform2ui
#define glUniform3ui glew::gl::glUniform3ui
#define glUniform4ui glew::gl::glUniform4ui
#define glUniform1uiv glew::gl::glUniform1uiv
#define glUniform2uiv glew::gl::glUniform2uiv
#define glUniform3uiv glew::gl::glUniform3uiv
#define glUniform4uiv glew::gl::glUniform4uiv
#define glTexParameterIiv glew::gl::glTexParameterIiv
#define glTexParameterIuiv glew::gl::glTexParameterIuiv
#define glGetTexParameterIiv glew::gl::glGetTexParameterIiv
#define glGetTexParameterIuiv glew::gl::glGetTexParameterIuiv
#define glClearBufferiv glew::gl::glClearBufferiv
#define glClearBufferuiv glew::gl::glClearBufferuiv
#define glClearBufferfv glew::gl::glClearBufferfv
#define glClearBufferfi glew::gl::glClearBufferfi
#define glGetStringi glew::gl::glGetStringi
#define glIsRenderbuffer glew::gl::glIsRenderbuffer
#define glBindRenderbuffer glew::gl::glBindRenderbuffer
#define glDeleteRenderbuffers glew::gl::glDeleteRenderbuffers
#define glGenRenderbuffers glew::gl::glGenRenderbuffers
#define glRenderbufferStorage glew::gl::glRenderbufferStorage
#define glGetRenderbufferParameteriv glew::gl::glGetRenderbufferParameteriv
#define glIsFramebuffer glew::gl::glIsFramebuffer
#define glBindFramebuffer glew::gl::glBindFramebuffer
#define glDeleteFramebuffers glew::gl::glDeleteFramebuffers
#define glGenFramebuffers glew::gl::glGenFramebuffers
#define glCheckFramebufferStatus glew::gl::glCheckFramebufferStatus
#define glFramebufferTexture1D glew::gl::glFramebufferTexture1D
#define glFramebufferTexture2D glew::gl::glFramebufferTexture2D
#define glFramebufferTexture3D glew::gl::glFramebufferTexture3D
#define glFramebufferRenderbuffer glew::gl::glFramebufferRenderbuffer
#define glGetFramebufferAttachmentParameteriv glew::gl::glGetFramebufferAttachmentParameteriv
#define glGenerateMipmap glew::gl::glGenerateMipmap
#define glBlitFramebuffer glew::gl::glBlitFramebuffer
#define glRenderbufferStorageMultisample glew::gl::glRenderbufferStorageMultisample
#define glFramebufferTextureLayer glew::gl::glFramebufferTextureLayer
#define glMapBufferRange glew::gl::glMapBufferRange
#define glFlushMappedBufferRange glew::gl::glFlushMappedBufferRange
#define glBindVertexArray glew::gl::glBindVertexArray
#define glDeleteVertexArrays glew::gl::glDeleteVertexArrays
#define glGenVertexArrays glew::gl::glGenVertexArrays
#define glIsVertexArray glew::gl::glIsVertexArray
#define glDrawArraysInstanced glew::gl::glDrawArraysInstanced
#define glDrawElementsInstanced glew::gl::glDrawElementsInstanced
#define glTexBuffer glew::gl::glTexBuffer
#define glPrimitiveRestartIndex glew::gl::glPrimitiveRestartIndex
#define glCopyBufferSubData glew::gl::glCopyBufferSubData
#define glGetUniformIndices glew::gl::glGetUniformIndices
#define glGetActiveUniformsiv glew::gl::glGetActiveUniformsiv
#define glGetActiveUniformName glew::gl::glGetActiveUniformName
#define glGetUniformBlockIndex glew::gl::glGetUniformBlockIndex
#define glGetActiveUniformBlockiv glew::gl::glGetActiveUniformBlockiv
#define glGetActiveUniformBlockName glew::gl::glGetActiveUniformBlockName
#define glUniformBlockBinding glew::gl::glUniformBlockBinding
#define glDrawElementsBaseVertex glew::gl::glDrawElementsBaseVertex
#define glDrawRangeElementsBaseVertex glew::gl::glDrawRangeElementsBaseVertex
#define glDrawElementsInstancedBaseVertex glew::gl::glDrawElementsInstancedBaseVertex
#define glMultiDrawElementsBaseVertex glew::gl::glMultiDrawElementsBaseVertex
#define glProvokingVertex glew::gl::glProvokingVertex
#define glFenceSync glew::gl::glFenceSync
#define glIsSync glew::gl::glIsSync
#define glDeleteSync glew::gl::glDeleteSync
#define glClientWaitSync glew::gl::glClientWaitSync
#define glWaitSync glew::gl::glWaitSync
#define glGetInteger64v glew::gl::glGetInteger64v
#define glGetSynciv glew::gl::glGetSynciv
#define glGetInteger64i_v glew::gl::glGetInteger64i_v
#define glGetBufferParameteri64v glew::gl::glGetBufferParameteri64v
#define glFramebufferTexture glew::gl::glFramebufferTexture
#define glTexImage2DMultisample glew::gl::glTexImage2DMultisample
#define glTexImage3DMultisample glew::gl::glTexImage3DMultisample
#define glGetMultisamplefv glew::gl::glGetMultisamplefv
#define glSampleMaski glew::gl::glSampleMaski
#define glBindFragDataLocationIndexed glew::gl::glBindFragDataLocationIndexed
#define glGetFragDataIndex glew::gl::glGetFragDataIndex
#define glGenSamplers glew::gl::glGenSamplers
#define glDeleteSamplers glew::gl::glDeleteSamplers
#define glIsSampler glew::gl::glIsSampler
#define glBindSampler glew::gl::glBindSampler
#define glSamplerParameteri glew::gl::glSamplerParameteri
#define glSamplerParameteriv glew::gl::glSamplerParameteriv
#define glSamplerParameterf glew::gl::glSamplerParameterf
#define glSamplerParameterfv glew::gl::glSamplerParameterfv
#define glSamplerParameterIiv glew::gl::glSamplerParameterIiv
#define glSamplerParameterIuiv glew::gl::glSamplerParameterIuiv
#define glGetSamplerParameteriv glew::gl::glGetSamplerParameteriv
#define glGetSamplerParameterIiv glew::gl::glGetSamplerParameterIiv
#define glGetSamplerParameterfv glew::gl::glGetSamplerParameterfv
#define glGetSamplerParameterIuiv glew::gl::glGetSamplerParameterIuiv
#define glQueryCounter glew::gl::glQueryCounter
#define glGetQueryObjecti64v glew::gl::glGetQueryObjecti64v
#define glGetQueryObjectui64v glew::gl::glGetQueryObjectui64v
#define glVertexAttribDivisor glew::gl::glVertexAttribDivisor
#define glVertexAttribP1ui glew::gl::glVertexAttribP1ui
#define glVertexAttribP1uiv glew::gl::glVertexAttribP1uiv
#define glVertexAttribP2ui glew::gl::glVertexAttribP2ui
#define glVertexAttribP2uiv glew::gl::glVertexAttribP2uiv
#define glVertexAttribP3ui glew::gl::glVertexAttribP3ui
#define glVertexAttribP3uiv glew::gl::glVertexAttribP3uiv
#define glVertexAttribP4ui glew::gl::glVertexAttribP4ui
#define glVertexAttribP4uiv glew::gl::glVertexAttribP4uiv
#define glVertexP2ui glew::gl::glVertexP2ui
#define glVertexP2uiv glew::gl::glVertexP2uiv
#define glVertexP3ui glew::gl::glVertexP3ui
#define glVertexP3uiv glew::gl::glVertexP3uiv
#define glVertexP4ui glew::gl::glVertexP4ui
#define glVertexP4uiv glew::gl::glVertexP4uiv
#define glTexCoordP1ui glew::gl::glTexCoordP1ui
#define glTexCoordP1uiv glew::gl::glTexCoordP1uiv
#define glTexCoordP2ui glew::gl::glTexCoordP2ui
#define glTexCoordP2uiv glew::gl::glTexCoordP2uiv
#define glTexCoordP3ui glew::gl::glTexCoordP3ui
#define glTexCoordP3uiv glew::gl::glTexCoordP3uiv
#define glTexCoordP4ui glew::gl::glTexCoordP4ui
#define glTexCoordP4uiv glew::gl::glTexCoordP4uiv
#define glMultiTexCoordP1ui glew::gl::glMultiTexCoordP1ui
#define glMultiTexCoordP1uiv glew::gl::glMultiTexCoordP1uiv
#define glMultiTexCoordP2ui glew::gl::glMultiTexCoordP2ui
#define glMultiTexCoordP2uiv glew::gl::glMultiTexCoordP2uiv
#define glMultiTexCoordP3ui glew::gl::glMultiTexCoordP3ui
#define glMultiTexCoordP3uiv glew::gl::glMultiTexCoordP3uiv
#define glMultiTexCoordP4ui glew::gl::glMultiTexCoordP4ui
#define glMultiTexCoordP4uiv glew::gl::glMultiTexCoordP4uiv
#define glNormalP3ui glew::gl::glNormalP3ui
#define glNormalP3uiv glew::gl::glNormalP3uiv
#define glColorP3ui glew::gl::glColorP3ui
#define glColorP3uiv glew::gl::glColorP3uiv
#define glColorP4ui glew::gl::glColorP4ui
#define glColorP4uiv glew::gl::glColorP4uiv
#define glSecondaryColorP3ui glew::gl::glSecondaryColorP3ui
#define glSecondaryColorP3uiv glew::gl::glSecondaryColorP3uiv
#define glMinSampleShading glew::gl::glMinSampleShading
#define glBlendEquationi glew::gl::glBlendEquationi
#define glBlendEquationSeparatei glew::gl::glBlendEquationSeparatei
#define glBlendFunci glew::gl::glBlendFunci
#define glBlendFuncSeparatei glew::gl::glBlendFuncSeparatei
#define glDrawArraysIndirect glew::gl::glDrawArraysIndirect
#define glDrawElementsIndirect glew::gl::glDrawElementsIndirect
#define glUniform1d glew::gl::glUniform1d
#define glUniform2d glew::gl::glUniform2d
#define glUniform3d glew::gl::glUniform3d
#define glUniform4d glew::gl::glUniform4d
#define glUniform1dv glew::gl::glUniform1dv
#define glUniform2dv glew::gl::glUniform2dv
#define glUniform3dv glew::gl::glUniform3dv
#define glUniform4dv glew::gl::glUniform4dv
#define glUniformMatrix2dv glew::gl::glUniformMatrix2dv
#define glUniformMatrix3dv glew::gl::glUniformMatrix3dv
#define glUniformMatrix4dv glew::gl::glUniformMatrix4dv
#define glUniformMatrix2x3dv glew::gl::glUniformMatrix2x3dv
#define glUniformMatrix2x4dv glew::gl::glUniformMatrix2x4dv
#define glUniformMatrix3x2dv glew::gl::glUniformMatrix3x2dv
#define glUniformMatrix3x4dv glew::gl::glUniformMatrix3x4dv
#define glUniformMatrix4x2dv glew::gl::glUniformMatrix4x2dv
#define glUniformMatrix4x3dv glew::gl::glUniformMatrix4x3dv
#define glGetUniformdv glew::gl::glGetUniformdv
#define glGetSubroutineUniformLocation glew::gl::glGetSubroutineUniformLocation
#define glGetSubroutineIndex glew::gl::glGetSubroutineIndex
#define glGetActiveSubroutineUniformiv glew::gl::glGetActiveSubroutineUniformiv
#define glGetActiveSubroutineUniformName glew::gl::glGetActiveSubroutineUniformName
#define glGetActiveSubroutineName glew::gl::glGetActiveSubroutineName
#define glUniformSubroutinesuiv glew::gl::glUniformSubroutinesuiv
#define glGetUniformSubroutineuiv glew::gl::glGetUniformSubroutineuiv
#define glGetProgramStageiv glew::gl::glGetProgramStageiv
#define glPatchParameteri glew::gl::glPatchParameteri
#define glPatchParameterfv glew::gl::glPatchParameterfv
#define glBindTransformFeedback glew::gl::glBindTransformFeedback
#define glDeleteTransformFeedbacks glew::gl::glDeleteTransformFeedbacks
#define glGenTransformFeedbacks glew::gl::glGenTransformFeedbacks
#define glIsTransformFeedback glew::gl::glIsTransformFeedback
#define glPauseTransformFeedback glew::gl::glPauseTransformFeedback
#define glResumeTransformFeedback glew::gl::glResumeTransformFeedback
#define glDrawTransformFeedback glew::gl::glDrawTransformFeedback
#define glDrawTransformFeedbackStream glew::gl::glDrawTransformFeedbackStream
#define glBeginQueryIndexed glew::gl::glBeginQueryIndexed
#define glEndQueryIndexed glew::gl::glEndQueryIndexed
#define glGetQueryIndexediv glew::gl::glGetQueryIndexediv
#define glReleaseShaderCompiler glew::gl::glReleaseShaderCompiler
#define glShaderBinary glew::gl::glShaderBinary
#define glGetShaderPrecisionFormat glew::gl::glGetShaderPrecisionFormat
#define glDepthRangef glew::gl::glDepthRangef
#define glClearDepthf glew::gl::glClearDepthf
#define glGetProgramBinary glew::gl::glGetProgramBinary
#define glProgramBinary glew::gl::glProgramBinary
#define glProgramParameteri glew::gl::glProgramParameteri
#define glUseProgramStages glew::gl::glUseProgramStages
#define glActiveShaderProgram glew::gl::glActiveShaderProgram
#define glCreateShaderProgramv glew::gl::glCreateShaderProgramv
#define glBindProgramPipeline glew::gl::glBindProgramPipeline
#define glDeleteProgramPipelines glew::gl::glDeleteProgramPipelines
#define glGenProgramPipelines glew::gl::glGenProgramPipelines
#define glIsProgramPipeline glew::gl::glIsProgramPipeline
#define glGetProgramPipelineiv glew::gl::glGetProgramPipelineiv
#define glProgramUniform1i glew::gl::glProgramUniform1i
#define glProgramUniform1iv glew::gl::glProgramUniform1iv
#define glProgramUniform1f glew::gl::glProgramUniform1f
#define glProgramUniform1fv glew::gl::glProgramUniform1fv
#define glProgramUniform1d glew::gl::glProgramUniform1d
#define glProgramUniform1dv glew::gl::glProgramUniform1dv
#define glProgramUniform1ui glew::gl::glProgramUniform1ui
#define glProgramUniform1uiv glew::gl::glProgramUniform1uiv
#define glProgramUniform2i glew::gl::glProgramUniform2i
#define glProgramUniform2iv glew::gl::glProgramUniform2iv
#define glProgramUniform2f glew::gl::glProgramUniform2f
#define glProgramUniform2fv glew::gl::glProgramUniform2fv
#define glProgramUniform2d glew::gl::glProgramUniform2d
#define glProgramUniform2dv glew::gl::glProgramUniform2dv
#define glProgramUniform2ui glew::gl::glProgramUniform2ui
#define glProgramUniform2uiv glew::gl::glProgramUniform2uiv
#define glProgramUniform3i glew::gl::glProgramUniform3i
#define glProgramUniform3iv glew::gl::glProgramUniform3iv
#define glProgramUniform3f glew::gl::glProgramUniform3f
#define glProgramUniform3fv glew::gl::glProgramUniform3fv
#define glProgramUniform3d glew::gl::glProgramUniform3d
#define glProgramUniform3dv glew::gl::glProgramUniform3dv
#define glProgramUniform3ui glew::gl::glProgramUniform3ui
#define glProgramUniform3uiv glew::gl::glProgramUniform3uiv
#define glProgramUniform4i glew::gl::glProgramUniform4i
#define glProgramUniform4iv glew::gl::glProgramUniform4iv
#define glProgramUniform4f glew::gl::glProgramUniform4f
#define glProgramUniform4fv glew::gl::glProgramUniform4fv
#define glProgramUniform4d glew::gl::glProgramUniform4d
#define glProgramUniform4dv glew::gl::glProgramUniform4dv
#define glProgramUniform4ui glew::gl::glProgramUniform4ui
#define glProgramUniform4uiv glew::gl::glProgramUniform4uiv
#define glProgramUniformMatrix2fv glew::gl::glProgramUniformMatrix2fv
#define glProgramUniformMatrix3fv glew::gl::glProgramUniformMatrix3fv
#define glProgramUniformMatrix4fv glew::gl::glProgramUniformMatrix4fv
#define glProgramUniformMatrix2dv glew::gl::glProgramUniformMatrix2dv
#define glProgramUniformMatrix3dv glew::gl::glProgramUniformMatrix3dv
#define glProgramUniformMatrix4dv glew::gl::glProgramUniformMatrix4dv
#define glProgramUniformMatrix2x3fv glew::gl::glProgramUniformMatrix2x3fv
#define glProgramUniformMatrix3x2fv glew::gl::glProgramUniformMatrix3x2fv
#define glProgramUniformMatrix2x4fv glew::gl::glProgramUniformMatrix2x4fv
#define glProgramUniformMatrix4x2fv glew::gl::glProgramUniformMatrix4x2fv
#define glProgramUniformMatrix3x4fv glew::gl::glProgramUniformMatrix3x4fv
#define glProgramUniformMatrix4x3fv glew::gl::glProgramUniformMatrix4x3fv
#define glProgramUniformMatrix2x3dv glew::gl::glProgramUniformMatrix2x3dv
#define glProgramUniformMatrix3x2dv glew::gl::glProgramUniformMatrix3x2dv
#define glProgramUniformMatrix2x4dv glew::gl::glProgramUniformMatrix2x4dv
#define glProgramUniformMatrix4x2dv glew::gl::glProgramUniformMatrix4x2dv
#define glProgramUniformMatrix3x4dv glew::gl::glProgramUniformMatrix3x4dv
#define glProgramUniformMatrix4x3dv glew::gl::glProgramUniformMatrix4x3dv
#define glValidateProgramPipeline glew::gl::glValidateProgramPipeline
#define glGetProgramPipelineInfoLog glew::gl::glGetProgramPipelineInfoLog
#define glVertexAttribL1d glew::gl::glVertexAttribL1d
#define glVertexAttribL2d glew::gl::glVertexAttribL2d
#define glVertexAttribL3d glew::gl::glVertexAttribL3d
#define glVertexAttribL4d glew::gl::glVertexAttribL4d
#define glVertexAttribL1dv glew::gl::glVertexAttribL1dv
#define glVertexAttribL2dv glew::gl::glVertexAttribL2dv
#define glVertexAttribL3dv glew::gl::glVertexAttribL3dv
#define glVertexAttribL4dv glew::gl::glVertexAttribL4dv
#define glVertexAttribLPointer glew::gl::glVertexAttribLPointer
#define glGetVertexAttribLdv glew::gl::glGetVertexAttribLdv
#define glViewportArrayv glew::gl::glViewportArrayv
#define glViewportIndexedf glew::gl::glViewportIndexedf
#define glViewportIndexedfv glew::gl::glViewportIndexedfv
#define glScissorArrayv glew::gl::glScissorArrayv
#define glScissorIndexed glew::gl::glScissorIndexed
#define glScissorIndexedv glew::gl::glScissorIndexedv
#define glDepthRangeArrayv glew::gl::glDepthRangeArrayv
#define glDepthRangeIndexed glew::gl::glDepthRangeIndexed
#define glGetFloati_v glew::gl::glGetFloati_v
#define glGetDoublei_v glew::gl::glGetDoublei_v
#define glDrawArraysInstancedBaseInstance glew::gl::glDrawArraysInstancedBaseInstance
#define glDrawElementsInstancedBaseInstance glew::gl::glDrawElementsInstancedBaseInstance
#define glDrawElementsInstancedBaseVertexBaseInstance glew::gl::glDrawElementsInstancedBaseVertexBaseInstance
#define glGetInternalformativ glew::gl::glGetInternalformativ
#define glGetActiveAtomicCounterBufferiv glew::gl::glGetActiveAtomicCounterBufferiv
#define glBindImageTexture glew::gl::glBindImageTexture
#define glMemoryBarrier glew::gl::glMemoryBarrier
#define glTexStorage1D glew::gl::glTexStorage1D
#define glTexStorage2D glew::gl::glTexStorage2D
#define glTexStorage3D glew::gl::glTexStorage3D
#define glDrawTransformFeedbackInstanced glew::gl::glDrawTransformFeedbackInstanced
#define glDrawTransformFeedbackStreamInstanced glew::gl::glDrawTransformFeedbackStreamInstanced
#define glClearBufferData glew::gl::glClearBufferData
#define glClearBufferSubData glew::gl::glClearBufferSubData
#define glDispatchCompute glew::gl::glDispatchCompute
#define glDispatchComputeIndirect glew::gl::glDispatchComputeIndirect
#define glCopyImageSubData glew::gl::glCopyImageSubData
#define glFramebufferParameteri glew::gl::glFramebufferParameteri
#define glGetFramebufferParameteriv glew::gl::glGetFramebufferParameteriv
#define glGetInternalformati64v glew::gl::glGetInternalformati64v
#define glInvalidateTexSubImage glew::gl::glInvalidateTexSubImage
#define glInvalidateTexImage glew::gl::glInvalidateTexImage
#define glInvalidateBufferSubData glew::gl::glInvalidateBufferSubData
#define glInvalidateBufferData glew::gl::glInvalidateBufferData
#define glInvalidateFramebuffer glew::gl::glInvalidateFramebuffer
#define glInvalidateSubFramebuffer glew::gl::glInvalidateSubFramebuffer
#define glMultiDrawArraysIndirect glew::gl::glMultiDrawArraysIndirect
#define glMultiDrawElementsIndirect glew::gl::glMultiDrawElementsIndirect
#define glGetProgramInterfaceiv glew::gl::glGetProgramInterfaceiv
#define glGetProgramResourceIndex glew::gl::glGetProgramResourceIndex
#define glGetProgramResourceName glew::gl::glGetProgramResourceName
#define glGetProgramResourceiv glew::gl::glGetProgramResourceiv
#define glGetProgramResourceLocation glew::gl::glGetProgramResourceLocation
#define glGetProgramResourceLocationIndex glew::gl::glGetProgramResourceLocationIndex
#define glShaderStorageBlockBinding glew::gl::glShaderStorageBlockBinding
#define glTexBufferRange glew::gl::glTexBufferRange
#define glTexStorage2DMultisample glew::gl::glTexStorage2DMultisample
#define glTexStorage3DMultisample glew::gl::glTexStorage3DMultisample
#define glTextureView glew::gl::glTextureView
#define glBindVertexBuffer glew::gl::glBindVertexBuffer
#define glVertexAttribFormat glew::gl::glVertexAttribFormat
#define glVertexAttribIFormat glew::gl::glVertexAttribIFormat
#define glVertexAttribLFormat glew::gl::glVertexAttribLFormat
#define glVertexAttribBinding glew::gl::glVertexAttribBinding
#define glVertexBindingDivisor glew::gl::glVertexBindingDivisor
#define glDebugMessageControl glew::gl::glDebugMessageControl
#define glDebugMessageInsert glew::gl::glDebugMessageInsert
#define glDebugMessageCallback glew::gl::glDebugMessageCallback
#define glGetDebugMessageLog glew::gl::glGetDebugMessageLog
#define glPushDebugGroup glew::gl::glPushDebugGroup
#define glPopDebugGroup glew::gl::glPopDebugGroup
#define glObjectLabel glew::gl::glObjectLabel
#define glGetObjectLabel glew::gl::glGetObjectLabel
#define glObjectPtrLabel glew::gl::glObjectPtrLabel
#define glGetObjectPtrLabel glew::gl::glGetObjectPtrLabel
#define glBufferStorage glew::gl::glBufferStorage
#define glClearTexImage glew::gl::glClearTexImage
#define glClearTexSubImage glew::gl::glClearTexSubImage
#define glBindBuffersBase glew::gl::glBindBuffersBase
#define glBindBuffersRange glew::gl::glBindBuffersRange
#define glBindTextures glew::gl::glBindTextures
#define glBindSamplers glew::gl::glBindSamplers
#define glBindImageTextures glew::gl::glBindImageTextures
#define glBindVertexBuffers glew::gl::glBindVertexBuffers
#define glClipControl glew::gl::glClipControl
#define glCreateTransformFeedbacks glew::gl::glCreateTransformFeedbacks
#define glTransformFeedbackBufferBase glew::gl::glTransformFeedbackBufferBase
#define glTransformFeedbackBufferRange glew::gl::glTransformFeedbackBufferRange
#define glGetTransformFeedbackiv glew::gl::glGetTransformFeedbackiv
#define glGetTransformFeedbacki_v glew::gl::glGetTransformFeedbacki_v
#define glGetTransformFeedbacki64_v glew::gl::glGetTransformFeedbacki64_v
#define glCreateBuffers glew::gl::glCreateBuffers
#define glNamedBufferStorage glew::gl::glNamedBufferStorage
#define glNamedBufferData glew::gl::glNamedBufferData
#define glNamedBufferSubData glew::gl::glNamedBufferSubData
#define glCopyNamedBufferSubData glew::gl::glCopyNamedBufferSubData
#define glClearNamedBufferData glew::gl::glClearNamedBufferData
#define glClearNamedBufferSubData glew::gl::glClearNamedBufferSubData
#define glMapNamedBuffer glew::gl::glMapNamedBuffer
#define glMapNamedBufferRange glew::gl::glMapNamedBufferRange
#define glUnmapNamedBuffer glew::gl::glUnmapNamedBuffer
#define glFlushMappedNamedBufferRange glew::gl::glFlushMappedNamedBufferRange
#define glGetNamedBufferParameteriv glew::gl::glGetNamedBufferParameteriv
#define glGetNamedBufferParameteri64v glew::gl::glGetNamedBufferParameteri64v
#define glGetNamedBufferPointerv glew::gl::glGetNamedBufferPointerv
#define glGetNamedBufferSubData glew::gl::glGetNamedBufferSubData
#define glCreateFramebuffers glew::gl::glCreateFramebuffers
#define glNamedFramebufferRenderbuffer glew::gl::glNamedFramebufferRenderbuffer
#define glNamedFramebufferParameteri glew::gl::glNamedFramebufferParameteri
#define glNamedFramebufferTexture glew::gl::glNamedFramebufferTexture
#define glNamedFramebufferTextureLayer glew::gl::glNamedFramebufferTextureLayer
#define glNamedFramebufferDrawBuffer glew::gl::glNamedFramebufferDrawBuffer
#define glNamedFramebufferDrawBuffers glew::gl::glNamedFramebufferDrawBuffers
#define glNamedFramebufferReadBuffer glew::gl::glNamedFramebufferReadBuffer
#define glInvalidateNamedFramebufferData glew::gl::glInvalidateNamedFramebufferData
#define glInvalidateNamedFramebufferSubData glew::gl::glInvalidateNamedFramebufferSubData
#define glClearNamedFramebufferiv glew::gl::glClearNamedFramebufferiv
#define glClearNamedFramebufferuiv glew::gl::glClearNamedFramebufferuiv
#define glClearNamedFramebufferfv glew::gl::glClearNamedFramebufferfv
#define glClearNamedFramebufferfi glew::gl::glClearNamedFramebufferfi
#define glBlitNamedFramebuffer glew::gl::glBlitNamedFramebuffer
#define glCheckNamedFramebufferStatus glew::gl::glCheckNamedFramebufferStatus
#define glGetNamedFramebufferParameteriv glew::gl::glGetNamedFramebufferParameteriv
#define glGetNamedFramebufferAttachmentParameteriv glew::gl::glGetNamedFramebufferAttachmentParameteriv
#define glCreateRenderbuffers glew::gl::glCreateRenderbuffers
#define glNamedRenderbufferStorage glew::gl::glNamedRenderbufferStorage
#define glNamedRenderbufferStorageMultisample glew::gl::glNamedRenderbufferStorageMultisample
#define glGetNamedRenderbufferParameteriv glew::gl::glGetNamedRenderbufferParameteriv
#define glCreateTextures glew::gl::glCreateTextures
#define glTextureBuffer glew::gl::glTextureBuffer
#define glTextureBufferRange glew::gl::glTextureBufferRange
#define glTextureStorage1D glew::gl::glTextureStorage1D
#define glTextureStorage2D glew::gl::glTextureStorage2D
#define glTextureStorage3D glew::gl::glTextureStorage3D
#define glTextureStorage2DMultisample glew::gl::glTextureStorage2DMultisample
#define glTextureStorage3DMultisample glew::gl::glTextureStorage3DMultisample
#define glTextureSubImage1D glew::gl::glTextureSubImage1D
#define glTextureSubImage2D glew::gl::glTextureSubImage2D
#define glTextureSubImage3D glew::gl::glTextureSubImage3D
#define glCompressedTextureSubImage1D glew::gl::glCompressedTextureSubImage1D
#define glCompressedTextureSubImage2D glew::gl::glCompressedTextureSubImage2D
#define glCompressedTextureSubImage3D glew::gl::glCompressedTextureSubImage3D
#define glCopyTextureSubImage1D glew::gl::glCopyTextureSubImage1D
#define glCopyTextureSubImage2D glew::gl::glCopyTextureSubImage2D
#define glCopyTextureSubImage3D glew::gl::glCopyTextureSubImage3D
#define glTextureParameterf glew::gl::glTextureParameterf
#define glTextureParameterfv glew::gl::glTextureParameterfv
#define glTextureParameteri glew::gl::glTextureParameteri
#define glTextureParameterIiv glew::gl::glTextureParameterIiv
#define glTextureParameterIuiv glew::gl::glTextureParameterIuiv
#define glTextureParameteriv glew::gl::glTextureParameteriv
#define glGenerateTextureMipmap glew::gl::glGenerateTextureMipmap
#define glBindTextureUnit glew::gl::glBindTextureUnit
#define glGetTextureImage glew::gl::glGetTextureImage
#define glGetCompressedTextureImage glew::gl::glGetCompressedTextureImage
#define glGetTextureLevelParameterfv glew::gl::glGetTextureLevelParameterfv
#define glGetTextureLevelParameteriv glew::gl::glGetTextureLevelParameteriv
#define glGetTextureParameterfv glew::gl::glGetTextureParameterfv
#define glGetTextureParameterIiv glew::gl::glGetTextureParameterIiv
#define glGetTextureParameterIuiv glew::gl::glGetTextureParameterIuiv
#define glGetTextureParameteriv glew::gl::glGetTextureParameteriv
#define glCreateVertexArrays glew::gl::glCreateVertexArrays
#define glDisableVertexArrayAttrib glew::gl::glDisableVertexArrayAttrib
#define glEnableVertexArrayAttrib glew::gl::glEnableVertexArrayAttrib
#define glVertexArrayElementBuffer glew::gl::glVertexArrayElementBuffer
#define glVertexArrayVertexBuffer glew::gl::glVertexArrayVertexBuffer
#define glVertexArrayVertexBuffers glew::gl::glVertexArrayVertexBuffers
#define glVertexArrayAttribBinding glew::gl::glVertexArrayAttribBinding
#define glVertexArrayAttribFormat glew::gl::glVertexArrayAttribFormat
#define glVertexArrayAttribIFormat glew::gl::glVertexArrayAttribIFormat
#define glVertexArrayAttribLFormat glew::gl::glVertexArrayAttribLFormat
#define glVertexArrayBindingDivisor glew::gl::glVertexArrayBindingDivisor
#define glGetVertexArrayiv glew::gl::glGetVertexArrayiv
#define glGetVertexArrayIndexediv glew::gl::glGetVertexArrayIndexediv
#define glGetVertexArrayIndexed64iv glew::gl::glGetVertexArrayIndexed64iv
#define glCreateSamplers glew::gl::glCreateSamplers
#define glCreateProgramPipelines glew::gl::glCreateProgramPipelines
#define glCreateQueries glew::gl::glCreateQueries
#define glGetQueryBufferObjecti64v glew::gl::glGetQueryBufferObjecti64v
#define glGetQueryBufferObjectiv glew::gl::glGetQueryBufferObjectiv
#define glGetQueryBufferObjectui64v glew::gl::glGetQueryBufferObjectui64v
#define glGetQueryBufferObjectuiv glew::gl::glGetQueryBufferObjectuiv
#define glMemoryBarrierByRegion glew::gl::glMemoryBarrierByRegion
#define glGetTextureSubImage glew::gl::glGetTextureSubImage
#define glGetCompressedTextureSubImage glew::gl::glGetCompressedTextureSubImage
#define glGetGraphicsResetStatus glew::gl::glGetGraphicsResetStatus
#define glGetnCompressedTexImage glew::gl::glGetnCompressedTexImage
#define glGetnTexImage glew::gl::glGetnTexImage
#define glGetnUniformdv glew::gl::glGetnUniformdv
#define glGetnUniformfv glew::gl::glGetnUniformfv
#define glGetnUniformiv glew::gl::glGetnUniformiv
#define glGetnUniformuiv glew::gl::glGetnUniformuiv
#define glReadnPixels glew::gl::glReadnPixels
#define glGetnMapdv glew::gl::glGetnMapdv
#define glGetnMapfv glew::gl::glGetnMapfv
#define glGetnMapiv glew::gl::glGetnMapiv
#define glGetnPixelMapfv glew::gl::glGetnPixelMapfv
#define glGetnPixelMapuiv glew::gl::glGetnPixelMapuiv
#define glGetnPixelMapusv glew::gl::glGetnPixelMapusv
#define glGetnPolygonStipple glew::gl::glGetnPolygonStipple
#define glGetnColorTable glew::gl::glGetnColorTable
#define glGetnConvolutionFilter glew::gl::glGetnConvolutionFilter
#define glGetnSeparableFilter glew::gl::glGetnSeparableFilter
#define glGetnHistogram glew::gl::glGetnHistogram
#define glGetnMinmax glew::gl::glGetnMinmax
#define glTextureBarrier glew::gl::glTextureBarrier
#define glTbufferMask3DFX glew::gl::glTbufferMask3DFX
#define glDebugMessageEnableAMD glew::gl::glDebugMessageEnableAMD
#define glDebugMessageInsertAMD glew::gl::glDebugMessageInsertAMD
#define glDebugMessageCallbackAMD glew::gl::glDebugMessageCallbackAMD
#define glGetDebugMessageLogAMD glew::gl::glGetDebugMessageLogAMD
#define glBlendFuncIndexedAMD glew::gl::glBlendFuncIndexedAMD
#define glBlendFuncSeparateIndexedAMD glew::gl::glBlendFuncSeparateIndexedAMD
#define glBlendEquationIndexedAMD glew::gl::glBlendEquationIndexedAMD
#define glBlendEquationSeparateIndexedAMD glew::gl::glBlendEquationSeparateIndexedAMD
#define glUniform1i64NV glew::gl::glUniform1i64NV
#define glUniform2i64NV glew::gl::glUniform2i64NV
#define glUniform3i64NV glew::gl::glUniform3i64NV
#define glUniform4i64NV glew::gl::glUniform4i64NV
#define glUniform1i64vNV glew::gl::glUniform1i64vNV
#define glUniform2i64vNV glew::gl::glUniform2i64vNV
#define glUniform3i64vNV glew::gl::glUniform3i64vNV
#define glUniform4i64vNV glew::gl::glUniform4i64vNV
#define glUniform1ui64NV glew::gl::glUniform1ui64NV
#define glUniform2ui64NV glew::gl::glUniform2ui64NV
#define glUniform3ui64NV glew::gl::glUniform3ui64NV
#define glUniform4ui64NV glew::gl::glUniform4ui64NV
#define glUniform1ui64vNV glew::gl::glUniform1ui64vNV
#define glUniform2ui64vNV glew::gl::glUniform2ui64vNV
#define glUniform3ui64vNV glew::gl::glUniform3ui64vNV
#define glUniform4ui64vNV glew::gl::glUniform4ui64vNV
#define glGetUniformi64vNV glew::gl::glGetUniformi64vNV
#define glGetUniformui64vNV glew::gl::glGetUniformui64vNV
#define glProgramUniform1i64NV glew::gl::glProgramUniform1i64NV
#define glProgramUniform2i64NV glew::gl::glProgramUniform2i64NV
#define glProgramUniform3i64NV glew::gl::glProgramUniform3i64NV
#define glProgramUniform4i64NV glew::gl::glProgramUniform4i64NV
#define glProgramUniform1i64vNV glew::gl::glProgramUniform1i64vNV
#define glProgramUniform2i64vNV glew::gl::glProgramUniform2i64vNV
#define glProgramUniform3i64vNV glew::gl::glProgramUniform3i64vNV
#define glProgramUniform4i64vNV glew::gl::glProgramUniform4i64vNV
#define glProgramUniform1ui64NV glew::gl::glProgramUniform1ui64NV
#define glProgramUniform2ui64NV glew::gl::glProgramUniform2ui64NV
#define glProgramUniform3ui64NV glew::gl::glProgramUniform3ui64NV
#define glProgramUniform4ui64NV glew::gl::glProgramUniform4ui64NV
#define glProgramUniform1ui64vNV glew::gl::glProgramUniform1ui64vNV
#define glProgramUniform2ui64vNV glew::gl::glProgramUniform2ui64vNV
#define glProgramUniform3ui64vNV glew::gl::glProgramUniform3ui64vNV
#define glProgramUniform4ui64vNV glew::gl::glProgramUniform4ui64vNV
#define glVertexAttribParameteriAMD glew::gl::glVertexAttribParameteriAMD
#define glMultiDrawArraysIndirectAMD glew::gl::glMultiDrawArraysIndirectAMD
#define glMultiDrawElementsIndirectAMD glew::gl::glMultiDrawElementsIndirectAMD
#define glGenNamesAMD glew::gl::glGenNamesAMD
#define glDeleteNamesAMD glew::gl::glDeleteNamesAMD
#define glIsNameAMD glew::gl::glIsNameAMD
#define glQueryObjectParameteruiAMD glew::gl::glQueryObjectParameteruiAMD
#define glGetPerfMonitorGroupsAMD glew::gl::glGetPerfMonitorGroupsAMD
#define glGetPerfMonitorCountersAMD glew::gl::glGetPerfMonitorCountersAMD
#define glGetPerfMonitorGroupStringAMD glew::gl::glGetPerfMonitorGroupStringAMD
#define glGetPerfMonitorCounterStringAMD glew::gl::glGetPerfMonitorCounterStringAMD
#define glGetPerfMonitorCounterInfoAMD glew::gl::glGetPerfMonitorCounterInfoAMD
#define glGenPerfMonitorsAMD glew::gl::glGenPerfMonitorsAMD
#define glDeletePerfMonitorsAMD glew::gl::glDeletePerfMonitorsAMD
#define glSelectPerfMonitorCountersAMD glew::gl::glSelectPerfMonitorCountersAMD
#define glBeginPerfMonitorAMD glew::gl::glBeginPerfMonitorAMD
#define glEndPerfMonitorAMD glew::gl::glEndPerfMonitorAMD
#define glGetPerfMonitorCounterDataAMD glew::gl::glGetPerfMonitorCounterDataAMD
#define glSetMultisamplefvAMD glew::gl::glSetMultisamplefvAMD
#define glTexStorageSparseAMD glew::gl::glTexStorageSparseAMD
#define glTextureStorageSparseAMD glew::gl::glTextureStorageSparseAMD
#define glStencilOpValueAMD glew::gl::glStencilOpValueAMD
#define glTessellationFactorAMD glew::gl::glTessellationFactorAMD
#define glTessellationModeAMD glew::gl::glTessellationModeAMD
#define glElementPointerAPPLE glew::gl::glElementPointerAPPLE
#define glDrawElementArrayAPPLE glew::gl::glDrawElementArrayAPPLE
#define glDrawRangeElementArrayAPPLE glew::gl::glDrawRangeElementArrayAPPLE
#define glMultiDrawElementArrayAPPLE glew::gl::glMultiDrawElementArrayAPPLE
#define glMultiDrawRangeElementArrayAPPLE glew::gl::glMultiDrawRangeElementArrayAPPLE
#define glGenFencesAPPLE glew::gl::glGenFencesAPPLE
#define glDeleteFencesAPPLE glew::gl::glDeleteFencesAPPLE
#define glSetFenceAPPLE glew::gl::glSetFenceAPPLE
#define glIsFenceAPPLE glew::gl::glIsFenceAPPLE
#define glTestFenceAPPLE glew::gl::glTestFenceAPPLE
#define glFinishFenceAPPLE glew::gl::glFinishFenceAPPLE
#define glTestObjectAPPLE glew::gl::glTestObjectAPPLE
#define glFinishObjectAPPLE glew::gl::glFinishObjectAPPLE
#define glBufferParameteriAPPLE glew::gl::glBufferParameteriAPPLE
#define glFlushMappedBufferRangeAPPLE glew::gl::glFlushMappedBufferRangeAPPLE
#define glObjectPurgeableAPPLE glew::gl::glObjectPurgeableAPPLE
#define glObjectUnpurgeableAPPLE glew::gl::glObjectUnpurgeableAPPLE
#define glGetObjectParameterivAPPLE glew::gl::glGetObjectParameterivAPPLE
#define glTextureRangeAPPLE glew::gl::glTextureRangeAPPLE
#define glGetTexParameterPointervAPPLE glew::gl::glGetTexParameterPointervAPPLE
#define glBindVertexArrayAPPLE glew::gl::glBindVertexArrayAPPLE
#define glDeleteVertexArraysAPPLE glew::gl::glDeleteVertexArraysAPPLE
#define glGenVertexArraysAPPLE glew::gl::glGenVertexArraysAPPLE
#define glIsVertexArrayAPPLE glew::gl::glIsVertexArrayAPPLE
#define glVertexArrayRangeAPPLE glew::gl::glVertexArrayRangeAPPLE
#define glFlushVertexArrayRangeAPPLE glew::gl::glFlushVertexArrayRangeAPPLE
#define glVertexArrayParameteriAPPLE glew::gl::glVertexArrayParameteriAPPLE
#define glEnableVertexAttribAPPLE glew::gl::glEnableVertexAttribAPPLE
#define glDisableVertexAttribAPPLE glew::gl::glDisableVertexAttribAPPLE
#define glIsVertexAttribEnabledAPPLE glew::gl::glIsVertexAttribEnabledAPPLE
#define glMapVertexAttrib1dAPPLE glew::gl::glMapVertexAttrib1dAPPLE
#define glMapVertexAttrib1fAPPLE glew::gl::glMapVertexAttrib1fAPPLE
#define glMapVertexAttrib2dAPPLE glew::gl::glMapVertexAttrib2dAPPLE
#define glMapVertexAttrib2fAPPLE glew::gl::glMapVertexAttrib2fAPPLE
#define glGetTextureHandleARB glew::gl::glGetTextureHandleARB
#define glGetTextureSamplerHandleARB glew::gl::glGetTextureSamplerHandleARB
#define glMakeTextureHandleResidentARB glew::gl::glMakeTextureHandleResidentARB
#define glMakeTextureHandleNonResidentARB glew::gl::glMakeTextureHandleNonResidentARB
#define glGetImageHandleARB glew::gl::glGetImageHandleARB
#define glMakeImageHandleResidentARB glew::gl::glMakeImageHandleResidentARB
#define glMakeImageHandleNonResidentARB glew::gl::glMakeImageHandleNonResidentARB
#define glUniformHandleui64ARB glew::gl::glUniformHandleui64ARB
#define glUniformHandleui64vARB glew::gl::glUniformHandleui64vARB
#define glProgramUniformHandleui64ARB glew::gl::glProgramUniformHandleui64ARB
#define glProgramUniformHandleui64vARB glew::gl::glProgramUniformHandleui64vARB
#define glIsTextureHandleResidentARB glew::gl::glIsTextureHandleResidentARB
#define glIsImageHandleResidentARB glew::gl::glIsImageHandleResidentARB
#define glVertexAttribL1ui64ARB glew::gl::glVertexAttribL1ui64ARB
#define glVertexAttribL1ui64vARB glew::gl::glVertexAttribL1ui64vARB
#define glGetVertexAttribLui64vARB glew::gl::glGetVertexAttribLui64vARB
#define glCreateSyncFromCLeventARB glew::gl::glCreateSyncFromCLeventARB
#define glClampColorARB glew::gl::glClampColorARB
#define glDispatchComputeGroupSizeARB glew::gl::glDispatchComputeGroupSizeARB
#define glDebugMessageControlARB glew::gl::glDebugMessageControlARB
#define glDebugMessageInsertARB glew::gl::glDebugMessageInsertARB
#define glDebugMessageCallbackARB glew::gl::glDebugMessageCallbackARB
#define glGetDebugMessageLogARB glew::gl::glGetDebugMessageLogARB
#define glDrawBuffersARB glew::gl::glDrawBuffersARB
#define glBlendEquationiARB glew::gl::glBlendEquationiARB
#define glBlendEquationSeparateiARB glew::gl::glBlendEquationSeparateiARB
#define glBlendFunciARB glew::gl::glBlendFunciARB
#define glBlendFuncSeparateiARB glew::gl::glBlendFuncSeparateiARB
#define glDrawArraysInstancedARB glew::gl::glDrawArraysInstancedARB
#define glDrawElementsInstancedARB glew::gl::glDrawElementsInstancedARB
#define glProgramStringARB glew::gl::glProgramStringARB
#define glBindProgramARB glew::gl::glBindProgramARB
#define glDeleteProgramsARB glew::gl::glDeleteProgramsARB
#define glGenProgramsARB glew::gl::glGenProgramsARB
#define glProgramEnvParameter4dARB glew::gl::glProgramEnvParameter4dARB
#define glProgramEnvParameter4dvARB glew::gl::glProgramEnvParameter4dvARB
#define glProgramEnvParameter4fARB glew::gl::glProgramEnvParameter4fARB
#define glProgramEnvParameter4fvARB glew::gl::glProgramEnvParameter4fvARB
#define glProgramLocalParameter4dARB glew::gl::glProgramLocalParameter4dARB
#define glProgramLocalParameter4dvARB glew::gl::glProgramLocalParameter4dvARB
#define glProgramLocalParameter4fARB glew::gl::glProgramLocalParameter4fARB
#define glProgramLocalParameter4fvARB glew::gl::glProgramLocalParameter4fvARB
#define glGetProgramEnvParameterdvARB glew::gl::glGetProgramEnvParameterdvARB
#define glGetProgramEnvParameterfvARB glew::gl::glGetProgramEnvParameterfvARB
#define glGetProgramLocalParameterdvARB glew::gl::glGetProgramLocalParameterdvARB
#define glGetProgramLocalParameterfvARB glew::gl::glGetProgramLocalParameterfvARB
#define glGetProgramivARB glew::gl::glGetProgramivARB
#define glGetProgramStringARB glew::gl::glGetProgramStringARB
#define glIsProgramARB glew::gl::glIsProgramARB
#define glProgramParameteriARB glew::gl::glProgramParameteriARB
#define glFramebufferTextureARB glew::gl::glFramebufferTextureARB
#define glFramebufferTextureLayerARB glew::gl::glFramebufferTextureLayerARB
#define glFramebufferTextureFaceARB glew::gl::glFramebufferTextureFaceARB
#define glColorTable glew::gl::glColorTable
#define glColorTableParameterfv glew::gl::glColorTableParameterfv
#define glColorTableParameteriv glew::gl::glColorTableParameteriv
#define glCopyColorTable glew::gl::glCopyColorTable
#define glGetColorTable glew::gl::glGetColorTable
#define glGetColorTableParameterfv glew::gl::glGetColorTableParameterfv
#define glGetColorTableParameteriv glew::gl::glGetColorTableParameteriv
#define glColorSubTable glew::gl::glColorSubTable
#define glCopyColorSubTable glew::gl::glCopyColorSubTable
#define glConvolutionFilter1D glew::gl::glConvolutionFilter1D
#define glConvolutionFilter2D glew::gl::glConvolutionFilter2D
#define glConvolutionParameterf glew::gl::glConvolutionParameterf
#define glConvolutionParameterfv glew::gl::glConvolutionParameterfv
#define glConvolutionParameteri glew::gl::glConvolutionParameteri
#define glConvolutionParameteriv glew::gl::glConvolutionParameteriv
#define glCopyConvolutionFilter1D glew::gl::glCopyConvolutionFilter1D
#define glCopyConvolutionFilter2D glew::gl::glCopyConvolutionFilter2D
#define glGetConvolutionFilter glew::gl::glGetConvolutionFilter
#define glGetConvolutionParameterfv glew::gl::glGetConvolutionParameterfv
#define glGetConvolutionParameteriv glew::gl::glGetConvolutionParameteriv
#define glGetSeparableFilter glew::gl::glGetSeparableFilter
#define glSeparableFilter2D glew::gl::glSeparableFilter2D
#define glGetHistogram glew::gl::glGetHistogram
#define glGetHistogramParameterfv glew::gl::glGetHistogramParameterfv
#define glGetHistogramParameteriv glew::gl::glGetHistogramParameteriv
#define glGetMinmax glew::gl::glGetMinmax
#define glGetMinmaxParameterfv glew::gl::glGetMinmaxParameterfv
#define glGetMinmaxParameteriv glew::gl::glGetMinmaxParameteriv
#define glHistogram glew::gl::glHistogram
#define glMinmax glew::gl::glMinmax
#define glResetHistogram glew::gl::glResetHistogram
#define glResetMinmax glew::gl::glResetMinmax
#define glMultiDrawArraysIndirectCountARB glew::gl::glMultiDrawArraysIndirectCountARB
#define glMultiDrawElementsIndirectCountARB glew::gl::glMultiDrawElementsIndirectCountARB
#define glVertexAttribDivisorARB glew::gl::glVertexAttribDivisorARB
#define glCurrentPaletteMatrixARB glew::gl::glCurrentPaletteMatrixARB
#define glMatrixIndexubvARB glew::gl::glMatrixIndexubvARB
#define glMatrixIndexusvARB glew::gl::glMatrixIndexusvARB
#define glMatrixIndexuivARB glew::gl::glMatrixIndexuivARB
#define glMatrixIndexPointerARB glew::gl::glMatrixIndexPointerARB
#define glSampleCoverageARB glew::gl::glSampleCoverageARB
#define glActiveTextureARB glew::gl::glActiveTextureARB
#define glClientActiveTextureARB glew::gl::glClientActiveTextureARB
#define glMultiTexCoord1dARB glew::gl::glMultiTexCoord1dARB
#define glMultiTexCoord1dvARB glew::gl::glMultiTexCoord1dvARB
#define glMultiTexCoord1fARB glew::gl::glMultiTexCoord1fARB
#define glMultiTexCoord1fvARB glew::gl::glMultiTexCoord1fvARB
#define glMultiTexCoord1iARB glew::gl::glMultiTexCoord1iARB
#define glMultiTexCoord1ivARB glew::gl::glMultiTexCoord1ivARB
#define glMultiTexCoord1sARB glew::gl::glMultiTexCoord1sARB
#define glMultiTexCoord1svARB glew::gl::glMultiTexCoord1svARB
#define glMultiTexCoord2dARB glew::gl::glMultiTexCoord2dARB
#define glMultiTexCoord2dvARB glew::gl::glMultiTexCoord2dvARB
#define glMultiTexCoord2fARB glew::gl::glMultiTexCoord2fARB
#define glMultiTexCoord2fvARB glew::gl::glMultiTexCoord2fvARB
#define glMultiTexCoord2iARB glew::gl::glMultiTexCoord2iARB
#define glMultiTexCoord2ivARB glew::gl::glMultiTexCoord2ivARB
#define glMultiTexCoord2sARB glew::gl::glMultiTexCoord2sARB
#define glMultiTexCoord2svARB glew::gl::glMultiTexCoord2svARB
#define glMultiTexCoord3dARB glew::gl::glMultiTexCoord3dARB
#define glMultiTexCoord3dvARB glew::gl::glMultiTexCoord3dvARB
#define glMultiTexCoord3fARB glew::gl::glMultiTexCoord3fARB
#define glMultiTexCoord3fvARB glew::gl::glMultiTexCoord3fvARB
#define glMultiTexCoord3iARB glew::gl::glMultiTexCoord3iARB
#define glMultiTexCoord3ivARB glew::gl::glMultiTexCoord3ivARB
#define glMultiTexCoord3sARB glew::gl::glMultiTexCoord3sARB
#define glMultiTexCoord3svARB glew::gl::glMultiTexCoord3svARB
#define glMultiTexCoord4dARB glew::gl::glMultiTexCoord4dARB
#define glMultiTexCoord4dvARB glew::gl::glMultiTexCoord4dvARB
#define glMultiTexCoord4fARB glew::gl::glMultiTexCoord4fARB
#define glMultiTexCoord4fvARB glew::gl::glMultiTexCoord4fvARB
#define glMultiTexCoord4iARB glew::gl::glMultiTexCoord4iARB
#define glMultiTexCoord4ivARB glew::gl::glMultiTexCoord4ivARB
#define glMultiTexCoord4sARB glew::gl::glMultiTexCoord4sARB
#define glMultiTexCoord4svARB glew::gl::glMultiTexCoord4svARB
#define glGenQueriesARB glew::gl::glGenQueriesARB
#define glDeleteQueriesARB glew::gl::glDeleteQueriesARB
#define glIsQueryARB glew::gl::glIsQueryARB
#define glBeginQueryARB glew::gl::glBeginQueryARB
#define glEndQueryARB glew::gl::glEndQueryARB
#define glGetQueryivARB glew::gl::glGetQueryivARB
#define glGetQueryObjectivARB glew::gl::glGetQueryObjectivARB
#define glGetQueryObjectuivARB glew::gl::glGetQueryObjectuivARB
#define glPointParameterfARB glew::gl::glPointParameterfARB
#define glPointParameterfvARB glew::gl::glPointParameterfvARB
#define glGetGraphicsResetStatusARB glew::gl::glGetGraphicsResetStatusARB
#define glGetnTexImageARB glew::gl::glGetnTexImageARB
#define glReadnPixelsARB glew::gl::glReadnPixelsARB
#define glGetnCompressedTexImageARB glew::gl::glGetnCompressedTexImageARB
#define glGetnUniformfvARB glew::gl::glGetnUniformfvARB
#define glGetnUniformivARB glew::gl::glGetnUniformivARB
#define glGetnUniformuivARB glew::gl::glGetnUniformuivARB
#define glGetnUniformdvARB glew::gl::glGetnUniformdvARB
#define glGetnMapdvARB glew::gl::glGetnMapdvARB
#define glGetnMapfvARB glew::gl::glGetnMapfvARB
#define glGetnMapivARB glew::gl::glGetnMapivARB
#define glGetnPixelMapfvARB glew::gl::glGetnPixelMapfvARB
#define glGetnPixelMapuivARB glew::gl::glGetnPixelMapuivARB
#define glGetnPixelMapusvARB glew::gl::glGetnPixelMapusvARB
#define glGetnPolygonStippleARB glew::gl::glGetnPolygonStippleARB
#define glGetnColorTableARB glew::gl::glGetnColorTableARB
#define glGetnConvolutionFilterARB glew::gl::glGetnConvolutionFilterARB
#define glGetnSeparableFilterARB glew::gl::glGetnSeparableFilterARB
#define glGetnHistogramARB glew::gl::glGetnHistogramARB
#define glGetnMinmaxARB glew::gl::glGetnMinmaxARB
#define glMinSampleShadingARB glew::gl::glMinSampleShadingARB
#define glDeleteObjectARB glew::gl::glDeleteObjectARB
#define glGetHandleARB glew::gl::glGetHandleARB
#define glDetachObjectARB glew::gl::glDetachObjectARB
#define glCreateShaderObjectARB glew::gl::glCreateShaderObjectARB
#define glShaderSourceARB glew::gl::glShaderSourceARB
#define glCompileShaderARB glew::gl::glCompileShaderARB
#define glCreateProgramObjectARB glew::gl::glCreateProgramObjectARB
#define glAttachObjectARB glew::gl::glAttachObjectARB
#define glLinkProgramARB glew::gl::glLinkProgramARB
#define glUseProgramObjectARB glew::gl::glUseProgramObjectARB
#define glValidateProgramARB glew::gl::glValidateProgramARB
#define glUniform1fARB glew::gl::glUniform1fARB
#define glUniform2fARB glew::gl::glUniform2fARB
#define glUniform3fARB glew::gl::glUniform3fARB
#define glUniform4fARB glew::gl::glUniform4fARB
#define glUniform1iARB glew::gl::glUniform1iARB
#define glUniform2iARB glew::gl::glUniform2iARB
#define glUniform3iARB glew::gl::glUniform3iARB
#define glUniform4iARB glew::gl::glUniform4iARB
#define glUniform1fvARB glew::gl::glUniform1fvARB
#define glUniform2fvARB glew::gl::glUniform2fvARB
#define glUniform3fvARB glew::gl::glUniform3fvARB
#define glUniform4fvARB glew::gl::glUniform4fvARB
#define glUniform1ivARB glew::gl::glUniform1ivARB
#define glUniform2ivARB glew::gl::glUniform2ivARB
#define glUniform3ivARB glew::gl::glUniform3ivARB
#define glUniform4ivARB glew::gl::glUniform4ivARB
#define glUniformMatrix2fvARB glew::gl::glUniformMatrix2fvARB
#define glUniformMatrix3fvARB glew::gl::glUniformMatrix3fvARB
#define glUniformMatrix4fvARB glew::gl::glUniformMatrix4fvARB
#define glGetObjectParameterfvARB glew::gl::glGetObjectParameterfvARB
#define glGetObjectParameterivARB glew::gl::glGetObjectParameterivARB
#define glGetInfoLogARB glew::gl::glGetInfoLogARB
#define glGetAttachedObjectsARB glew::gl::glGetAttachedObjectsARB
#define glGetUniformLocationARB glew::gl::glGetUniformLocationARB
#define glGetActiveUniformARB glew::gl::glGetActiveUniformARB
#define glGetUniformfvARB glew::gl::glGetUniformfvARB
#define glGetUniformivARB glew::gl::glGetUniformivARB
#define glGetShaderSourceARB glew::gl::glGetShaderSourceARB
#define glNamedStringARB glew::gl::glNamedStringARB
#define glDeleteNamedStringARB glew::gl::glDeleteNamedStringARB
#define glCompileShaderIncludeARB glew::gl::glCompileShaderIncludeARB
#define glIsNamedStringARB glew::gl::glIsNamedStringARB
#define glGetNamedStringARB glew::gl::glGetNamedStringARB
#define glGetNamedStringivARB glew::gl::glGetNamedStringivARB
#define glBufferPageCommitmentARB glew::gl::glBufferPageCommitmentARB
#define glNamedBufferPageCommitmentEXT glew::gl::glNamedBufferPageCommitmentEXT
#define glNamedBufferPageCommitmentARB glew::gl::glNamedBufferPageCommitmentARB
#define glTexPageCommitmentARB glew::gl::glTexPageCommitmentARB
#define glTexBufferARB glew::gl::glTexBufferARB
#define glCompressedTexImage3DARB glew::gl::glCompressedTexImage3DARB
#define glCompressedTexImage2DARB glew::gl::glCompressedTexImage2DARB
#define glCompressedTexImage1DARB glew::gl::glCompressedTexImage1DARB
#define glCompressedTexSubImage3DARB glew::gl::glCompressedTexSubImage3DARB
#define glCompressedTexSubImage2DARB glew::gl::glCompressedTexSubImage2DARB
#define glCompressedTexSubImage1DARB glew::gl::glCompressedTexSubImage1DARB
#define glGetCompressedTexImageARB glew::gl::glGetCompressedTexImageARB
#define glLoadTransposeMatrixfARB glew::gl::glLoadTransposeMatrixfARB
#define glLoadTransposeMatrixdARB glew::gl::glLoadTransposeMatrixdARB
#define glMultTransposeMatrixfARB glew::gl::glMultTransposeMatrixfARB
#define glMultTransposeMatrixdARB glew::gl::glMultTransposeMatrixdARB
#define glWeightbvARB glew::gl::glWeightbvARB
#define glWeightsvARB glew::gl::glWeightsvARB
#define glWeightivARB glew::gl::glWeightivARB
#define glWeightfvARB glew::gl::glWeightfvARB
#define glWeightdvARB glew::gl::glWeightdvARB
#define glWeightubvARB glew::gl::glWeightubvARB
#define glWeightusvARB glew::gl::glWeightusvARB
#define glWeightuivARB glew::gl::glWeightuivARB
#define glWeightPointerARB glew::gl::glWeightPointerARB
#define glVertexBlendARB glew::gl::glVertexBlendARB
#define glBindBufferARB glew::gl::glBindBufferARB
#define glDeleteBuffersARB glew::gl::glDeleteBuffersARB
#define glGenBuffersARB glew::gl::glGenBuffersARB
#define glIsBufferARB glew::gl::glIsBufferARB
#define glBufferDataARB glew::gl::glBufferDataARB
#define glBufferSubDataARB glew::gl::glBufferSubDataARB
#define glGetBufferSubDataARB glew::gl::glGetBufferSubDataARB
#define glMapBufferARB glew::gl::glMapBufferARB
#define glUnmapBufferARB glew::gl::glUnmapBufferARB
#define glGetBufferParameterivARB glew::gl::glGetBufferParameterivARB
#define glGetBufferPointervARB glew::gl::glGetBufferPointervARB
#define glVertexAttrib1dARB glew::gl::glVertexAttrib1dARB
#define glVertexAttrib1dvARB glew::gl::glVertexAttrib1dvARB
#define glVertexAttrib1fARB glew::gl::glVertexAttrib1fARB
#define glVertexAttrib1fvARB glew::gl::glVertexAttrib1fvARB
#define glVertexAttrib1sARB glew::gl::glVertexAttrib1sARB
#define glVertexAttrib1svARB glew::gl::glVertexAttrib1svARB
#define glVertexAttrib2dARB glew::gl::glVertexAttrib2dARB
#define glVertexAttrib2dvARB glew::gl::glVertexAttrib2dvARB
#define glVertexAttrib2fARB glew::gl::glVertexAttrib2fARB
#define glVertexAttrib2fvARB glew::gl::glVertexAttrib2fvARB
#define glVertexAttrib2sARB glew::gl::glVertexAttrib2sARB
#define glVertexAttrib2svARB glew::gl::glVertexAttrib2svARB
#define glVertexAttrib3dARB glew::gl::glVertexAttrib3dARB
#define glVertexAttrib3dvARB glew::gl::glVertexAttrib3dvARB
#define glVertexAttrib3fARB glew::gl::glVertexAttrib3fARB
#define glVertexAttrib3fvARB glew::gl::glVertexAttrib3fvARB
#define glVertexAttrib3sARB glew::gl::glVertexAttrib3sARB
#define glVertexAttrib3svARB glew::gl::glVertexAttrib3svARB
#define glVertexAttrib4NbvARB glew::gl::glVertexAttrib4NbvARB
#define glVertexAttrib4NivARB glew::gl::glVertexAttrib4NivARB
#define glVertexAttrib4NsvARB glew::gl::glVertexAttrib4NsvARB
#define glVertexAttrib4NubARB glew::gl::glVertexAttrib4NubARB
#define glVertexAttrib4NubvARB glew::gl::glVertexAttrib4NubvARB
#define glVertexAttrib4NuivARB glew::gl::glVertexAttrib4NuivARB
#define glVertexAttrib4NusvARB glew::gl::glVertexAttrib4NusvARB
#define glVertexAttrib4bvARB glew::gl::glVertexAttrib4bvARB
#define glVertexAttrib4dARB glew::gl::glVertexAttrib4dARB
#define glVertexAttrib4dvARB glew::gl::glVertexAttrib4dvARB
#define glVertexAttrib4fARB glew::gl::glVertexAttrib4fARB
#define glVertexAttrib4fvARB glew::gl::glVertexAttrib4fvARB
#define glVertexAttrib4ivARB glew::gl::glVertexAttrib4ivARB
#define glVertexAttrib4sARB glew::gl::glVertexAttrib4sARB
#define glVertexAttrib4svARB glew::gl::glVertexAttrib4svARB
#define glVertexAttrib4ubvARB glew::gl::glVertexAttrib4ubvARB
#define glVertexAttrib4uivARB glew::gl::glVertexAttrib4uivARB
#define glVertexAttrib4usvARB glew::gl::glVertexAttrib4usvARB
#define glVertexAttribPointerARB glew::gl::glVertexAttribPointerARB
#define glEnableVertexAttribArrayARB glew::gl::glEnableVertexAttribArrayARB
#define glDisableVertexAttribArrayARB glew::gl::glDisableVertexAttribArrayARB
#define glGetVertexAttribdvARB glew::gl::glGetVertexAttribdvARB
#define glGetVertexAttribfvARB glew::gl::glGetVertexAttribfvARB
#define glGetVertexAttribivARB glew::gl::glGetVertexAttribivARB
#define glGetVertexAttribPointervARB glew::gl::glGetVertexAttribPointervARB
#define glBindAttribLocationARB glew::gl::glBindAttribLocationARB
#define glGetActiveAttribARB glew::gl::glGetActiveAttribARB
#define glGetAttribLocationARB glew::gl::glGetAttribLocationARB
#define glWindowPos2dARB glew::gl::glWindowPos2dARB
#define glWindowPos2dvARB glew::gl::glWindowPos2dvARB
#define glWindowPos2fARB glew::gl::glWindowPos2fARB
#define glWindowPos2fvARB glew::gl::glWindowPos2fvARB
#define glWindowPos2iARB glew::gl::glWindowPos2iARB
#define glWindowPos2ivARB glew::gl::glWindowPos2ivARB
#define glWindowPos2sARB glew::gl::glWindowPos2sARB
#define glWindowPos2svARB glew::gl::glWindowPos2svARB
#define glWindowPos3dARB glew::gl::glWindowPos3dARB
#define glWindowPos3dvARB glew::gl::glWindowPos3dvARB
#define glWindowPos3fARB glew::gl::glWindowPos3fARB
#define glWindowPos3fvARB glew::gl::glWindowPos3fvARB
#define glWindowPos3iARB glew::gl::glWindowPos3iARB
#define glWindowPos3ivARB glew::gl::glWindowPos3ivARB
#define glWindowPos3sARB glew::gl::glWindowPos3sARB
#define glWindowPos3svARB glew::gl::glWindowPos3svARB
#define glDrawBuffersATI glew::gl::glDrawBuffersATI
#define glElementPointerATI glew::gl::glElementPointerATI
#define glDrawElementArrayATI glew::gl::glDrawElementArrayATI
#define glDrawRangeElementArrayATI glew::gl::glDrawRangeElementArrayATI
#define glTexBumpParameterivATI glew::gl::glTexBumpParameterivATI
#define glTexBumpParameterfvATI glew::gl::glTexBumpParameterfvATI
#define glGetTexBumpParameterivATI glew::gl::glGetTexBumpParameterivATI
#define glGetTexBumpParameterfvATI glew::gl::glGetTexBumpParameterfvATI
#define glGenFragmentShadersATI glew::gl::glGenFragmentShadersATI
#define glBindFragmentShaderATI glew::gl::glBindFragmentShaderATI
#define glDeleteFragmentShaderATI glew::gl::glDeleteFragmentShaderATI
#define glBeginFragmentShaderATI glew::gl::glBeginFragmentShaderATI
#define glEndFragmentShaderATI glew::gl::glEndFragmentShaderATI
#define glPassTexCoordATI glew::gl::glPassTexCoordATI
#define glSampleMapATI glew::gl::glSampleMapATI
#define glColorFragmentOp1ATI glew::gl::glColorFragmentOp1ATI
#define glColorFragmentOp2ATI glew::gl::glColorFragmentOp2ATI
#define glColorFragmentOp3ATI glew::gl::glColorFragmentOp3ATI
#define glAlphaFragmentOp1ATI glew::gl::glAlphaFragmentOp1ATI
#define glAlphaFragmentOp2ATI glew::gl::glAlphaFragmentOp2ATI
#define glAlphaFragmentOp3ATI glew::gl::glAlphaFragmentOp3ATI
#define glSetFragmentShaderConstantATI glew::gl::glSetFragmentShaderConstantATI
#define glMapObjectBufferATI glew::gl::glMapObjectBufferATI
#define glUnmapObjectBufferATI glew::gl::glUnmapObjectBufferATI
#define glPNTrianglesiATI glew::gl::glPNTrianglesiATI
#define glPNTrianglesfATI glew::gl::glPNTrianglesfATI
#define glStencilOpSeparateATI glew::gl::glStencilOpSeparateATI
#define glStencilFuncSeparateATI glew::gl::glStencilFuncSeparateATI
#define glNewObjectBufferATI glew::gl::glNewObjectBufferATI
#define glIsObjectBufferATI glew::gl::glIsObjectBufferATI
#define glUpdateObjectBufferATI glew::gl::glUpdateObjectBufferATI
#define glGetObjectBufferfvATI glew::gl::glGetObjectBufferfvATI
#define glGetObjectBufferivATI glew::gl::glGetObjectBufferivATI
#define glFreeObjectBufferATI glew::gl::glFreeObjectBufferATI
#define glArrayObjectATI glew::gl::glArrayObjectATI
#define glGetArrayObjectfvATI glew::gl::glGetArrayObjectfvATI
#define glGetArrayObjectivATI glew::gl::glGetArrayObjectivATI
#define glVariantArrayObjectATI glew::gl::glVariantArrayObjectATI
#define glGetVariantArrayObjectfvATI glew::gl::glGetVariantArrayObjectfvATI
#define glGetVariantArrayObjectivATI glew::gl::glGetVariantArrayObjectivATI
#define glVertexAttribArrayObjectATI glew::gl::glVertexAttribArrayObjectATI
#define glGetVertexAttribArrayObjectfvATI glew::gl::glGetVertexAttribArrayObjectfvATI
#define glGetVertexAttribArrayObjectivATI glew::gl::glGetVertexAttribArrayObjectivATI
#define glVertexStream1sATI glew::gl::glVertexStream1sATI
#define glVertexStream1svATI glew::gl::glVertexStream1svATI
#define glVertexStream1iATI glew::gl::glVertexStream1iATI
#define glVertexStream1ivATI glew::gl::glVertexStream1ivATI
#define glVertexStream1fATI glew::gl::glVertexStream1fATI
#define glVertexStream1fvATI glew::gl::glVertexStream1fvATI
#define glVertexStream1dATI glew::gl::glVertexStream1dATI
#define glVertexStream1dvATI glew::gl::glVertexStream1dvATI
#define glVertexStream2sATI glew::gl::glVertexStream2sATI
#define glVertexStream2svATI glew::gl::glVertexStream2svATI
#define glVertexStream2iATI glew::gl::glVertexStream2iATI
#define glVertexStream2ivATI glew::gl::glVertexStream2ivATI
#define glVertexStream2fATI glew::gl::glVertexStream2fATI
#define glVertexStream2fvATI glew::gl::glVertexStream2fvATI
#define glVertexStream2dATI glew::gl::glVertexStream2dATI
#define glVertexStream2dvATI glew::gl::glVertexStream2dvATI
#define glVertexStream3sATI glew::gl::glVertexStream3sATI
#define glVertexStream3svATI glew::gl::glVertexStream3svATI
#define glVertexStream3iATI glew::gl::glVertexStream3iATI
#define glVertexStream3ivATI glew::gl::glVertexStream3ivATI
#define glVertexStream3fATI glew::gl::glVertexStream3fATI
#define glVertexStream3fvATI glew::gl::glVertexStream3fvATI
#define glVertexStream3dATI glew::gl::glVertexStream3dATI
#define glVertexStream3dvATI glew::gl::glVertexStream3dvATI
#define glVertexStream4sATI glew::gl::glVertexStream4sATI
#define glVertexStream4svATI glew::gl::glVertexStream4svATI
#define glVertexStream4iATI glew::gl::glVertexStream4iATI
#define glVertexStream4ivATI glew::gl::glVertexStream4ivATI
#define glVertexStream4fATI glew::gl::glVertexStream4fATI
#define glVertexStream4fvATI glew::gl::glVertexStream4fvATI
#define glVertexStream4dATI glew::gl::glVertexStream4dATI
#define glVertexStream4dvATI glew::gl::glVertexStream4dvATI
#define glNormalStream3bATI glew::gl::glNormalStream3bATI
#define glNormalStream3bvATI glew::gl::glNormalStream3bvATI
#define glNormalStream3sATI glew::gl::glNormalStream3sATI
#define glNormalStream3svATI glew::gl::glNormalStream3svATI
#define glNormalStream3iATI glew::gl::glNormalStream3iATI
#define glNormalStream3ivATI glew::gl::glNormalStream3ivATI
#define glNormalStream3fATI glew::gl::glNormalStream3fATI
#define glNormalStream3fvATI glew::gl::glNormalStream3fvATI
#define glNormalStream3dATI glew::gl::glNormalStream3dATI
#define glNormalStream3dvATI glew::gl::glNormalStream3dvATI
#define glClientActiveVertexStreamATI glew::gl::glClientActiveVertexStreamATI
#define glVertexBlendEnviATI glew::gl::glVertexBlendEnviATI
#define glVertexBlendEnvfATI glew::gl::glVertexBlendEnvfATI
#define glUniformBufferEXT glew::gl::glUniformBufferEXT
#define glGetUniformBufferSizeEXT glew::gl::glGetUniformBufferSizeEXT
#define glGetUniformOffsetEXT glew::gl::glGetUniformOffsetEXT
#define glBlendColorEXT glew::gl::glBlendColorEXT
#define glBlendEquationSeparateEXT glew::gl::glBlendEquationSeparateEXT
#define glBlendFuncSeparateEXT glew::gl::glBlendFuncSeparateEXT
#define glBlendEquationEXT glew::gl::glBlendEquationEXT
#define glColorSubTableEXT glew::gl::glColorSubTableEXT
#define glCopyColorSubTableEXT glew::gl::glCopyColorSubTableEXT
#define glLockArraysEXT glew::gl::glLockArraysEXT
#define glUnlockArraysEXT glew::gl::glUnlockArraysEXT
#define glConvolutionFilter1DEXT glew::gl::glConvolutionFilter1DEXT
#define glConvolutionFilter2DEXT glew::gl::glConvolutionFilter2DEXT
#define glConvolutionParameterfEXT glew::gl::glConvolutionParameterfEXT
#define glConvolutionParameterfvEXT glew::gl::glConvolutionParameterfvEXT
#define glConvolutionParameteriEXT glew::gl::glConvolutionParameteriEXT
#define glConvolutionParameterivEXT glew::gl::glConvolutionParameterivEXT
#define glCopyConvolutionFilter1DEXT glew::gl::glCopyConvolutionFilter1DEXT
#define glCopyConvolutionFilter2DEXT glew::gl::glCopyConvolutionFilter2DEXT
#define glGetConvolutionFilterEXT glew::gl::glGetConvolutionFilterEXT
#define glGetConvolutionParameterfvEXT glew::gl::glGetConvolutionParameterfvEXT
#define glGetConvolutionParameterivEXT glew::gl::glGetConvolutionParameterivEXT
#define glGetSeparableFilterEXT glew::gl::glGetSeparableFilterEXT
#define glSeparableFilter2DEXT glew::gl::glSeparableFilter2DEXT
#define glTangent3bEXT glew::gl::glTangent3bEXT
#define glTangent3bvEXT glew::gl::glTangent3bvEXT
#define glTangent3dEXT glew::gl::glTangent3dEXT
#define glTangent3dvEXT glew::gl::glTangent3dvEXT
#define glTangent3fEXT glew::gl::glTangent3fEXT
#define glTangent3fvEXT glew::gl::glTangent3fvEXT
#define glTangent3iEXT glew::gl::glTangent3iEXT
#define glTangent3ivEXT glew::gl::glTangent3ivEXT
#define glTangent3sEXT glew::gl::glTangent3sEXT
#define glTangent3svEXT glew::gl::glTangent3svEXT
#define glBinormal3bEXT glew::gl::glBinormal3bEXT
#define glBinormal3bvEXT glew::gl::glBinormal3bvEXT
#define glBinormal3dEXT glew::gl::glBinormal3dEXT
#define glBinormal3dvEXT glew::gl::glBinormal3dvEXT
#define glBinormal3fEXT glew::gl::glBinormal3fEXT
#define glBinormal3fvEXT glew::gl::glBinormal3fvEXT
#define glBinormal3iEXT glew::gl::glBinormal3iEXT
#define glBinormal3ivEXT glew::gl::glBinormal3ivEXT
#define glBinormal3sEXT glew::gl::glBinormal3sEXT
#define glBinormal3svEXT glew::gl::glBinormal3svEXT
#define glTangentPointerEXT glew::gl::glTangentPointerEXT
#define glBinormalPointerEXT glew::gl::glBinormalPointerEXT
#define glCopyTexImage1DEXT glew::gl::glCopyTexImage1DEXT
#define glCopyTexImage2DEXT glew::gl::glCopyTexImage2DEXT
#define glCopyTexSubImage1DEXT glew::gl::glCopyTexSubImage1DEXT
#define glCopyTexSubImage2DEXT glew::gl::glCopyTexSubImage2DEXT
#define glCopyTexSubImage3DEXT glew::gl::glCopyTexSubImage3DEXT
#define glCullParameterdvEXT glew::gl::glCullParameterdvEXT
#define glCullParameterfvEXT glew::gl::glCullParameterfvEXT
#define glLabelObjectEXT glew::gl::glLabelObjectEXT
#define glGetObjectLabelEXT glew::gl::glGetObjectLabelEXT
#define glInsertEventMarkerEXT glew::gl::glInsertEventMarkerEXT
#define glPushGroupMarkerEXT glew::gl::glPushGroupMarkerEXT
#define glPopGroupMarkerEXT glew::gl::glPopGroupMarkerEXT
#define glDepthBoundsEXT glew::gl::glDepthBoundsEXT
#define glMatrixLoadfEXT glew::gl::glMatrixLoadfEXT
#define glMatrixLoaddEXT glew::gl::glMatrixLoaddEXT
#define glMatrixMultfEXT glew::gl::glMatrixMultfEXT
#define glMatrixMultdEXT glew::gl::glMatrixMultdEXT
#define glMatrixLoadIdentityEXT glew::gl::glMatrixLoadIdentityEXT
#define glMatrixRotatefEXT glew::gl::glMatrixRotatefEXT
#define glMatrixRotatedEXT glew::gl::glMatrixRotatedEXT
#define glMatrixScalefEXT glew::gl::glMatrixScalefEXT
#define glMatrixScaledEXT glew::gl::glMatrixScaledEXT
#define glMatrixTranslatefEXT glew::gl::glMatrixTranslatefEXT
#define glMatrixTranslatedEXT glew::gl::glMatrixTranslatedEXT
#define glMatrixFrustumEXT glew::gl::glMatrixFrustumEXT
#define glMatrixOrthoEXT glew::gl::glMatrixOrthoEXT
#define glMatrixPopEXT glew::gl::glMatrixPopEXT
#define glMatrixPushEXT glew::gl::glMatrixPushEXT
#define glClientAttribDefaultEXT glew::gl::glClientAttribDefaultEXT
#define glPushClientAttribDefaultEXT glew::gl::glPushClientAttribDefaultEXT
#define glTextureParameterfEXT glew::gl::glTextureParameterfEXT
#define glTextureParameterfvEXT glew::gl::glTextureParameterfvEXT
#define glTextureParameteriEXT glew::gl::glTextureParameteriEXT
#define glTextureParameterivEXT glew::gl::glTextureParameterivEXT
#define glTextureImage1DEXT glew::gl::glTextureImage1DEXT
#define glTextureImage2DEXT glew::gl::glTextureImage2DEXT
#define glTextureSubImage1DEXT glew::gl::glTextureSubImage1DEXT
#define glTextureSubImage2DEXT glew::gl::glTextureSubImage2DEXT
#define glCopyTextureImage1DEXT glew::gl::glCopyTextureImage1DEXT
#define glCopyTextureImage2DEXT glew::gl::glCopyTextureImage2DEXT
#define glCopyTextureSubImage1DEXT glew::gl::glCopyTextureSubImage1DEXT
#define glCopyTextureSubImage2DEXT glew::gl::glCopyTextureSubImage2DEXT
#define glGetTextureImageEXT glew::gl::glGetTextureImageEXT
#define glGetTextureParameterfvEXT glew::gl::glGetTextureParameterfvEXT
#define glGetTextureParameterivEXT glew::gl::glGetTextureParameterivEXT
#define glGetTextureLevelParameterfvEXT glew::gl::glGetTextureLevelParameterfvEXT
#define glGetTextureLevelParameterivEXT glew::gl::glGetTextureLevelParameterivEXT
#define glTextureImage3DEXT glew::gl::glTextureImage3DEXT
#define glTextureSubImage3DEXT glew::gl::glTextureSubImage3DEXT
#define glCopyTextureSubImage3DEXT glew::gl::glCopyTextureSubImage3DEXT
#define glBindMultiTextureEXT glew::gl::glBindMultiTextureEXT
#define glMultiTexCoordPointerEXT glew::gl::glMultiTexCoordPointerEXT
#define glMultiTexEnvfEXT glew::gl::glMultiTexEnvfEXT
#define glMultiTexEnvfvEXT glew::gl::glMultiTexEnvfvEXT
#define glMultiTexEnviEXT glew::gl::glMultiTexEnviEXT
#define glMultiTexEnvivEXT glew::gl::glMultiTexEnvivEXT
#define glMultiTexGendEXT glew::gl::glMultiTexGendEXT
#define glMultiTexGendvEXT glew::gl::glMultiTexGendvEXT
#define glMultiTexGenfEXT glew::gl::glMultiTexGenfEXT
#define glMultiTexGenfvEXT glew::gl::glMultiTexGenfvEXT
#define glMultiTexGeniEXT glew::gl::glMultiTexGeniEXT
#define glMultiTexGenivEXT glew::gl::glMultiTexGenivEXT
#define glGetMultiTexEnvfvEXT glew::gl::glGetMultiTexEnvfvEXT
#define glGetMultiTexEnvivEXT glew::gl::glGetMultiTexEnvivEXT
#define glGetMultiTexGendvEXT glew::gl::glGetMultiTexGendvEXT
#define glGetMultiTexGenfvEXT glew::gl::glGetMultiTexGenfvEXT
#define glGetMultiTexGenivEXT glew::gl::glGetMultiTexGenivEXT
#define glMultiTexParameteriEXT glew::gl::glMultiTexParameteriEXT
#define glMultiTexParameterivEXT glew::gl::glMultiTexParameterivEXT
#define glMultiTexParameterfEXT glew::gl::glMultiTexParameterfEXT
#define glMultiTexParameterfvEXT glew::gl::glMultiTexParameterfvEXT
#define glMultiTexImage1DEXT glew::gl::glMultiTexImage1DEXT
#define glMultiTexImage2DEXT glew::gl::glMultiTexImage2DEXT
#define glMultiTexSubImage1DEXT glew::gl::glMultiTexSubImage1DEXT
#define glMultiTexSubImage2DEXT glew::gl::glMultiTexSubImage2DEXT
#define glCopyMultiTexImage1DEXT glew::gl::glCopyMultiTexImage1DEXT
#define glCopyMultiTexImage2DEXT glew::gl::glCopyMultiTexImage2DEXT
#define glCopyMultiTexSubImage1DEXT glew::gl::glCopyMultiTexSubImage1DEXT
#define glCopyMultiTexSubImage2DEXT glew::gl::glCopyMultiTexSubImage2DEXT
#define glGetMultiTexImageEXT glew::gl::glGetMultiTexImageEXT
#define glGetMultiTexParameterfvEXT glew::gl::glGetMultiTexParameterfvEXT
#define glGetMultiTexParameterivEXT glew::gl::glGetMultiTexParameterivEXT
#define glGetMultiTexLevelParameterfvEXT glew::gl::glGetMultiTexLevelParameterfvEXT
#define glGetMultiTexLevelParameterivEXT glew::gl::glGetMultiTexLevelParameterivEXT
#define glMultiTexImage3DEXT glew::gl::glMultiTexImage3DEXT
#define glMultiTexSubImage3DEXT glew::gl::glMultiTexSubImage3DEXT
#define glCopyMultiTexSubImage3DEXT glew::gl::glCopyMultiTexSubImage3DEXT
#define glEnableClientStateIndexedEXT glew::gl::glEnableClientStateIndexedEXT
#define glDisableClientStateIndexedEXT glew::gl::glDisableClientStateIndexedEXT
#define glGetFloatIndexedvEXT glew::gl::glGetFloatIndexedvEXT
#define glGetDoubleIndexedvEXT glew::gl::glGetDoubleIndexedvEXT
#define glGetPointerIndexedvEXT glew::gl::glGetPointerIndexedvEXT
#define glEnableIndexedEXT glew::gl::glEnableIndexedEXT
#define glDisableIndexedEXT glew::gl::glDisableIndexedEXT
#define glIsEnabledIndexedEXT glew::gl::glIsEnabledIndexedEXT
#define glGetIntegerIndexedvEXT glew::gl::glGetIntegerIndexedvEXT
#define glGetBooleanIndexedvEXT glew::gl::glGetBooleanIndexedvEXT
#define glCompressedTextureImage3DEXT glew::gl::glCompressedTextureImage3DEXT
#define glCompressedTextureImage2DEXT glew::gl::glCompressedTextureImage2DEXT
#define glCompressedTextureImage1DEXT glew::gl::glCompressedTextureImage1DEXT
#define glCompressedTextureSubImage3DEXT glew::gl::glCompressedTextureSubImage3DEXT
#define glCompressedTextureSubImage2DEXT glew::gl::glCompressedTextureSubImage2DEXT
#define glCompressedTextureSubImage1DEXT glew::gl::glCompressedTextureSubImage1DEXT
#define glGetCompressedTextureImageEXT glew::gl::glGetCompressedTextureImageEXT
#define glCompressedMultiTexImage3DEXT glew::gl::glCompressedMultiTexImage3DEXT
#define glCompressedMultiTexImage2DEXT glew::gl::glCompressedMultiTexImage2DEXT
#define glCompressedMultiTexImage1DEXT glew::gl::glCompressedMultiTexImage1DEXT
#define glCompressedMultiTexSubImage3DEXT glew::gl::glCompressedMultiTexSubImage3DEXT
#define glCompressedMultiTexSubImage2DEXT glew::gl::glCompressedMultiTexSubImage2DEXT
#define glCompressedMultiTexSubImage1DEXT glew::gl::glCompressedMultiTexSubImage1DEXT
#define glGetCompressedMultiTexImageEXT glew::gl::glGetCompressedMultiTexImageEXT
#define glMatrixLoadTransposefEXT glew::gl::glMatrixLoadTransposefEXT
#define glMatrixLoadTransposedEXT glew::gl::glMatrixLoadTransposedEXT
#define glMatrixMultTransposefEXT glew::gl::glMatrixMultTransposefEXT
#define glMatrixMultTransposedEXT glew::gl::glMatrixMultTransposedEXT
#define glNamedBufferDataEXT glew::gl::glNamedBufferDataEXT
#define glNamedBufferSubDataEXT glew::gl::glNamedBufferSubDataEXT
#define glMapNamedBufferEXT glew::gl::glMapNamedBufferEXT
#define glUnmapNamedBufferEXT glew::gl::glUnmapNamedBufferEXT
#define glGetNamedBufferParameterivEXT glew::gl::glGetNamedBufferParameterivEXT
#define glGetNamedBufferPointervEXT glew::gl::glGetNamedBufferPointervEXT
#define glGetNamedBufferSubDataEXT glew::gl::glGetNamedBufferSubDataEXT
#define glProgramUniform1fEXT glew::gl::glProgramUniform1fEXT
#define glProgramUniform2fEXT glew::gl::glProgramUniform2fEXT
#define glProgramUniform3fEXT glew::gl::glProgramUniform3fEXT
#define glProgramUniform4fEXT glew::gl::glProgramUniform4fEXT
#define glProgramUniform1iEXT glew::gl::glProgramUniform1iEXT
#define glProgramUniform2iEXT glew::gl::glProgramUniform2iEXT
#define glProgramUniform3iEXT glew::gl::glProgramUniform3iEXT
#define glProgramUniform4iEXT glew::gl::glProgramUniform4iEXT
#define glProgramUniform1fvEXT glew::gl::glProgramUniform1fvEXT
#define glProgramUniform2fvEXT glew::gl::glProgramUniform2fvEXT
#define glProgramUniform3fvEXT glew::gl::glProgramUniform3fvEXT
#define glProgramUniform4fvEXT glew::gl::glProgramUniform4fvEXT
#define glProgramUniform1ivEXT glew::gl::glProgramUniform1ivEXT
#define glProgramUniform2ivEXT glew::gl::glProgramUniform2ivEXT
#define glProgramUniform3ivEXT glew::gl::glProgramUniform3ivEXT
#define glProgramUniform4ivEXT glew::gl::glProgramUniform4ivEXT
#define glProgramUniformMatrix2fvEXT glew::gl::glProgramUniformMatrix2fvEXT
#define glProgramUniformMatrix3fvEXT glew::gl::glProgramUniformMatrix3fvEXT
#define glProgramUniformMatrix4fvEXT glew::gl::glProgramUniformMatrix4fvEXT
#define glProgramUniformMatrix2x3fvEXT glew::gl::glProgramUniformMatrix2x3fvEXT
#define glProgramUniformMatrix3x2fvEXT glew::gl::glProgramUniformMatrix3x2fvEXT
#define glProgramUniformMatrix2x4fvEXT glew::gl::glProgramUniformMatrix2x4fvEXT
#define glProgramUniformMatrix4x2fvEXT glew::gl::glProgramUniformMatrix4x2fvEXT
#define glProgramUniformMatrix3x4fvEXT glew::gl::glProgramUniformMatrix3x4fvEXT
#define glProgramUniformMatrix4x3fvEXT glew::gl::glProgramUniformMatrix4x3fvEXT
#define glTextureBufferEXT glew::gl::glTextureBufferEXT
#define glMultiTexBufferEXT glew::gl::glMultiTexBufferEXT
#define glTextureParameterIivEXT glew::gl::glTextureParameterIivEXT
#define glTextureParameterIuivEXT glew::gl::glTextureParameterIuivEXT
#define glGetTextureParameterIivEXT glew::gl::glGetTextureParameterIivEXT
#define glGetTextureParameterIuivEXT glew::gl::glGetTextureParameterIuivEXT
#define glMultiTexParameterIivEXT glew::gl::glMultiTexParameterIivEXT
#define glMultiTexParameterIuivEXT glew::gl::glMultiTexParameterIuivEXT
#define glGetMultiTexParameterIivEXT glew::gl::glGetMultiTexParameterIivEXT
#define glGetMultiTexParameterIuivEXT glew::gl::glGetMultiTexParameterIuivEXT
#define glProgramUniform1uiEXT glew::gl::glProgramUniform1uiEXT
#define glProgramUniform2uiEXT glew::gl::glProgramUniform2uiEXT
#define glProgramUniform3uiEXT glew::gl::glProgramUniform3uiEXT
#define glProgramUniform4uiEXT glew::gl::glProgramUniform4uiEXT
#define glProgramUniform1uivEXT glew::gl::glProgramUniform1uivEXT
#define glProgramUniform2uivEXT glew::gl::glProgramUniform2uivEXT
#define glProgramUniform3uivEXT glew::gl::glProgramUniform3uivEXT
#define glProgramUniform4uivEXT glew::gl::glProgramUniform4uivEXT
#define glNamedProgramLocalParameters4fvEXT glew::gl::glNamedProgramLocalParameters4fvEXT
#define glNamedProgramLocalParameterI4iEXT glew::gl::glNamedProgramLocalParameterI4iEXT
#define glNamedProgramLocalParameterI4ivEXT glew::gl::glNamedProgramLocalParameterI4ivEXT
#define glNamedProgramLocalParametersI4ivEXT glew::gl::glNamedProgramLocalParametersI4ivEXT
#define glNamedProgramLocalParameterI4uiEXT glew::gl::glNamedProgramLocalParameterI4uiEXT
#define glNamedProgramLocalParameterI4uivEXT glew::gl::glNamedProgramLocalParameterI4uivEXT
#define glNamedProgramLocalParametersI4uivEXT glew::gl::glNamedProgramLocalParametersI4uivEXT
#define glGetNamedProgramLocalParameterIivEXT glew::gl::glGetNamedProgramLocalParameterIivEXT
#define glGetNamedProgramLocalParameterIuivEXT glew::gl::glGetNamedProgramLocalParameterIuivEXT
#define glEnableClientStateiEXT glew::gl::glEnableClientStateiEXT
#define glDisableClientStateiEXT glew::gl::glDisableClientStateiEXT
#define glGetFloati_vEXT glew::gl::glGetFloati_vEXT
#define glGetDoublei_vEXT glew::gl::glGetDoublei_vEXT
#define glGetPointeri_vEXT glew::gl::glGetPointeri_vEXT
#define glNamedProgramStringEXT glew::gl::glNamedProgramStringEXT
#define glNamedProgramLocalParameter4dEXT glew::gl::glNamedProgramLocalParameter4dEXT
#define glNamedProgramLocalParameter4dvEXT glew::gl::glNamedProgramLocalParameter4dvEXT
#define glNamedProgramLocalParameter4fEXT glew::gl::glNamedProgramLocalParameter4fEXT
#define glNamedProgramLocalParameter4fvEXT glew::gl::glNamedProgramLocalParameter4fvEXT
#define glGetNamedProgramLocalParameterdvEXT glew::gl::glGetNamedProgramLocalParameterdvEXT
#define glGetNamedProgramLocalParameterfvEXT glew::gl::glGetNamedProgramLocalParameterfvEXT
#define glGetNamedProgramivEXT glew::gl::glGetNamedProgramivEXT
#define glGetNamedProgramStringEXT glew::gl::glGetNamedProgramStringEXT
#define glNamedRenderbufferStorageEXT glew::gl::glNamedRenderbufferStorageEXT
#define glGetNamedRenderbufferParameterivEXT glew::gl::glGetNamedRenderbufferParameterivEXT
#define glNamedRenderbufferStorageMultisampleEXT glew::gl::glNamedRenderbufferStorageMultisampleEXT
#define glNamedRenderbufferStorageMultisampleCoverageEXT glew::gl::glNamedRenderbufferStorageMultisampleCoverageEXT
#define glCheckNamedFramebufferStatusEXT glew::gl::glCheckNamedFramebufferStatusEXT
#define glNamedFramebufferTexture1DEXT glew::gl::glNamedFramebufferTexture1DEXT
#define glNamedFramebufferTexture2DEXT glew::gl::glNamedFramebufferTexture2DEXT
#define glNamedFramebufferTexture3DEXT glew::gl::glNamedFramebufferTexture3DEXT
#define glNamedFramebufferRenderbufferEXT glew::gl::glNamedFramebufferRenderbufferEXT
#define glGetNamedFramebufferAttachmentParameterivEXT glew::gl::glGetNamedFramebufferAttachmentParameterivEXT
#define glGenerateTextureMipmapEXT glew::gl::glGenerateTextureMipmapEXT
#define glGenerateMultiTexMipmapEXT glew::gl::glGenerateMultiTexMipmapEXT
#define glFramebufferDrawBufferEXT glew::gl::glFramebufferDrawBufferEXT
#define glFramebufferDrawBuffersEXT glew::gl::glFramebufferDrawBuffersEXT
#define glFramebufferReadBufferEXT glew::gl::glFramebufferReadBufferEXT
#define glGetFramebufferParameterivEXT glew::gl::glGetFramebufferParameterivEXT
#define glNamedCopyBufferSubDataEXT glew::gl::glNamedCopyBufferSubDataEXT
#define glNamedFramebufferTextureEXT glew::gl::glNamedFramebufferTextureEXT
#define glNamedFramebufferTextureLayerEXT glew::gl::glNamedFramebufferTextureLayerEXT
#define glNamedFramebufferTextureFaceEXT glew::gl::glNamedFramebufferTextureFaceEXT
#define glTextureRenderbufferEXT glew::gl::glTextureRenderbufferEXT
#define glMultiTexRenderbufferEXT glew::gl::glMultiTexRenderbufferEXT
#define glVertexArrayVertexOffsetEXT glew::gl::glVertexArrayVertexOffsetEXT
#define glVertexArrayColorOffsetEXT glew::gl::glVertexArrayColorOffsetEXT
#define glVertexArrayEdgeFlagOffsetEXT glew::gl::glVertexArrayEdgeFlagOffsetEXT
#define glVertexArrayIndexOffsetEXT glew::gl::glVertexArrayIndexOffsetEXT
#define glVertexArrayNormalOffsetEXT glew::gl::glVertexArrayNormalOffsetEXT
#define glVertexArrayTexCoordOffsetEXT glew::gl::glVertexArrayTexCoordOffsetEXT
#define glVertexArrayMultiTexCoordOffsetEXT glew::gl::glVertexArrayMultiTexCoordOffsetEXT
#define glVertexArrayFogCoordOffsetEXT glew::gl::glVertexArrayFogCoordOffsetEXT
#define glVertexArraySecondaryColorOffsetEXT glew::gl::glVertexArraySecondaryColorOffsetEXT
#define glVertexArrayVertexAttribOffsetEXT glew::gl::glVertexArrayVertexAttribOffsetEXT
#define glVertexArrayVertexAttribIOffsetEXT glew::gl::glVertexArrayVertexAttribIOffsetEXT
#define glEnableVertexArrayEXT glew::gl::glEnableVertexArrayEXT
#define glDisableVertexArrayEXT glew::gl::glDisableVertexArrayEXT
#define glEnableVertexArrayAttribEXT glew::gl::glEnableVertexArrayAttribEXT
#define glDisableVertexArrayAttribEXT glew::gl::glDisableVertexArrayAttribEXT
#define glGetVertexArrayIntegervEXT glew::gl::glGetVertexArrayIntegervEXT
#define glGetVertexArrayPointervEXT glew::gl::glGetVertexArrayPointervEXT
#define glGetVertexArrayIntegeri_vEXT glew::gl::glGetVertexArrayIntegeri_vEXT
#define glGetVertexArrayPointeri_vEXT glew::gl::glGetVertexArrayPointeri_vEXT
#define glMapNamedBufferRangeEXT glew::gl::glMapNamedBufferRangeEXT
#define glFlushMappedNamedBufferRangeEXT glew::gl::glFlushMappedNamedBufferRangeEXT
#define glNamedBufferStorageEXT glew::gl::glNamedBufferStorageEXT
#define glClearNamedBufferDataEXT glew::gl::glClearNamedBufferDataEXT
#define glClearNamedBufferSubDataEXT glew::gl::glClearNamedBufferSubDataEXT
#define glNamedFramebufferParameteriEXT glew::gl::glNamedFramebufferParameteriEXT
#define glGetNamedFramebufferParameterivEXT glew::gl::glGetNamedFramebufferParameterivEXT
#define glProgramUniform1dEXT glew::gl::glProgramUniform1dEXT
#define glProgramUniform2dEXT glew::gl::glProgramUniform2dEXT
#define glProgramUniform3dEXT glew::gl::glProgramUniform3dEXT
#define glProgramUniform4dEXT glew::gl::glProgramUniform4dEXT
#define glProgramUniform1dvEXT glew::gl::glProgramUniform1dvEXT
#define glProgramUniform2dvEXT glew::gl::glProgramUniform2dvEXT
#define glProgramUniform3dvEXT glew::gl::glProgramUniform3dvEXT
#define glProgramUniform4dvEXT glew::gl::glProgramUniform4dvEXT
#define glProgramUniformMatrix2dvEXT glew::gl::glProgramUniformMatrix2dvEXT
#define glProgramUniformMatrix3dvEXT glew::gl::glProgramUniformMatrix3dvEXT
#define glProgramUniformMatrix4dvEXT glew::gl::glProgramUniformMatrix4dvEXT
#define glProgramUniformMatrix2x3dvEXT glew::gl::glProgramUniformMatrix2x3dvEXT
#define glProgramUniformMatrix2x4dvEXT glew::gl::glProgramUniformMatrix2x4dvEXT
#define glProgramUniformMatrix3x2dvEXT glew::gl::glProgramUniformMatrix3x2dvEXT
#define glProgramUniformMatrix3x4dvEXT glew::gl::glProgramUniformMatrix3x4dvEXT
#define glProgramUniformMatrix4x2dvEXT glew::gl::glProgramUniformMatrix4x2dvEXT
#define glProgramUniformMatrix4x3dvEXT glew::gl::glProgramUniformMatrix4x3dvEXT
#define glTextureBufferRangeEXT glew::gl::glTextureBufferRangeEXT
#define glTextureStorage1DEXT glew::gl::glTextureStorage1DEXT
#define glTextureStorage2DEXT glew::gl::glTextureStorage2DEXT
#define glTextureStorage3DEXT glew::gl::glTextureStorage3DEXT
#define glTextureStorage2DMultisampleEXT glew::gl::glTextureStorage2DMultisampleEXT
#define glTextureStorage3DMultisampleEXT glew::gl::glTextureStorage3DMultisampleEXT
#define glVertexArrayBindVertexBufferEXT glew::gl::glVertexArrayBindVertexBufferEXT
#define glVertexArrayVertexAttribFormatEXT glew::gl::glVertexArrayVertexAttribFormatEXT
#define glVertexArrayVertexAttribIFormatEXT glew::gl::glVertexArrayVertexAttribIFormatEXT
#define glVertexArrayVertexAttribLFormatEXT glew::gl::glVertexArrayVertexAttribLFormatEXT
#define glVertexArrayVertexAttribBindingEXT glew::gl::glVertexArrayVertexAttribBindingEXT
#define glVertexArrayVertexBindingDivisorEXT glew::gl::glVertexArrayVertexBindingDivisorEXT
#define glVertexArrayVertexAttribLOffsetEXT glew::gl::glVertexArrayVertexAttribLOffsetEXT
#define glTexturePageCommitmentEXT glew::gl::glTexturePageCommitmentEXT
#define glVertexArrayVertexAttribDivisorEXT glew::gl::glVertexArrayVertexAttribDivisorEXT
#define glColorMaskIndexedEXT glew::gl::glColorMaskIndexedEXT
#define glDrawArraysInstancedEXT glew::gl::glDrawArraysInstancedEXT
#define glDrawElementsInstancedEXT glew::gl::glDrawElementsInstancedEXT
#define glDrawRangeElementsEXT glew::gl::glDrawRangeElementsEXT
#define glFogCoordfEXT glew::gl::glFogCoordfEXT
#define glFogCoordfvEXT glew::gl::glFogCoordfvEXT
#define glFogCoorddEXT glew::gl::glFogCoorddEXT
#define glFogCoorddvEXT glew::gl::glFogCoorddvEXT
#define glFogCoordPointerEXT glew::gl::glFogCoordPointerEXT
#define glBlitFramebufferEXT glew::gl::glBlitFramebufferEXT
#define glRenderbufferStorageMultisampleEXT glew::gl::glRenderbufferStorageMultisampleEXT
#define glIsRenderbufferEXT glew::gl::glIsRenderbufferEXT
#define glBindRenderbufferEXT glew::gl::glBindRenderbufferEXT
#define glDeleteRenderbuffersEXT glew::gl::glDeleteRenderbuffersEXT
#define glGenRenderbuffersEXT glew::gl::glGenRenderbuffersEXT
#define glRenderbufferStorageEXT glew::gl::glRenderbufferStorageEXT
#define glGetRenderbufferParameterivEXT glew::gl::glGetRenderbufferParameterivEXT
#define glIsFramebufferEXT glew::gl::glIsFramebufferEXT
#define glBindFramebufferEXT glew::gl::glBindFramebufferEXT
#define glDeleteFramebuffersEXT glew::gl::glDeleteFramebuffersEXT
#define glGenFramebuffersEXT glew::gl::glGenFramebuffersEXT
#define glCheckFramebufferStatusEXT glew::gl::glCheckFramebufferStatusEXT
#define glFramebufferTexture1DEXT glew::gl::glFramebufferTexture1DEXT
#define glFramebufferTexture2DEXT glew::gl::glFramebufferTexture2DEXT
#define glFramebufferTexture3DEXT glew::gl::glFramebufferTexture3DEXT
#define glFramebufferRenderbufferEXT glew::gl::glFramebufferRenderbufferEXT
#define glGetFramebufferAttachmentParameterivEXT glew::gl::glGetFramebufferAttachmentParameterivEXT
#define glGenerateMipmapEXT glew::gl::glGenerateMipmapEXT
#define glProgramParameteriEXT glew::gl::glProgramParameteriEXT
#define glProgramEnvParameters4fvEXT glew::gl::glProgramEnvParameters4fvEXT
#define glProgramLocalParameters4fvEXT glew::gl::glProgramLocalParameters4fvEXT
#define glGetUniformuivEXT glew::gl::glGetUniformuivEXT
#define glBindFragDataLocationEXT glew::gl::glBindFragDataLocationEXT
#define glGetFragDataLocationEXT glew::gl::glGetFragDataLocationEXT
#define glUniform1uiEXT glew::gl::glUniform1uiEXT
#define glUniform2uiEXT glew::gl::glUniform2uiEXT
#define glUniform3uiEXT glew::gl::glUniform3uiEXT
#define glUniform4uiEXT glew::gl::glUniform4uiEXT
#define glUniform1uivEXT glew::gl::glUniform1uivEXT
#define glUniform2uivEXT glew::gl::glUniform2uivEXT
#define glUniform3uivEXT glew::gl::glUniform3uivEXT
#define glUniform4uivEXT glew::gl::glUniform4uivEXT
#define glGetHistogramEXT glew::gl::glGetHistogramEXT
#define glGetHistogramParameterfvEXT glew::gl::glGetHistogramParameterfvEXT
#define glGetHistogramParameterivEXT glew::gl::glGetHistogramParameterivEXT
#define glGetMinmaxEXT glew::gl::glGetMinmaxEXT
#define glGetMinmaxParameterfvEXT glew::gl::glGetMinmaxParameterfvEXT
#define glGetMinmaxParameterivEXT glew::gl::glGetMinmaxParameterivEXT
#define glHistogramEXT glew::gl::glHistogramEXT
#define glMinmaxEXT glew::gl::glMinmaxEXT
#define glResetHistogramEXT glew::gl::glResetHistogramEXT
#define glResetMinmaxEXT glew::gl::glResetMinmaxEXT
#define glIndexFuncEXT glew::gl::glIndexFuncEXT
#define glIndexMaterialEXT glew::gl::glIndexMaterialEXT
#define glApplyTextureEXT glew::gl::glApplyTextureEXT
#define glTextureLightEXT glew::gl::glTextureLightEXT
#define glTextureMaterialEXT glew::gl::glTextureMaterialEXT
#define glMultiDrawArraysEXT glew::gl::glMultiDrawArraysEXT
#define glMultiDrawElementsEXT glew::gl::glMultiDrawElementsEXT
#define glSampleMaskEXT glew::gl::glSampleMaskEXT
#define glSamplePatternEXT glew::gl::glSamplePatternEXT
#define glColorTableEXT glew::gl::glColorTableEXT
#define glGetColorTableEXT glew::gl::glGetColorTableEXT
#define glGetColorTableParameterivEXT glew::gl::glGetColorTableParameterivEXT
#define glGetColorTableParameterfvEXT glew::gl::glGetColorTableParameterfvEXT
#define glPixelTransformParameteriEXT glew::gl::glPixelTransformParameteriEXT
#define glPixelTransformParameterfEXT glew::gl::glPixelTransformParameterfEXT
#define glPixelTransformParameterivEXT glew::gl::glPixelTransformParameterivEXT
#define glPixelTransformParameterfvEXT glew::gl::glPixelTransformParameterfvEXT
#define glGetPixelTransformParameterivEXT glew::gl::glGetPixelTransformParameterivEXT
#define glGetPixelTransformParameterfvEXT glew::gl::glGetPixelTransformParameterfvEXT
#define glPointParameterfEXT glew::gl::glPointParameterfEXT
#define glPointParameterfvEXT glew::gl::glPointParameterfvEXT
#define glPolygonOffsetEXT glew::gl::glPolygonOffsetEXT
#define glPolygonOffsetClampEXT glew::gl::glPolygonOffsetClampEXT
#define glProvokingVertexEXT glew::gl::glProvokingVertexEXT
#define glRasterSamplesEXT glew::gl::glRasterSamplesEXT
#define glSecondaryColor3bEXT glew::gl::glSecondaryColor3bEXT
#define glSecondaryColor3bvEXT glew::gl::glSecondaryColor3bvEXT
#define glSecondaryColor3dEXT glew::gl::glSecondaryColor3dEXT
#define glSecondaryColor3dvEXT glew::gl::glSecondaryColor3dvEXT
#define glSecondaryColor3fEXT glew::gl::glSecondaryColor3fEXT
#define glSecondaryColor3fvEXT glew::gl::glSecondaryColor3fvEXT
#define glSecondaryColor3iEXT glew::gl::glSecondaryColor3iEXT
#define glSecondaryColor3ivEXT glew::gl::glSecondaryColor3ivEXT
#define glSecondaryColor3sEXT glew::gl::glSecondaryColor3sEXT
#define glSecondaryColor3svEXT glew::gl::glSecondaryColor3svEXT
#define glSecondaryColor3ubEXT glew::gl::glSecondaryColor3ubEXT
#define glSecondaryColor3ubvEXT glew::gl::glSecondaryColor3ubvEXT
#define glSecondaryColor3uiEXT glew::gl::glSecondaryColor3uiEXT
#define glSecondaryColor3uivEXT glew::gl::glSecondaryColor3uivEXT
#define glSecondaryColor3usEXT glew::gl::glSecondaryColor3usEXT
#define glSecondaryColor3usvEXT glew::gl::glSecondaryColor3usvEXT
#define glSecondaryColorPointerEXT glew::gl::glSecondaryColorPointerEXT
#define glUseShaderProgramEXT glew::gl::glUseShaderProgramEXT
#define glActiveProgramEXT glew::gl::glActiveProgramEXT
#define glCreateShaderProgramEXT glew::gl::glCreateShaderProgramEXT
#define glBindImageTextureEXT glew::gl::glBindImageTextureEXT
#define glMemoryBarrierEXT glew::gl::glMemoryBarrierEXT
#define glStencilClearTagEXT glew::gl::glStencilClearTagEXT
#define glActiveStencilFaceEXT glew::gl::glActiveStencilFaceEXT
#define glTexSubImage1DEXT glew::gl::glTexSubImage1DEXT
#define glTexSubImage2DEXT glew::gl::glTexSubImage2DEXT
#define glTexImage3DEXT glew::gl::glTexImage3DEXT
#define glTexSubImage3DEXT glew::gl::glTexSubImage3DEXT
#define glFramebufferTextureLayerEXT glew::gl::glFramebufferTextureLayerEXT
#define glTexBufferEXT glew::gl::glTexBufferEXT
#define glTexParameterIivEXT glew::gl::glTexParameterIivEXT
#define glTexParameterIuivEXT glew::gl::glTexParameterIuivEXT
#define glGetTexParameterIivEXT glew::gl::glGetTexParameterIivEXT
#define glGetTexParameterIuivEXT glew::gl::glGetTexParameterIuivEXT
#define glClearColorIiEXT glew::gl::glClearColorIiEXT
#define glClearColorIuiEXT glew::gl::glClearColorIuiEXT
#define glAreTexturesResidentEXT glew::gl::glAreTexturesResidentEXT
#define glBindTextureEXT glew::gl::glBindTextureEXT
#define glDeleteTexturesEXT glew::gl::glDeleteTexturesEXT
#define glGenTexturesEXT glew::gl::glGenTexturesEXT
#define glIsTextureEXT glew::gl::glIsTextureEXT
#define glPrioritizeTexturesEXT glew::gl::glPrioritizeTexturesEXT
#define glTextureNormalEXT glew::gl::glTextureNormalEXT
#define glGetQueryObjecti64vEXT glew::gl::glGetQueryObjecti64vEXT
#define glGetQueryObjectui64vEXT glew::gl::glGetQueryObjectui64vEXT
#define glBeginTransformFeedbackEXT glew::gl::glBeginTransformFeedbackEXT
#define glEndTransformFeedbackEXT glew::gl::glEndTransformFeedbackEXT
#define glBindBufferRangeEXT glew::gl::glBindBufferRangeEXT
#define glBindBufferOffsetEXT glew::gl::glBindBufferOffsetEXT
#define glBindBufferBaseEXT glew::gl::glBindBufferBaseEXT
#define glTransformFeedbackVaryingsEXT glew::gl::glTransformFeedbackVaryingsEXT
#define glGetTransformFeedbackVaryingEXT glew::gl::glGetTransformFeedbackVaryingEXT
#define glArrayElementEXT glew::gl::glArrayElementEXT
#define glColorPointerEXT glew::gl::glColorPointerEXT
#define glDrawArraysEXT glew::gl::glDrawArraysEXT
#define glEdgeFlagPointerEXT glew::gl::glEdgeFlagPointerEXT
#define glGetPointervEXT glew::gl::glGetPointervEXT
#define glIndexPointerEXT glew::gl::glIndexPointerEXT
#define glNormalPointerEXT glew::gl::glNormalPointerEXT
#define glTexCoordPointerEXT glew::gl::glTexCoordPointerEXT
#define glVertexPointerEXT glew::gl::glVertexPointerEXT
#define glVertexAttribL1dEXT glew::gl::glVertexAttribL1dEXT
#define glVertexAttribL2dEXT glew::gl::glVertexAttribL2dEXT
#define glVertexAttribL3dEXT glew::gl::glVertexAttribL3dEXT
#define glVertexAttribL4dEXT glew::gl::glVertexAttribL4dEXT
#define glVertexAttribL1dvEXT glew::gl::glVertexAttribL1dvEXT
#define glVertexAttribL2dvEXT glew::gl::glVertexAttribL2dvEXT
#define glVertexAttribL3dvEXT glew::gl::glVertexAttribL3dvEXT
#define glVertexAttribL4dvEXT glew::gl::glVertexAttribL4dvEXT
#define glVertexAttribLPointerEXT glew::gl::glVertexAttribLPointerEXT
#define glGetVertexAttribLdvEXT glew::gl::glGetVertexAttribLdvEXT
#define glBeginVertexShaderEXT glew::gl::glBeginVertexShaderEXT
#define glEndVertexShaderEXT glew::gl::glEndVertexShaderEXT
#define glBindVertexShaderEXT glew::gl::glBindVertexShaderEXT
#define glGenVertexShadersEXT glew::gl::glGenVertexShadersEXT
#define glDeleteVertexShaderEXT glew::gl::glDeleteVertexShaderEXT
#define glShaderOp1EXT glew::gl::glShaderOp1EXT
#define glShaderOp2EXT glew::gl::glShaderOp2EXT
#define glShaderOp3EXT glew::gl::glShaderOp3EXT
#define glSwizzleEXT glew::gl::glSwizzleEXT
#define glWriteMaskEXT glew::gl::glWriteMaskEXT
#define glInsertComponentEXT glew::gl::glInsertComponentEXT
#define glExtractComponentEXT glew::gl::glExtractComponentEXT
#define glGenSymbolsEXT glew::gl::glGenSymbolsEXT
#define glSetInvariantEXT glew::gl::glSetInvariantEXT
#define glSetLocalConstantEXT glew::gl::glSetLocalConstantEXT
#define glVariantbvEXT glew::gl::glVariantbvEXT
#define glVariantsvEXT glew::gl::glVariantsvEXT
#define glVariantivEXT glew::gl::glVariantivEXT
#define glVariantfvEXT glew::gl::glVariantfvEXT
#define glVariantdvEXT glew::gl::glVariantdvEXT
#define glVariantubvEXT glew::gl::glVariantubvEXT
#define glVariantusvEXT glew::gl::glVariantusvEXT
#define glVariantuivEXT glew::gl::glVariantuivEXT
#define glVariantPointerEXT glew::gl::glVariantPointerEXT
#define glEnableVariantClientStateEXT glew::gl::glEnableVariantClientStateEXT
#define glDisableVariantClientStateEXT glew::gl::glDisableVariantClientStateEXT
#define glBindLightParameterEXT glew::gl::glBindLightParameterEXT
#define glBindMaterialParameterEXT glew::gl::glBindMaterialParameterEXT
#define glBindTexGenParameterEXT glew::gl::glBindTexGenParameterEXT
#define glBindTextureUnitParameterEXT glew::gl::glBindTextureUnitParameterEXT
#define glBindParameterEXT glew::gl::glBindParameterEXT
#define glIsVariantEnabledEXT glew::gl::glIsVariantEnabledEXT
#define glGetVariantBooleanvEXT glew::gl::glGetVariantBooleanvEXT
#define glGetVariantIntegervEXT glew::gl::glGetVariantIntegervEXT
#define glGetVariantFloatvEXT glew::gl::glGetVariantFloatvEXT
#define glGetVariantPointervEXT glew::gl::glGetVariantPointervEXT
#define glGetInvariantBooleanvEXT glew::gl::glGetInvariantBooleanvEXT
#define glGetInvariantIntegervEXT glew::gl::glGetInvariantIntegervEXT
#define glGetInvariantFloatvEXT glew::gl::glGetInvariantFloatvEXT
#define glGetLocalConstantBooleanvEXT glew::gl::glGetLocalConstantBooleanvEXT
#define glGetLocalConstantIntegervEXT glew::gl::glGetLocalConstantIntegervEXT
#define glGetLocalConstantFloatvEXT glew::gl::glGetLocalConstantFloatvEXT
#define glVertexWeightfEXT glew::gl::glVertexWeightfEXT
#define glVertexWeightfvEXT glew::gl::glVertexWeightfvEXT
#define glVertexWeightPointerEXT glew::gl::glVertexWeightPointerEXT
#define glImportSyncEXT glew::gl::glImportSyncEXT
#define glFrameTerminatorGREMEDY glew::gl::glFrameTerminatorGREMEDY
#define glStringMarkerGREMEDY glew::gl::glStringMarkerGREMEDY
#define glImageTransformParameteriHP glew::gl::glImageTransformParameteriHP
#define glImageTransformParameterfHP glew::gl::glImageTransformParameterfHP
#define glImageTransformParameterivHP glew::gl::glImageTransformParameterivHP
#define glImageTransformParameterfvHP glew::gl::glImageTransformParameterfvHP
#define glGetImageTransformParameterivHP glew::gl::glGetImageTransformParameterivHP
#define glGetImageTransformParameterfvHP glew::gl::glGetImageTransformParameterfvHP
#define glMultiModeDrawArraysIBM glew::gl::glMultiModeDrawArraysIBM
#define glMultiModeDrawElementsIBM glew::gl::glMultiModeDrawElementsIBM
#define glFlushStaticDataIBM glew::gl::glFlushStaticDataIBM
#define glColorPointerListIBM glew::gl::glColorPointerListIBM
#define glSecondaryColorPointerListIBM glew::gl::glSecondaryColorPointerListIBM
#define glEdgeFlagPointerListIBM glew::gl::glEdgeFlagPointerListIBM
#define glFogCoordPointerListIBM glew::gl::glFogCoordPointerListIBM
#define glIndexPointerListIBM glew::gl::glIndexPointerListIBM
#define glNormalPointerListIBM glew::gl::glNormalPointerListIBM
#define glTexCoordPointerListIBM glew::gl::glTexCoordPointerListIBM
#define glVertexPointerListIBM glew::gl::glVertexPointerListIBM
#define glBlendFuncSeparateINGR glew::gl::glBlendFuncSeparateINGR
#define glSyncTextureINTEL glew::gl::glSyncTextureINTEL
#define glUnmapTexture2DINTEL glew::gl::glUnmapTexture2DINTEL
#define glMapTexture2DINTEL glew::gl::glMapTexture2DINTEL
#define glVertexPointervINTEL glew::gl::glVertexPointervINTEL
#define glNormalPointervINTEL glew::gl::glNormalPointervINTEL
#define glColorPointervINTEL glew::gl::glColorPointervINTEL
#define glTexCoordPointervINTEL glew::gl::glTexCoordPointervINTEL
#define glBeginPerfQueryINTEL glew::gl::glBeginPerfQueryINTEL
#define glCreatePerfQueryINTEL glew::gl::glCreatePerfQueryINTEL
#define glDeletePerfQueryINTEL glew::gl::glDeletePerfQueryINTEL
#define glEndPerfQueryINTEL glew::gl::glEndPerfQueryINTEL
#define glGetFirstPerfQueryIdINTEL glew::gl::glGetFirstPerfQueryIdINTEL
#define glGetNextPerfQueryIdINTEL glew::gl::glGetNextPerfQueryIdINTEL
#define glGetPerfCounterInfoINTEL glew::gl::glGetPerfCounterInfoINTEL
#define glGetPerfQueryDataINTEL glew::gl::glGetPerfQueryDataINTEL
#define glGetPerfQueryIdByNameINTEL glew::gl::glGetPerfQueryIdByNameINTEL
#define glGetPerfQueryInfoINTEL glew::gl::glGetPerfQueryInfoINTEL
#define glBlendBarrierKHR glew::gl::glBlendBarrierKHR
#define glResizeBuffersMESA glew::gl::glResizeBuffersMESA
#define glWindowPos2dMESA glew::gl::glWindowPos2dMESA
#define glWindowPos2dvMESA glew::gl::glWindowPos2dvMESA
#define glWindowPos2fMESA glew::gl::glWindowPos2fMESA
#define glWindowPos2fvMESA glew::gl::glWindowPos2fvMESA
#define glWindowPos2iMESA glew::gl::glWindowPos2iMESA
#define glWindowPos2ivMESA glew::gl::glWindowPos2ivMESA
#define glWindowPos2sMESA glew::gl::glWindowPos2sMESA
#define glWindowPos2svMESA glew::gl::glWindowPos2svMESA
#define glWindowPos3dMESA glew::gl::glWindowPos3dMESA
#define glWindowPos3dvMESA glew::gl::glWindowPos3dvMESA
#define glWindowPos3fMESA glew::gl::glWindowPos3fMESA
#define glWindowPos3fvMESA glew::gl::glWindowPos3fvMESA
#define glWindowPos3iMESA glew::gl::glWindowPos3iMESA
#define glWindowPos3ivMESA glew::gl::glWindowPos3ivMESA
#define glWindowPos3sMESA glew::gl::glWindowPos3sMESA
#define glWindowPos3svMESA glew::gl::glWindowPos3svMESA
#define glWindowPos4dMESA glew::gl::glWindowPos4dMESA
#define glWindowPos4dvMESA glew::gl::glWindowPos4dvMESA
#define glWindowPos4fMESA glew::gl::glWindowPos4fMESA
#define glWindowPos4fvMESA glew::gl::glWindowPos4fvMESA
#define glWindowPos4iMESA glew::gl::glWindowPos4iMESA
#define glWindowPos4ivMESA glew::gl::glWindowPos4ivMESA
#define glWindowPos4sMESA glew::gl::glWindowPos4sMESA
#define glWindowPos4svMESA glew::gl::glWindowPos4svMESA
#define glBeginConditionalRenderNVX glew::gl::glBeginConditionalRenderNVX
#define glEndConditionalRenderNVX glew::gl::glEndConditionalRenderNVX
#define glMultiDrawArraysIndirectBindlessNV glew::gl::glMultiDrawArraysIndirectBindlessNV
#define glMultiDrawElementsIndirectBindlessNV glew::gl::glMultiDrawElementsIndirectBindlessNV
#define glMultiDrawArraysIndirectBindlessCountNV glew::gl::glMultiDrawArraysIndirectBindlessCountNV
#define glMultiDrawElementsIndirectBindlessCountNV glew::gl::glMultiDrawElementsIndirectBindlessCountNV
#define glGetTextureHandleNV glew::gl::glGetTextureHandleNV
#define glGetTextureSamplerHandleNV glew::gl::glGetTextureSamplerHandleNV
#define glMakeTextureHandleResidentNV glew::gl::glMakeTextureHandleResidentNV
#define glMakeTextureHandleNonResidentNV glew::gl::glMakeTextureHandleNonResidentNV
#define glGetImageHandleNV glew::gl::glGetImageHandleNV
#define glMakeImageHandleResidentNV glew::gl::glMakeImageHandleResidentNV
#define glMakeImageHandleNonResidentNV glew::gl::glMakeImageHandleNonResidentNV
#define glUniformHandleui64NV glew::gl::glUniformHandleui64NV
#define glUniformHandleui64vNV glew::gl::glUniformHandleui64vNV
#define glProgramUniformHandleui64NV glew::gl::glProgramUniformHandleui64NV
#define glProgramUniformHandleui64vNV glew::gl::glProgramUniformHandleui64vNV
#define glIsTextureHandleResidentNV glew::gl::glIsTextureHandleResidentNV
#define glIsImageHandleResidentNV glew::gl::glIsImageHandleResidentNV
#define glBlendParameteriNV glew::gl::glBlendParameteriNV
#define glBlendBarrierNV glew::gl::glBlendBarrierNV
#define glCreateStatesNV glew::gl::glCreateStatesNV
#define glDeleteStatesNV glew::gl::glDeleteStatesNV
#define glIsStateNV glew::gl::glIsStateNV
#define glStateCaptureNV glew::gl::glStateCaptureNV
#define glGetCommandHeaderNV glew::gl::glGetCommandHeaderNV
#define glGetStageIndexNV glew::gl::glGetStageIndexNV
#define glDrawCommandsNV glew::gl::glDrawCommandsNV
#define glDrawCommandsAddressNV glew::gl::glDrawCommandsAddressNV
#define glDrawCommandsStatesNV glew::gl::glDrawCommandsStatesNV
#define glDrawCommandsStatesAddressNV glew::gl::glDrawCommandsStatesAddressNV
#define glCreateCommandListsNV glew::gl::glCreateCommandListsNV
#define glDeleteCommandListsNV glew::gl::glDeleteCommandListsNV
#define glIsCommandListNV glew::gl::glIsCommandListNV
#define glListDrawCommandsStatesClientNV glew::gl::glListDrawCommandsStatesClientNV
#define glCommandListSegmentsNV glew::gl::glCommandListSegmentsNV
#define glCompileCommandListNV glew::gl::glCompileCommandListNV
#define glCallCommandListNV glew::gl::glCallCommandListNV
#define glBeginConditionalRenderNV glew::gl::glBeginConditionalRenderNV
#define glEndConditionalRenderNV glew::gl::glEndConditionalRenderNV
#define glSubpixelPrecisionBiasNV glew::gl::glSubpixelPrecisionBiasNV
#define glCopyImageSubDataNV glew::gl::glCopyImageSubDataNV
#define glDepthRangedNV glew::gl::glDepthRangedNV
#define glClearDepthdNV glew::gl::glClearDepthdNV
#define glDepthBoundsdNV glew::gl::glDepthBoundsdNV
#define glDrawTextureNV glew::gl::glDrawTextureNV
#define glMapControlPointsNV glew::gl::glMapControlPointsNV
#define glMapParameterivNV glew::gl::glMapParameterivNV
#define glMapParameterfvNV glew::gl::glMapParameterfvNV
#define glGetMapControlPointsNV glew::gl::glGetMapControlPointsNV
#define glGetMapParameterivNV glew::gl::glGetMapParameterivNV
#define glGetMapParameterfvNV glew::gl::glGetMapParameterfvNV
#define glGetMapAttribParameterivNV glew::gl::glGetMapAttribParameterivNV
#define glGetMapAttribParameterfvNV glew::gl::glGetMapAttribParameterfvNV
#define glEvalMapsNV glew::gl::glEvalMapsNV
#define glGetMultisamplefvNV glew::gl::glGetMultisamplefvNV
#define glSampleMaskIndexedNV glew::gl::glSampleMaskIndexedNV
#define glTexRenderbufferNV glew::gl::glTexRenderbufferNV
#define glDeleteFencesNV glew::gl::glDeleteFencesNV
#define glGenFencesNV glew::gl::glGenFencesNV
#define glIsFenceNV glew::gl::glIsFenceNV
#define glTestFenceNV glew::gl::glTestFenceNV
#define glGetFenceivNV glew::gl::glGetFenceivNV
#define glFinishFenceNV glew::gl::glFinishFenceNV
#define glSetFenceNV glew::gl::glSetFenceNV
#define glFragmentCoverageColorNV glew::gl::glFragmentCoverageColorNV
#define glProgramNamedParameter4fNV glew::gl::glProgramNamedParameter4fNV
#define glProgramNamedParameter4fvNV glew::gl::glProgramNamedParameter4fvNV
#define glProgramNamedParameter4dNV glew::gl::glProgramNamedParameter4dNV
#define glProgramNamedParameter4dvNV glew::gl::glProgramNamedParameter4dvNV
#define glGetProgramNamedParameterfvNV glew::gl::glGetProgramNamedParameterfvNV
#define glGetProgramNamedParameterdvNV glew::gl::glGetProgramNamedParameterdvNV
#define glCoverageModulationTableNV glew::gl::glCoverageModulationTableNV
#define glGetCoverageModulationTableNV glew::gl::glGetCoverageModulationTableNV
#define glCoverageModulationNV glew::gl::glCoverageModulationNV
#define glRenderbufferStorageMultisampleCoverageNV glew::gl::glRenderbufferStorageMultisampleCoverageNV
#define glProgramVertexLimitNV glew::gl::glProgramVertexLimitNV
#define glFramebufferTextureEXT glew::gl::glFramebufferTextureEXT
#define glFramebufferTextureFaceEXT glew::gl::glFramebufferTextureFaceEXT
#define glProgramLocalParameterI4iNV glew::gl::glProgramLocalParameterI4iNV
#define glProgramLocalParameterI4ivNV glew::gl::glProgramLocalParameterI4ivNV
#define glProgramLocalParametersI4ivNV glew::gl::glProgramLocalParametersI4ivNV
#define glProgramLocalParameterI4uiNV glew::gl::glProgramLocalParameterI4uiNV
#define glProgramLocalParameterI4uivNV glew::gl::glProgramLocalParameterI4uivNV
#define glProgramLocalParametersI4uivNV glew::gl::glProgramLocalParametersI4uivNV
#define glProgramEnvParameterI4iNV glew::gl::glProgramEnvParameterI4iNV
#define glProgramEnvParameterI4ivNV glew::gl::glProgramEnvParameterI4ivNV
#define glProgramEnvParametersI4ivNV glew::gl::glProgramEnvParametersI4ivNV
#define glProgramEnvParameterI4uiNV glew::gl::glProgramEnvParameterI4uiNV
#define glProgramEnvParameterI4uivNV glew::gl::glProgramEnvParameterI4uivNV
#define glProgramEnvParametersI4uivNV glew::gl::glProgramEnvParametersI4uivNV
#define glGetProgramLocalParameterIivNV glew::gl::glGetProgramLocalParameterIivNV
#define glGetProgramLocalParameterIuivNV glew::gl::glGetProgramLocalParameterIuivNV
#define glGetProgramEnvParameterIivNV glew::gl::glGetProgramEnvParameterIivNV
#define glGetProgramEnvParameterIuivNV glew::gl::glGetProgramEnvParameterIuivNV
#define glProgramSubroutineParametersuivNV glew::gl::glProgramSubroutineParametersuivNV
#define glGetProgramSubroutineParameteruivNV glew::gl::glGetProgramSubroutineParameteruivNV
#define glVertex2hNV glew::gl::glVertex2hNV
#define glVertex2hvNV glew::gl::glVertex2hvNV
#define glVertex3hNV glew::gl::glVertex3hNV
#define glVertex3hvNV glew::gl::glVertex3hvNV
#define glVertex4hNV glew::gl::glVertex4hNV
#define glVertex4hvNV glew::gl::glVertex4hvNV
#define glNormal3hNV glew::gl::glNormal3hNV
#define glNormal3hvNV glew::gl::glNormal3hvNV
#define glColor3hNV glew::gl::glColor3hNV
#define glColor3hvNV glew::gl::glColor3hvNV
#define glColor4hNV glew::gl::glColor4hNV
#define glColor4hvNV glew::gl::glColor4hvNV
#define glTexCoord1hNV glew::gl::glTexCoord1hNV
#define glTexCoord1hvNV glew::gl::glTexCoord1hvNV
#define glTexCoord2hNV glew::gl::glTexCoord2hNV
#define glTexCoord2hvNV glew::gl::glTexCoord2hvNV
#define glTexCoord3hNV glew::gl::glTexCoord3hNV
#define glTexCoord3hvNV glew::gl::glTexCoord3hvNV
#define glTexCoord4hNV glew::gl::glTexCoord4hNV
#define glTexCoord4hvNV glew::gl::glTexCoord4hvNV
#define glMultiTexCoord1hNV glew::gl::glMultiTexCoord1hNV
#define glMultiTexCoord1hvNV glew::gl::glMultiTexCoord1hvNV
#define glMultiTexCoord2hNV glew::gl::glMultiTexCoord2hNV
#define glMultiTexCoord2hvNV glew::gl::glMultiTexCoord2hvNV
#define glMultiTexCoord3hNV glew::gl::glMultiTexCoord3hNV
#define glMultiTexCoord3hvNV glew::gl::glMultiTexCoord3hvNV
#define glMultiTexCoord4hNV glew::gl::glMultiTexCoord4hNV
#define glMultiTexCoord4hvNV glew::gl::glMultiTexCoord4hvNV
#define glFogCoordhNV glew::gl::glFogCoordhNV
#define glFogCoordhvNV glew::gl::glFogCoordhvNV
#define glSecondaryColor3hNV glew::gl::glSecondaryColor3hNV
#define glSecondaryColor3hvNV glew::gl::glSecondaryColor3hvNV
#define glVertexWeighthNV glew::gl::glVertexWeighthNV
#define glVertexWeighthvNV glew::gl::glVertexWeighthvNV
#define glVertexAttrib1hNV glew::gl::glVertexAttrib1hNV
#define glVertexAttrib1hvNV glew::gl::glVertexAttrib1hvNV
#define glVertexAttrib2hNV glew::gl::glVertexAttrib2hNV
#define glVertexAttrib2hvNV glew::gl::glVertexAttrib2hvNV
#define glVertexAttrib3hNV glew::gl::glVertexAttrib3hNV
#define glVertexAttrib3hvNV glew::gl::glVertexAttrib3hvNV
#define glVertexAttrib4hNV glew::gl::glVertexAttrib4hNV
#define glVertexAttrib4hvNV glew::gl::glVertexAttrib4hvNV
#define glVertexAttribs1hvNV glew::gl::glVertexAttribs1hvNV
#define glVertexAttribs2hvNV glew::gl::glVertexAttribs2hvNV
#define glVertexAttribs3hvNV glew::gl::glVertexAttribs3hvNV
#define glVertexAttribs4hvNV glew::gl::glVertexAttribs4hvNV
#define glGetInternalformatSampleivNV glew::gl::glGetInternalformatSampleivNV
#define glGenOcclusionQueriesNV glew::gl::glGenOcclusionQueriesNV
#define glDeleteOcclusionQueriesNV glew::gl::glDeleteOcclusionQueriesNV
#define glIsOcclusionQueryNV glew::gl::glIsOcclusionQueryNV
#define glBeginOcclusionQueryNV glew::gl::glBeginOcclusionQueryNV
#define glEndOcclusionQueryNV glew::gl::glEndOcclusionQueryNV
#define glGetOcclusionQueryivNV glew::gl::glGetOcclusionQueryivNV
#define glGetOcclusionQueryuivNV glew::gl::glGetOcclusionQueryuivNV
#define glProgramBufferParametersfvNV glew::gl::glProgramBufferParametersfvNV
#define glProgramBufferParametersIivNV glew::gl::glProgramBufferParametersIivNV
#define glProgramBufferParametersIuivNV glew::gl::glProgramBufferParametersIuivNV
#define glGenPathsNV glew::gl::glGenPathsNV
#define glDeletePathsNV glew::gl::glDeletePathsNV
#define glIsPathNV glew::gl::glIsPathNV
#define glPathCommandsNV glew::gl::glPathCommandsNV
#define glPathCoordsNV glew::gl::glPathCoordsNV
#define glPathSubCommandsNV glew::gl::glPathSubCommandsNV
#define glPathSubCoordsNV glew::gl::glPathSubCoordsNV
#define glPathStringNV glew::gl::glPathStringNV
#define glPathGlyphsNV glew::gl::glPathGlyphsNV
#define glPathGlyphRangeNV glew::gl::glPathGlyphRangeNV
#define glWeightPathsNV glew::gl::glWeightPathsNV
#define glCopyPathNV glew::gl::glCopyPathNV
#define glInterpolatePathsNV glew::gl::glInterpolatePathsNV
#define glTransformPathNV glew::gl::glTransformPathNV
#define glPathParameterivNV glew::gl::glPathParameterivNV
#define glPathParameteriNV glew::gl::glPathParameteriNV
#define glPathParameterfvNV glew::gl::glPathParameterfvNV
#define glPathParameterfNV glew::gl::glPathParameterfNV
#define glPathDashArrayNV glew::gl::glPathDashArrayNV
#define glPathStencilFuncNV glew::gl::glPathStencilFuncNV
#define glPathStencilDepthOffsetNV glew::gl::glPathStencilDepthOffsetNV
#define glStencilFillPathNV glew::gl::glStencilFillPathNV
#define glStencilStrokePathNV glew::gl::glStencilStrokePathNV
#define glStencilFillPathInstancedNV glew::gl::glStencilFillPathInstancedNV
#define glStencilStrokePathInstancedNV glew::gl::glStencilStrokePathInstancedNV
#define glPathCoverDepthFuncNV glew::gl::glPathCoverDepthFuncNV
#define glCoverFillPathNV glew::gl::glCoverFillPathNV
#define glCoverStrokePathNV glew::gl::glCoverStrokePathNV
#define glCoverFillPathInstancedNV glew::gl::glCoverFillPathInstancedNV
#define glCoverStrokePathInstancedNV glew::gl::glCoverStrokePathInstancedNV
#define glGetPathParameterivNV glew::gl::glGetPathParameterivNV
#define glGetPathParameterfvNV glew::gl::glGetPathParameterfvNV
#define glGetPathCommandsNV glew::gl::glGetPathCommandsNV
#define glGetPathCoordsNV glew::gl::glGetPathCoordsNV
#define glGetPathDashArrayNV glew::gl::glGetPathDashArrayNV
#define glGetPathMetricsNV glew::gl::glGetPathMetricsNV
#define glGetPathMetricRangeNV glew::gl::glGetPathMetricRangeNV
#define glGetPathSpacingNV glew::gl::glGetPathSpacingNV
#define glIsPointInFillPathNV glew::gl::glIsPointInFillPathNV
#define glIsPointInStrokePathNV glew::gl::glIsPointInStrokePathNV
#define glGetPathLengthNV glew::gl::glGetPathLengthNV
#define glPointAlongPathNV glew::gl::glPointAlongPathNV
#define glMatrixLoad3x2fNV glew::gl::glMatrixLoad3x2fNV
#define glMatrixLoad3x3fNV glew::gl::glMatrixLoad3x3fNV
#define glMatrixLoadTranspose3x3fNV glew::gl::glMatrixLoadTranspose3x3fNV
#define glMatrixMult3x2fNV glew::gl::glMatrixMult3x2fNV
#define glMatrixMult3x3fNV glew::gl::glMatrixMult3x3fNV
#define glMatrixMultTranspose3x3fNV glew::gl::glMatrixMultTranspose3x3fNV
#define glStencilThenCoverFillPathNV glew::gl::glStencilThenCoverFillPathNV
#define glStencilThenCoverStrokePathNV glew::gl::glStencilThenCoverStrokePathNV
#define glStencilThenCoverFillPathInstancedNV glew::gl::glStencilThenCoverFillPathInstancedNV
#define glStencilThenCoverStrokePathInstancedNV glew::gl::glStencilThenCoverStrokePathInstancedNV
#define glPathGlyphIndexRangeNV glew::gl::glPathGlyphIndexRangeNV
#define glPathGlyphIndexArrayNV glew::gl::glPathGlyphIndexArrayNV
#define glPathMemoryGlyphIndexArrayNV glew::gl::glPathMemoryGlyphIndexArrayNV
#define glProgramPathFragmentInputGenNV glew::gl::glProgramPathFragmentInputGenNV
#define glGetProgramResourcefvNV glew::gl::glGetProgramResourcefvNV
#define glPathColorGenNV glew::gl::glPathColorGenNV
#define glPathTexGenNV glew::gl::glPathTexGenNV
#define glPathFogGenNV glew::gl::glPathFogGenNV
#define glGetPathColorGenivNV glew::gl::glGetPathColorGenivNV
#define glGetPathColorGenfvNV glew::gl::glGetPathColorGenfvNV
#define glGetPathTexGenivNV glew::gl::glGetPathTexGenivNV
#define glGetPathTexGenfvNV glew::gl::glGetPathTexGenfvNV
#define glPixelDataRangeNV glew::gl::glPixelDataRangeNV
#define glFlushPixelDataRangeNV glew::gl::glFlushPixelDataRangeNV
#define glPointParameteriNV glew::gl::glPointParameteriNV
#define glPointParameterivNV glew::gl::glPointParameterivNV
#define glPresentFrameKeyedNV glew::gl::glPresentFrameKeyedNV
#define glPresentFrameDualFillNV glew::gl::glPresentFrameDualFillNV
#define glGetVideoivNV glew::gl::glGetVideoivNV
#define glGetVideouivNV glew::gl::glGetVideouivNV
#define glGetVideoi64vNV glew::gl::glGetVideoi64vNV
#define glGetVideoui64vNV glew::gl::glGetVideoui64vNV
#define glPrimitiveRestartNV glew::gl::glPrimitiveRestartNV
#define glPrimitiveRestartIndexNV glew::gl::glPrimitiveRestartIndexNV
#define glCombinerParameterfvNV glew::gl::glCombinerParameterfvNV
#define glCombinerParameterfNV glew::gl::glCombinerParameterfNV
#define glCombinerParameterivNV glew::gl::glCombinerParameterivNV
#define glCombinerParameteriNV glew::gl::glCombinerParameteriNV
#define glCombinerInputNV glew::gl::glCombinerInputNV
#define glCombinerOutputNV glew::gl::glCombinerOutputNV
#define glFinalCombinerInputNV glew::gl::glFinalCombinerInputNV
#define glGetCombinerInputParameterfvNV glew::gl::glGetCombinerInputParameterfvNV
#define glGetCombinerInputParameterivNV glew::gl::glGetCombinerInputParameterivNV
#define glGetCombinerOutputParameterfvNV glew::gl::glGetCombinerOutputParameterfvNV
#define glGetCombinerOutputParameterivNV glew::gl::glGetCombinerOutputParameterivNV
#define glGetFinalCombinerInputParameterfvNV glew::gl::glGetFinalCombinerInputParameterfvNV
#define glGetFinalCombinerInputParameterivNV glew::gl::glGetFinalCombinerInputParameterivNV
#define glCombinerStageParameterfvNV glew::gl::glCombinerStageParameterfvNV
#define glGetCombinerStageParameterfvNV glew::gl::glGetCombinerStageParameterfvNV
#define glFramebufferSampleLocationsfvNV glew::gl::glFramebufferSampleLocationsfvNV
#define glNamedFramebufferSampleLocationsfvNV glew::gl::glNamedFramebufferSampleLocationsfvNV
#define glResolveDepthValuesNV glew::gl::glResolveDepthValuesNV
#define glMakeBufferResidentNV glew::gl::glMakeBufferResidentNV
#define glMakeBufferNonResidentNV glew::gl::glMakeBufferNonResidentNV
#define glIsBufferResidentNV glew::gl::glIsBufferResidentNV
#define glMakeNamedBufferResidentNV glew::gl::glMakeNamedBufferResidentNV
#define glMakeNamedBufferNonResidentNV glew::gl::glMakeNamedBufferNonResidentNV
#define glIsNamedBufferResidentNV glew::gl::glIsNamedBufferResidentNV
#define glGetBufferParameterui64vNV glew::gl::glGetBufferParameterui64vNV
#define glGetNamedBufferParameterui64vNV glew::gl::glGetNamedBufferParameterui64vNV
#define glGetIntegerui64vNV glew::gl::glGetIntegerui64vNV
#define glUniformui64NV glew::gl::glUniformui64NV
#define glUniformui64vNV glew::gl::glUniformui64vNV
#define glProgramUniformui64NV glew::gl::glProgramUniformui64NV
#define glProgramUniformui64vNV glew::gl::glProgramUniformui64vNV
#define glTextureBarrierNV glew::gl::glTextureBarrierNV
#define glTexImage2DMultisampleCoverageNV glew::gl::glTexImage2DMultisampleCoverageNV
#define glTexImage3DMultisampleCoverageNV glew::gl::glTexImage3DMultisampleCoverageNV
#define glTextureImage2DMultisampleNV glew::gl::glTextureImage2DMultisampleNV
#define glTextureImage3DMultisampleNV glew::gl::glTextureImage3DMultisampleNV
#define glTextureImage2DMultisampleCoverageNV glew::gl::glTextureImage2DMultisampleCoverageNV
#define glTextureImage3DMultisampleCoverageNV glew::gl::glTextureImage3DMultisampleCoverageNV
#define glBeginTransformFeedbackNV glew::gl::glBeginTransformFeedbackNV
#define glEndTransformFeedbackNV glew::gl::glEndTransformFeedbackNV
#define glTransformFeedbackAttribsNV glew::gl::glTransformFeedbackAttribsNV
#define glBindBufferRangeNV glew::gl::glBindBufferRangeNV
#define glBindBufferOffsetNV glew::gl::glBindBufferOffsetNV
#define glBindBufferBaseNV glew::gl::glBindBufferBaseNV
#define glTransformFeedbackVaryingsNV glew::gl::glTransformFeedbackVaryingsNV
#define glActiveVaryingNV glew::gl::glActiveVaryingNV
#define glGetVaryingLocationNV glew::gl::glGetVaryingLocationNV
#define glGetActiveVaryingNV glew::gl::glGetActiveVaryingNV
#define glGetTransformFeedbackVaryingNV glew::gl::glGetTransformFeedbackVaryingNV
#define glTransformFeedbackStreamAttribsNV glew::gl::glTransformFeedbackStreamAttribsNV
#define glBindTransformFeedbackNV glew::gl::glBindTransformFeedbackNV
#define glDeleteTransformFeedbacksNV glew::gl::glDeleteTransformFeedbacksNV
#define glGenTransformFeedbacksNV glew::gl::glGenTransformFeedbacksNV
#define glIsTransformFeedbackNV glew::gl::glIsTransformFeedbackNV
#define glPauseTransformFeedbackNV glew::gl::glPauseTransformFeedbackNV
#define glResumeTransformFeedbackNV glew::gl::glResumeTransformFeedbackNV
#define glDrawTransformFeedbackNV glew::gl::glDrawTransformFeedbackNV
#define glVDPAUInitNV glew::gl::glVDPAUInitNV
#define glVDPAUFiniNV glew::gl::glVDPAUFiniNV
#define glVDPAURegisterVideoSurfaceNV glew::gl::glVDPAURegisterVideoSurfaceNV
#define glVDPAURegisterOutputSurfaceNV glew::gl::glVDPAURegisterOutputSurfaceNV
#define glVDPAUIsSurfaceNV glew::gl::glVDPAUIsSurfaceNV
#define glVDPAUUnregisterSurfaceNV glew::gl::glVDPAUUnregisterSurfaceNV
#define glVDPAUGetSurfaceivNV glew::gl::glVDPAUGetSurfaceivNV
#define glVDPAUSurfaceAccessNV glew::gl::glVDPAUSurfaceAccessNV
#define glVDPAUMapSurfacesNV glew::gl::glVDPAUMapSurfacesNV
#define glVDPAUUnmapSurfacesNV glew::gl::glVDPAUUnmapSurfacesNV
#define glFlushVertexArrayRangeNV glew::gl::glFlushVertexArrayRangeNV
#define glVertexArrayRangeNV glew::gl::glVertexArrayRangeNV
#define glVertexAttribL1i64NV glew::gl::glVertexAttribL1i64NV
#define glVertexAttribL2i64NV glew::gl::glVertexAttribL2i64NV
#define glVertexAttribL3i64NV glew::gl::glVertexAttribL3i64NV
#define glVertexAttribL4i64NV glew::gl::glVertexAttribL4i64NV
#define glVertexAttribL1i64vNV glew::gl::glVertexAttribL1i64vNV
#define glVertexAttribL2i64vNV glew::gl::glVertexAttribL2i64vNV
#define glVertexAttribL3i64vNV glew::gl::glVertexAttribL3i64vNV
#define glVertexAttribL4i64vNV glew::gl::glVertexAttribL4i64vNV
#define glVertexAttribL1ui64NV glew::gl::glVertexAttribL1ui64NV
#define glVertexAttribL2ui64NV glew::gl::glVertexAttribL2ui64NV
#define glVertexAttribL3ui64NV glew::gl::glVertexAttribL3ui64NV
#define glVertexAttribL4ui64NV glew::gl::glVertexAttribL4ui64NV
#define glVertexAttribL1ui64vNV glew::gl::glVertexAttribL1ui64vNV
#define glVertexAttribL2ui64vNV glew::gl::glVertexAttribL2ui64vNV
#define glVertexAttribL3ui64vNV glew::gl::glVertexAttribL3ui64vNV
#define glVertexAttribL4ui64vNV glew::gl::glVertexAttribL4ui64vNV
#define glGetVertexAttribLi64vNV glew::gl::glGetVertexAttribLi64vNV
#define glGetVertexAttribLui64vNV glew::gl::glGetVertexAttribLui64vNV
#define glVertexAttribLFormatNV glew::gl::glVertexAttribLFormatNV
#define glBufferAddressRangeNV glew::gl::glBufferAddressRangeNV
#define glVertexFormatNV glew::gl::glVertexFormatNV
#define glNormalFormatNV glew::gl::glNormalFormatNV
#define glColorFormatNV glew::gl::glColorFormatNV
#define glIndexFormatNV glew::gl::glIndexFormatNV
#define glTexCoordFormatNV glew::gl::glTexCoordFormatNV
#define glEdgeFlagFormatNV glew::gl::glEdgeFlagFormatNV
#define glSecondaryColorFormatNV glew::gl::glSecondaryColorFormatNV
#define glFogCoordFormatNV glew::gl::glFogCoordFormatNV
#define glVertexAttribFormatNV glew::gl::glVertexAttribFormatNV
#define glVertexAttribIFormatNV glew::gl::glVertexAttribIFormatNV
#define glGetIntegerui64i_vNV glew::gl::glGetIntegerui64i_vNV
#define glAreProgramsResidentNV glew::gl::glAreProgramsResidentNV
#define glBindProgramNV glew::gl::glBindProgramNV
#define glDeleteProgramsNV glew::gl::glDeleteProgramsNV
#define glExecuteProgramNV glew::gl::glExecuteProgramNV
#define glGenProgramsNV glew::gl::glGenProgramsNV
#define glGetProgramParameterdvNV glew::gl::glGetProgramParameterdvNV
#define glGetProgramParameterfvNV glew::gl::glGetProgramParameterfvNV
#define glGetProgramivNV glew::gl::glGetProgramivNV
#define glGetProgramStringNV glew::gl::glGetProgramStringNV
#define glGetTrackMatrixivNV glew::gl::glGetTrackMatrixivNV
#define glGetVertexAttribdvNV glew::gl::glGetVertexAttribdvNV
#define glGetVertexAttribfvNV glew::gl::glGetVertexAttribfvNV
#define glGetVertexAttribivNV glew::gl::glGetVertexAttribivNV
#define glGetVertexAttribPointervNV glew::gl::glGetVertexAttribPointervNV
#define glIsProgramNV glew::gl::glIsProgramNV
#define glLoadProgramNV glew::gl::glLoadProgramNV
#define glProgramParameter4dNV glew::gl::glProgramParameter4dNV
#define glProgramParameter4dvNV glew::gl::glProgramParameter4dvNV
#define glProgramParameter4fNV glew::gl::glProgramParameter4fNV
#define glProgramParameter4fvNV glew::gl::glProgramParameter4fvNV
#define glProgramParameters4dvNV glew::gl::glProgramParameters4dvNV
#define glProgramParameters4fvNV glew::gl::glProgramParameters4fvNV
#define glRequestResidentProgramsNV glew::gl::glRequestResidentProgramsNV
#define glTrackMatrixNV glew::gl::glTrackMatrixNV
#define glVertexAttribPointerNV glew::gl::glVertexAttribPointerNV
#define glVertexAttrib1dNV glew::gl::glVertexAttrib1dNV
#define glVertexAttrib1dvNV glew::gl::glVertexAttrib1dvNV
#define glVertexAttrib1fNV glew::gl::glVertexAttrib1fNV
#define glVertexAttrib1fvNV glew::gl::glVertexAttrib1fvNV
#define glVertexAttrib1sNV glew::gl::glVertexAttrib1sNV
#define glVertexAttrib1svNV glew::gl::glVertexAttrib1svNV
#define glVertexAttrib2dNV glew::gl::glVertexAttrib2dNV
#define glVertexAttrib2dvNV glew::gl::glVertexAttrib2dvNV
#define glVertexAttrib2fNV glew::gl::glVertexAttrib2fNV
#define glVertexAttrib2fvNV glew::gl::glVertexAttrib2fvNV
#define glVertexAttrib2sNV glew::gl::glVertexAttrib2sNV
#define glVertexAttrib2svNV glew::gl::glVertexAttrib2svNV
#define glVertexAttrib3dNV glew::gl::glVertexAttrib3dNV
#define glVertexAttrib3dvNV glew::gl::glVertexAttrib3dvNV
#define glVertexAttrib3fNV glew::gl::glVertexAttrib3fNV
#define glVertexAttrib3fvNV glew::gl::glVertexAttrib3fvNV
#define glVertexAttrib3sNV glew::gl::glVertexAttrib3sNV
#define glVertexAttrib3svNV glew::gl::glVertexAttrib3svNV
#define glVertexAttrib4dNV glew::gl::glVertexAttrib4dNV
#define glVertexAttrib4dvNV glew::gl::glVertexAttrib4dvNV
#define glVertexAttrib4fNV glew::gl::glVertexAttrib4fNV
#define glVertexAttrib4fvNV glew::gl::glVertexAttrib4fvNV
#define glVertexAttrib4sNV glew::gl::glVertexAttrib4sNV
#define glVertexAttrib4svNV glew::gl::glVertexAttrib4svNV
#define glVertexAttrib4ubNV glew::gl::glVertexAttrib4ubNV
#define glVertexAttrib4ubvNV glew::gl::glVertexAttrib4ubvNV
#define glVertexAttribs1dvNV glew::gl::glVertexAttribs1dvNV
#define glVertexAttribs1fvNV glew::gl::glVertexAttribs1fvNV
#define glVertexAttribs1svNV glew::gl::glVertexAttribs1svNV
#define glVertexAttribs2dvNV glew::gl::glVertexAttribs2dvNV
#define glVertexAttribs2fvNV glew::gl::glVertexAttribs2fvNV
#define glVertexAttribs2svNV glew::gl::glVertexAttribs2svNV
#define glVertexAttribs3dvNV glew::gl::glVertexAttribs3dvNV
#define glVertexAttribs3fvNV glew::gl::glVertexAttribs3fvNV
#define glVertexAttribs3svNV glew::gl::glVertexAttribs3svNV
#define glVertexAttribs4dvNV glew::gl::glVertexAttribs4dvNV
#define glVertexAttribs4fvNV glew::gl::glVertexAttribs4fvNV
#define glVertexAttribs4svNV glew::gl::glVertexAttribs4svNV
#define glVertexAttribs4ubvNV glew::gl::glVertexAttribs4ubvNV
#define glVertexAttribI1iEXT glew::gl::glVertexAttribI1iEXT
#define glVertexAttribI2iEXT glew::gl::glVertexAttribI2iEXT
#define glVertexAttribI3iEXT glew::gl::glVertexAttribI3iEXT
#define glVertexAttribI4iEXT glew::gl::glVertexAttribI4iEXT
#define glVertexAttribI1uiEXT glew::gl::glVertexAttribI1uiEXT
#define glVertexAttribI2uiEXT glew::gl::glVertexAttribI2uiEXT
#define glVertexAttribI3uiEXT glew::gl::glVertexAttribI3uiEXT
#define glVertexAttribI4uiEXT glew::gl::glVertexAttribI4uiEXT
#define glVertexAttribI1ivEXT glew::gl::glVertexAttribI1ivEXT
#define glVertexAttribI2ivEXT glew::gl::glVertexAttribI2ivEXT
#define glVertexAttribI3ivEXT glew::gl::glVertexAttribI3ivEXT
#define glVertexAttribI4ivEXT glew::gl::glVertexAttribI4ivEXT
#define glVertexAttribI1uivEXT glew::gl::glVertexAttribI1uivEXT
#define glVertexAttribI2uivEXT glew::gl::glVertexAttribI2uivEXT
#define glVertexAttribI3uivEXT glew::gl::glVertexAttribI3uivEXT
#define glVertexAttribI4uivEXT glew::gl::glVertexAttribI4uivEXT
#define glVertexAttribI4bvEXT glew::gl::glVertexAttribI4bvEXT
#define glVertexAttribI4svEXT glew::gl::glVertexAttribI4svEXT
#define glVertexAttribI4ubvEXT glew::gl::glVertexAttribI4ubvEXT
#define glVertexAttribI4usvEXT glew::gl::glVertexAttribI4usvEXT
#define glVertexAttribIPointerEXT glew::gl::glVertexAttribIPointerEXT
#define glGetVertexAttribIivEXT glew::gl::glGetVertexAttribIivEXT
#define glGetVertexAttribIuivEXT glew::gl::glGetVertexAttribIuivEXT
#define glBeginVideoCaptureNV glew::gl::glBeginVideoCaptureNV
#define glBindVideoCaptureStreamBufferNV glew::gl::glBindVideoCaptureStreamBufferNV
#define glBindVideoCaptureStreamTextureNV glew::gl::glBindVideoCaptureStreamTextureNV
#define glEndVideoCaptureNV glew::gl::glEndVideoCaptureNV
#define glGetVideoCaptureivNV glew::gl::glGetVideoCaptureivNV
#define glGetVideoCaptureStreamivNV glew::gl::glGetVideoCaptureStreamivNV
#define glGetVideoCaptureStreamfvNV glew::gl::glGetVideoCaptureStreamfvNV
#define glGetVideoCaptureStreamdvNV glew::gl::glGetVideoCaptureStreamdvNV
#define glVideoCaptureNV glew::gl::glVideoCaptureNV
#define glVideoCaptureStreamParameterivNV glew::gl::glVideoCaptureStreamParameterivNV
#define glVideoCaptureStreamParameterfvNV glew::gl::glVideoCaptureStreamParameterfvNV
#define glVideoCaptureStreamParameterdvNV glew::gl::glVideoCaptureStreamParameterdvNV
#define glMultiTexCoord1bOES glew::gl::glMultiTexCoord1bOES
#define glMultiTexCoord1bvOES glew::gl::glMultiTexCoord1bvOES
#define glMultiTexCoord2bOES glew::gl::glMultiTexCoord2bOES
#define glMultiTexCoord2bvOES glew::gl::glMultiTexCoord2bvOES
#define glMultiTexCoord3bOES glew::gl::glMultiTexCoord3bOES
#define glMultiTexCoord3bvOES glew::gl::glMultiTexCoord3bvOES
#define glMultiTexCoord4bOES glew::gl::glMultiTexCoord4bOES
#define glMultiTexCoord4bvOES glew::gl::glMultiTexCoord4bvOES
#define glTexCoord1bOES glew::gl::glTexCoord1bOES
#define glTexCoord1bvOES glew::gl::glTexCoord1bvOES
#define glTexCoord2bOES glew::gl::glTexCoord2bOES
#define glTexCoord2bvOES glew::gl::glTexCoord2bvOES
#define glTexCoord3bOES glew::gl::glTexCoord3bOES
#define glTexCoord3bvOES glew::gl::glTexCoord3bvOES
#define glTexCoord4bOES glew::gl::glTexCoord4bOES
#define glTexCoord4bvOES glew::gl::glTexCoord4bvOES
#define glVertex2bOES glew::gl::glVertex2bOES
#define glVertex2bvOES glew::gl::glVertex2bvOES
#define glVertex3bOES glew::gl::glVertex3bOES
#define glVertex3bvOES glew::gl::glVertex3bvOES
#define glVertex4bOES glew::gl::glVertex4bOES
#define glVertex4bvOES glew::gl::glVertex4bvOES
#define glAlphaFuncxOES glew::gl::glAlphaFuncxOES
#define glClearColorxOES glew::gl::glClearColorxOES
#define glClearDepthxOES glew::gl::glClearDepthxOES
#define glClipPlanexOES glew::gl::glClipPlanexOES
#define glColor4xOES glew::gl::glColor4xOES
#define glDepthRangexOES glew::gl::glDepthRangexOES
#define glFogxOES glew::gl::glFogxOES
#define glFogxvOES glew::gl::glFogxvOES
#define glFrustumxOES glew::gl::glFrustumxOES
#define glGetClipPlanexOES glew::gl::glGetClipPlanexOES
#define glGetFixedvOES glew::gl::glGetFixedvOES
#define glGetTexEnvxvOES glew::gl::glGetTexEnvxvOES
#define glGetTexParameterxvOES glew::gl::glGetTexParameterxvOES
#define glLightModelxOES glew::gl::glLightModelxOES
#define glLightModelxvOES glew::gl::glLightModelxvOES
#define glLightxOES glew::gl::glLightxOES
#define glLightxvOES glew::gl::glLightxvOES
#define glLineWidthxOES glew::gl::glLineWidthxOES
#define glLoadMatrixxOES glew::gl::glLoadMatrixxOES
#define glMaterialxOES glew::gl::glMaterialxOES
#define glMaterialxvOES glew::gl::glMaterialxvOES
#define glMultMatrixxOES glew::gl::glMultMatrixxOES
#define glMultiTexCoord4xOES glew::gl::glMultiTexCoord4xOES
#define glNormal3xOES glew::gl::glNormal3xOES
#define glOrthoxOES glew::gl::glOrthoxOES
#define glPointParameterxvOES glew::gl::glPointParameterxvOES
#define glPointSizexOES glew::gl::glPointSizexOES
#define glPolygonOffsetxOES glew::gl::glPolygonOffsetxOES
#define glRotatexOES glew::gl::glRotatexOES
#define glScalexOES glew::gl::glScalexOES
#define glTexEnvxOES glew::gl::glTexEnvxOES
#define glTexEnvxvOES glew::gl::glTexEnvxvOES
#define glTexParameterxOES glew::gl::glTexParameterxOES
#define glTexParameterxvOES glew::gl::glTexParameterxvOES
#define glTranslatexOES glew::gl::glTranslatexOES
#define glAccumxOES glew::gl::glAccumxOES
#define glBitmapxOES glew::gl::glBitmapxOES
#define glBlendColorxOES glew::gl::glBlendColorxOES
#define glClearAccumxOES glew::gl::glClearAccumxOES
#define glColor3xOES glew::gl::glColor3xOES
#define glColor3xvOES glew::gl::glColor3xvOES
#define glColor4xvOES glew::gl::glColor4xvOES
#define glConvolutionParameterxOES glew::gl::glConvolutionParameterxOES
#define glConvolutionParameterxvOES glew::gl::glConvolutionParameterxvOES
#define glEvalCoord1xOES glew::gl::glEvalCoord1xOES
#define glEvalCoord1xvOES glew::gl::glEvalCoord1xvOES
#define glEvalCoord2xOES glew::gl::glEvalCoord2xOES
#define glEvalCoord2xvOES glew::gl::glEvalCoord2xvOES
#define glFeedbackBufferxOES glew::gl::glFeedbackBufferxOES
#define glGetConvolutionParameterxvOES glew::gl::glGetConvolutionParameterxvOES
#define glGetHistogramParameterxvOES glew::gl::glGetHistogramParameterxvOES
#define glGetLightxOES glew::gl::glGetLightxOES
#define glGetMapxvOES glew::gl::glGetMapxvOES
#define glGetMaterialxOES glew::gl::glGetMaterialxOES
#define glGetPixelMapxv glew::gl::glGetPixelMapxv
#define glGetTexGenxvOES glew::gl::glGetTexGenxvOES
#define glGetTexLevelParameterxvOES glew::gl::glGetTexLevelParameterxvOES
#define glIndexxOES glew::gl::glIndexxOES
#define glIndexxvOES glew::gl::glIndexxvOES
#define glLoadTransposeMatrixxOES glew::gl::glLoadTransposeMatrixxOES
#define glMap1xOES glew::gl::glMap1xOES
#define glMap2xOES glew::gl::glMap2xOES
#define glMapGrid1xOES glew::gl::glMapGrid1xOES
#define glMapGrid2xOES glew::gl::glMapGrid2xOES
#define glMultTransposeMatrixxOES glew::gl::glMultTransposeMatrixxOES
#define glMultiTexCoord1xOES glew::gl::glMultiTexCoord1xOES
#define glMultiTexCoord1xvOES glew::gl::glMultiTexCoord1xvOES
#define glMultiTexCoord2xOES glew::gl::glMultiTexCoord2xOES
#define glMultiTexCoord2xvOES glew::gl::glMultiTexCoord2xvOES
#define glMultiTexCoord3xOES glew::gl::glMultiTexCoord3xOES
#define glMultiTexCoord3xvOES glew::gl::glMultiTexCoord3xvOES
#define glMultiTexCoord4xvOES glew::gl::glMultiTexCoord4xvOES
#define glNormal3xvOES glew::gl::glNormal3xvOES
#define glPassThroughxOES glew::gl::glPassThroughxOES
#define glPixelMapx glew::gl::glPixelMapx
#define glPixelStorex glew::gl::glPixelStorex
#define glPixelTransferxOES glew::gl::glPixelTransferxOES
#define glPixelZoomxOES glew::gl::glPixelZoomxOES
#define glPrioritizeTexturesxOES glew::gl::glPrioritizeTexturesxOES
#define glRasterPos2xOES glew::gl::glRasterPos2xOES
#define glRasterPos2xvOES glew::gl::glRasterPos2xvOES
#define glRasterPos3xOES glew::gl::glRasterPos3xOES
#define glRasterPos3xvOES glew::gl::glRasterPos3xvOES
#define glRasterPos4xOES glew::gl::glRasterPos4xOES
#define glRasterPos4xvOES glew::gl::glRasterPos4xvOES
#define glRectxOES glew::gl::glRectxOES
#define glRectxvOES glew::gl::glRectxvOES
#define glTexCoord1xOES glew::gl::glTexCoord1xOES
#define glTexCoord1xvOES glew::gl::glTexCoord1xvOES
#define glTexCoord2xOES glew::gl::glTexCoord2xOES
#define glTexCoord2xvOES glew::gl::glTexCoord2xvOES
#define glTexCoord3xOES glew::gl::glTexCoord3xOES
#define glTexCoord3xvOES glew::gl::glTexCoord3xvOES
#define glTexCoord4xOES glew::gl::glTexCoord4xOES
#define glTexCoord4xvOES glew::gl::glTexCoord4xvOES
#define glTexGenxOES glew::gl::glTexGenxOES
#define glTexGenxvOES glew::gl::glTexGenxvOES
#define glVertex2xOES glew::gl::glVertex2xOES
#define glVertex2xvOES glew::gl::glVertex2xvOES
#define glVertex3xOES glew::gl::glVertex3xOES
#define glVertex3xvOES glew::gl::glVertex3xvOES
#define glVertex4xOES glew::gl::glVertex4xOES
#define glVertex4xvOES glew::gl::glVertex4xvOES
#define glQueryMatrixxOES glew::gl::glQueryMatrixxOES
#define glClearDepthfOES glew::gl::glClearDepthfOES
#define glClipPlanefOES glew::gl::glClipPlanefOES
#define glDepthRangefOES glew::gl::glDepthRangefOES
#define glFrustumfOES glew::gl::glFrustumfOES
#define glGetClipPlanefOES glew::gl::glGetClipPlanefOES
#define glOrthofOES glew::gl::glOrthofOES
#define glFramebufferTextureMultiviewOVR glew::gl::glFramebufferTextureMultiviewOVR
#define glHintPGI glew::gl::glHintPGI
#define glDetailTexFuncSGIS glew::gl::glDetailTexFuncSGIS
#define glGetDetailTexFuncSGIS glew::gl::glGetDetailTexFuncSGIS
#define glFogFuncSGIS glew::gl::glFogFuncSGIS
#define glGetFogFuncSGIS glew::gl::glGetFogFuncSGIS
#define glSampleMaskSGIS glew::gl::glSampleMaskSGIS
#define glSamplePatternSGIS glew::gl::glSamplePatternSGIS
#define glPixelTexGenParameteriSGIS glew::gl::glPixelTexGenParameteriSGIS
#define glPixelTexGenParameterivSGIS glew::gl::glPixelTexGenParameterivSGIS
#define glPixelTexGenParameterfSGIS glew::gl::glPixelTexGenParameterfSGIS
#define glPixelTexGenParameterfvSGIS glew::gl::glPixelTexGenParameterfvSGIS
#define glGetPixelTexGenParameterivSGIS glew::gl::glGetPixelTexGenParameterivSGIS
#define glGetPixelTexGenParameterfvSGIS glew::gl::glGetPixelTexGenParameterfvSGIS
#define glPointParameterfSGIS glew::gl::glPointParameterfSGIS
#define glPointParameterfvSGIS glew::gl::glPointParameterfvSGIS
#define glSharpenTexFuncSGIS glew::gl::glSharpenTexFuncSGIS
#define glGetSharpenTexFuncSGIS glew::gl::glGetSharpenTexFuncSGIS
#define glTexImage4DSGIS glew::gl::glTexImage4DSGIS
#define glTexSubImage4DSGIS glew::gl::glTexSubImage4DSGIS
#define glTextureColorMaskSGIS glew::gl::glTextureColorMaskSGIS
#define glGetTexFilterFuncSGIS glew::gl::glGetTexFilterFuncSGIS
#define glTexFilterFuncSGIS glew::gl::glTexFilterFuncSGIS
#define glAsyncMarkerSGIX glew::gl::glAsyncMarkerSGIX
#define glFinishAsyncSGIX glew::gl::glFinishAsyncSGIX
#define glPollAsyncSGIX glew::gl::glPollAsyncSGIX
#define glGenAsyncMarkersSGIX glew::gl::glGenAsyncMarkersSGIX
#define glDeleteAsyncMarkersSGIX glew::gl::glDeleteAsyncMarkersSGIX
#define glIsAsyncMarkerSGIX glew::gl::glIsAsyncMarkerSGIX
#define glFlushRasterSGIX glew::gl::glFlushRasterSGIX
#define glFragmentColorMaterialSGIX glew::gl::glFragmentColorMaterialSGIX
#define glFragmentLightfSGIX glew::gl::glFragmentLightfSGIX
#define glFragmentLightfvSGIX glew::gl::glFragmentLightfvSGIX
#define glFragmentLightiSGIX glew::gl::glFragmentLightiSGIX
#define glFragmentLightivSGIX glew::gl::glFragmentLightivSGIX
#define glFragmentLightModelfSGIX glew::gl::glFragmentLightModelfSGIX
#define glFragmentLightModelfvSGIX glew::gl::glFragmentLightModelfvSGIX
#define glFragmentLightModeliSGIX glew::gl::glFragmentLightModeliSGIX
#define glFragmentLightModelivSGIX glew::gl::glFragmentLightModelivSGIX
#define glFragmentMaterialfSGIX glew::gl::glFragmentMaterialfSGIX
#define glFragmentMaterialfvSGIX glew::gl::glFragmentMaterialfvSGIX
#define glFragmentMaterialiSGIX glew::gl::glFragmentMaterialiSGIX
#define glFragmentMaterialivSGIX glew::gl::glFragmentMaterialivSGIX
#define glGetFragmentLightfvSGIX glew::gl::glGetFragmentLightfvSGIX
#define glGetFragmentLightivSGIX glew::gl::glGetFragmentLightivSGIX
#define glGetFragmentMaterialfvSGIX glew::gl::glGetFragmentMaterialfvSGIX
#define glGetFragmentMaterialivSGIX glew::gl::glGetFragmentMaterialivSGIX
#define glLightEnviSGIX glew::gl::glLightEnviSGIX
#define glFrameZoomSGIX glew::gl::glFrameZoomSGIX
#define glIglooInterfaceSGIX glew::gl::glIglooInterfaceSGIX
#define glGetInstrumentsSGIX glew::gl::glGetInstrumentsSGIX
#define glInstrumentsBufferSGIX glew::gl::glInstrumentsBufferSGIX
#define glPollInstrumentsSGIX glew::gl::glPollInstrumentsSGIX
#define glReadInstrumentsSGIX glew::gl::glReadInstrumentsSGIX
#define glStartInstrumentsSGIX glew::gl::glStartInstrumentsSGIX
#define glStopInstrumentsSGIX glew::gl::glStopInstrumentsSGIX
#define glGetListParameterfvSGIX glew::gl::glGetListParameterfvSGIX
#define glGetListParameterivSGIX glew::gl::glGetListParameterivSGIX
#define glListParameterfSGIX glew::gl::glListParameterfSGIX
#define glListParameterfvSGIX glew::gl::glListParameterfvSGIX
#define glListParameteriSGIX glew::gl::glListParameteriSGIX
#define glListParameterivSGIX glew::gl::glListParameterivSGIX
#define glPixelTexGenSGIX glew::gl::glPixelTexGenSGIX
#define glDeformationMap3dSGIX glew::gl::glDeformationMap3dSGIX
#define glDeformationMap3fSGIX glew::gl::glDeformationMap3fSGIX
#define glDeformSGIX glew::gl::glDeformSGIX
#define glLoadIdentityDeformationMapSGIX glew::gl::glLoadIdentityDeformationMapSGIX
#define glReferencePlaneSGIX glew::gl::glReferencePlaneSGIX
#define glSpriteParameterfSGIX glew::gl::glSpriteParameterfSGIX
#define glSpriteParameterfvSGIX glew::gl::glSpriteParameterfvSGIX
#define glSpriteParameteriSGIX glew::gl::glSpriteParameteriSGIX
#define glSpriteParameterivSGIX glew::gl::glSpriteParameterivSGIX
#define glTagSampleBufferSGIX glew::gl::glTagSampleBufferSGIX
#define glColorTableSGI glew::gl::glColorTableSGI
#define glColorTableParameterfvSGI glew::gl::glColorTableParameterfvSGI
#define glColorTableParameterivSGI glew::gl::glColorTableParameterivSGI
#define glCopyColorTableSGI glew::gl::glCopyColorTableSGI
#define glGetColorTableSGI glew::gl::glGetColorTableSGI
#define glGetColorTableParameterfvSGI glew::gl::glGetColorTableParameterfvSGI
#define glGetColorTableParameterivSGI glew::gl::glGetColorTableParameterivSGI
#define glFinishTextureSUNX glew::gl::glFinishTextureSUNX
#define glGlobalAlphaFactorbSUN glew::gl::glGlobalAlphaFactorbSUN
#define glGlobalAlphaFactorsSUN glew::gl::glGlobalAlphaFactorsSUN
#define glGlobalAlphaFactoriSUN glew::gl::glGlobalAlphaFactoriSUN
#define glGlobalAlphaFactorfSUN glew::gl::glGlobalAlphaFactorfSUN
#define glGlobalAlphaFactordSUN glew::gl::glGlobalAlphaFactordSUN
#define glGlobalAlphaFactorubSUN glew::gl::glGlobalAlphaFactorubSUN
#define glGlobalAlphaFactorusSUN glew::gl::glGlobalAlphaFactorusSUN
#define glGlobalAlphaFactoruiSUN glew::gl::glGlobalAlphaFactoruiSUN
#define glDrawMeshArraysSUN glew::gl::glDrawMeshArraysSUN
#define glReplacementCodeuiSUN glew::gl::glReplacementCodeuiSUN
#define glReplacementCodeusSUN glew::gl::glReplacementCodeusSUN
#define glReplacementCodeubSUN glew::gl::glReplacementCodeubSUN
#define glReplacementCodeuivSUN glew::gl::glReplacementCodeuivSUN
#define glReplacementCodeusvSUN glew::gl::glReplacementCodeusvSUN
#define glReplacementCodeubvSUN glew::gl::glReplacementCodeubvSUN
#define glReplacementCodePointerSUN glew::gl::glReplacementCodePointerSUN
#define glColor4ubVertex2fSUN glew::gl::glColor4ubVertex2fSUN
#define glColor4ubVertex2fvSUN glew::gl::glColor4ubVertex2fvSUN
#define glColor4ubVertex3fSUN glew::gl::glColor4ubVertex3fSUN
#define glColor4ubVertex3fvSUN glew::gl::glColor4ubVertex3fvSUN
#define glColor3fVertex3fSUN glew::gl::glColor3fVertex3fSUN
#define glColor3fVertex3fvSUN glew::gl::glColor3fVertex3fvSUN
#define glNormal3fVertex3fSUN glew::gl::glNormal3fVertex3fSUN
#define glNormal3fVertex3fvSUN glew::gl::glNormal3fVertex3fvSUN
#define glColor4fNormal3fVertex3fSUN glew::gl::glColor4fNormal3fVertex3fSUN
#define glColor4fNormal3fVertex3fvSUN glew::gl::glColor4fNormal3fVertex3fvSUN
#define glTexCoord2fVertex3fSUN glew::gl::glTexCoord2fVertex3fSUN
#define glTexCoord2fVertex3fvSUN glew::gl::glTexCoord2fVertex3fvSUN
#define glTexCoord4fVertex4fSUN glew::gl::glTexCoord4fVertex4fSUN
#define glTexCoord4fVertex4fvSUN glew::gl::glTexCoord4fVertex4fvSUN
#define glTexCoord2fColor4ubVertex3fSUN glew::gl::glTexCoord2fColor4ubVertex3fSUN
#define glTexCoord2fColor4ubVertex3fvSUN glew::gl::glTexCoord2fColor4ubVertex3fvSUN
#define glTexCoord2fColor3fVertex3fSUN glew::gl::glTexCoord2fColor3fVertex3fSUN
#define glTexCoord2fColor3fVertex3fvSUN glew::gl::glTexCoord2fColor3fVertex3fvSUN
#define glTexCoord2fNormal3fVertex3fSUN glew::gl::glTexCoord2fNormal3fVertex3fSUN
#define glTexCoord2fNormal3fVertex3fvSUN glew::gl::glTexCoord2fNormal3fVertex3fvSUN
#define glTexCoord2fColor4fNormal3fVertex3fSUN glew::gl::glTexCoord2fColor4fNormal3fVertex3fSUN
#define glTexCoord2fColor4fNormal3fVertex3fvSUN glew::gl::glTexCoord2fColor4fNormal3fVertex3fvSUN
#define glTexCoord4fColor4fNormal3fVertex4fSUN glew::gl::glTexCoord4fColor4fNormal3fVertex4fSUN
#define glTexCoord4fColor4fNormal3fVertex4fvSUN glew::gl::glTexCoord4fColor4fNormal3fVertex4fvSUN
#define glReplacementCodeuiVertex3fSUN glew::gl::glReplacementCodeuiVertex3fSUN
#define glReplacementCodeuiVertex3fvSUN glew::gl::glReplacementCodeuiVertex3fvSUN
#define glReplacementCodeuiColor4ubVertex3fSUN glew::gl::glReplacementCodeuiColor4ubVertex3fSUN
#define glReplacementCodeuiColor4ubVertex3fvSUN glew::gl::glReplacementCodeuiColor4ubVertex3fvSUN
#define glReplacementCodeuiColor3fVertex3fSUN glew::gl::glReplacementCodeuiColor3fVertex3fSUN
#define glReplacementCodeuiColor3fVertex3fvSUN glew::gl::glReplacementCodeuiColor3fVertex3fvSUN
#define glReplacementCodeuiNormal3fVertex3fSUN glew::gl::glReplacementCodeuiNormal3fVertex3fSUN
#define glReplacementCodeuiNormal3fVertex3fvSUN glew::gl::glReplacementCodeuiNormal3fVertex3fvSUN
#define glReplacementCodeuiColor4fNormal3fVertex3fSUN glew::gl::glReplacementCodeuiColor4fNormal3fVertex3fSUN
#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN glew::gl::glReplacementCodeuiColor4fNormal3fVertex3fvSUN
#define glReplacementCodeuiTexCoord2fVertex3fSUN glew::gl::glReplacementCodeuiTexCoord2fVertex3fSUN
#define glReplacementCodeuiTexCoord2fVertex3fvSUN glew::gl::glReplacementCodeuiTexCoord2fVertex3fvSUN
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN glew::gl::glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN glew::gl::glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN glew::gl::glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN glew::gl::glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // __GLEW_GL_H__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
