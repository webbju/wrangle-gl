////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __GLEW_GL_H__
#define __GLEW_GL_H__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#if defined (_WIN32)
  #ifndef WIN32_LEAN_AND_MEAN
    #define WIN32_LEAN_AND_MEAN 1
    #define _WIN32_LEAN_AND_MEAN 1
  #endif
  #include <windows.h>
  #ifndef GLAPI
    #define GLAPI __declspec(dllimport)
  #endif
  #ifndef APIENTRY
    #define APIENTRY WINAPI
  #endif
  #ifndef APIENTRYP
    #define APIENTRYP WINAPI*
  #endif
  #ifdef _WIN32_LEAN_AND_MEAN
    #undef WIN32_LEAN_AND_MEAN
    #undef _WIN32_LEAN_AND_MEAN
  #endif
#endif

// GLAPI is defined to 'extern' in <GL/glcorearb.h>
// Prevents duplicate 'extern' on GLEW_EXTERN_C GLAPI definitions.
#ifndef GLAPI
#define GLAPI 
#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <wrangle.h>

#include <GL/glcorearb.h>

#include <GL/glext.h>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Prevent including duplicate <GL/gl.h> headers.
#ifndef __gl_h_
#define __gl_h_
#endif
#ifndef __GL_H__
#define __GL_H__
#endif

// glext.h defines GL_KHR_debug, but not the function pointer.
typedef void (APIENTRY  *GLDEBUGPROCKHR)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *message, const void *userParam);

#ifndef GL_OES_EGL_image
typedef void* GLeglImageOES;
#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#if defined(__GNUC__)
#if ((__GNUC__ * 10000) + (__GNUC_MINOR__ * 100) + __GNUC_PATCHLEVEL__) >= 40600 
#pragma GCC diagnostic push // push/pop not available before GCC 4.6
#endif
#pragma GCC diagnostic ignored "-Wunused-function"
#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum GLEW_GL_FeatureSet
{
  GLEW_GL_VERSION_1_0,
  GLEW_GL_VERSION_1_1,
  GLEW_GL_VERSION_1_2,
  GLEW_GL_VERSION_1_3,
  GLEW_GL_VERSION_1_4,
  GLEW_GL_VERSION_1_5,
  GLEW_GL_VERSION_2_0,
  GLEW_GL_VERSION_2_1,
  GLEW_GL_VERSION_3_0,
  GLEW_GL_VERSION_3_1,
  GLEW_GL_VERSION_3_2,
  GLEW_GL_VERSION_3_3,
  GLEW_GL_VERSION_4_0,
  GLEW_GL_VERSION_4_1,
  GLEW_GL_VERSION_4_2,
  GLEW_GL_VERSION_4_3,
  GLEW_GL_VERSION_4_4,
  GLEW_GL_VERSION_4_5,
  GLEW_GL_ES_VERSION_2_0,
  GLEW_GL_ES_VERSION_3_0,
  GLEW_GL_ES_VERSION_3_1,
  GLEW_GL_ES_VERSION_3_2,
  GLEW_GL_3DFX_multisample,
  GLEW_GL_3DFX_tbuffer,
  GLEW_GL_3DFX_texture_compression_FXT1,
  GLEW_GL_AMD_blend_minmax_factor,
  GLEW_GL_AMD_compressed_3DC_texture,
  GLEW_GL_AMD_compressed_ATC_texture,
  GLEW_GL_AMD_conservative_depth,
  GLEW_GL_AMD_debug_output,
  GLEW_GL_AMD_depth_clamp_separate,
  GLEW_GL_AMD_draw_buffers_blend,
  GLEW_GL_AMD_gcn_shader,
  GLEW_GL_AMD_gpu_shader_int64,
  GLEW_GL_AMD_interleaved_elements,
  GLEW_GL_AMD_multi_draw_indirect,
  GLEW_GL_AMD_name_gen_delete,
  GLEW_GL_AMD_occlusion_query_event,
  GLEW_GL_AMD_performance_monitor,
  GLEW_GL_AMD_pinned_memory,
  GLEW_GL_AMD_program_binary_Z400,
  GLEW_GL_AMD_query_buffer_object,
  GLEW_GL_AMD_sample_positions,
  GLEW_GL_AMD_seamless_cubemap_per_texture,
  GLEW_GL_AMD_shader_atomic_counter_ops,
  GLEW_GL_AMD_shader_stencil_export,
  GLEW_GL_AMD_shader_trinary_minmax,
  GLEW_GL_AMD_sparse_texture,
  GLEW_GL_AMD_stencil_operation_extended,
  GLEW_GL_AMD_texture_texture4,
  GLEW_GL_AMD_transform_feedback3_lines_triangles,
  GLEW_GL_AMD_transform_feedback4,
  GLEW_GL_AMD_vertex_shader_layer,
  GLEW_GL_AMD_vertex_shader_tessellator,
  GLEW_GL_AMD_vertex_shader_viewport_index,
  GLEW_GL_ANDROID_extension_pack_es31a,
  GLEW_GL_ANGLE_depth_texture,
  GLEW_GL_ANGLE_framebuffer_blit,
  GLEW_GL_ANGLE_framebuffer_multisample,
  GLEW_GL_ANGLE_instanced_arrays,
  GLEW_GL_ANGLE_pack_reverse_row_order,
  GLEW_GL_ANGLE_program_binary,
  GLEW_GL_ANGLE_texture_compression_dxt3,
  GLEW_GL_ANGLE_texture_compression_dxt5,
  GLEW_GL_ANGLE_texture_usage,
  GLEW_GL_ANGLE_translated_shader_source,
  GLEW_GL_APPLE_aux_depth_stencil,
  GLEW_GL_APPLE_client_storage,
  GLEW_GL_APPLE_clip_distance,
  GLEW_GL_APPLE_color_buffer_packed_float,
  GLEW_GL_APPLE_copy_texture_levels,
  GLEW_GL_APPLE_element_array,
  GLEW_GL_APPLE_fence,
  GLEW_GL_APPLE_float_pixels,
  GLEW_GL_APPLE_flush_buffer_range,
  GLEW_GL_APPLE_framebuffer_multisample,
  GLEW_GL_APPLE_object_purgeable,
  GLEW_GL_APPLE_rgb_422,
  GLEW_GL_APPLE_row_bytes,
  GLEW_GL_APPLE_specular_vector,
  GLEW_GL_APPLE_sync,
  GLEW_GL_APPLE_texture_format_BGRA8888,
  GLEW_GL_APPLE_texture_max_level,
  GLEW_GL_APPLE_texture_packed_float,
  GLEW_GL_APPLE_texture_range,
  GLEW_GL_APPLE_transform_hint,
  GLEW_GL_APPLE_vertex_array_object,
  GLEW_GL_APPLE_vertex_array_range,
  GLEW_GL_APPLE_vertex_program_evaluators,
  GLEW_GL_APPLE_ycbcr_422,
  GLEW_GL_ARB_ES2_compatibility,
  GLEW_GL_ARB_ES3_1_compatibility,
  GLEW_GL_ARB_ES3_2_compatibility,
  GLEW_GL_ARB_ES3_compatibility,
  GLEW_GL_ARB_arrays_of_arrays,
  GLEW_GL_ARB_base_instance,
  GLEW_GL_ARB_bindless_texture,
  GLEW_GL_ARB_blend_func_extended,
  GLEW_GL_ARB_buffer_storage,
  GLEW_GL_ARB_cl_event,
  GLEW_GL_ARB_clear_buffer_object,
  GLEW_GL_ARB_clear_texture,
  GLEW_GL_ARB_clip_control,
  GLEW_GL_ARB_color_buffer_float,
  GLEW_GL_ARB_compatibility,
  GLEW_GL_ARB_compressed_texture_pixel_storage,
  GLEW_GL_ARB_compute_shader,
  GLEW_GL_ARB_compute_variable_group_size,
  GLEW_GL_ARB_conditional_render_inverted,
  GLEW_GL_ARB_conservative_depth,
  GLEW_GL_ARB_copy_buffer,
  GLEW_GL_ARB_copy_image,
  GLEW_GL_ARB_cull_distance,
  GLEW_GL_ARB_debug_output,
  GLEW_GL_ARB_depth_buffer_float,
  GLEW_GL_ARB_depth_clamp,
  GLEW_GL_ARB_depth_texture,
  GLEW_GL_ARB_derivative_control,
  GLEW_GL_ARB_direct_state_access,
  GLEW_GL_ARB_draw_buffers,
  GLEW_GL_ARB_draw_buffers_blend,
  GLEW_GL_ARB_draw_elements_base_vertex,
  GLEW_GL_ARB_draw_indirect,
  GLEW_GL_ARB_draw_instanced,
  GLEW_GL_ARB_enhanced_layouts,
  GLEW_GL_ARB_explicit_attrib_location,
  GLEW_GL_ARB_explicit_uniform_location,
  GLEW_GL_ARB_fragment_coord_conventions,
  GLEW_GL_ARB_fragment_layer_viewport,
  GLEW_GL_ARB_fragment_program,
  GLEW_GL_ARB_fragment_program_shadow,
  GLEW_GL_ARB_fragment_shader,
  GLEW_GL_ARB_fragment_shader_interlock,
  GLEW_GL_ARB_framebuffer_no_attachments,
  GLEW_GL_ARB_framebuffer_object,
  GLEW_GL_ARB_framebuffer_sRGB,
  GLEW_GL_ARB_geometry_shader4,
  GLEW_GL_ARB_get_program_binary,
  GLEW_GL_ARB_get_texture_sub_image,
  GLEW_GL_ARB_gpu_shader5,
  GLEW_GL_ARB_gpu_shader_fp64,
  GLEW_GL_ARB_gpu_shader_int64,
  GLEW_GL_ARB_half_float_pixel,
  GLEW_GL_ARB_half_float_vertex,
  GLEW_GL_ARB_imaging,
  GLEW_GL_ARB_indirect_parameters,
  GLEW_GL_ARB_instanced_arrays,
  GLEW_GL_ARB_internalformat_query,
  GLEW_GL_ARB_internalformat_query2,
  GLEW_GL_ARB_invalidate_subdata,
  GLEW_GL_ARB_map_buffer_alignment,
  GLEW_GL_ARB_map_buffer_range,
  GLEW_GL_ARB_matrix_palette,
  GLEW_GL_ARB_multi_bind,
  GLEW_GL_ARB_multi_draw_indirect,
  GLEW_GL_ARB_multisample,
  GLEW_GL_ARB_multitexture,
  GLEW_GL_ARB_occlusion_query,
  GLEW_GL_ARB_occlusion_query2,
  GLEW_GL_ARB_parallel_shader_compile,
  GLEW_GL_ARB_pipeline_statistics_query,
  GLEW_GL_ARB_pixel_buffer_object,
  GLEW_GL_ARB_point_parameters,
  GLEW_GL_ARB_point_sprite,
  GLEW_GL_ARB_post_depth_coverage,
  GLEW_GL_ARB_program_interface_query,
  GLEW_GL_ARB_provoking_vertex,
  GLEW_GL_ARB_query_buffer_object,
  GLEW_GL_ARB_robust_buffer_access_behavior,
  GLEW_GL_ARB_robustness,
  GLEW_GL_ARB_robustness_isolation,
  GLEW_GL_ARB_sample_locations,
  GLEW_GL_ARB_sample_shading,
  GLEW_GL_ARB_sampler_objects,
  GLEW_GL_ARB_seamless_cube_map,
  GLEW_GL_ARB_seamless_cubemap_per_texture,
  GLEW_GL_ARB_separate_shader_objects,
  GLEW_GL_ARB_shader_atomic_counter_ops,
  GLEW_GL_ARB_shader_atomic_counters,
  GLEW_GL_ARB_shader_ballot,
  GLEW_GL_ARB_shader_bit_encoding,
  GLEW_GL_ARB_shader_clock,
  GLEW_GL_ARB_shader_draw_parameters,
  GLEW_GL_ARB_shader_group_vote,
  GLEW_GL_ARB_shader_image_load_store,
  GLEW_GL_ARB_shader_image_size,
  GLEW_GL_ARB_shader_objects,
  GLEW_GL_ARB_shader_precision,
  GLEW_GL_ARB_shader_stencil_export,
  GLEW_GL_ARB_shader_storage_buffer_object,
  GLEW_GL_ARB_shader_subroutine,
  GLEW_GL_ARB_shader_texture_image_samples,
  GLEW_GL_ARB_shader_texture_lod,
  GLEW_GL_ARB_shader_viewport_layer_array,
  GLEW_GL_ARB_shading_language_100,
  GLEW_GL_ARB_shading_language_420pack,
  GLEW_GL_ARB_shading_language_include,
  GLEW_GL_ARB_shading_language_packing,
  GLEW_GL_ARB_shadow,
  GLEW_GL_ARB_shadow_ambient,
  GLEW_GL_ARB_sparse_buffer,
  GLEW_GL_ARB_sparse_texture,
  GLEW_GL_ARB_sparse_texture2,
  GLEW_GL_ARB_sparse_texture_clamp,
  GLEW_GL_ARB_stencil_texturing,
  GLEW_GL_ARB_sync,
  GLEW_GL_ARB_tessellation_shader,
  GLEW_GL_ARB_texture_barrier,
  GLEW_GL_ARB_texture_border_clamp,
  GLEW_GL_ARB_texture_buffer_object,
  GLEW_GL_ARB_texture_buffer_object_rgb32,
  GLEW_GL_ARB_texture_buffer_range,
  GLEW_GL_ARB_texture_compression,
  GLEW_GL_ARB_texture_compression_bptc,
  GLEW_GL_ARB_texture_compression_rgtc,
  GLEW_GL_ARB_texture_cube_map,
  GLEW_GL_ARB_texture_cube_map_array,
  GLEW_GL_ARB_texture_env_add,
  GLEW_GL_ARB_texture_env_combine,
  GLEW_GL_ARB_texture_env_crossbar,
  GLEW_GL_ARB_texture_env_dot3,
  GLEW_GL_ARB_texture_filter_minmax,
  GLEW_GL_ARB_texture_float,
  GLEW_GL_ARB_texture_gather,
  GLEW_GL_ARB_texture_mirror_clamp_to_edge,
  GLEW_GL_ARB_texture_mirrored_repeat,
  GLEW_GL_ARB_texture_multisample,
  GLEW_GL_ARB_texture_non_power_of_two,
  GLEW_GL_ARB_texture_query_levels,
  GLEW_GL_ARB_texture_query_lod,
  GLEW_GL_ARB_texture_rectangle,
  GLEW_GL_ARB_texture_rg,
  GLEW_GL_ARB_texture_rgb10_a2ui,
  GLEW_GL_ARB_texture_stencil8,
  GLEW_GL_ARB_texture_storage,
  GLEW_GL_ARB_texture_storage_multisample,
  GLEW_GL_ARB_texture_swizzle,
  GLEW_GL_ARB_texture_view,
  GLEW_GL_ARB_timer_query,
  GLEW_GL_ARB_transform_feedback2,
  GLEW_GL_ARB_transform_feedback3,
  GLEW_GL_ARB_transform_feedback_instanced,
  GLEW_GL_ARB_transform_feedback_overflow_query,
  GLEW_GL_ARB_transpose_matrix,
  GLEW_GL_ARB_uniform_buffer_object,
  GLEW_GL_ARB_vertex_array_bgra,
  GLEW_GL_ARB_vertex_array_object,
  GLEW_GL_ARB_vertex_attrib_64bit,
  GLEW_GL_ARB_vertex_attrib_binding,
  GLEW_GL_ARB_vertex_blend,
  GLEW_GL_ARB_vertex_buffer_object,
  GLEW_GL_ARB_vertex_program,
  GLEW_GL_ARB_vertex_shader,
  GLEW_GL_ARB_vertex_type_10f_11f_11f_rev,
  GLEW_GL_ARB_vertex_type_2_10_10_10_rev,
  GLEW_GL_ARB_viewport_array,
  GLEW_GL_ARB_window_pos,
  GLEW_GL_ARM_mali_program_binary,
  GLEW_GL_ARM_mali_shader_binary,
  GLEW_GL_ARM_rgba8,
  GLEW_GL_ARM_shader_framebuffer_fetch,
  GLEW_GL_ARM_shader_framebuffer_fetch_depth_stencil,
  GLEW_GL_ATI_draw_buffers,
  GLEW_GL_ATI_element_array,
  GLEW_GL_ATI_envmap_bumpmap,
  GLEW_GL_ATI_fragment_shader,
  GLEW_GL_ATI_map_object_buffer,
  GLEW_GL_ATI_meminfo,
  GLEW_GL_ATI_pixel_format_float,
  GLEW_GL_ATI_pn_triangles,
  GLEW_GL_ATI_separate_stencil,
  GLEW_GL_ATI_text_fragment_shader,
  GLEW_GL_ATI_texture_env_combine3,
  GLEW_GL_ATI_texture_float,
  GLEW_GL_ATI_texture_mirror_once,
  GLEW_GL_ATI_vertex_array_object,
  GLEW_GL_ATI_vertex_attrib_array_object,
  GLEW_GL_ATI_vertex_streams,
  GLEW_GL_DMP_program_binary,
  GLEW_GL_DMP_shader_binary,
  GLEW_GL_EXT_422_pixels,
  GLEW_GL_EXT_YUV_target,
  GLEW_GL_EXT_abgr,
  GLEW_GL_EXT_base_instance,
  GLEW_GL_EXT_bgra,
  GLEW_GL_EXT_bindable_uniform,
  GLEW_GL_EXT_blend_color,
  GLEW_GL_EXT_blend_equation_separate,
  GLEW_GL_EXT_blend_func_extended,
  GLEW_GL_EXT_blend_func_separate,
  GLEW_GL_EXT_blend_logic_op,
  GLEW_GL_EXT_blend_minmax,
  GLEW_GL_EXT_blend_subtract,
  GLEW_GL_EXT_buffer_storage,
  GLEW_GL_EXT_clip_volume_hint,
  GLEW_GL_EXT_cmyka,
  GLEW_GL_EXT_color_buffer_float,
  GLEW_GL_EXT_color_buffer_half_float,
  GLEW_GL_EXT_color_subtable,
  GLEW_GL_EXT_compiled_vertex_array,
  GLEW_GL_EXT_convolution,
  GLEW_GL_EXT_coordinate_frame,
  GLEW_GL_EXT_copy_image,
  GLEW_GL_EXT_copy_texture,
  GLEW_GL_EXT_cull_vertex,
  GLEW_GL_EXT_debug_label,
  GLEW_GL_EXT_debug_marker,
  GLEW_GL_EXT_depth_bounds_test,
  GLEW_GL_EXT_direct_state_access,
  GLEW_GL_EXT_discard_framebuffer,
  GLEW_GL_EXT_disjoint_timer_query,
  GLEW_GL_EXT_draw_buffers,
  GLEW_GL_EXT_draw_buffers2,
  GLEW_GL_EXT_draw_buffers_indexed,
  GLEW_GL_EXT_draw_elements_base_vertex,
  GLEW_GL_EXT_draw_instanced,
  GLEW_GL_EXT_draw_range_elements,
  GLEW_GL_EXT_float_blend,
  GLEW_GL_EXT_fog_coord,
  GLEW_GL_EXT_framebuffer_blit,
  GLEW_GL_EXT_framebuffer_multisample,
  GLEW_GL_EXT_framebuffer_multisample_blit_scaled,
  GLEW_GL_EXT_framebuffer_object,
  GLEW_GL_EXT_framebuffer_sRGB,
  GLEW_GL_EXT_geometry_point_size,
  GLEW_GL_EXT_geometry_shader,
  GLEW_GL_EXT_geometry_shader4,
  GLEW_GL_EXT_gpu_program_parameters,
  GLEW_GL_EXT_gpu_shader4,
  GLEW_GL_EXT_gpu_shader5,
  GLEW_GL_EXT_histogram,
  GLEW_GL_EXT_index_array_formats,
  GLEW_GL_EXT_index_func,
  GLEW_GL_EXT_index_material,
  GLEW_GL_EXT_index_texture,
  GLEW_GL_EXT_instanced_arrays,
  GLEW_GL_EXT_light_texture,
  GLEW_GL_EXT_map_buffer_range,
  GLEW_GL_EXT_misc_attribute,
  GLEW_GL_EXT_multi_draw_arrays,
  GLEW_GL_EXT_multi_draw_indirect,
  GLEW_GL_EXT_multisample,
  GLEW_GL_EXT_multisampled_compatibility,
  GLEW_GL_EXT_multisampled_render_to_texture,
  GLEW_GL_EXT_multiview_draw_buffers,
  GLEW_GL_EXT_occlusion_query_boolean,
  GLEW_GL_EXT_packed_depth_stencil,
  GLEW_GL_EXT_packed_float,
  GLEW_GL_EXT_packed_pixels,
  GLEW_GL_EXT_paletted_texture,
  GLEW_GL_EXT_pixel_buffer_object,
  GLEW_GL_EXT_pixel_transform,
  GLEW_GL_EXT_pixel_transform_color_table,
  GLEW_GL_EXT_point_parameters,
  GLEW_GL_EXT_polygon_offset,
  GLEW_GL_EXT_polygon_offset_clamp,
  GLEW_GL_EXT_post_depth_coverage,
  GLEW_GL_EXT_primitive_bounding_box,
  GLEW_GL_EXT_provoking_vertex,
  GLEW_GL_EXT_pvrtc_sRGB,
  GLEW_GL_EXT_raster_multisample,
  GLEW_GL_EXT_read_format_bgra,
  GLEW_GL_EXT_render_snorm,
  GLEW_GL_EXT_rescale_normal,
  GLEW_GL_EXT_robustness,
  GLEW_GL_EXT_sRGB,
  GLEW_GL_EXT_sRGB_write_control,
  GLEW_GL_EXT_secondary_color,
  GLEW_GL_EXT_separate_shader_objects,
  GLEW_GL_EXT_separate_specular_color,
  GLEW_GL_EXT_shader_framebuffer_fetch,
  GLEW_GL_EXT_shader_image_load_formatted,
  GLEW_GL_EXT_shader_image_load_store,
  GLEW_GL_EXT_shader_implicit_conversions,
  GLEW_GL_EXT_shader_integer_mix,
  GLEW_GL_EXT_shader_io_blocks,
  GLEW_GL_EXT_shader_pixel_local_storage,
  GLEW_GL_EXT_shader_texture_lod,
  GLEW_GL_EXT_shadow_funcs,
  GLEW_GL_EXT_shadow_samplers,
  GLEW_GL_EXT_shared_texture_palette,
  GLEW_GL_EXT_sparse_texture,
  GLEW_GL_EXT_sparse_texture2,
  GLEW_GL_EXT_stencil_clear_tag,
  GLEW_GL_EXT_stencil_two_side,
  GLEW_GL_EXT_stencil_wrap,
  GLEW_GL_EXT_subtexture,
  GLEW_GL_EXT_tessellation_point_size,
  GLEW_GL_EXT_tessellation_shader,
  GLEW_GL_EXT_texture,
  GLEW_GL_EXT_texture3D,
  GLEW_GL_EXT_texture_array,
  GLEW_GL_EXT_texture_border_clamp,
  GLEW_GL_EXT_texture_buffer,
  GLEW_GL_EXT_texture_buffer_object,
  GLEW_GL_EXT_texture_compression_dxt1,
  GLEW_GL_EXT_texture_compression_latc,
  GLEW_GL_EXT_texture_compression_rgtc,
  GLEW_GL_EXT_texture_compression_s3tc,
  GLEW_GL_EXT_texture_cube_map,
  GLEW_GL_EXT_texture_cube_map_array,
  GLEW_GL_EXT_texture_env_add,
  GLEW_GL_EXT_texture_env_combine,
  GLEW_GL_EXT_texture_env_dot3,
  GLEW_GL_EXT_texture_filter_anisotropic,
  GLEW_GL_EXT_texture_filter_minmax,
  GLEW_GL_EXT_texture_format_BGRA8888,
  GLEW_GL_EXT_texture_integer,
  GLEW_GL_EXT_texture_lod_bias,
  GLEW_GL_EXT_texture_mirror_clamp,
  GLEW_GL_EXT_texture_norm16,
  GLEW_GL_EXT_texture_object,
  GLEW_GL_EXT_texture_perturb_normal,
  GLEW_GL_EXT_texture_rg,
  GLEW_GL_EXT_texture_sRGB,
  GLEW_GL_EXT_texture_sRGB_R8,
  GLEW_GL_EXT_texture_sRGB_RG8,
  GLEW_GL_EXT_texture_sRGB_decode,
  GLEW_GL_EXT_texture_shared_exponent,
  GLEW_GL_EXT_texture_snorm,
  GLEW_GL_EXT_texture_storage,
  GLEW_GL_EXT_texture_swizzle,
  GLEW_GL_EXT_texture_type_2_10_10_10_REV,
  GLEW_GL_EXT_texture_view,
  GLEW_GL_EXT_timer_query,
  GLEW_GL_EXT_transform_feedback,
  GLEW_GL_EXT_unpack_subimage,
  GLEW_GL_EXT_vertex_array,
  GLEW_GL_EXT_vertex_array_bgra,
  GLEW_GL_EXT_vertex_attrib_64bit,
  GLEW_GL_EXT_vertex_shader,
  GLEW_GL_EXT_vertex_weighting,
  GLEW_GL_EXT_x11_sync_object,
  GLEW_GL_FJ_shader_binary_GCCSO,
  GLEW_GL_GREMEDY_frame_terminator,
  GLEW_GL_GREMEDY_string_marker,
  GLEW_GL_HP_convolution_border_modes,
  GLEW_GL_HP_image_transform,
  GLEW_GL_HP_occlusion_test,
  GLEW_GL_HP_texture_lighting,
  GLEW_GL_IBM_cull_vertex,
  GLEW_GL_IBM_multimode_draw_arrays,
  GLEW_GL_IBM_rasterpos_clip,
  GLEW_GL_IBM_static_data,
  GLEW_GL_IBM_texture_mirrored_repeat,
  GLEW_GL_IBM_vertex_array_lists,
  GLEW_GL_IMG_multisampled_render_to_texture,
  GLEW_GL_IMG_program_binary,
  GLEW_GL_IMG_read_format,
  GLEW_GL_IMG_shader_binary,
  GLEW_GL_IMG_texture_compression_pvrtc,
  GLEW_GL_IMG_texture_compression_pvrtc2,
  GLEW_GL_IMG_texture_filter_cubic,
  GLEW_GL_INGR_blend_func_separate,
  GLEW_GL_INGR_color_clamp,
  GLEW_GL_INGR_interlace_read,
  GLEW_GL_INTEL_fragment_shader_ordering,
  GLEW_GL_INTEL_framebuffer_CMAA,
  GLEW_GL_INTEL_map_texture,
  GLEW_GL_INTEL_parallel_arrays,
  GLEW_GL_INTEL_performance_query,
  GLEW_GL_KHR_blend_equation_advanced,
  GLEW_GL_KHR_blend_equation_advanced_coherent,
  GLEW_GL_KHR_context_flush_control,
  GLEW_GL_KHR_debug,
  GLEW_GL_KHR_no_error,
  GLEW_GL_KHR_robust_buffer_access_behavior,
  GLEW_GL_KHR_robustness,
  GLEW_GL_KHR_texture_compression_astc_hdr,
  GLEW_GL_KHR_texture_compression_astc_ldr,
  GLEW_GL_KHR_texture_compression_astc_sliced_3d,
  GLEW_GL_MESAX_texture_stack,
  GLEW_GL_MESA_pack_invert,
  GLEW_GL_MESA_resize_buffers,
  GLEW_GL_MESA_window_pos,
  GLEW_GL_MESA_ycbcr_texture,
  GLEW_GL_NVX_conditional_render,
  GLEW_GL_NVX_gpu_memory_info,
  GLEW_GL_NV_bindless_multi_draw_indirect,
  GLEW_GL_NV_bindless_multi_draw_indirect_count,
  GLEW_GL_NV_bindless_texture,
  GLEW_GL_NV_blend_equation_advanced,
  GLEW_GL_NV_blend_equation_advanced_coherent,
  GLEW_GL_NV_blend_square,
  GLEW_GL_NV_command_list,
  GLEW_GL_NV_compute_program5,
  GLEW_GL_NV_conditional_render,
  GLEW_GL_NV_conservative_raster,
  GLEW_GL_NV_conservative_raster_dilate,
  GLEW_GL_NV_copy_buffer,
  GLEW_GL_NV_copy_depth_to_color,
  GLEW_GL_NV_copy_image,
  GLEW_GL_NV_coverage_sample,
  GLEW_GL_NV_deep_texture3D,
  GLEW_GL_NV_depth_buffer_float,
  GLEW_GL_NV_depth_clamp,
  GLEW_GL_NV_depth_nonlinear,
  GLEW_GL_NV_draw_buffers,
  GLEW_GL_NV_draw_instanced,
  GLEW_GL_NV_draw_texture,
  GLEW_GL_NV_evaluators,
  GLEW_GL_NV_explicit_attrib_location,
  GLEW_GL_NV_explicit_multisample,
  GLEW_GL_NV_fbo_color_attachments,
  GLEW_GL_NV_fence,
  GLEW_GL_NV_fill_rectangle,
  GLEW_GL_NV_float_buffer,
  GLEW_GL_NV_fog_distance,
  GLEW_GL_NV_fragment_coverage_to_color,
  GLEW_GL_NV_fragment_program,
  GLEW_GL_NV_fragment_program2,
  GLEW_GL_NV_fragment_program4,
  GLEW_GL_NV_fragment_program_option,
  GLEW_GL_NV_fragment_shader_interlock,
  GLEW_GL_NV_framebuffer_blit,
  GLEW_GL_NV_framebuffer_mixed_samples,
  GLEW_GL_NV_framebuffer_multisample,
  GLEW_GL_NV_framebuffer_multisample_coverage,
  GLEW_GL_NV_generate_mipmap_sRGB,
  GLEW_GL_NV_geometry_program4,
  GLEW_GL_NV_geometry_shader4,
  GLEW_GL_NV_geometry_shader_passthrough,
  GLEW_GL_NV_gpu_program4,
  GLEW_GL_NV_gpu_program5,
  GLEW_GL_NV_gpu_program5_mem_extended,
  GLEW_GL_NV_gpu_shader5,
  GLEW_GL_NV_half_float,
  GLEW_GL_NV_image_formats,
  GLEW_GL_NV_instanced_arrays,
  GLEW_GL_NV_internalformat_sample_query,
  GLEW_GL_NV_light_max_exponent,
  GLEW_GL_NV_multisample_coverage,
  GLEW_GL_NV_multisample_filter_hint,
  GLEW_GL_NV_non_square_matrices,
  GLEW_GL_NV_occlusion_query,
  GLEW_GL_NV_packed_depth_stencil,
  GLEW_GL_NV_parameter_buffer_object,
  GLEW_GL_NV_parameter_buffer_object2,
  GLEW_GL_NV_path_rendering,
  GLEW_GL_NV_path_rendering_shared_edge,
  GLEW_GL_NV_pixel_data_range,
  GLEW_GL_NV_point_sprite,
  GLEW_GL_NV_polygon_mode,
  GLEW_GL_NV_present_video,
  GLEW_GL_NV_primitive_restart,
  GLEW_GL_NV_read_buffer,
  GLEW_GL_NV_read_buffer_front,
  GLEW_GL_NV_read_depth,
  GLEW_GL_NV_read_depth_stencil,
  GLEW_GL_NV_read_stencil,
  GLEW_GL_NV_register_combiners,
  GLEW_GL_NV_register_combiners2,
  GLEW_GL_NV_sRGB_formats,
  GLEW_GL_NV_sample_locations,
  GLEW_GL_NV_sample_mask_override_coverage,
  GLEW_GL_NV_shader_atomic_counters,
  GLEW_GL_NV_shader_atomic_float,
  GLEW_GL_NV_shader_atomic_fp16_vector,
  GLEW_GL_NV_shader_atomic_int64,
  GLEW_GL_NV_shader_buffer_load,
  GLEW_GL_NV_shader_buffer_store,
  GLEW_GL_NV_shader_noperspective_interpolation,
  GLEW_GL_NV_shader_storage_buffer_object,
  GLEW_GL_NV_shader_thread_group,
  GLEW_GL_NV_shader_thread_shuffle,
  GLEW_GL_NV_shadow_samplers_array,
  GLEW_GL_NV_shadow_samplers_cube,
  GLEW_GL_NV_tessellation_program5,
  GLEW_GL_NV_texgen_emboss,
  GLEW_GL_NV_texgen_reflection,
  GLEW_GL_NV_texture_barrier,
  GLEW_GL_NV_texture_border_clamp,
  GLEW_GL_NV_texture_compression_s3tc_update,
  GLEW_GL_NV_texture_compression_vtc,
  GLEW_GL_NV_texture_env_combine4,
  GLEW_GL_NV_texture_expand_normal,
  GLEW_GL_NV_texture_multisample,
  GLEW_GL_NV_texture_npot_2D_mipmap,
  GLEW_GL_NV_texture_rectangle,
  GLEW_GL_NV_texture_shader,
  GLEW_GL_NV_texture_shader2,
  GLEW_GL_NV_texture_shader3,
  GLEW_GL_NV_transform_feedback,
  GLEW_GL_NV_transform_feedback2,
  GLEW_GL_NV_uniform_buffer_unified_memory,
  GLEW_GL_NV_vdpau_interop,
  GLEW_GL_NV_vertex_array_range,
  GLEW_GL_NV_vertex_array_range2,
  GLEW_GL_NV_vertex_attrib_integer_64bit,
  GLEW_GL_NV_vertex_buffer_unified_memory,
  GLEW_GL_NV_vertex_program,
  GLEW_GL_NV_vertex_program1_1,
  GLEW_GL_NV_vertex_program2,
  GLEW_GL_NV_vertex_program2_option,
  GLEW_GL_NV_vertex_program3,
  GLEW_GL_NV_vertex_program4,
  GLEW_GL_NV_video_capture,
  GLEW_GL_NV_viewport_array,
  GLEW_GL_NV_viewport_array2,
  GLEW_GL_OES_EGL_image,
  GLEW_GL_OES_EGL_image_external,
  GLEW_GL_OES_EGL_image_external_essl3,
  GLEW_GL_OES_byte_coordinates,
  GLEW_GL_OES_compressed_ETC1_RGB8_sub_texture,
  GLEW_GL_OES_compressed_ETC1_RGB8_texture,
  GLEW_GL_OES_compressed_paletted_texture,
  GLEW_GL_OES_copy_image,
  GLEW_GL_OES_depth24,
  GLEW_GL_OES_depth32,
  GLEW_GL_OES_depth_texture,
  GLEW_GL_OES_draw_buffers_indexed,
  GLEW_GL_OES_draw_elements_base_vertex,
  GLEW_GL_OES_element_index_uint,
  GLEW_GL_OES_fbo_render_mipmap,
  GLEW_GL_OES_fixed_point,
  GLEW_GL_OES_fragment_precision_high,
  GLEW_GL_OES_geometry_point_size,
  GLEW_GL_OES_geometry_shader,
  GLEW_GL_OES_get_program_binary,
  GLEW_GL_OES_gpu_shader5,
  GLEW_GL_OES_mapbuffer,
  GLEW_GL_OES_packed_depth_stencil,
  GLEW_GL_OES_primitive_bounding_box,
  GLEW_GL_OES_query_matrix,
  GLEW_GL_OES_read_format,
  GLEW_GL_OES_required_internalformat,
  GLEW_GL_OES_rgb8_rgba8,
  GLEW_GL_OES_sample_shading,
  GLEW_GL_OES_sample_variables,
  GLEW_GL_OES_shader_image_atomic,
  GLEW_GL_OES_shader_io_blocks,
  GLEW_GL_OES_shader_multisample_interpolation,
  GLEW_GL_OES_single_precision,
  GLEW_GL_OES_standard_derivatives,
  GLEW_GL_OES_stencil1,
  GLEW_GL_OES_stencil4,
  GLEW_GL_OES_surfaceless_context,
  GLEW_GL_OES_tessellation_point_size,
  GLEW_GL_OES_tessellation_shader,
  GLEW_GL_OES_texture_3D,
  GLEW_GL_OES_texture_border_clamp,
  GLEW_GL_OES_texture_buffer,
  GLEW_GL_OES_texture_compression_astc,
  GLEW_GL_OES_texture_cube_map_array,
  GLEW_GL_OES_texture_float,
  GLEW_GL_OES_texture_float_linear,
  GLEW_GL_OES_texture_half_float,
  GLEW_GL_OES_texture_half_float_linear,
  GLEW_GL_OES_texture_npot,
  GLEW_GL_OES_texture_stencil8,
  GLEW_GL_OES_texture_storage_multisample_2d_array,
  GLEW_GL_OES_texture_view,
  GLEW_GL_OES_vertex_array_object,
  GLEW_GL_OES_vertex_half_float,
  GLEW_GL_OES_vertex_type_10_10_10_2,
  GLEW_GL_OML_interlace,
  GLEW_GL_OML_resample,
  GLEW_GL_OML_subsample,
  GLEW_GL_OVR_multiview,
  GLEW_GL_OVR_multiview2,
  GLEW_GL_OVR_multiview_multisampled_render_to_texture,
  GLEW_GL_PGI_misc_hints,
  GLEW_GL_PGI_vertex_hints,
  GLEW_GL_QCOM_alpha_test,
  GLEW_GL_QCOM_binning_control,
  GLEW_GL_QCOM_driver_control,
  GLEW_GL_QCOM_extended_get,
  GLEW_GL_QCOM_extended_get2,
  GLEW_GL_QCOM_perfmon_global_mode,
  GLEW_GL_QCOM_tiled_rendering,
  GLEW_GL_QCOM_writeonly_rendering,
  GLEW_GL_REND_screen_coordinates,
  GLEW_GL_S3_s3tc,
  GLEW_GL_SGIS_detail_texture,
  GLEW_GL_SGIS_fog_function,
  GLEW_GL_SGIS_generate_mipmap,
  GLEW_GL_SGIS_multisample,
  GLEW_GL_SGIS_pixel_texture,
  GLEW_GL_SGIS_point_line_texgen,
  GLEW_GL_SGIS_point_parameters,
  GLEW_GL_SGIS_sharpen_texture,
  GLEW_GL_SGIS_texture4D,
  GLEW_GL_SGIS_texture_border_clamp,
  GLEW_GL_SGIS_texture_color_mask,
  GLEW_GL_SGIS_texture_edge_clamp,
  GLEW_GL_SGIS_texture_filter4,
  GLEW_GL_SGIS_texture_lod,
  GLEW_GL_SGIS_texture_select,
  GLEW_GL_SGIX_async,
  GLEW_GL_SGIX_async_histogram,
  GLEW_GL_SGIX_async_pixel,
  GLEW_GL_SGIX_blend_alpha_minmax,
  GLEW_GL_SGIX_calligraphic_fragment,
  GLEW_GL_SGIX_clipmap,
  GLEW_GL_SGIX_convolution_accuracy,
  GLEW_GL_SGIX_depth_pass_instrument,
  GLEW_GL_SGIX_depth_texture,
  GLEW_GL_SGIX_flush_raster,
  GLEW_GL_SGIX_fog_offset,
  GLEW_GL_SGIX_fragment_lighting,
  GLEW_GL_SGIX_framezoom,
  GLEW_GL_SGIX_igloo_interface,
  GLEW_GL_SGIX_instruments,
  GLEW_GL_SGIX_interlace,
  GLEW_GL_SGIX_ir_instrument1,
  GLEW_GL_SGIX_list_priority,
  GLEW_GL_SGIX_pixel_texture,
  GLEW_GL_SGIX_pixel_tiles,
  GLEW_GL_SGIX_polynomial_ffd,
  GLEW_GL_SGIX_reference_plane,
  GLEW_GL_SGIX_resample,
  GLEW_GL_SGIX_scalebias_hint,
  GLEW_GL_SGIX_shadow,
  GLEW_GL_SGIX_shadow_ambient,
  GLEW_GL_SGIX_sprite,
  GLEW_GL_SGIX_subsample,
  GLEW_GL_SGIX_tag_sample_buffer,
  GLEW_GL_SGIX_texture_add_env,
  GLEW_GL_SGIX_texture_coordinate_clamp,
  GLEW_GL_SGIX_texture_lod_bias,
  GLEW_GL_SGIX_texture_multi_buffer,
  GLEW_GL_SGIX_texture_scale_bias,
  GLEW_GL_SGIX_vertex_preclip,
  GLEW_GL_SGIX_ycrcb,
  GLEW_GL_SGIX_ycrcb_subsample,
  GLEW_GL_SGIX_ycrcba,
  GLEW_GL_SGI_color_matrix,
  GLEW_GL_SGI_color_table,
  GLEW_GL_SGI_texture_color_table,
  GLEW_GL_SUNX_constant_data,
  GLEW_GL_SUN_convolution_border_modes,
  GLEW_GL_SUN_global_alpha,
  GLEW_GL_SUN_mesh_array,
  GLEW_GL_SUN_slice_accum,
  GLEW_GL_SUN_triangle_list,
  GLEW_GL_SUN_vertex,
  GLEW_GL_VIV_shader_binary,
  GLEW_GL_WIN_phong_shading,
  GLEW_GL_WIN_specular_fog,
  GLEW_GL_FeatureSetCount
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GLEW_EXTERN_C GLAPI void APIENTRY glCullFace (GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glFrontFace (GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glHint (GLenum target, GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glLineWidth (GLfloat width);
GLEW_EXTERN_C GLAPI void APIENTRY glPointSize (GLfloat size);
GLEW_EXTERN_C GLAPI void APIENTRY glPolygonMode (GLenum face, GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_EXTERN_C GLAPI void APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_EXTERN_C GLAPI void APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_EXTERN_C GLAPI void APIENTRY glDrawBuffer (GLenum buf);
GLEW_EXTERN_C GLAPI void APIENTRY glClear (GLbitfield mask);
GLEW_EXTERN_C GLAPI void APIENTRY glClearColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glClearStencil (GLint s);
GLEW_EXTERN_C GLAPI void APIENTRY glClearDepth (GLdouble depth);
GLEW_EXTERN_C GLAPI void APIENTRY glStencilMask (GLuint mask);
GLEW_EXTERN_C GLAPI void APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glDepthMask (GLboolean flag);
GLEW_EXTERN_C GLAPI void APIENTRY glDisable (GLenum cap);
GLEW_EXTERN_C GLAPI void APIENTRY glEnable (GLenum cap);
GLEW_EXTERN_C GLAPI void APIENTRY glFinish ();
GLEW_EXTERN_C GLAPI void APIENTRY glFlush ();
GLEW_EXTERN_C GLAPI void APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);
GLEW_EXTERN_C GLAPI void APIENTRY glLogicOp (GLenum opcode);
GLEW_EXTERN_C GLAPI void APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);
GLEW_EXTERN_C GLAPI void APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
GLEW_EXTERN_C GLAPI void APIENTRY glDepthFunc (GLenum func);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelStoref (GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelStorei (GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glReadBuffer (GLenum src);
GLEW_EXTERN_C GLAPI void APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
GLEW_EXTERN_C GLAPI void APIENTRY glGetBooleanv (GLenum pname, GLboolean * data);
GLEW_EXTERN_C GLAPI void APIENTRY glGetDoublev (GLenum pname, GLdouble * data);
GLEW_EXTERN_C GLAPI GLenum APIENTRY glGetError ();
GLEW_EXTERN_C GLAPI void APIENTRY glGetFloatv (GLenum pname, GLfloat * data);
GLEW_EXTERN_C GLAPI void APIENTRY glGetIntegerv (GLenum pname, GLint * data);
GLEW_EXTERN_C GLAPI const GLubyte * APIENTRY glGetString (GLenum name);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint * params);
GLEW_EXTERN_C GLAPI GLboolean APIENTRY glIsEnabled (GLenum cap);
GLEW_EXTERN_C GLAPI void APIENTRY glDepthRange (GLdouble near, GLdouble far);
GLEW_EXTERN_C GLAPI void APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_EXTERN_C GLAPI void APIENTRY glNewList (GLuint list, GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glEndList ();
GLEW_EXTERN_C GLAPI void APIENTRY glCallList (GLuint list);
GLEW_EXTERN_C GLAPI void APIENTRY glCallLists (GLsizei n, GLenum type, const void * lists);
GLEW_EXTERN_C GLAPI void APIENTRY glDeleteLists (GLuint list, GLsizei range);
GLEW_EXTERN_C GLAPI GLuint APIENTRY glGenLists (GLsizei range);
GLEW_EXTERN_C GLAPI void APIENTRY glListBase (GLuint base);
GLEW_EXTERN_C GLAPI void APIENTRY glBegin (GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3b (GLbyte red, GLbyte green, GLbyte blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3bv (const GLbyte * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3d (GLdouble red, GLdouble green, GLdouble blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3f (GLfloat red, GLfloat green, GLfloat blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3i (GLint red, GLint green, GLint blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3s (GLshort red, GLshort green, GLshort blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3ub (GLubyte red, GLubyte green, GLubyte blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3ubv (const GLubyte * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3ui (GLuint red, GLuint green, GLuint blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3uiv (const GLuint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3us (GLushort red, GLushort green, GLushort blue);
GLEW_EXTERN_C GLAPI void APIENTRY glColor3usv (const GLushort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4b (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4bv (const GLbyte * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4d (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4i (GLint red, GLint green, GLint blue, GLint alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4s (GLshort red, GLshort green, GLshort blue, GLshort alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4ubv (const GLubyte * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4ui (GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4uiv (const GLuint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4us (GLushort red, GLushort green, GLushort blue, GLushort alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glColor4usv (const GLushort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glEdgeFlag (GLboolean flag);
GLEW_EXTERN_C GLAPI void APIENTRY glEdgeFlagv (const GLboolean * flag);
GLEW_EXTERN_C GLAPI void APIENTRY glEnd ();
GLEW_EXTERN_C GLAPI void APIENTRY glIndexd (GLdouble c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexdv (const GLdouble * c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexf (GLfloat c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexfv (const GLfloat * c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexi (GLint c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexiv (const GLint * c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexs (GLshort c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexsv (const GLshort * c);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3b (GLbyte nx, GLbyte ny, GLbyte nz);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3bv (const GLbyte * v);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3d (GLdouble nx, GLdouble ny, GLdouble nz);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3i (GLint nx, GLint ny, GLint nz);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3s (GLshort nx, GLshort ny, GLshort nz);
GLEW_EXTERN_C GLAPI void APIENTRY glNormal3sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2d (GLdouble x, GLdouble y);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2f (GLfloat x, GLfloat y);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2i (GLint x, GLint y);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2s (GLshort x, GLshort y);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos2sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3d (GLdouble x, GLdouble y, GLdouble z);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3f (GLfloat x, GLfloat y, GLfloat z);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3i (GLint x, GLint y, GLint z);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3s (GLshort x, GLshort y, GLshort z);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos3sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4i (GLint x, GLint y, GLint z, GLint w);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4s (GLshort x, GLshort y, GLshort z, GLshort w);
GLEW_EXTERN_C GLAPI void APIENTRY glRasterPos4sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glRectd (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
GLEW_EXTERN_C GLAPI void APIENTRY glRectdv (const GLdouble * v1, const GLdouble * v2);
GLEW_EXTERN_C GLAPI void APIENTRY glRectf (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
GLEW_EXTERN_C GLAPI void APIENTRY glRectfv (const GLfloat * v1, const GLfloat * v2);
GLEW_EXTERN_C GLAPI void APIENTRY glRecti (GLint x1, GLint y1, GLint x2, GLint y2);
GLEW_EXTERN_C GLAPI void APIENTRY glRectiv (const GLint * v1, const GLint * v2);
GLEW_EXTERN_C GLAPI void APIENTRY glRects (GLshort x1, GLshort y1, GLshort x2, GLshort y2);
GLEW_EXTERN_C GLAPI void APIENTRY glRectsv (const GLshort * v1, const GLshort * v2);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1d (GLdouble s);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1f (GLfloat s);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1i (GLint s);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1s (GLshort s);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord1sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2d (GLdouble s, GLdouble t);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2f (GLfloat s, GLfloat t);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2i (GLint s, GLint t);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2s (GLshort s, GLshort t);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord2sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3d (GLdouble s, GLdouble t, GLdouble r);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3f (GLfloat s, GLfloat t, GLfloat r);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3i (GLint s, GLint t, GLint r);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3s (GLshort s, GLshort t, GLshort r);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord3sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4d (GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4f (GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4i (GLint s, GLint t, GLint r, GLint q);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4s (GLshort s, GLshort t, GLshort r, GLshort q);
GLEW_EXTERN_C GLAPI void APIENTRY glTexCoord4sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2d (GLdouble x, GLdouble y);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2f (GLfloat x, GLfloat y);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2i (GLint x, GLint y);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2s (GLshort x, GLshort y);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex2sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3d (GLdouble x, GLdouble y, GLdouble z);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3f (GLfloat x, GLfloat y, GLfloat z);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3i (GLint x, GLint y, GLint z);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3s (GLshort x, GLshort y, GLshort z);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex3sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4dv (const GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4fv (const GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4i (GLint x, GLint y, GLint z, GLint w);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4iv (const GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4s (GLshort x, GLshort y, GLshort z, GLshort w);
GLEW_EXTERN_C GLAPI void APIENTRY glVertex4sv (const GLshort * v);
GLEW_EXTERN_C GLAPI void APIENTRY glClipPlane (GLenum plane, const GLdouble * equation);
GLEW_EXTERN_C GLAPI void APIENTRY glColorMaterial (GLenum face, GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glFogf (GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glFogfv (GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glFogi (GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glFogiv (GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glLightf (GLenum light, GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glLightfv (GLenum light, GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glLighti (GLenum light, GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glLightiv (GLenum light, GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glLightModelf (GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glLightModelfv (GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glLightModeli (GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glLightModeliv (GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glLineStipple (GLint factor, GLushort pattern);
GLEW_EXTERN_C GLAPI void APIENTRY glMaterialf (GLenum face, GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glMaterialfv (GLenum face, GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glMateriali (GLenum face, GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glMaterialiv (GLenum face, GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glPolygonStipple (const GLubyte * mask);
GLEW_EXTERN_C GLAPI void APIENTRY glShadeModel (GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glTexEnvf (GLenum target, GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexEnvfv (GLenum target, GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glTexEnvi (GLenum target, GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexEnviv (GLenum target, GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glTexGend (GLenum coord, GLenum pname, GLdouble param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexGendv (GLenum coord, GLenum pname, const GLdouble * params);
GLEW_EXTERN_C GLAPI void APIENTRY glTexGenf (GLenum coord, GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexGenfv (GLenum coord, GLenum pname, const GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glTexGeni (GLenum coord, GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glTexGeniv (GLenum coord, GLenum pname, const GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glFeedbackBuffer (GLsizei size, GLenum type, GLfloat * buffer);
GLEW_EXTERN_C GLAPI void APIENTRY glSelectBuffer (GLsizei size, GLuint * buffer);
GLEW_EXTERN_C GLAPI GLint APIENTRY glRenderMode (GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glInitNames ();
GLEW_EXTERN_C GLAPI void APIENTRY glLoadName (GLuint name);
GLEW_EXTERN_C GLAPI void APIENTRY glPassThrough (GLfloat token);
GLEW_EXTERN_C GLAPI void APIENTRY glPopName ();
GLEW_EXTERN_C GLAPI void APIENTRY glPushName (GLuint name);
GLEW_EXTERN_C GLAPI void APIENTRY glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLEW_EXTERN_C GLAPI void APIENTRY glClearIndex (GLfloat c);
GLEW_EXTERN_C GLAPI void APIENTRY glIndexMask (GLuint mask);
GLEW_EXTERN_C GLAPI void APIENTRY glAccum (GLenum op, GLfloat value);
GLEW_EXTERN_C GLAPI void APIENTRY glPopAttrib ();
GLEW_EXTERN_C GLAPI void APIENTRY glPushAttrib (GLbitfield mask);
GLEW_EXTERN_C GLAPI void APIENTRY glMap1d (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
GLEW_EXTERN_C GLAPI void APIENTRY glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
GLEW_EXTERN_C GLAPI void APIENTRY glMap2d (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
GLEW_EXTERN_C GLAPI void APIENTRY glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
GLEW_EXTERN_C GLAPI void APIENTRY glMapGrid1d (GLint un, GLdouble u1, GLdouble u2);
GLEW_EXTERN_C GLAPI void APIENTRY glMapGrid1f (GLint un, GLfloat u1, GLfloat u2);
GLEW_EXTERN_C GLAPI void APIENTRY glMapGrid2d (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
GLEW_EXTERN_C GLAPI void APIENTRY glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord1d (GLdouble u);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord1dv (const GLdouble * u);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord1f (GLfloat u);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord1fv (const GLfloat * u);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord2d (GLdouble u, GLdouble v);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord2dv (const GLdouble * u);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord2f (GLfloat u, GLfloat v);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalCoord2fv (const GLfloat * u);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalMesh1 (GLenum mode, GLint i1, GLint i2);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalPoint1 (GLint i);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalMesh2 (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
GLEW_EXTERN_C GLAPI void APIENTRY glEvalPoint2 (GLint i, GLint j);
GLEW_EXTERN_C GLAPI void APIENTRY glAlphaFunc (GLenum func, GLfloat ref);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelZoom (GLfloat xfactor, GLfloat yfactor);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelTransferf (GLenum pname, GLfloat param);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelTransferi (GLenum pname, GLint param);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelMapfv (GLenum map, GLsizei mapsize, const GLfloat * values);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelMapuiv (GLenum map, GLsizei mapsize, const GLuint * values);
GLEW_EXTERN_C GLAPI void APIENTRY glPixelMapusv (GLenum map, GLsizei mapsize, const GLushort * values);
GLEW_EXTERN_C GLAPI void APIENTRY glCopyPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
GLEW_EXTERN_C GLAPI void APIENTRY glDrawPixels (GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLEW_EXTERN_C GLAPI void APIENTRY glGetClipPlane (GLenum plane, GLdouble * equation);
GLEW_EXTERN_C GLAPI void APIENTRY glGetLightfv (GLenum light, GLenum pname, GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetLightiv (GLenum light, GLenum pname, GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetMapdv (GLenum target, GLenum query, GLdouble * v);
GLEW_EXTERN_C GLAPI void APIENTRY glGetMapfv (GLenum target, GLenum query, GLfloat * v);
GLEW_EXTERN_C GLAPI void APIENTRY glGetMapiv (GLenum target, GLenum query, GLint * v);
GLEW_EXTERN_C GLAPI void APIENTRY glGetMaterialfv (GLenum face, GLenum pname, GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetMaterialiv (GLenum face, GLenum pname, GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetPixelMapfv (GLenum map, GLfloat * values);
GLEW_EXTERN_C GLAPI void APIENTRY glGetPixelMapuiv (GLenum map, GLuint * values);
GLEW_EXTERN_C GLAPI void APIENTRY glGetPixelMapusv (GLenum map, GLushort * values);
GLEW_EXTERN_C GLAPI void APIENTRY glGetPolygonStipple (GLubyte * mask);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexEnvfv (GLenum target, GLenum pname, GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexEnviv (GLenum target, GLenum pname, GLint * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexGendv (GLenum coord, GLenum pname, GLdouble * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexGenfv (GLenum coord, GLenum pname, GLfloat * params);
GLEW_EXTERN_C GLAPI void APIENTRY glGetTexGeniv (GLenum coord, GLenum pname, GLint * params);
GLEW_EXTERN_C GLAPI GLboolean APIENTRY glIsList (GLuint list);
GLEW_EXTERN_C GLAPI void APIENTRY glFrustum (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLEW_EXTERN_C GLAPI void APIENTRY glLoadIdentity ();
GLEW_EXTERN_C GLAPI void APIENTRY glLoadMatrixf (const GLfloat * m);
GLEW_EXTERN_C GLAPI void APIENTRY glLoadMatrixd (const GLdouble * m);
GLEW_EXTERN_C GLAPI void APIENTRY glMatrixMode (GLenum mode);
GLEW_EXTERN_C GLAPI void APIENTRY glMultMatrixf (const GLfloat * m);
GLEW_EXTERN_C GLAPI void APIENTRY glMultMatrixd (const GLdouble * m);
GLEW_EXTERN_C GLAPI void APIENTRY glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLEW_EXTERN_C GLAPI void APIENTRY glPopMatrix ();
GLEW_EXTERN_C GLAPI void APIENTRY glPushMatrix ();
GLEW_EXTERN_C GLAPI void APIENTRY glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLEW_EXTERN_C GLAPI void APIENTRY glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLEW_EXTERN_C GLAPI void APIENTRY glScaled (GLdouble x, GLdouble y, GLdouble z);
GLEW_EXTERN_C GLAPI void APIENTRY glScalef (GLfloat x, GLfloat y, GLfloat z);
GLEW_EXTERN_C GLAPI void APIENTRY glTranslated (GLdouble x, GLdouble y, GLdouble z);
GLEW_EXTERN_C GLAPI void APIENTRY glTranslatef (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) /* glDrawArrays */ (GLenum mode, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) /* glDrawElements */ (GLenum mode, GLsizei count, GLenum type, const void * indices);
typedef void (APIENTRYP PFNGLGETPOINTERVPROC) /* glGetPointerv */ (GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) /* glPolygonOffset */ (GLfloat factor, GLfloat units);
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) /* glCopyTexImage1D */ (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) /* glCopyTexImage2D */ (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) /* glCopyTexSubImage1D */ (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) /* glCopyTexSubImage2D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) /* glTexSubImage1D */ (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) /* glTexSubImage2D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) /* glBindTexture */ (GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) /* glDeleteTextures */ (GLsizei n, const GLuint * textures);
typedef void (APIENTRYP PFNGLGENTEXTURESPROC) /* glGenTextures */ (GLsizei n, GLuint * textures);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) /* glIsTexture */ (GLuint texture);
typedef void (APIENTRYP PFNGLARRAYELEMENTPROC) /* glArrayElement */ (GLint i);
typedef void (APIENTRYP PFNGLCOLORPOINTERPROC) /* glColorPointer */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEPROC) /* glDisableClientState */ (GLenum array);
typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERPROC) /* glEdgeFlagPointer */ (GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLENABLECLIENTSTATEPROC) /* glEnableClientState */ (GLenum array);
typedef void (APIENTRYP PFNGLINDEXPOINTERPROC) /* glIndexPointer */ (GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLINTERLEAVEDARRAYSPROC) /* glInterleavedArrays */ (GLenum format, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLNORMALPOINTERPROC) /* glNormalPointer */ (GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLTEXCOORDPOINTERPROC) /* glTexCoordPointer */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLVERTEXPOINTERPROC) /* glVertexPointer */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTPROC) /* glAreTexturesResident */ (GLsizei n, const GLuint * textures, GLboolean * residences);
typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESPROC) /* glPrioritizeTextures */ (GLsizei n, const GLuint * textures, const GLfloat * priorities);
typedef void (APIENTRYP PFNGLINDEXUBPROC) /* glIndexub */ (GLubyte c);
typedef void (APIENTRYP PFNGLINDEXUBVPROC) /* glIndexubv */ (const GLubyte * c);
typedef void (APIENTRYP PFNGLPOPCLIENTATTRIBPROC) /* glPopClientAttrib */ ();
typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBPROC) /* glPushClientAttrib */ (GLbitfield mask);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) /* glDrawRangeElements */ (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) /* glTexImage3D */ (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) /* glTexSubImage3D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) /* glCopyTexSubImage3D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) /* glActiveTexture */ (GLenum texture);
typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) /* glSampleCoverage */ (GLfloat value, GLboolean invert);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) /* glCompressedTexImage3D */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) /* glCompressedTexImage2D */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) /* glCompressedTexImage1D */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) /* glCompressedTexSubImage3D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) /* glCompressedTexSubImage2D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) /* glCompressedTexSubImage1D */ (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) /* glGetCompressedTexImage */ (GLenum target, GLint level, void * img);
typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) /* glClientActiveTexture */ (GLenum texture);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) /* glMultiTexCoord1d */ (GLenum target, GLdouble s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) /* glMultiTexCoord1dv */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) /* glMultiTexCoord1f */ (GLenum target, GLfloat s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) /* glMultiTexCoord1fv */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) /* glMultiTexCoord1i */ (GLenum target, GLint s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) /* glMultiTexCoord1iv */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) /* glMultiTexCoord1s */ (GLenum target, GLshort s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) /* glMultiTexCoord1sv */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) /* glMultiTexCoord2d */ (GLenum target, GLdouble s, GLdouble t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) /* glMultiTexCoord2dv */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) /* glMultiTexCoord2f */ (GLenum target, GLfloat s, GLfloat t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) /* glMultiTexCoord2fv */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) /* glMultiTexCoord2i */ (GLenum target, GLint s, GLint t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) /* glMultiTexCoord2iv */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) /* glMultiTexCoord2s */ (GLenum target, GLshort s, GLshort t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) /* glMultiTexCoord2sv */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) /* glMultiTexCoord3d */ (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) /* glMultiTexCoord3dv */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) /* glMultiTexCoord3f */ (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) /* glMultiTexCoord3fv */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) /* glMultiTexCoord3i */ (GLenum target, GLint s, GLint t, GLint r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) /* glMultiTexCoord3iv */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) /* glMultiTexCoord3s */ (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) /* glMultiTexCoord3sv */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) /* glMultiTexCoord4d */ (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) /* glMultiTexCoord4dv */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) /* glMultiTexCoord4f */ (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) /* glMultiTexCoord4fv */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) /* glMultiTexCoord4i */ (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) /* glMultiTexCoord4iv */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) /* glMultiTexCoord4s */ (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) /* glMultiTexCoord4sv */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) /* glLoadTransposeMatrixf */ (const GLfloat * m);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) /* glLoadTransposeMatrixd */ (const GLdouble * m);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) /* glMultTransposeMatrixf */ (const GLfloat * m);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) /* glMultTransposeMatrixd */ (const GLdouble * m);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) /* glBlendFuncSeparate */ (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) /* glMultiDrawArrays */ (GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) /* glMultiDrawElements */ (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) /* glPointParameterf */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) /* glPointParameterfv */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) /* glPointParameteri */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) /* glPointParameteriv */ (GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLFOGCOORDFPROC) /* glFogCoordf */ (GLfloat coord);
typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) /* glFogCoordfv */ (const GLfloat * coord);
typedef void (APIENTRYP PFNGLFOGCOORDDPROC) /* glFogCoordd */ (GLdouble coord);
typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) /* glFogCoorddv */ (const GLdouble * coord);
typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) /* glFogCoordPointer */ (GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) /* glSecondaryColor3b */ (GLbyte red, GLbyte green, GLbyte blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) /* glSecondaryColor3bv */ (const GLbyte * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) /* glSecondaryColor3d */ (GLdouble red, GLdouble green, GLdouble blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) /* glSecondaryColor3dv */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) /* glSecondaryColor3f */ (GLfloat red, GLfloat green, GLfloat blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) /* glSecondaryColor3fv */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) /* glSecondaryColor3i */ (GLint red, GLint green, GLint blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) /* glSecondaryColor3iv */ (const GLint * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) /* glSecondaryColor3s */ (GLshort red, GLshort green, GLshort blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) /* glSecondaryColor3sv */ (const GLshort * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) /* glSecondaryColor3ub */ (GLubyte red, GLubyte green, GLubyte blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) /* glSecondaryColor3ubv */ (const GLubyte * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) /* glSecondaryColor3ui */ (GLuint red, GLuint green, GLuint blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) /* glSecondaryColor3uiv */ (const GLuint * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) /* glSecondaryColor3us */ (GLushort red, GLushort green, GLushort blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) /* glSecondaryColor3usv */ (const GLushort * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) /* glSecondaryColorPointer */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) /* glWindowPos2d */ (GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) /* glWindowPos2dv */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) /* glWindowPos2f */ (GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) /* glWindowPos2fv */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) /* glWindowPos2i */ (GLint x, GLint y);
typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) /* glWindowPos2iv */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) /* glWindowPos2s */ (GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) /* glWindowPos2sv */ (const GLshort * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) /* glWindowPos3d */ (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) /* glWindowPos3dv */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) /* glWindowPos3f */ (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) /* glWindowPos3fv */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) /* glWindowPos3i */ (GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) /* glWindowPos3iv */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) /* glWindowPos3s */ (GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) /* glWindowPos3sv */ (const GLshort * v);
typedef void (APIENTRYP PFNGLBLENDCOLORPROC) /* glBlendColor */ (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) /* glBlendEquation */ (GLenum mode);
typedef void (APIENTRYP PFNGLGENQUERIESPROC) /* glGenQueries */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) /* glDeleteQueries */ (GLsizei n, const GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) /* glIsQuery */ (GLuint id);
typedef void (APIENTRYP PFNGLBEGINQUERYPROC) /* glBeginQuery */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYPROC) /* glEndQuery */ (GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYIVPROC) /* glGetQueryiv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) /* glGetQueryObjectiv */ (GLuint id, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) /* glGetQueryObjectuiv */ (GLuint id, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLBINDBUFFERPROC) /* glBindBuffer */ (GLenum target, GLuint buffer);
typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) /* glDeleteBuffers */ (GLsizei n, const GLuint * buffers);
typedef void (APIENTRYP PFNGLGENBUFFERSPROC) /* glGenBuffers */ (GLsizei n, GLuint * buffers);
typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) /* glIsBuffer */ (GLuint buffer);
typedef void (APIENTRYP PFNGLBUFFERDATAPROC) /* glBufferData */ (GLenum target, GLsizeiptr size, const void * data, GLenum usage);
typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) /* glBufferSubData */ (GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) /* glGetBufferSubData */ (GLenum target, GLintptr offset, GLsizeiptr size, void * data);
typedef void * (APIENTRYP PFNGLMAPBUFFERPROC) /* glMapBuffer */ (GLenum target, GLenum access);
typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) /* glUnmapBuffer */ (GLenum target);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) /* glGetBufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) /* glGetBufferPointerv */ (GLenum target, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) /* glBlendEquationSeparate */ (GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) /* glDrawBuffers */ (GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) /* glStencilOpSeparate */ (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) /* glStencilFuncSeparate */ (GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) /* glStencilMaskSeparate */ (GLenum face, GLuint mask);
typedef void (APIENTRYP PFNGLATTACHSHADERPROC) /* glAttachShader */ (GLuint program, GLuint shader);
typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) /* glBindAttribLocation */ (GLuint program, GLuint index, const GLchar * name);
typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) /* glCompileShader */ (GLuint shader);
typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) /* glCreateProgram */ ();
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) /* glCreateShader */ (GLenum type);
typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) /* glDeleteProgram */ (GLuint program);
typedef void (APIENTRYP PFNGLDELETESHADERPROC) /* glDeleteShader */ (GLuint shader);
typedef void (APIENTRYP PFNGLDETACHSHADERPROC) /* glDetachShader */ (GLuint program, GLuint shader);
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) /* glDisableVertexAttribArray */ (GLuint index);
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) /* glEnableVertexAttribArray */ (GLuint index);
typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) /* glGetActiveAttrib */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) /* glGetActiveUniform */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) /* glGetAttachedShaders */ (GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) /* glGetAttribLocation */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) /* glGetProgramiv */ (GLuint program, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) /* glGetProgramInfoLog */ (GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (APIENTRYP PFNGLGETSHADERIVPROC) /* glGetShaderiv */ (GLuint shader, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) /* glGetShaderInfoLog */ (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) /* glGetShaderSource */ (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) /* glGetUniformLocation */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) /* glGetUniformfv */ (GLuint program, GLint location, GLfloat * params);
typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) /* glGetUniformiv */ (GLuint program, GLint location, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) /* glGetVertexAttribdv */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) /* glGetVertexAttribfv */ (GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) /* glGetVertexAttribiv */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) /* glGetVertexAttribPointerv */ (GLuint index, GLenum pname, void ** pointer);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) /* glIsProgram */ (GLuint program);
typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) /* glIsShader */ (GLuint shader);
typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) /* glLinkProgram */ (GLuint program);
typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) /* glShaderSource */ (GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) /* glUseProgram */ (GLuint program);
typedef void (APIENTRYP PFNGLUNIFORM1FPROC) /* glUniform1f */ (GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLUNIFORM2FPROC) /* glUniform2f */ (GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLUNIFORM3FPROC) /* glUniform3f */ (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLUNIFORM4FPROC) /* glUniform4f */ (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLUNIFORM1IPROC) /* glUniform1i */ (GLint location, GLint v0);
typedef void (APIENTRYP PFNGLUNIFORM2IPROC) /* glUniform2i */ (GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLUNIFORM3IPROC) /* glUniform3i */ (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLUNIFORM4IPROC) /* glUniform4i */ (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) /* glUniform1fv */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) /* glUniform2fv */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) /* glUniform3fv */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) /* glUniform4fv */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) /* glUniform1iv */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) /* glUniform2iv */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) /* glUniform3iv */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) /* glUniform4iv */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) /* glUniformMatrix2fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) /* glUniformMatrix3fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) /* glUniformMatrix4fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) /* glValidateProgram */ (GLuint program);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) /* glVertexAttrib1d */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) /* glVertexAttrib1dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) /* glVertexAttrib1f */ (GLuint index, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) /* glVertexAttrib1fv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) /* glVertexAttrib1s */ (GLuint index, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) /* glVertexAttrib1sv */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) /* glVertexAttrib2d */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) /* glVertexAttrib2dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) /* glVertexAttrib2f */ (GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) /* glVertexAttrib2fv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) /* glVertexAttrib2s */ (GLuint index, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) /* glVertexAttrib2sv */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) /* glVertexAttrib3d */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) /* glVertexAttrib3dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) /* glVertexAttrib3f */ (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) /* glVertexAttrib3fv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) /* glVertexAttrib3s */ (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) /* glVertexAttrib3sv */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) /* glVertexAttrib4Nbv */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) /* glVertexAttrib4Niv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) /* glVertexAttrib4Nsv */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) /* glVertexAttrib4Nub */ (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) /* glVertexAttrib4Nubv */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) /* glVertexAttrib4Nuiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) /* glVertexAttrib4Nusv */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) /* glVertexAttrib4bv */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) /* glVertexAttrib4d */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) /* glVertexAttrib4dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) /* glVertexAttrib4f */ (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) /* glVertexAttrib4fv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) /* glVertexAttrib4iv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) /* glVertexAttrib4s */ (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) /* glVertexAttrib4sv */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) /* glVertexAttrib4ubv */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) /* glVertexAttrib4uiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) /* glVertexAttrib4usv */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) /* glVertexAttribPointer */ (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) /* glUniformMatrix2x3fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) /* glUniformMatrix3x2fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) /* glUniformMatrix2x4fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) /* glUniformMatrix4x2fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) /* glUniformMatrix3x4fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) /* glUniformMatrix4x3fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLCOLORMASKIPROC) /* glColorMaski */ (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) /* glGetBooleani_v */ (GLenum target, GLuint index, GLboolean * data);
typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) /* glGetIntegeri_v */ (GLenum target, GLuint index, GLint * data);
typedef void (APIENTRYP PFNGLENABLEIPROC) /* glEnablei */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEIPROC) /* glDisablei */ (GLenum target, GLuint index);
typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) /* glIsEnabledi */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) /* glBeginTransformFeedback */ (GLenum primitiveMode);
typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) /* glEndTransformFeedback */ ();
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) /* glBindBufferRange */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) /* glBindBufferBase */ (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) /* glTransformFeedbackVaryings */ (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) /* glGetTransformFeedbackVarying */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) /* glClampColor */ (GLenum target, GLenum clamp);
typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) /* glBeginConditionalRender */ (GLuint id, GLenum mode);
typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) /* glEndConditionalRender */ ();
typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) /* glVertexAttribIPointer */ (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) /* glGetVertexAttribIiv */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) /* glGetVertexAttribIuiv */ (GLuint index, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) /* glVertexAttribI1i */ (GLuint index, GLint x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) /* glVertexAttribI2i */ (GLuint index, GLint x, GLint y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) /* glVertexAttribI3i */ (GLuint index, GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) /* glVertexAttribI4i */ (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) /* glVertexAttribI1ui */ (GLuint index, GLuint x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) /* glVertexAttribI2ui */ (GLuint index, GLuint x, GLuint y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) /* glVertexAttribI3ui */ (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) /* glVertexAttribI4ui */ (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) /* glVertexAttribI1iv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) /* glVertexAttribI2iv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) /* glVertexAttribI3iv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) /* glVertexAttribI4iv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) /* glVertexAttribI1uiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) /* glVertexAttribI2uiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) /* glVertexAttribI3uiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) /* glVertexAttribI4uiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) /* glVertexAttribI4bv */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) /* glVertexAttribI4sv */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) /* glVertexAttribI4ubv */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) /* glVertexAttribI4usv */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) /* glGetUniformuiv */ (GLuint program, GLint location, GLuint * params);
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) /* glBindFragDataLocation */ (GLuint program, GLuint color, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) /* glGetFragDataLocation */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) /* glUniform1ui */ (GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) /* glUniform2ui */ (GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) /* glUniform3ui */ (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) /* glUniform4ui */ (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) /* glUniform1uiv */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) /* glUniform2uiv */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) /* glUniform3uiv */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) /* glUniform4uiv */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) /* glTexParameterIiv */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) /* glTexParameterIuiv */ (GLenum target, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) /* glGetTexParameterIiv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) /* glGetTexParameterIuiv */ (GLenum target, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) /* glClearBufferiv */ (GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) /* glClearBufferuiv */ (GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) /* glClearBufferfv */ (GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) /* glClearBufferfi */ (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGIPROC) /* glGetStringi */ (GLenum name, GLuint index);
typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) /* glIsRenderbuffer */ (GLuint renderbuffer);
typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) /* glBindRenderbuffer */ (GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) /* glDeleteRenderbuffers */ (GLsizei n, const GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) /* glGenRenderbuffers */ (GLsizei n, GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) /* glRenderbufferStorage */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) /* glGetRenderbufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) /* glIsFramebuffer */ (GLuint framebuffer);
typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) /* glBindFramebuffer */ (GLenum target, GLuint framebuffer);
typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) /* glDeleteFramebuffers */ (GLsizei n, const GLuint * framebuffers);
typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) /* glGenFramebuffers */ (GLsizei n, GLuint * framebuffers);
typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) /* glCheckFramebufferStatus */ (GLenum target);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) /* glFramebufferTexture1D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) /* glFramebufferTexture2D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) /* glFramebufferTexture3D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) /* glFramebufferRenderbuffer */ (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) /* glGetFramebufferAttachmentParameteriv */ (GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) /* glGenerateMipmap */ (GLenum target);
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) /* glBlitFramebuffer */ (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) /* glRenderbufferStorageMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) /* glFramebufferTextureLayer */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void * (APIENTRYP PFNGLMAPBUFFERRANGEPROC) /* glMapBufferRange */ (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) /* glFlushMappedBufferRange */ (GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) /* glBindVertexArray */ (GLuint array);
typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) /* glDeleteVertexArrays */ (GLsizei n, const GLuint * arrays);
typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) /* glGenVertexArrays */ (GLsizei n, GLuint * arrays);
typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) /* glIsVertexArray */ (GLuint array);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) /* glDrawArraysInstanced */ (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) /* glDrawElementsInstanced */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
typedef void (APIENTRYP PFNGLTEXBUFFERPROC) /* glTexBuffer */ (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) /* glPrimitiveRestartIndex */ (GLuint index);
typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) /* glCopyBufferSubData */ (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) /* glGetUniformIndices */ (GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) /* glGetActiveUniformsiv */ (GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) /* glGetActiveUniformName */ (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) /* glGetUniformBlockIndex */ (GLuint program, const GLchar * uniformBlockName);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) /* glGetActiveUniformBlockiv */ (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) /* glGetActiveUniformBlockName */ (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) /* glUniformBlockBinding */ (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) /* glBindBufferRange */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) /* glBindBufferBase */ (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) /* glGetIntegeri_v */ (GLenum target, GLuint index, GLint * data);
typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) /* glDrawElementsBaseVertex */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) /* glDrawRangeElementsBaseVertex */ (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) /* glDrawElementsInstancedBaseVertex */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) /* glMultiDrawElementsBaseVertex */ (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) /* glProvokingVertex */ (GLenum mode);
typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) /* glFenceSync */ (GLenum condition, GLbitfield flags);
typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) /* glIsSync */ (GLsync sync);
typedef void (APIENTRYP PFNGLDELETESYNCPROC) /* glDeleteSync */ (GLsync sync);
typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) /* glClientWaitSync */ (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLWAITSYNCPROC) /* glWaitSync */ (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) /* glGetInteger64v */ (GLenum pname, GLint64 * data);
typedef void (APIENTRYP PFNGLGETSYNCIVPROC) /* glGetSynciv */ (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) /* glGetInteger64i_v */ (GLenum target, GLuint index, GLint64 * data);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) /* glGetBufferParameteri64v */ (GLenum target, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) /* glFramebufferTexture */ (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) /* glTexImage2DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) /* glTexImage3DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) /* glGetMultisamplefv */ (GLenum pname, GLuint index, GLfloat * val);
typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) /* glSampleMaski */ (GLuint maskNumber, GLbitfield mask);
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) /* glBindFragDataLocationIndexed */ (GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) /* glGetFragDataIndex */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) /* glGenSamplers */ (GLsizei count, GLuint * samplers);
typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) /* glDeleteSamplers */ (GLsizei count, const GLuint * samplers);
typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) /* glIsSampler */ (GLuint sampler);
typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) /* glBindSampler */ (GLuint unit, GLuint sampler);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) /* glSamplerParameteri */ (GLuint sampler, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) /* glSamplerParameteriv */ (GLuint sampler, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) /* glSamplerParameterf */ (GLuint sampler, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) /* glSamplerParameterfv */ (GLuint sampler, GLenum pname, const GLfloat * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) /* glSamplerParameterIiv */ (GLuint sampler, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) /* glSamplerParameterIuiv */ (GLuint sampler, GLenum pname, const GLuint * param);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) /* glGetSamplerParameteriv */ (GLuint sampler, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) /* glGetSamplerParameterIiv */ (GLuint sampler, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) /* glGetSamplerParameterfv */ (GLuint sampler, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) /* glGetSamplerParameterIuiv */ (GLuint sampler, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) /* glQueryCounter */ (GLuint id, GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) /* glGetQueryObjecti64v */ (GLuint id, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) /* glGetQueryObjectui64v */ (GLuint id, GLenum pname, GLuint64 * params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) /* glVertexAttribDivisor */ (GLuint index, GLuint divisor);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) /* glVertexAttribP1ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) /* glVertexAttribP1uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) /* glVertexAttribP2ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) /* glVertexAttribP2uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) /* glVertexAttribP3ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) /* glVertexAttribP3uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) /* glVertexAttribP4ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) /* glVertexAttribP4uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) /* glVertexP2ui */ (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) /* glVertexP2uiv */ (GLenum type, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) /* glVertexP3ui */ (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) /* glVertexP3uiv */ (GLenum type, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) /* glVertexP4ui */ (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) /* glVertexP4uiv */ (GLenum type, const GLuint * value);
typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) /* glTexCoordP1ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) /* glTexCoordP1uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) /* glTexCoordP2ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) /* glTexCoordP2uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) /* glTexCoordP3ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) /* glTexCoordP3uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) /* glTexCoordP4ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) /* glTexCoordP4uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) /* glMultiTexCoordP1ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) /* glMultiTexCoordP1uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) /* glMultiTexCoordP2ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) /* glMultiTexCoordP2uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) /* glMultiTexCoordP3ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) /* glMultiTexCoordP3uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) /* glMultiTexCoordP4ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) /* glMultiTexCoordP4uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLNORMALP3UIPROC) /* glNormalP3ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) /* glNormalP3uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLCOLORP3UIPROC) /* glColorP3ui */ (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) /* glColorP3uiv */ (GLenum type, const GLuint * color);
typedef void (APIENTRYP PFNGLCOLORP4UIPROC) /* glColorP4ui */ (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) /* glColorP4uiv */ (GLenum type, const GLuint * color);
typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) /* glSecondaryColorP3ui */ (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) /* glSecondaryColorP3uiv */ (GLenum type, const GLuint * color);
typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) /* glMinSampleShading */ (GLfloat value);
typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) /* glBlendEquationi */ (GLuint buf, GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) /* glBlendEquationSeparatei */ (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) /* glBlendFunci */ (GLuint buf, GLenum src, GLenum dst);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) /* glBlendFuncSeparatei */ (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) /* glDrawArraysIndirect */ (GLenum mode, const void * indirect);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) /* glDrawElementsIndirect */ (GLenum mode, GLenum type, const void * indirect);
typedef void (APIENTRYP PFNGLUNIFORM1DPROC) /* glUniform1d */ (GLint location, GLdouble x);
typedef void (APIENTRYP PFNGLUNIFORM2DPROC) /* glUniform2d */ (GLint location, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLUNIFORM3DPROC) /* glUniform3d */ (GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLUNIFORM4DPROC) /* glUniform4d */ (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) /* glUniform1dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) /* glUniform2dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) /* glUniform3dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) /* glUniform4dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) /* glUniformMatrix2dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) /* glUniformMatrix3dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) /* glUniformMatrix4dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) /* glUniformMatrix2x3dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) /* glUniformMatrix2x4dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) /* glUniformMatrix3x2dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) /* glUniformMatrix3x4dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) /* glUniformMatrix4x2dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) /* glUniformMatrix4x3dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) /* glGetUniformdv */ (GLuint program, GLint location, GLdouble * params);
typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) /* glGetSubroutineUniformLocation */ (GLuint program, GLenum shadertype, const GLchar * name);
typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) /* glGetSubroutineIndex */ (GLuint program, GLenum shadertype, const GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) /* glGetActiveSubroutineUniformiv */ (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) /* glGetActiveSubroutineUniformName */ (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) /* glGetActiveSubroutineName */ (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) /* glUniformSubroutinesuiv */ (GLenum shadertype, GLsizei count, const GLuint * indices);
typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) /* glGetUniformSubroutineuiv */ (GLenum shadertype, GLint location, GLuint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) /* glGetProgramStageiv */ (GLuint program, GLenum shadertype, GLenum pname, GLint * values);
typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) /* glPatchParameteri */ (GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) /* glPatchParameterfv */ (GLenum pname, const GLfloat * values);
typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) /* glBindTransformFeedback */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) /* glDeleteTransformFeedbacks */ (GLsizei n, const GLuint * ids);
typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) /* glGenTransformFeedbacks */ (GLsizei n, GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) /* glIsTransformFeedback */ (GLuint id);
typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) /* glPauseTransformFeedback */ ();
typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) /* glResumeTransformFeedback */ ();
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) /* glDrawTransformFeedback */ (GLenum mode, GLuint id);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) /* glDrawTransformFeedbackStream */ (GLenum mode, GLuint id, GLuint stream);
typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) /* glBeginQueryIndexed */ (GLenum target, GLuint index, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) /* glEndQueryIndexed */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) /* glGetQueryIndexediv */ (GLenum target, GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) /* glReleaseShaderCompiler */ ();
typedef void (APIENTRYP PFNGLSHADERBINARYPROC) /* glShaderBinary */ (GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length);
typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) /* glGetShaderPrecisionFormat */ (GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) /* glDepthRangef */ (GLfloat n, GLfloat f);
typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) /* glClearDepthf */ (GLfloat d);
typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) /* glGetProgramBinary */ (GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) /* glProgramBinary */ (GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) /* glProgramParameteri */ (GLuint program, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) /* glUseProgramStages */ (GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) /* glActiveShaderProgram */ (GLuint pipeline, GLuint program);
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) /* glCreateShaderProgramv */ (GLenum type, GLsizei count, const GLchar *const* strings);
typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) /* glBindProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) /* glDeleteProgramPipelines */ (GLsizei n, const GLuint * pipelines);
typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) /* glGenProgramPipelines */ (GLsizei n, GLuint * pipelines);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) /* glIsProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) /* glGetProgramPipelineiv */ (GLuint pipeline, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) /* glProgramUniform1i */ (GLuint program, GLint location, GLint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) /* glProgramUniform1iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) /* glProgramUniform1f */ (GLuint program, GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) /* glProgramUniform1fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) /* glProgramUniform1d */ (GLuint program, GLint location, GLdouble v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) /* glProgramUniform1dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) /* glProgramUniform1ui */ (GLuint program, GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) /* glProgramUniform1uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) /* glProgramUniform2i */ (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) /* glProgramUniform2iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) /* glProgramUniform2f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) /* glProgramUniform2fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) /* glProgramUniform2d */ (GLuint program, GLint location, GLdouble v0, GLdouble v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) /* glProgramUniform2dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) /* glProgramUniform2ui */ (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) /* glProgramUniform2uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) /* glProgramUniform3i */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) /* glProgramUniform3iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) /* glProgramUniform3f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) /* glProgramUniform3fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) /* glProgramUniform3d */ (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) /* glProgramUniform3dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) /* glProgramUniform3ui */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) /* glProgramUniform3uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) /* glProgramUniform4i */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) /* glProgramUniform4iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) /* glProgramUniform4f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) /* glProgramUniform4fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) /* glProgramUniform4d */ (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) /* glProgramUniform4dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) /* glProgramUniform4ui */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) /* glProgramUniform4uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) /* glProgramUniformMatrix2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) /* glProgramUniformMatrix3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) /* glProgramUniformMatrix4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) /* glProgramUniformMatrix2dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) /* glProgramUniformMatrix3dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) /* glProgramUniformMatrix4dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) /* glProgramUniformMatrix2x3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) /* glProgramUniformMatrix3x2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) /* glProgramUniformMatrix2x4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) /* glProgramUniformMatrix4x2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) /* glProgramUniformMatrix3x4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) /* glProgramUniformMatrix4x3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) /* glProgramUniformMatrix2x3dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) /* glProgramUniformMatrix3x2dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) /* glProgramUniformMatrix2x4dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) /* glProgramUniformMatrix4x2dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) /* glProgramUniformMatrix3x4dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) /* glProgramUniformMatrix4x3dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) /* glValidateProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) /* glGetProgramPipelineInfoLog */ (GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) /* glVertexAttribL1d */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) /* glVertexAttribL2d */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) /* glVertexAttribL3d */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) /* glVertexAttribL4d */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) /* glVertexAttribL1dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) /* glVertexAttribL2dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) /* glVertexAttribL3dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) /* glVertexAttribL4dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) /* glVertexAttribLPointer */ (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) /* glGetVertexAttribLdv */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) /* glViewportArrayv */ (GLuint first, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) /* glViewportIndexedf */ (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) /* glViewportIndexedfv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) /* glScissorArrayv */ (GLuint first, GLsizei count, const GLint * v);
typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) /* glScissorIndexed */ (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) /* glScissorIndexedv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) /* glDepthRangeArrayv */ (GLuint first, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) /* glDepthRangeIndexed */ (GLuint index, GLdouble n, GLdouble f);
typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) /* glGetFloati_v */ (GLenum target, GLuint index, GLfloat * data);
typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) /* glGetDoublei_v */ (GLenum target, GLuint index, GLdouble * data);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) /* glDrawArraysInstancedBaseInstance */ (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) /* glDrawElementsInstancedBaseInstance */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) /* glDrawElementsInstancedBaseVertexBaseInstance */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) /* glGetInternalformativ */ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) /* glGetActiveAtomicCounterBufferiv */ (GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) /* glBindImageTexture */ (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) /* glMemoryBarrier */ (GLbitfield barriers);
typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) /* glTexStorage1D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) /* glTexStorage2D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) /* glTexStorage3D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) /* glDrawTransformFeedbackInstanced */ (GLenum mode, GLuint id, GLsizei instancecount);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) /* glDrawTransformFeedbackStreamInstanced */ (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) /* glClearBufferData */ (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) /* glClearBufferSubData */ (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) /* glDispatchCompute */ (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) /* glDispatchComputeIndirect */ (GLintptr indirect);
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) /* glCopyImageSubData */ (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) /* glFramebufferParameteri */ (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) /* glGetFramebufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) /* glGetInternalformati64v */ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 * params);
typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) /* glInvalidateTexSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) /* glInvalidateTexImage */ (GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) /* glInvalidateBufferSubData */ (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) /* glInvalidateBufferData */ (GLuint buffer);
typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) /* glInvalidateFramebuffer */ (GLenum target, GLsizei numAttachments, const GLenum * attachments);
typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) /* glInvalidateSubFramebuffer */ (GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) /* glMultiDrawArraysIndirect */ (GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) /* glMultiDrawElementsIndirect */ (GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) /* glGetProgramInterfaceiv */ (GLuint program, GLenum programInterface, GLenum pname, GLint * params);
typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) /* glGetProgramResourceIndex */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) /* glGetProgramResourceName */ (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) /* glGetProgramResourceiv */ (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params);
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) /* glGetProgramResourceLocation */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) /* glGetProgramResourceLocationIndex */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) /* glShaderStorageBlockBinding */ (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) /* glTexBufferRange */ (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) /* glTexStorage2DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) /* glTexStorage3DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) /* glTextureView */ (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) /* glBindVertexBuffer */ (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) /* glVertexAttribFormat */ (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) /* glVertexAttribIFormat */ (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) /* glVertexAttribLFormat */ (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) /* glVertexAttribBinding */ (GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) /* glVertexBindingDivisor */ (GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) /* glDebugMessageControl */ (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) /* glDebugMessageInsert */ (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) /* glDebugMessageCallback */ (GLDEBUGPROC callback, const void * userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) /* glGetDebugMessageLog */ (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) /* glPushDebugGroup */ (GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) /* glPopDebugGroup */ ();
typedef void (APIENTRYP PFNGLOBJECTLABELPROC) /* glObjectLabel */ (GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) /* glGetObjectLabel */ (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) /* glObjectPtrLabel */ (const void * ptr, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) /* glGetObjectPtrLabel */ (const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLGETPOINTERVPROC) /* glGetPointerv */ (GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLGETPOINTERVPROC) /* glGetPointerv */ (GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) /* glBufferStorage */ (GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) /* glClearTexImage */ (GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) /* glClearTexSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) /* glBindBuffersBase */ (GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) /* glBindBuffersRange */ (GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) /* glBindTextures */ (GLuint first, GLsizei count, const GLuint * textures);
typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) /* glBindSamplers */ (GLuint first, GLsizei count, const GLuint * samplers);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) /* glBindImageTextures */ (GLuint first, GLsizei count, const GLuint * textures);
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) /* glBindVertexBuffers */ (GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) /* glClipControl */ (GLenum origin, GLenum depth);
typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) /* glCreateTransformFeedbacks */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) /* glTransformFeedbackBufferBase */ (GLuint xfb, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) /* glTransformFeedbackBufferRange */ (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) /* glGetTransformFeedbackiv */ (GLuint xfb, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) /* glGetTransformFeedbacki_v */ (GLuint xfb, GLenum pname, GLuint index, GLint * param);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) /* glGetTransformFeedbacki64_v */ (GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) /* glCreateBuffers */ (GLsizei n, GLuint * buffers);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) /* glNamedBufferStorage */ (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) /* glNamedBufferData */ (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) /* glNamedBufferSubData */ (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) /* glCopyNamedBufferSubData */ (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) /* glClearNamedBufferData */ (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) /* glClearNamedBufferSubData */ (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void * (APIENTRYP PFNGLMAPNAMEDBUFFERPROC) /* glMapNamedBuffer */ (GLuint buffer, GLenum access);
typedef void * (APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) /* glMapNamedBufferRange */ (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) /* glUnmapNamedBuffer */ (GLuint buffer);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) /* glFlushMappedNamedBufferRange */ (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) /* glGetNamedBufferParameteriv */ (GLuint buffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) /* glGetNamedBufferParameteri64v */ (GLuint buffer, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) /* glGetNamedBufferPointerv */ (GLuint buffer, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) /* glGetNamedBufferSubData */ (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) /* glCreateFramebuffers */ (GLsizei n, GLuint * framebuffers);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) /* glNamedFramebufferRenderbuffer */ (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) /* glNamedFramebufferParameteri */ (GLuint framebuffer, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) /* glNamedFramebufferTexture */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) /* glNamedFramebufferTextureLayer */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) /* glNamedFramebufferDrawBuffer */ (GLuint framebuffer, GLenum buf);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) /* glNamedFramebufferDrawBuffers */ (GLuint framebuffer, GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) /* glNamedFramebufferReadBuffer */ (GLuint framebuffer, GLenum src);
typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) /* glInvalidateNamedFramebufferData */ (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) /* glInvalidateNamedFramebufferSubData */ (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) /* glClearNamedFramebufferiv */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) /* glClearNamedFramebufferuiv */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) /* glClearNamedFramebufferfv */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) /* glClearNamedFramebufferfi */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) /* glBlitNamedFramebuffer */ (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) /* glCheckNamedFramebufferStatus */ (GLuint framebuffer, GLenum target);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) /* glGetNamedFramebufferParameteriv */ (GLuint framebuffer, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) /* glGetNamedFramebufferAttachmentParameteriv */ (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) /* glCreateRenderbuffers */ (GLsizei n, GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) /* glNamedRenderbufferStorage */ (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) /* glNamedRenderbufferStorageMultisample */ (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) /* glGetNamedRenderbufferParameteriv */ (GLuint renderbuffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) /* glCreateTextures */ (GLenum target, GLsizei n, GLuint * textures);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) /* glTextureBuffer */ (GLuint texture, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) /* glTextureBufferRange */ (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) /* glTextureStorage1D */ (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) /* glTextureStorage2D */ (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) /* glTextureStorage3D */ (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) /* glTextureStorage2DMultisample */ (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) /* glTextureStorage3DMultisample */ (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) /* glTextureSubImage1D */ (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) /* glTextureSubImage2D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) /* glTextureSubImage3D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) /* glCompressedTextureSubImage1D */ (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) /* glCompressedTextureSubImage2D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) /* glCompressedTextureSubImage3D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) /* glCopyTextureSubImage1D */ (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) /* glCopyTextureSubImage2D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) /* glCopyTextureSubImage3D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) /* glTextureParameterf */ (GLuint texture, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) /* glTextureParameterfv */ (GLuint texture, GLenum pname, const GLfloat * param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) /* glTextureParameteri */ (GLuint texture, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) /* glTextureParameterIiv */ (GLuint texture, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) /* glTextureParameterIuiv */ (GLuint texture, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) /* glTextureParameteriv */ (GLuint texture, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) /* glGenerateTextureMipmap */ (GLuint texture);
typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) /* glBindTextureUnit */ (GLuint unit, GLuint texture);
typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) /* glGetTextureImage */ (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) /* glGetCompressedTextureImage */ (GLuint texture, GLint level, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) /* glGetTextureLevelParameterfv */ (GLuint texture, GLint level, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) /* glGetTextureLevelParameteriv */ (GLuint texture, GLint level, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) /* glGetTextureParameterfv */ (GLuint texture, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) /* glGetTextureParameterIiv */ (GLuint texture, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) /* glGetTextureParameterIuiv */ (GLuint texture, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) /* glGetTextureParameteriv */ (GLuint texture, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) /* glCreateVertexArrays */ (GLsizei n, GLuint * arrays);
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) /* glDisableVertexArrayAttrib */ (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) /* glEnableVertexArrayAttrib */ (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) /* glVertexArrayElementBuffer */ (GLuint vaobj, GLuint buffer);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) /* glVertexArrayVertexBuffer */ (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) /* glVertexArrayVertexBuffers */ (GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) /* glVertexArrayAttribBinding */ (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) /* glVertexArrayAttribFormat */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) /* glVertexArrayAttribIFormat */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) /* glVertexArrayAttribLFormat */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) /* glVertexArrayBindingDivisor */ (GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) /* glGetVertexArrayiv */ (GLuint vaobj, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) /* glGetVertexArrayIndexediv */ (GLuint vaobj, GLuint index, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) /* glGetVertexArrayIndexed64iv */ (GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) /* glCreateSamplers */ (GLsizei n, GLuint * samplers);
typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) /* glCreateProgramPipelines */ (GLsizei n, GLuint * pipelines);
typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) /* glCreateQueries */ (GLenum target, GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) /* glGetQueryBufferObjecti64v */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) /* glGetQueryBufferObjectiv */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) /* glGetQueryBufferObjectui64v */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) /* glGetQueryBufferObjectuiv */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) /* glMemoryBarrierByRegion */ (GLbitfield barriers);
typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) /* glGetTextureSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) /* glGetCompressedTextureSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) /* glGetGraphicsResetStatus */ ();
typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) /* glGetnCompressedTexImage */ (GLenum target, GLint lod, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) /* glGetnTexImage */ (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) /* glGetnUniformdv */ (GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) /* glGetnUniformfv */ (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) /* glGetnUniformiv */ (GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) /* glGetnUniformuiv */ (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (APIENTRYP PFNGLREADNPIXELSPROC) /* glReadnPixels */ (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (APIENTRYP PFNGLGETNMAPDVPROC) /* glGetnMapdv */ (GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
typedef void (APIENTRYP PFNGLGETNMAPFVPROC) /* glGetnMapfv */ (GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
typedef void (APIENTRYP PFNGLGETNMAPIVPROC) /* glGetnMapiv */ (GLenum target, GLenum query, GLsizei bufSize, GLint * v);
typedef void (APIENTRYP PFNGLGETNPIXELMAPFVPROC) /* glGetnPixelMapfv */ (GLenum map, GLsizei bufSize, GLfloat * values);
typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVPROC) /* glGetnPixelMapuiv */ (GLenum map, GLsizei bufSize, GLuint * values);
typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVPROC) /* glGetnPixelMapusv */ (GLenum map, GLsizei bufSize, GLushort * values);
typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEPROC) /* glGetnPolygonStipple */ (GLsizei bufSize, GLubyte * pattern);
typedef void (APIENTRYP PFNGLGETNCOLORTABLEPROC) /* glGetnColorTable */ (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERPROC) /* glGetnConvolutionFilter */ (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERPROC) /* glGetnSeparableFilter */ (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
typedef void (APIENTRYP PFNGLGETNHISTOGRAMPROC) /* glGetnHistogram */ (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
typedef void (APIENTRYP PFNGLGETNMINMAXPROC) /* glGetnMinmax */ (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) /* glTextureBarrier */ ();
typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) /* glActiveTexture */ (GLenum texture);
typedef void (APIENTRYP PFNGLATTACHSHADERPROC) /* glAttachShader */ (GLuint program, GLuint shader);
typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) /* glBindAttribLocation */ (GLuint program, GLuint index, const GLchar * name);
typedef void (APIENTRYP PFNGLBINDBUFFERPROC) /* glBindBuffer */ (GLenum target, GLuint buffer);
typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) /* glBindFramebuffer */ (GLenum target, GLuint framebuffer);
typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) /* glBindRenderbuffer */ (GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) /* glBindTexture */ (GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLBLENDCOLORPROC) /* glBlendColor */ (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) /* glBlendEquation */ (GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) /* glBlendEquationSeparate */ (GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) /* glBlendFuncSeparate */ (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (APIENTRYP PFNGLBUFFERDATAPROC) /* glBufferData */ (GLenum target, GLsizeiptr size, const void * data, GLenum usage);
typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) /* glBufferSubData */ (GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) /* glCheckFramebufferStatus */ (GLenum target);
typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) /* glClearDepthf */ (GLfloat d);
typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) /* glCompileShader */ (GLuint shader);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) /* glCompressedTexImage2D */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) /* glCompressedTexSubImage2D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) /* glCopyTexImage2D */ (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) /* glCopyTexSubImage2D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) /* glCreateProgram */ ();
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) /* glCreateShader */ (GLenum type);
typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) /* glDeleteBuffers */ (GLsizei n, const GLuint * buffers);
typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) /* glDeleteFramebuffers */ (GLsizei n, const GLuint * framebuffers);
typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) /* glDeleteProgram */ (GLuint program);
typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) /* glDeleteRenderbuffers */ (GLsizei n, const GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLDELETESHADERPROC) /* glDeleteShader */ (GLuint shader);
typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) /* glDeleteTextures */ (GLsizei n, const GLuint * textures);
typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) /* glDepthRangef */ (GLfloat n, GLfloat f);
typedef void (APIENTRYP PFNGLDETACHSHADERPROC) /* glDetachShader */ (GLuint program, GLuint shader);
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) /* glDisableVertexAttribArray */ (GLuint index);
typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) /* glDrawArrays */ (GLenum mode, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) /* glDrawElements */ (GLenum mode, GLsizei count, GLenum type, const void * indices);
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) /* glEnableVertexAttribArray */ (GLuint index);
typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) /* glFramebufferRenderbuffer */ (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) /* glFramebufferTexture2D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLGENBUFFERSPROC) /* glGenBuffers */ (GLsizei n, GLuint * buffers);
typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) /* glGenerateMipmap */ (GLenum target);
typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) /* glGenFramebuffers */ (GLsizei n, GLuint * framebuffers);
typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) /* glGenRenderbuffers */ (GLsizei n, GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLGENTEXTURESPROC) /* glGenTextures */ (GLsizei n, GLuint * textures);
typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) /* glGetActiveAttrib */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) /* glGetActiveUniform */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) /* glGetAttachedShaders */ (GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) /* glGetAttribLocation */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) /* glGetBufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) /* glGetFramebufferAttachmentParameteriv */ (GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) /* glGetProgramiv */ (GLuint program, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) /* glGetProgramInfoLog */ (GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) /* glGetRenderbufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSHADERIVPROC) /* glGetShaderiv */ (GLuint shader, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) /* glGetShaderInfoLog */ (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) /* glGetShaderPrecisionFormat */ (GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) /* glGetShaderSource */ (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) /* glGetUniformfv */ (GLuint program, GLint location, GLfloat * params);
typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) /* glGetUniformiv */ (GLuint program, GLint location, GLint * params);
typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) /* glGetUniformLocation */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) /* glGetVertexAttribfv */ (GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) /* glGetVertexAttribiv */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) /* glGetVertexAttribPointerv */ (GLuint index, GLenum pname, void ** pointer);
typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) /* glIsBuffer */ (GLuint buffer);
typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) /* glIsFramebuffer */ (GLuint framebuffer);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) /* glIsProgram */ (GLuint program);
typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) /* glIsRenderbuffer */ (GLuint renderbuffer);
typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) /* glIsShader */ (GLuint shader);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) /* glIsTexture */ (GLuint texture);
typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) /* glLinkProgram */ (GLuint program);
typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) /* glPolygonOffset */ (GLfloat factor, GLfloat units);
typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) /* glReleaseShaderCompiler */ ();
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) /* glRenderbufferStorage */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) /* glSampleCoverage */ (GLfloat value, GLboolean invert);
typedef void (APIENTRYP PFNGLSHADERBINARYPROC) /* glShaderBinary */ (GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length);
typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) /* glShaderSource */ (GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) /* glStencilFuncSeparate */ (GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) /* glStencilMaskSeparate */ (GLenum face, GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) /* glStencilOpSeparate */ (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) /* glTexSubImage2D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLUNIFORM1FPROC) /* glUniform1f */ (GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) /* glUniform1fv */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM1IPROC) /* glUniform1i */ (GLint location, GLint v0);
typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) /* glUniform1iv */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM2FPROC) /* glUniform2f */ (GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) /* glUniform2fv */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM2IPROC) /* glUniform2i */ (GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) /* glUniform2iv */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM3FPROC) /* glUniform3f */ (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) /* glUniform3fv */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM3IPROC) /* glUniform3i */ (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) /* glUniform3iv */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM4FPROC) /* glUniform4f */ (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) /* glUniform4fv */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM4IPROC) /* glUniform4i */ (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) /* glUniform4iv */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) /* glUniformMatrix2fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) /* glUniformMatrix3fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) /* glUniformMatrix4fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) /* glUseProgram */ (GLuint program);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) /* glValidateProgram */ (GLuint program);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) /* glVertexAttrib1f */ (GLuint index, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) /* glVertexAttrib1fv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) /* glVertexAttrib2f */ (GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) /* glVertexAttrib2fv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) /* glVertexAttrib3f */ (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) /* glVertexAttrib3fv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) /* glVertexAttrib4f */ (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) /* glVertexAttrib4fv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) /* glVertexAttribPointer */ (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) /* glDrawRangeElements */ (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) /* glTexImage3D */ (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) /* glTexSubImage3D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) /* glCopyTexSubImage3D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) /* glCompressedTexImage3D */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) /* glCompressedTexSubImage3D */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLGENQUERIESPROC) /* glGenQueries */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) /* glDeleteQueries */ (GLsizei n, const GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) /* glIsQuery */ (GLuint id);
typedef void (APIENTRYP PFNGLBEGINQUERYPROC) /* glBeginQuery */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYPROC) /* glEndQuery */ (GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYIVPROC) /* glGetQueryiv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) /* glGetQueryObjectuiv */ (GLuint id, GLenum pname, GLuint * params);
typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) /* glUnmapBuffer */ (GLenum target);
typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) /* glGetBufferPointerv */ (GLenum target, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) /* glDrawBuffers */ (GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) /* glUniformMatrix2x3fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) /* glUniformMatrix3x2fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) /* glUniformMatrix2x4fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) /* glUniformMatrix4x2fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) /* glUniformMatrix3x4fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) /* glUniformMatrix4x3fv */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) /* glBlitFramebuffer */ (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) /* glRenderbufferStorageMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) /* glFramebufferTextureLayer */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void * (APIENTRYP PFNGLMAPBUFFERRANGEPROC) /* glMapBufferRange */ (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) /* glFlushMappedBufferRange */ (GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) /* glBindVertexArray */ (GLuint array);
typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) /* glDeleteVertexArrays */ (GLsizei n, const GLuint * arrays);
typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) /* glGenVertexArrays */ (GLsizei n, GLuint * arrays);
typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) /* glIsVertexArray */ (GLuint array);
typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) /* glGetIntegeri_v */ (GLenum target, GLuint index, GLint * data);
typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) /* glBeginTransformFeedback */ (GLenum primitiveMode);
typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) /* glEndTransformFeedback */ ();
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) /* glBindBufferRange */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) /* glBindBufferBase */ (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) /* glTransformFeedbackVaryings */ (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) /* glGetTransformFeedbackVarying */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) /* glVertexAttribIPointer */ (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) /* glGetVertexAttribIiv */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) /* glGetVertexAttribIuiv */ (GLuint index, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) /* glVertexAttribI4i */ (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) /* glVertexAttribI4ui */ (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) /* glVertexAttribI4iv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) /* glVertexAttribI4uiv */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) /* glGetUniformuiv */ (GLuint program, GLint location, GLuint * params);
typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) /* glGetFragDataLocation */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) /* glUniform1ui */ (GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) /* glUniform2ui */ (GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) /* glUniform3ui */ (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) /* glUniform4ui */ (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) /* glUniform1uiv */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) /* glUniform2uiv */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) /* glUniform3uiv */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) /* glUniform4uiv */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) /* glClearBufferiv */ (GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) /* glClearBufferuiv */ (GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) /* glClearBufferfv */ (GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) /* glClearBufferfi */ (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGIPROC) /* glGetStringi */ (GLenum name, GLuint index);
typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) /* glCopyBufferSubData */ (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) /* glGetUniformIndices */ (GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) /* glGetActiveUniformsiv */ (GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) /* glGetUniformBlockIndex */ (GLuint program, const GLchar * uniformBlockName);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) /* glGetActiveUniformBlockiv */ (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) /* glGetActiveUniformBlockName */ (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) /* glUniformBlockBinding */ (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) /* glDrawArraysInstanced */ (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) /* glDrawElementsInstanced */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) /* glFenceSync */ (GLenum condition, GLbitfield flags);
typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) /* glIsSync */ (GLsync sync);
typedef void (APIENTRYP PFNGLDELETESYNCPROC) /* glDeleteSync */ (GLsync sync);
typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) /* glClientWaitSync */ (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLWAITSYNCPROC) /* glWaitSync */ (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) /* glGetInteger64v */ (GLenum pname, GLint64 * data);
typedef void (APIENTRYP PFNGLGETSYNCIVPROC) /* glGetSynciv */ (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) /* glGetInteger64i_v */ (GLenum target, GLuint index, GLint64 * data);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) /* glGetBufferParameteri64v */ (GLenum target, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) /* glGenSamplers */ (GLsizei count, GLuint * samplers);
typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) /* glDeleteSamplers */ (GLsizei count, const GLuint * samplers);
typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) /* glIsSampler */ (GLuint sampler);
typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) /* glBindSampler */ (GLuint unit, GLuint sampler);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) /* glSamplerParameteri */ (GLuint sampler, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) /* glSamplerParameteriv */ (GLuint sampler, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) /* glSamplerParameterf */ (GLuint sampler, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) /* glSamplerParameterfv */ (GLuint sampler, GLenum pname, const GLfloat * param);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) /* glGetSamplerParameteriv */ (GLuint sampler, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) /* glGetSamplerParameterfv */ (GLuint sampler, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) /* glVertexAttribDivisor */ (GLuint index, GLuint divisor);
typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) /* glBindTransformFeedback */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) /* glDeleteTransformFeedbacks */ (GLsizei n, const GLuint * ids);
typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) /* glGenTransformFeedbacks */ (GLsizei n, GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) /* glIsTransformFeedback */ (GLuint id);
typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) /* glPauseTransformFeedback */ ();
typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) /* glResumeTransformFeedback */ ();
typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) /* glGetProgramBinary */ (GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) /* glProgramBinary */ (GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) /* glProgramParameteri */ (GLuint program, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) /* glInvalidateFramebuffer */ (GLenum target, GLsizei numAttachments, const GLenum * attachments);
typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) /* glInvalidateSubFramebuffer */ (GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) /* glTexStorage2D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) /* glTexStorage3D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) /* glGetInternalformativ */ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) /* glDispatchCompute */ (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) /* glDispatchComputeIndirect */ (GLintptr indirect);
typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) /* glDrawArraysIndirect */ (GLenum mode, const void * indirect);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) /* glDrawElementsIndirect */ (GLenum mode, GLenum type, const void * indirect);
typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) /* glFramebufferParameteri */ (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) /* glGetFramebufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) /* glGetProgramInterfaceiv */ (GLuint program, GLenum programInterface, GLenum pname, GLint * params);
typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) /* glGetProgramResourceIndex */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) /* glGetProgramResourceName */ (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) /* glGetProgramResourceiv */ (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params);
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) /* glGetProgramResourceLocation */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) /* glUseProgramStages */ (GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) /* glActiveShaderProgram */ (GLuint pipeline, GLuint program);
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) /* glCreateShaderProgramv */ (GLenum type, GLsizei count, const GLchar *const* strings);
typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) /* glBindProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) /* glDeleteProgramPipelines */ (GLsizei n, const GLuint * pipelines);
typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) /* glGenProgramPipelines */ (GLsizei n, GLuint * pipelines);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) /* glIsProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) /* glGetProgramPipelineiv */ (GLuint pipeline, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) /* glProgramUniform1i */ (GLuint program, GLint location, GLint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) /* glProgramUniform2i */ (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) /* glProgramUniform3i */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) /* glProgramUniform4i */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) /* glProgramUniform1ui */ (GLuint program, GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) /* glProgramUniform2ui */ (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) /* glProgramUniform3ui */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) /* glProgramUniform4ui */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) /* glProgramUniform1f */ (GLuint program, GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) /* glProgramUniform2f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) /* glProgramUniform3f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) /* glProgramUniform4f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) /* glProgramUniform1iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) /* glProgramUniform2iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) /* glProgramUniform3iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) /* glProgramUniform4iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) /* glProgramUniform1uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) /* glProgramUniform2uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) /* glProgramUniform3uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) /* glProgramUniform4uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) /* glProgramUniform1fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) /* glProgramUniform2fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) /* glProgramUniform3fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) /* glProgramUniform4fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) /* glProgramUniformMatrix2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) /* glProgramUniformMatrix3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) /* glProgramUniformMatrix4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) /* glProgramUniformMatrix2x3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) /* glProgramUniformMatrix3x2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) /* glProgramUniformMatrix2x4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) /* glProgramUniformMatrix4x2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) /* glProgramUniformMatrix3x4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) /* glProgramUniformMatrix4x3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) /* glValidateProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) /* glGetProgramPipelineInfoLog */ (GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) /* glBindImageTexture */ (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) /* glGetBooleani_v */ (GLenum target, GLuint index, GLboolean * data);
typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) /* glMemoryBarrier */ (GLbitfield barriers);
typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) /* glMemoryBarrierByRegion */ (GLbitfield barriers);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) /* glTexStorage2DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) /* glGetMultisamplefv */ (GLenum pname, GLuint index, GLfloat * val);
typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) /* glSampleMaski */ (GLuint maskNumber, GLbitfield mask);
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) /* glBindVertexBuffer */ (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) /* glVertexAttribFormat */ (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) /* glVertexAttribIFormat */ (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) /* glVertexAttribBinding */ (GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) /* glVertexBindingDivisor */ (GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLBLENDBARRIERPROC) /* glBlendBarrier */ ();
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) /* glCopyImageSubData */ (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) /* glDebugMessageControl */ (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) /* glDebugMessageInsert */ (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) /* glDebugMessageCallback */ (GLDEBUGPROC callback, const void * userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) /* glGetDebugMessageLog */ (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) /* glPushDebugGroup */ (GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) /* glPopDebugGroup */ ();
typedef void (APIENTRYP PFNGLOBJECTLABELPROC) /* glObjectLabel */ (GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) /* glGetObjectLabel */ (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) /* glObjectPtrLabel */ (const void * ptr, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) /* glGetObjectPtrLabel */ (const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLGETPOINTERVPROC) /* glGetPointerv */ (GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLENABLEIPROC) /* glEnablei */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEIPROC) /* glDisablei */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) /* glBlendEquationi */ (GLuint buf, GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) /* glBlendEquationSeparatei */ (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) /* glBlendFunci */ (GLuint buf, GLenum src, GLenum dst);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) /* glBlendFuncSeparatei */ (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (APIENTRYP PFNGLCOLORMASKIPROC) /* glColorMaski */ (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) /* glIsEnabledi */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) /* glDrawElementsBaseVertex */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) /* glDrawRangeElementsBaseVertex */ (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) /* glDrawElementsInstancedBaseVertex */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) /* glFramebufferTexture */ (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXPROC) /* glPrimitiveBoundingBox */ (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) /* glGetGraphicsResetStatus */ ();
typedef void (APIENTRYP PFNGLREADNPIXELSPROC) /* glReadnPixels */ (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) /* glGetnUniformfv */ (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) /* glGetnUniformiv */ (GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) /* glGetnUniformuiv */ (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) /* glMinSampleShading */ (GLfloat value);
typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) /* glPatchParameteri */ (GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) /* glTexParameterIiv */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) /* glTexParameterIuiv */ (GLenum target, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) /* glGetTexParameterIiv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) /* glGetTexParameterIuiv */ (GLenum target, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) /* glSamplerParameterIiv */ (GLuint sampler, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) /* glSamplerParameterIuiv */ (GLuint sampler, GLenum pname, const GLuint * param);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) /* glGetSamplerParameterIiv */ (GLuint sampler, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) /* glGetSamplerParameterIuiv */ (GLuint sampler, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLTEXBUFFERPROC) /* glTexBuffer */ (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) /* glTexBufferRange */ (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) /* glTexStorage3DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) /* glTbufferMask3DFX */ (GLuint mask);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) /* glDebugMessageEnableAMD */ (GLenum category, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) /* glDebugMessageInsertAMD */ (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar * buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) /* glDebugMessageCallbackAMD */ (GLDEBUGPROCAMD callback, void * userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) /* glGetDebugMessageLogAMD */ (GLuint count, GLsizei bufsize, GLenum * categories, GLuint * severities, GLuint * ids, GLsizei * lengths, GLchar * message);
typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) /* glBlendFuncIndexedAMD */ (GLuint buf, GLenum src, GLenum dst);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) /* glBlendFuncSeparateIndexedAMD */ (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) /* glBlendEquationIndexedAMD */ (GLuint buf, GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) /* glBlendEquationSeparateIndexedAMD */ (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) /* glUniform1i64NV */ (GLint location, GLint64EXT x);
typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) /* glUniform2i64NV */ (GLint location, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) /* glUniform3i64NV */ (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) /* glUniform4i64NV */ (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) /* glUniform1i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) /* glUniform2i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) /* glUniform3i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) /* glUniform4i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) /* glUniform1ui64NV */ (GLint location, GLuint64EXT x);
typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) /* glUniform2ui64NV */ (GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) /* glUniform3ui64NV */ (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) /* glUniform4ui64NV */ (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) /* glUniform1ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) /* glUniform2ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) /* glUniform3ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) /* glUniform4ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) /* glGetUniformi64vNV */ (GLuint program, GLint location, GLint64EXT * params);
typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) /* glGetUniformui64vNV */ (GLuint program, GLint location, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) /* glProgramUniform1i64NV */ (GLuint program, GLint location, GLint64EXT x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) /* glProgramUniform2i64NV */ (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) /* glProgramUniform3i64NV */ (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) /* glProgramUniform4i64NV */ (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) /* glProgramUniform1i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) /* glProgramUniform2i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) /* glProgramUniform3i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) /* glProgramUniform4i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) /* glProgramUniform1ui64NV */ (GLuint program, GLint location, GLuint64EXT x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) /* glProgramUniform2ui64NV */ (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) /* glProgramUniform3ui64NV */ (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) /* glProgramUniform4ui64NV */ (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) /* glProgramUniform1ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) /* glProgramUniform2ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) /* glProgramUniform3ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) /* glProgramUniform4ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPARAMETERIAMDPROC) /* glVertexAttribParameteriAMD */ (GLuint index, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) /* glMultiDrawArraysIndirectAMD */ (GLenum mode, const void * indirect, GLsizei primcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) /* glMultiDrawElementsIndirectAMD */ (GLenum mode, GLenum type, const void * indirect, GLsizei primcount, GLsizei stride);
typedef void (APIENTRYP PFNGLGENNAMESAMDPROC) /* glGenNamesAMD */ (GLenum identifier, GLuint num, GLuint * names);
typedef void (APIENTRYP PFNGLDELETENAMESAMDPROC) /* glDeleteNamesAMD */ (GLenum identifier, GLuint num, const GLuint * names);
typedef GLboolean (APIENTRYP PFNGLISNAMEAMDPROC) /* glIsNameAMD */ (GLenum identifier, GLuint name);
typedef void (APIENTRYP PFNGLQUERYOBJECTPARAMETERUIAMDPROC) /* glQueryObjectParameteruiAMD */ (GLenum target, GLuint id, GLenum pname, GLuint param);
typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) /* glGetPerfMonitorGroupsAMD */ (GLint * numGroups, GLsizei groupsSize, GLuint * groups);
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) /* glGetPerfMonitorCountersAMD */ (GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters);
typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) /* glGetPerfMonitorGroupStringAMD */ (GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString);
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) /* glGetPerfMonitorCounterStringAMD */ (GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString);
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) /* glGetPerfMonitorCounterInfoAMD */ (GLuint group, GLuint counter, GLenum pname, void * data);
typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) /* glGenPerfMonitorsAMD */ (GLsizei n, GLuint * monitors);
typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) /* glDeletePerfMonitorsAMD */ (GLsizei n, GLuint * monitors);
typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) /* glSelectPerfMonitorCountersAMD */ (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList);
typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) /* glBeginPerfMonitorAMD */ (GLuint monitor);
typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) /* glEndPerfMonitorAMD */ (GLuint monitor);
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) /* glGetPerfMonitorCounterDataAMD */ (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten);
typedef void (APIENTRYP PFNGLSETMULTISAMPLEFVAMDPROC) /* glSetMultisamplefvAMD */ (GLenum pname, GLuint index, const GLfloat * val);
typedef void (APIENTRYP PFNGLTEXSTORAGESPARSEAMDPROC) /* glTexStorageSparseAMD */ (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
typedef void (APIENTRYP PFNGLTEXTURESTORAGESPARSEAMDPROC) /* glTextureStorageSparseAMD */ (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
typedef void (APIENTRYP PFNGLSTENCILOPVALUEAMDPROC) /* glStencilOpValueAMD */ (GLenum face, GLuint value);
typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) /* glTessellationFactorAMD */ (GLfloat factor);
typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) /* glTessellationModeAMD */ (GLenum mode);
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERANGLEPROC) /* glBlitFramebufferANGLE */ (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC) /* glRenderbufferStorageMultisampleANGLE */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDANGLEPROC) /* glDrawArraysInstancedANGLE */ (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDANGLEPROC) /* glDrawElementsInstancedANGLE */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORANGLEPROC) /* glVertexAttribDivisorANGLE */ (GLuint index, GLuint divisor);
typedef void (APIENTRYP PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC) /* glGetTranslatedShaderSourceANGLE */ (GLuint shader, GLsizei bufsize, GLsizei * length, GLchar * source);
typedef void (APIENTRYP PFNGLCOPYTEXTURELEVELSAPPLEPROC) /* glCopyTextureLevelsAPPLE */ (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) /* glElementPointerAPPLE */ (GLenum type, const void * pointer);
typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) /* glDrawElementArrayAPPLE */ (GLenum mode, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) /* glDrawRangeElementArrayAPPLE */ (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) /* glMultiDrawElementArrayAPPLE */ (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) /* glMultiDrawRangeElementArrayAPPLE */ (GLenum mode, GLuint start, GLuint end, const GLint * first, const GLsizei * count, GLsizei primcount);
typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) /* glGenFencesAPPLE */ (GLsizei n, GLuint * fences);
typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) /* glDeleteFencesAPPLE */ (GLsizei n, const GLuint * fences);
typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) /* glSetFenceAPPLE */ (GLuint fence);
typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) /* glIsFenceAPPLE */ (GLuint fence);
typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) /* glTestFenceAPPLE */ (GLuint fence);
typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) /* glFinishFenceAPPLE */ (GLuint fence);
typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) /* glTestObjectAPPLE */ (GLenum object, GLuint name);
typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) /* glFinishObjectAPPLE */ (GLenum object, GLint name);
typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) /* glBufferParameteriAPPLE */ (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) /* glFlushMappedBufferRangeAPPLE */ (GLenum target, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC) /* glRenderbufferStorageMultisampleAPPLE */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC) /* glResolveMultisampleFramebufferAPPLE */ ();
typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) /* glObjectPurgeableAPPLE */ (GLenum objectType, GLuint name, GLenum option);
typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) /* glObjectUnpurgeableAPPLE */ (GLenum objectType, GLuint name, GLenum option);
typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) /* glGetObjectParameterivAPPLE */ (GLenum objectType, GLuint name, GLenum pname, GLint * params);
typedef GLsync (APIENTRYP PFNGLFENCESYNCAPPLEPROC) /* glFenceSyncAPPLE */ (GLenum condition, GLbitfield flags);
typedef GLboolean (APIENTRYP PFNGLISSYNCAPPLEPROC) /* glIsSyncAPPLE */ (GLsync sync);
typedef void (APIENTRYP PFNGLDELETESYNCAPPLEPROC) /* glDeleteSyncAPPLE */ (GLsync sync);
typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCAPPLEPROC) /* glClientWaitSyncAPPLE */ (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLWAITSYNCAPPLEPROC) /* glWaitSyncAPPLE */ (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLGETINTEGER64VAPPLEPROC) /* glGetInteger64vAPPLE */ (GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGETSYNCIVAPPLEPROC) /* glGetSyncivAPPLE */ (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) /* glTextureRangeAPPLE */ (GLenum target, GLsizei length, const void * pointer);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) /* glGetTexParameterPointervAPPLE */ (GLenum target, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) /* glBindVertexArrayAPPLE */ (GLuint array);
typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) /* glDeleteVertexArraysAPPLE */ (GLsizei n, const GLuint * arrays);
typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) /* glGenVertexArraysAPPLE */ (GLsizei n, GLuint * arrays);
typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) /* glIsVertexArrayAPPLE */ (GLuint array);
typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) /* glVertexArrayRangeAPPLE */ (GLsizei length, void * pointer);
typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) /* glFlushVertexArrayRangeAPPLE */ (GLsizei length, void * pointer);
typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) /* glVertexArrayParameteriAPPLE */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) /* glEnableVertexAttribAPPLE */ (GLuint index, GLenum pname);
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) /* glDisableVertexAttribAPPLE */ (GLuint index, GLenum pname);
typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) /* glIsVertexAttribEnabledAPPLE */ (GLuint index, GLenum pname);
typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) /* glMapVertexAttrib1dAPPLE */ (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) /* glMapVertexAttrib1fAPPLE */ (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) /* glMapVertexAttrib2dAPPLE */ (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) /* glMapVertexAttrib2fAPPLE */ (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) /* glReleaseShaderCompiler */ ();
typedef void (APIENTRYP PFNGLSHADERBINARYPROC) /* glShaderBinary */ (GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length);
typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) /* glGetShaderPrecisionFormat */ (GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) /* glDepthRangef */ (GLfloat n, GLfloat f);
typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) /* glClearDepthf */ (GLfloat d);
typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) /* glMemoryBarrierByRegion */ (GLbitfield barriers);
typedef void (APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXARBPROC) /* glPrimitiveBoundingBoxARB */ (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) /* glDrawArraysInstancedBaseInstance */ (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) /* glDrawElementsInstancedBaseInstance */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) /* glDrawElementsInstancedBaseVertexBaseInstance */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) /* glGetTextureHandleARB */ (GLuint texture);
typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) /* glGetTextureSamplerHandleARB */ (GLuint texture, GLuint sampler);
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) /* glMakeTextureHandleResidentARB */ (GLuint64 handle);
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) /* glMakeTextureHandleNonResidentARB */ (GLuint64 handle);
typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) /* glGetImageHandleARB */ (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) /* glMakeImageHandleResidentARB */ (GLuint64 handle, GLenum access);
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) /* glMakeImageHandleNonResidentARB */ (GLuint64 handle);
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) /* glUniformHandleui64ARB */ (GLint location, GLuint64 value);
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) /* glUniformHandleui64vARB */ (GLint location, GLsizei count, const GLuint64 * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) /* glProgramUniformHandleui64ARB */ (GLuint program, GLint location, GLuint64 value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) /* glProgramUniformHandleui64vARB */ (GLuint program, GLint location, GLsizei count, const GLuint64 * values);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) /* glIsTextureHandleResidentARB */ (GLuint64 handle);
typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) /* glIsImageHandleResidentARB */ (GLuint64 handle);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) /* glVertexAttribL1ui64ARB */ (GLuint index, GLuint64EXT x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) /* glVertexAttribL1ui64vARB */ (GLuint index, const GLuint64EXT * v);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) /* glGetVertexAttribLui64vARB */ (GLuint index, GLenum pname, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) /* glBindFragDataLocationIndexed */ (GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) /* glGetFragDataIndex */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) /* glBufferStorage */ (GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) /* glCreateSyncFromCLeventARB */ (struct _cl_context * context, struct _cl_event * event, GLbitfield flags);
typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) /* glClearBufferData */ (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) /* glClearBufferSubData */ (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) /* glClearTexImage */ (GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) /* glClearTexSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) /* glClipControl */ (GLenum origin, GLenum depth);
typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) /* glClampColorARB */ (GLenum target, GLenum clamp);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) /* glDispatchCompute */ (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) /* glDispatchComputeIndirect */ (GLintptr indirect);
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) /* glDispatchComputeGroupSizeARB */ (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) /* glCopyBufferSubData */ (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) /* glCopyImageSubData */ (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) /* glDebugMessageControlARB */ (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) /* glDebugMessageInsertARB */ (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) /* glDebugMessageCallbackARB */ (GLDEBUGPROCARB callback, const void * userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) /* glGetDebugMessageLogARB */ (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) /* glCreateTransformFeedbacks */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) /* glTransformFeedbackBufferBase */ (GLuint xfb, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) /* glTransformFeedbackBufferRange */ (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) /* glGetTransformFeedbackiv */ (GLuint xfb, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) /* glGetTransformFeedbacki_v */ (GLuint xfb, GLenum pname, GLuint index, GLint * param);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) /* glGetTransformFeedbacki64_v */ (GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) /* glCreateBuffers */ (GLsizei n, GLuint * buffers);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) /* glNamedBufferStorage */ (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) /* glNamedBufferData */ (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) /* glNamedBufferSubData */ (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) /* glCopyNamedBufferSubData */ (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) /* glClearNamedBufferData */ (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) /* glClearNamedBufferSubData */ (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void * (APIENTRYP PFNGLMAPNAMEDBUFFERPROC) /* glMapNamedBuffer */ (GLuint buffer, GLenum access);
typedef void * (APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) /* glMapNamedBufferRange */ (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) /* glUnmapNamedBuffer */ (GLuint buffer);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) /* glFlushMappedNamedBufferRange */ (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) /* glGetNamedBufferParameteriv */ (GLuint buffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) /* glGetNamedBufferParameteri64v */ (GLuint buffer, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) /* glGetNamedBufferPointerv */ (GLuint buffer, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) /* glGetNamedBufferSubData */ (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) /* glCreateFramebuffers */ (GLsizei n, GLuint * framebuffers);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) /* glNamedFramebufferRenderbuffer */ (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) /* glNamedFramebufferParameteri */ (GLuint framebuffer, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) /* glNamedFramebufferTexture */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) /* glNamedFramebufferTextureLayer */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) /* glNamedFramebufferDrawBuffer */ (GLuint framebuffer, GLenum buf);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) /* glNamedFramebufferDrawBuffers */ (GLuint framebuffer, GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) /* glNamedFramebufferReadBuffer */ (GLuint framebuffer, GLenum src);
typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) /* glInvalidateNamedFramebufferData */ (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) /* glInvalidateNamedFramebufferSubData */ (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) /* glClearNamedFramebufferiv */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) /* glClearNamedFramebufferuiv */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) /* glClearNamedFramebufferfv */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) /* glClearNamedFramebufferfi */ (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) /* glBlitNamedFramebuffer */ (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) /* glCheckNamedFramebufferStatus */ (GLuint framebuffer, GLenum target);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) /* glGetNamedFramebufferParameteriv */ (GLuint framebuffer, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) /* glGetNamedFramebufferAttachmentParameteriv */ (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) /* glCreateRenderbuffers */ (GLsizei n, GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) /* glNamedRenderbufferStorage */ (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) /* glNamedRenderbufferStorageMultisample */ (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) /* glGetNamedRenderbufferParameteriv */ (GLuint renderbuffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) /* glCreateTextures */ (GLenum target, GLsizei n, GLuint * textures);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) /* glTextureBuffer */ (GLuint texture, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) /* glTextureBufferRange */ (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) /* glTextureStorage1D */ (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) /* glTextureStorage2D */ (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) /* glTextureStorage3D */ (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) /* glTextureStorage2DMultisample */ (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) /* glTextureStorage3DMultisample */ (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) /* glTextureSubImage1D */ (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) /* glTextureSubImage2D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) /* glTextureSubImage3D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) /* glCompressedTextureSubImage1D */ (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) /* glCompressedTextureSubImage2D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) /* glCompressedTextureSubImage3D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) /* glCopyTextureSubImage1D */ (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) /* glCopyTextureSubImage2D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) /* glCopyTextureSubImage3D */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) /* glTextureParameterf */ (GLuint texture, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) /* glTextureParameterfv */ (GLuint texture, GLenum pname, const GLfloat * param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) /* glTextureParameteri */ (GLuint texture, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) /* glTextureParameterIiv */ (GLuint texture, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) /* glTextureParameterIuiv */ (GLuint texture, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) /* glTextureParameteriv */ (GLuint texture, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) /* glGenerateTextureMipmap */ (GLuint texture);
typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) /* glBindTextureUnit */ (GLuint unit, GLuint texture);
typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) /* glGetTextureImage */ (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) /* glGetCompressedTextureImage */ (GLuint texture, GLint level, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) /* glGetTextureLevelParameterfv */ (GLuint texture, GLint level, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) /* glGetTextureLevelParameteriv */ (GLuint texture, GLint level, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) /* glGetTextureParameterfv */ (GLuint texture, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) /* glGetTextureParameterIiv */ (GLuint texture, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) /* glGetTextureParameterIuiv */ (GLuint texture, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) /* glGetTextureParameteriv */ (GLuint texture, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) /* glCreateVertexArrays */ (GLsizei n, GLuint * arrays);
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) /* glDisableVertexArrayAttrib */ (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) /* glEnableVertexArrayAttrib */ (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) /* glVertexArrayElementBuffer */ (GLuint vaobj, GLuint buffer);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) /* glVertexArrayVertexBuffer */ (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) /* glVertexArrayVertexBuffers */ (GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) /* glVertexArrayAttribBinding */ (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) /* glVertexArrayAttribFormat */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) /* glVertexArrayAttribIFormat */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) /* glVertexArrayAttribLFormat */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) /* glVertexArrayBindingDivisor */ (GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) /* glGetVertexArrayiv */ (GLuint vaobj, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) /* glGetVertexArrayIndexediv */ (GLuint vaobj, GLuint index, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) /* glGetVertexArrayIndexed64iv */ (GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) /* glCreateSamplers */ (GLsizei n, GLuint * samplers);
typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) /* glCreateProgramPipelines */ (GLsizei n, GLuint * pipelines);
typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) /* glCreateQueries */ (GLenum target, GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) /* glGetQueryBufferObjecti64v */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) /* glGetQueryBufferObjectiv */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) /* glGetQueryBufferObjectui64v */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) /* glGetQueryBufferObjectuiv */ (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) /* glDrawBuffersARB */ (GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) /* glBlendEquationiARB */ (GLuint buf, GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) /* glBlendEquationSeparateiARB */ (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) /* glBlendFunciARB */ (GLuint buf, GLenum src, GLenum dst);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) /* glBlendFuncSeparateiARB */ (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) /* glDrawElementsBaseVertex */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) /* glDrawRangeElementsBaseVertex */ (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) /* glDrawElementsInstancedBaseVertex */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) /* glMultiDrawElementsBaseVertex */ (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) /* glDrawArraysIndirect */ (GLenum mode, const void * indirect);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) /* glDrawElementsIndirect */ (GLenum mode, GLenum type, const void * indirect);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) /* glDrawArraysInstancedARB */ (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) /* glDrawElementsInstancedARB */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) /* glProgramStringARB */ (GLenum target, GLenum format, GLsizei len, const void * string);
typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) /* glBindProgramARB */ (GLenum target, GLuint program);
typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) /* glDeleteProgramsARB */ (GLsizei n, const GLuint * programs);
typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) /* glGenProgramsARB */ (GLsizei n, GLuint * programs);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) /* glProgramEnvParameter4dARB */ (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) /* glProgramEnvParameter4dvARB */ (GLenum target, GLuint index, const GLdouble * params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) /* glProgramEnvParameter4fARB */ (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) /* glProgramEnvParameter4fvARB */ (GLenum target, GLuint index, const GLfloat * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) /* glProgramLocalParameter4dARB */ (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) /* glProgramLocalParameter4dvARB */ (GLenum target, GLuint index, const GLdouble * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) /* glProgramLocalParameter4fARB */ (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) /* glProgramLocalParameter4fvARB */ (GLenum target, GLuint index, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) /* glGetProgramEnvParameterdvARB */ (GLenum target, GLuint index, GLdouble * params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) /* glGetProgramEnvParameterfvARB */ (GLenum target, GLuint index, GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) /* glGetProgramLocalParameterdvARB */ (GLenum target, GLuint index, GLdouble * params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) /* glGetProgramLocalParameterfvARB */ (GLenum target, GLuint index, GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) /* glGetProgramivARB */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) /* glGetProgramStringARB */ (GLenum target, GLenum pname, void * string);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) /* glIsProgramARB */ (GLuint program);
typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) /* glFramebufferParameteri */ (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) /* glGetFramebufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) /* glIsRenderbuffer */ (GLuint renderbuffer);
typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) /* glBindRenderbuffer */ (GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) /* glDeleteRenderbuffers */ (GLsizei n, const GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) /* glGenRenderbuffers */ (GLsizei n, GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) /* glRenderbufferStorage */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) /* glGetRenderbufferParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) /* glIsFramebuffer */ (GLuint framebuffer);
typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) /* glBindFramebuffer */ (GLenum target, GLuint framebuffer);
typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) /* glDeleteFramebuffers */ (GLsizei n, const GLuint * framebuffers);
typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) /* glGenFramebuffers */ (GLsizei n, GLuint * framebuffers);
typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) /* glCheckFramebufferStatus */ (GLenum target);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) /* glFramebufferTexture1D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) /* glFramebufferTexture2D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) /* glFramebufferTexture3D */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) /* glFramebufferRenderbuffer */ (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) /* glGetFramebufferAttachmentParameteriv */ (GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) /* glGenerateMipmap */ (GLenum target);
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) /* glBlitFramebuffer */ (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) /* glRenderbufferStorageMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) /* glFramebufferTextureLayer */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) /* glProgramParameteriARB */ (GLuint program, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) /* glFramebufferTextureARB */ (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) /* glFramebufferTextureLayerARB */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) /* glFramebufferTextureFaceARB */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) /* glGetProgramBinary */ (GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) /* glProgramBinary */ (GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) /* glProgramParameteri */ (GLuint program, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) /* glGetTextureSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) /* glGetCompressedTextureSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
typedef void (APIENTRYP PFNGLUNIFORM1DPROC) /* glUniform1d */ (GLint location, GLdouble x);
typedef void (APIENTRYP PFNGLUNIFORM2DPROC) /* glUniform2d */ (GLint location, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLUNIFORM3DPROC) /* glUniform3d */ (GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLUNIFORM4DPROC) /* glUniform4d */ (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) /* glUniform1dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) /* glUniform2dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) /* glUniform3dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) /* glUniform4dv */ (GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) /* glUniformMatrix2dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) /* glUniformMatrix3dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) /* glUniformMatrix4dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) /* glUniformMatrix2x3dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) /* glUniformMatrix2x4dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) /* glUniformMatrix3x2dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) /* glUniformMatrix3x4dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) /* glUniformMatrix4x2dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) /* glUniformMatrix4x3dv */ (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) /* glGetUniformdv */ (GLuint program, GLint location, GLdouble * params);
typedef void (APIENTRYP PFNGLUNIFORM1I64ARBPROC) /* glUniform1i64ARB */ (GLint location, GLint64 x);
typedef void (APIENTRYP PFNGLUNIFORM2I64ARBPROC) /* glUniform2i64ARB */ (GLint location, GLint64 x, GLint64 y);
typedef void (APIENTRYP PFNGLUNIFORM3I64ARBPROC) /* glUniform3i64ARB */ (GLint location, GLint64 x, GLint64 y, GLint64 z);
typedef void (APIENTRYP PFNGLUNIFORM4I64ARBPROC) /* glUniform4i64ARB */ (GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
typedef void (APIENTRYP PFNGLUNIFORM1I64VARBPROC) /* glUniform1i64vARB */ (GLint location, GLsizei count, const GLint64 * value);
typedef void (APIENTRYP PFNGLUNIFORM2I64VARBPROC) /* glUniform2i64vARB */ (GLint location, GLsizei count, const GLint64 * value);
typedef void (APIENTRYP PFNGLUNIFORM3I64VARBPROC) /* glUniform3i64vARB */ (GLint location, GLsizei count, const GLint64 * value);
typedef void (APIENTRYP PFNGLUNIFORM4I64VARBPROC) /* glUniform4i64vARB */ (GLint location, GLsizei count, const GLint64 * value);
typedef void (APIENTRYP PFNGLUNIFORM1UI64ARBPROC) /* glUniform1ui64ARB */ (GLint location, GLuint64 x);
typedef void (APIENTRYP PFNGLUNIFORM2UI64ARBPROC) /* glUniform2ui64ARB */ (GLint location, GLuint64 x, GLuint64 y);
typedef void (APIENTRYP PFNGLUNIFORM3UI64ARBPROC) /* glUniform3ui64ARB */ (GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
typedef void (APIENTRYP PFNGLUNIFORM4UI64ARBPROC) /* glUniform4ui64ARB */ (GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
typedef void (APIENTRYP PFNGLUNIFORM1UI64VARBPROC) /* glUniform1ui64vARB */ (GLint location, GLsizei count, const GLuint64 * value);
typedef void (APIENTRYP PFNGLUNIFORM2UI64VARBPROC) /* glUniform2ui64vARB */ (GLint location, GLsizei count, const GLuint64 * value);
typedef void (APIENTRYP PFNGLUNIFORM3UI64VARBPROC) /* glUniform3ui64vARB */ (GLint location, GLsizei count, const GLuint64 * value);
typedef void (APIENTRYP PFNGLUNIFORM4UI64VARBPROC) /* glUniform4ui64vARB */ (GLint location, GLsizei count, const GLuint64 * value);
typedef void (APIENTRYP PFNGLGETUNIFORMI64VARBPROC) /* glGetUniformi64vARB */ (GLuint program, GLint location, GLint64 * params);
typedef void (APIENTRYP PFNGLGETUNIFORMUI64VARBPROC) /* glGetUniformui64vARB */ (GLuint program, GLint location, GLuint64 * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMI64VARBPROC) /* glGetnUniformi64vARB */ (GLuint program, GLint location, GLsizei bufSize, GLint64 * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMUI64VARBPROC) /* glGetnUniformui64vARB */ (GLuint program, GLint location, GLsizei bufSize, GLuint64 * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64ARBPROC) /* glProgramUniform1i64ARB */ (GLuint program, GLint location, GLint64 x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64ARBPROC) /* glProgramUniform2i64ARB */ (GLuint program, GLint location, GLint64 x, GLint64 y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64ARBPROC) /* glProgramUniform3i64ARB */ (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64ARBPROC) /* glProgramUniform4i64ARB */ (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VARBPROC) /* glProgramUniform1i64vARB */ (GLuint program, GLint location, GLsizei count, const GLint64 * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VARBPROC) /* glProgramUniform2i64vARB */ (GLuint program, GLint location, GLsizei count, const GLint64 * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VARBPROC) /* glProgramUniform3i64vARB */ (GLuint program, GLint location, GLsizei count, const GLint64 * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VARBPROC) /* glProgramUniform4i64vARB */ (GLuint program, GLint location, GLsizei count, const GLint64 * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64ARBPROC) /* glProgramUniform1ui64ARB */ (GLuint program, GLint location, GLuint64 x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64ARBPROC) /* glProgramUniform2ui64ARB */ (GLuint program, GLint location, GLuint64 x, GLuint64 y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64ARBPROC) /* glProgramUniform3ui64ARB */ (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64ARBPROC) /* glProgramUniform4ui64ARB */ (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VARBPROC) /* glProgramUniform1ui64vARB */ (GLuint program, GLint location, GLsizei count, const GLuint64 * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VARBPROC) /* glProgramUniform2ui64vARB */ (GLuint program, GLint location, GLsizei count, const GLuint64 * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VARBPROC) /* glProgramUniform3ui64vARB */ (GLuint program, GLint location, GLsizei count, const GLuint64 * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VARBPROC) /* glProgramUniform4ui64vARB */ (GLuint program, GLint location, GLsizei count, const GLuint64 * value);
typedef void (APIENTRYP PFNGLBLENDCOLORPROC) /* glBlendColor */ (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) /* glBlendEquation */ (GLenum mode);
typedef void (APIENTRYP PFNGLCOLORTABLEPROC) /* glColorTable */ (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) /* glColorTableParameterfv */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) /* glColorTableParameteriv */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) /* glCopyColorTable */ (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) /* glGetColorTable */ (GLenum target, GLenum format, GLenum type, void * table);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) /* glGetColorTableParameterfv */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) /* glGetColorTableParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) /* glColorSubTable */ (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) /* glCopyColorSubTable */ (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) /* glConvolutionFilter1D */ (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) /* glConvolutionFilter2D */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) /* glConvolutionParameterf */ (GLenum target, GLenum pname, GLfloat params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) /* glConvolutionParameterfv */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) /* glConvolutionParameteri */ (GLenum target, GLenum pname, GLint params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) /* glConvolutionParameteriv */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) /* glCopyConvolutionFilter1D */ (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) /* glCopyConvolutionFilter2D */ (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) /* glGetConvolutionFilter */ (GLenum target, GLenum format, GLenum type, void * image);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) /* glGetConvolutionParameterfv */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) /* glGetConvolutionParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) /* glGetSeparableFilter */ (GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) /* glSeparableFilter2D */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) /* glGetHistogram */ (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) /* glGetHistogramParameterfv */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) /* glGetHistogramParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMINMAXPROC) /* glGetMinmax */ (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) /* glGetMinmaxParameterfv */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) /* glGetMinmaxParameteriv */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLHISTOGRAMPROC) /* glHistogram */ (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (APIENTRYP PFNGLMINMAXPROC) /* glMinmax */ (GLenum target, GLenum internalformat, GLboolean sink);
typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) /* glResetHistogram */ (GLenum target);
typedef void (APIENTRYP PFNGLRESETMINMAXPROC) /* glResetMinmax */ (GLenum target);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) /* glMultiDrawArraysIndirectCountARB */ (GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) /* glMultiDrawElementsIndirectCountARB */ (GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) /* glVertexAttribDivisorARB */ (GLuint index, GLuint divisor);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) /* glGetInternalformativ */ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) /* glGetInternalformati64v */ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 * params);
typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) /* glInvalidateTexSubImage */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) /* glInvalidateTexImage */ (GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) /* glInvalidateBufferSubData */ (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) /* glInvalidateBufferData */ (GLuint buffer);
typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) /* glInvalidateFramebuffer */ (GLenum target, GLsizei numAttachments, const GLenum * attachments);
typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) /* glInvalidateSubFramebuffer */ (GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void * (APIENTRYP PFNGLMAPBUFFERRANGEPROC) /* glMapBufferRange */ (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) /* glFlushMappedBufferRange */ (GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) /* glCurrentPaletteMatrixARB */ (GLint index);
typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) /* glMatrixIndexubvARB */ (GLint size, const GLubyte * indices);
typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) /* glMatrixIndexusvARB */ (GLint size, const GLushort * indices);
typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) /* glMatrixIndexuivARB */ (GLint size, const GLuint * indices);
typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) /* glMatrixIndexPointerARB */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) /* glBindBuffersBase */ (GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) /* glBindBuffersRange */ (GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) /* glBindTextures */ (GLuint first, GLsizei count, const GLuint * textures);
typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) /* glBindSamplers */ (GLuint first, GLsizei count, const GLuint * samplers);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) /* glBindImageTextures */ (GLuint first, GLsizei count, const GLuint * textures);
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) /* glBindVertexBuffers */ (GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) /* glMultiDrawArraysIndirect */ (GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) /* glMultiDrawElementsIndirect */ (GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) /* glSampleCoverageARB */ (GLfloat value, GLboolean invert);
typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) /* glActiveTextureARB */ (GLenum texture);
typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) /* glClientActiveTextureARB */ (GLenum texture);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) /* glMultiTexCoord1dARB */ (GLenum target, GLdouble s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) /* glMultiTexCoord1dvARB */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) /* glMultiTexCoord1fARB */ (GLenum target, GLfloat s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) /* glMultiTexCoord1fvARB */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) /* glMultiTexCoord1iARB */ (GLenum target, GLint s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) /* glMultiTexCoord1ivARB */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) /* glMultiTexCoord1sARB */ (GLenum target, GLshort s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) /* glMultiTexCoord1svARB */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) /* glMultiTexCoord2dARB */ (GLenum target, GLdouble s, GLdouble t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) /* glMultiTexCoord2dvARB */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) /* glMultiTexCoord2fARB */ (GLenum target, GLfloat s, GLfloat t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) /* glMultiTexCoord2fvARB */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) /* glMultiTexCoord2iARB */ (GLenum target, GLint s, GLint t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) /* glMultiTexCoord2ivARB */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) /* glMultiTexCoord2sARB */ (GLenum target, GLshort s, GLshort t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) /* glMultiTexCoord2svARB */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) /* glMultiTexCoord3dARB */ (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) /* glMultiTexCoord3dvARB */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) /* glMultiTexCoord3fARB */ (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) /* glMultiTexCoord3fvARB */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) /* glMultiTexCoord3iARB */ (GLenum target, GLint s, GLint t, GLint r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) /* glMultiTexCoord3ivARB */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) /* glMultiTexCoord3sARB */ (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) /* glMultiTexCoord3svARB */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) /* glMultiTexCoord4dARB */ (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) /* glMultiTexCoord4dvARB */ (GLenum target, const GLdouble * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) /* glMultiTexCoord4fARB */ (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) /* glMultiTexCoord4fvARB */ (GLenum target, const GLfloat * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) /* glMultiTexCoord4iARB */ (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) /* glMultiTexCoord4ivARB */ (GLenum target, const GLint * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) /* glMultiTexCoord4sARB */ (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) /* glMultiTexCoord4svARB */ (GLenum target, const GLshort * v);
typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) /* glGenQueriesARB */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) /* glDeleteQueriesARB */ (GLsizei n, const GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) /* glIsQueryARB */ (GLuint id);
typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) /* glBeginQueryARB */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYARBPROC) /* glEndQueryARB */ (GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) /* glGetQueryivARB */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) /* glGetQueryObjectivARB */ (GLuint id, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) /* glGetQueryObjectuivARB */ (GLuint id, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSARBPROC) /* glMaxShaderCompilerThreadsARB */ (GLuint count);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) /* glPointParameterfARB */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) /* glPointParameterfvARB */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) /* glGetProgramInterfaceiv */ (GLuint program, GLenum programInterface, GLenum pname, GLint * params);
typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) /* glGetProgramResourceIndex */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) /* glGetProgramResourceName */ (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) /* glGetProgramResourceiv */ (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params);
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) /* glGetProgramResourceLocation */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) /* glGetProgramResourceLocationIndex */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) /* glProvokingVertex */ (GLenum mode);
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) /* glGetGraphicsResetStatusARB */ ();
typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) /* glGetnTexImageARB */ (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * img);
typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) /* glReadnPixelsARB */ (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) /* glGetnCompressedTexImageARB */ (GLenum target, GLint lod, GLsizei bufSize, void * img);
typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) /* glGetnUniformfvARB */ (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) /* glGetnUniformivARB */ (GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) /* glGetnUniformuivARB */ (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) /* glGetnUniformdvARB */ (GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC) /* glGetnMapdvARB */ (GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC) /* glGetnMapfvARB */ (GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC) /* glGetnMapivARB */ (GLenum target, GLenum query, GLsizei bufSize, GLint * v);
typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC) /* glGetnPixelMapfvARB */ (GLenum map, GLsizei bufSize, GLfloat * values);
typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) /* glGetnPixelMapuivARB */ (GLenum map, GLsizei bufSize, GLuint * values);
typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) /* glGetnPixelMapusvARB */ (GLenum map, GLsizei bufSize, GLushort * values);
typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) /* glGetnPolygonStippleARB */ (GLsizei bufSize, GLubyte * pattern);
typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC) /* glGetnColorTableARB */ (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) /* glGetnConvolutionFilterARB */ (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) /* glGetnSeparableFilterARB */ (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC) /* glGetnHistogramARB */ (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC) /* glGetnMinmaxARB */ (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) /* glFramebufferSampleLocationsfvARB */ (GLenum target, GLuint start, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) /* glNamedFramebufferSampleLocationsfvARB */ (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLEVALUATEDEPTHVALUESARBPROC) /* glEvaluateDepthValuesARB */ ();
typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) /* glMinSampleShadingARB */ (GLfloat value);
typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) /* glGenSamplers */ (GLsizei count, GLuint * samplers);
typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) /* glDeleteSamplers */ (GLsizei count, const GLuint * samplers);
typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) /* glIsSampler */ (GLuint sampler);
typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) /* glBindSampler */ (GLuint unit, GLuint sampler);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) /* glSamplerParameteri */ (GLuint sampler, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) /* glSamplerParameteriv */ (GLuint sampler, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) /* glSamplerParameterf */ (GLuint sampler, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) /* glSamplerParameterfv */ (GLuint sampler, GLenum pname, const GLfloat * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) /* glSamplerParameterIiv */ (GLuint sampler, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) /* glSamplerParameterIuiv */ (GLuint sampler, GLenum pname, const GLuint * param);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) /* glGetSamplerParameteriv */ (GLuint sampler, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) /* glGetSamplerParameterIiv */ (GLuint sampler, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) /* glGetSamplerParameterfv */ (GLuint sampler, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) /* glGetSamplerParameterIuiv */ (GLuint sampler, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) /* glUseProgramStages */ (GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) /* glActiveShaderProgram */ (GLuint pipeline, GLuint program);
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) /* glCreateShaderProgramv */ (GLenum type, GLsizei count, const GLchar *const* strings);
typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) /* glBindProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) /* glDeleteProgramPipelines */ (GLsizei n, const GLuint * pipelines);
typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) /* glGenProgramPipelines */ (GLsizei n, GLuint * pipelines);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) /* glIsProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) /* glGetProgramPipelineiv */ (GLuint pipeline, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) /* glProgramUniform1i */ (GLuint program, GLint location, GLint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) /* glProgramUniform1iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) /* glProgramUniform1f */ (GLuint program, GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) /* glProgramUniform1fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) /* glProgramUniform1d */ (GLuint program, GLint location, GLdouble v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) /* glProgramUniform1dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) /* glProgramUniform1ui */ (GLuint program, GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) /* glProgramUniform1uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) /* glProgramUniform2i */ (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) /* glProgramUniform2iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) /* glProgramUniform2f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) /* glProgramUniform2fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) /* glProgramUniform2d */ (GLuint program, GLint location, GLdouble v0, GLdouble v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) /* glProgramUniform2dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) /* glProgramUniform2ui */ (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) /* glProgramUniform2uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) /* glProgramUniform3i */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) /* glProgramUniform3iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) /* glProgramUniform3f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) /* glProgramUniform3fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) /* glProgramUniform3d */ (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) /* glProgramUniform3dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) /* glProgramUniform3ui */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) /* glProgramUniform3uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) /* glProgramUniform4i */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) /* glProgramUniform4iv */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) /* glProgramUniform4f */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) /* glProgramUniform4fv */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) /* glProgramUniform4d */ (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) /* glProgramUniform4dv */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) /* glProgramUniform4ui */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) /* glProgramUniform4uiv */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) /* glProgramUniformMatrix2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) /* glProgramUniformMatrix3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) /* glProgramUniformMatrix4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) /* glProgramUniformMatrix2dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) /* glProgramUniformMatrix3dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) /* glProgramUniformMatrix4dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) /* glProgramUniformMatrix2x3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) /* glProgramUniformMatrix3x2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) /* glProgramUniformMatrix2x4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) /* glProgramUniformMatrix4x2fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) /* glProgramUniformMatrix3x4fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) /* glProgramUniformMatrix4x3fv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) /* glProgramUniformMatrix2x3dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) /* glProgramUniformMatrix3x2dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) /* glProgramUniformMatrix2x4dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) /* glProgramUniformMatrix4x2dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) /* glProgramUniformMatrix3x4dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) /* glProgramUniformMatrix4x3dv */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) /* glValidateProgramPipeline */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) /* glGetProgramPipelineInfoLog */ (GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) /* glGetActiveAtomicCounterBufferiv */ (GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) /* glBindImageTexture */ (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) /* glMemoryBarrier */ (GLbitfield barriers);
typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) /* glDeleteObjectARB */ (GLhandleARB obj);
typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) /* glGetHandleARB */ (GLenum pname);
typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) /* glDetachObjectARB */ (GLhandleARB containerObj, GLhandleARB attachedObj);
typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) /* glCreateShaderObjectARB */ (GLenum shaderType);
typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) /* glShaderSourceARB */ (GLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint * length);
typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) /* glCompileShaderARB */ (GLhandleARB shaderObj);
typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) /* glCreateProgramObjectARB */ ();
typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) /* glAttachObjectARB */ (GLhandleARB containerObj, GLhandleARB obj);
typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) /* glLinkProgramARB */ (GLhandleARB programObj);
typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) /* glUseProgramObjectARB */ (GLhandleARB programObj);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) /* glValidateProgramARB */ (GLhandleARB programObj);
typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) /* glUniform1fARB */ (GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) /* glUniform2fARB */ (GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) /* glUniform3fARB */ (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) /* glUniform4fARB */ (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) /* glUniform1iARB */ (GLint location, GLint v0);
typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) /* glUniform2iARB */ (GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) /* glUniform3iARB */ (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) /* glUniform4iARB */ (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) /* glUniform1fvARB */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) /* glUniform2fvARB */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) /* glUniform3fvARB */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) /* glUniform4fvARB */ (GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) /* glUniform1ivARB */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) /* glUniform2ivARB */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) /* glUniform3ivARB */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) /* glUniform4ivARB */ (GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) /* glUniformMatrix2fvARB */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) /* glUniformMatrix3fvARB */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) /* glUniformMatrix4fvARB */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) /* glGetObjectParameterfvARB */ (GLhandleARB obj, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) /* glGetObjectParameterivARB */ (GLhandleARB obj, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) /* glGetInfoLogARB */ (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);
typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) /* glGetAttachedObjectsARB */ (GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj);
typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) /* glGetUniformLocationARB */ (GLhandleARB programObj, const GLcharARB * name);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) /* glGetActiveUniformARB */ (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) /* glGetUniformfvARB */ (GLhandleARB programObj, GLint location, GLfloat * params);
typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) /* glGetUniformivARB */ (GLhandleARB programObj, GLint location, GLint * params);
typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) /* glGetShaderSourceARB */ (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);
typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) /* glShaderStorageBlockBinding */ (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) /* glGetSubroutineUniformLocation */ (GLuint program, GLenum shadertype, const GLchar * name);
typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) /* glGetSubroutineIndex */ (GLuint program, GLenum shadertype, const GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) /* glGetActiveSubroutineUniformiv */ (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) /* glGetActiveSubroutineUniformName */ (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) /* glGetActiveSubroutineName */ (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) /* glUniformSubroutinesuiv */ (GLenum shadertype, GLsizei count, const GLuint * indices);
typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) /* glGetUniformSubroutineuiv */ (GLenum shadertype, GLint location, GLuint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) /* glGetProgramStageiv */ (GLuint program, GLenum shadertype, GLenum pname, GLint * values);
typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) /* glNamedStringARB */ (GLenum type, GLint namelen, const GLchar * name, GLint stringlen, const GLchar * string);
typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) /* glDeleteNamedStringARB */ (GLint namelen, const GLchar * name);
typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) /* glCompileShaderIncludeARB */ (GLuint shader, GLsizei count, const GLchar *const* path, const GLint * length);
typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) /* glIsNamedStringARB */ (GLint namelen, const GLchar * name);
typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) /* glGetNamedStringARB */ (GLint namelen, const GLchar * name, GLsizei bufSize, GLint * stringlen, GLchar * string);
typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) /* glGetNamedStringivARB */ (GLint namelen, const GLchar * name, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) /* glBufferPageCommitmentARB */ (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) /* glNamedBufferPageCommitmentEXT */ (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) /* glNamedBufferPageCommitmentARB */ (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) /* glTexPageCommitmentARB */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) /* glFenceSync */ (GLenum condition, GLbitfield flags);
typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) /* glIsSync */ (GLsync sync);
typedef void (APIENTRYP PFNGLDELETESYNCPROC) /* glDeleteSync */ (GLsync sync);
typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) /* glClientWaitSync */ (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLWAITSYNCPROC) /* glWaitSync */ (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) /* glGetInteger64v */ (GLenum pname, GLint64 * data);
typedef void (APIENTRYP PFNGLGETSYNCIVPROC) /* glGetSynciv */ (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) /* glPatchParameteri */ (GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) /* glPatchParameterfv */ (GLenum pname, const GLfloat * values);
typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) /* glTextureBarrier */ ();
typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) /* glTexBufferARB */ (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) /* glTexBufferRange */ (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) /* glCompressedTexImage3DARB */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) /* glCompressedTexImage2DARB */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) /* glCompressedTexImage1DARB */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) /* glCompressedTexSubImage3DARB */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) /* glCompressedTexSubImage2DARB */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) /* glCompressedTexSubImage1DARB */ (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) /* glGetCompressedTexImageARB */ (GLenum target, GLint level, void * img);
typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) /* glTexImage2DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) /* glTexImage3DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) /* glGetMultisamplefv */ (GLenum pname, GLuint index, GLfloat * val);
typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) /* glSampleMaski */ (GLuint maskNumber, GLbitfield mask);
typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) /* glTexStorage1D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) /* glTexStorage2D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) /* glTexStorage3D */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) /* glTexStorage2DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) /* glTexStorage3DMultisample */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) /* glTextureView */ (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) /* glQueryCounter */ (GLuint id, GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) /* glGetQueryObjecti64v */ (GLuint id, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) /* glGetQueryObjectui64v */ (GLuint id, GLenum pname, GLuint64 * params);
typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) /* glBindTransformFeedback */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) /* glDeleteTransformFeedbacks */ (GLsizei n, const GLuint * ids);
typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) /* glGenTransformFeedbacks */ (GLsizei n, GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) /* glIsTransformFeedback */ (GLuint id);
typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) /* glPauseTransformFeedback */ ();
typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) /* glResumeTransformFeedback */ ();
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) /* glDrawTransformFeedback */ (GLenum mode, GLuint id);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) /* glDrawTransformFeedbackStream */ (GLenum mode, GLuint id, GLuint stream);
typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) /* glBeginQueryIndexed */ (GLenum target, GLuint index, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) /* glEndQueryIndexed */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) /* glGetQueryIndexediv */ (GLenum target, GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) /* glDrawTransformFeedbackInstanced */ (GLenum mode, GLuint id, GLsizei instancecount);
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) /* glDrawTransformFeedbackStreamInstanced */ (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) /* glLoadTransposeMatrixfARB */ (const GLfloat * m);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) /* glLoadTransposeMatrixdARB */ (const GLdouble * m);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) /* glMultTransposeMatrixfARB */ (const GLfloat * m);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) /* glMultTransposeMatrixdARB */ (const GLdouble * m);
typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) /* glGetUniformIndices */ (GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) /* glGetActiveUniformsiv */ (GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) /* glGetActiveUniformName */ (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) /* glGetUniformBlockIndex */ (GLuint program, const GLchar * uniformBlockName);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) /* glGetActiveUniformBlockiv */ (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) /* glGetActiveUniformBlockName */ (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) /* glUniformBlockBinding */ (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) /* glBindBufferRange */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) /* glBindBufferBase */ (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) /* glGetIntegeri_v */ (GLenum target, GLuint index, GLint * data);
typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) /* glBindVertexArray */ (GLuint array);
typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) /* glDeleteVertexArrays */ (GLsizei n, const GLuint * arrays);
typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) /* glGenVertexArrays */ (GLsizei n, GLuint * arrays);
typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) /* glIsVertexArray */ (GLuint array);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) /* glVertexAttribL1d */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) /* glVertexAttribL2d */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) /* glVertexAttribL3d */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) /* glVertexAttribL4d */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) /* glVertexAttribL1dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) /* glVertexAttribL2dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) /* glVertexAttribL3dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) /* glVertexAttribL4dv */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) /* glVertexAttribLPointer */ (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) /* glGetVertexAttribLdv */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) /* glBindVertexBuffer */ (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) /* glVertexAttribFormat */ (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) /* glVertexAttribIFormat */ (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) /* glVertexAttribLFormat */ (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) /* glVertexAttribBinding */ (GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) /* glVertexBindingDivisor */ (GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) /* glWeightbvARB */ (GLint size, const GLbyte * weights);
typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) /* glWeightsvARB */ (GLint size, const GLshort * weights);
typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) /* glWeightivARB */ (GLint size, const GLint * weights);
typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) /* glWeightfvARB */ (GLint size, const GLfloat * weights);
typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) /* glWeightdvARB */ (GLint size, const GLdouble * weights);
typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) /* glWeightubvARB */ (GLint size, const GLubyte * weights);
typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) /* glWeightusvARB */ (GLint size, const GLushort * weights);
typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) /* glWeightuivARB */ (GLint size, const GLuint * weights);
typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) /* glWeightPointerARB */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) /* glVertexBlendARB */ (GLint count);
typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) /* glBindBufferARB */ (GLenum target, GLuint buffer);
typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) /* glDeleteBuffersARB */ (GLsizei n, const GLuint * buffers);
typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) /* glGenBuffersARB */ (GLsizei n, GLuint * buffers);
typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) /* glIsBufferARB */ (GLuint buffer);
typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) /* glBufferDataARB */ (GLenum target, GLsizeiptrARB size, const void * data, GLenum usage);
typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) /* glBufferSubDataARB */ (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data);
typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) /* glGetBufferSubDataARB */ (GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
typedef void * (APIENTRYP PFNGLMAPBUFFERARBPROC) /* glMapBufferARB */ (GLenum target, GLenum access);
typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) /* glUnmapBufferARB */ (GLenum target);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) /* glGetBufferParameterivARB */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) /* glGetBufferPointervARB */ (GLenum target, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) /* glVertexAttrib1dARB */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) /* glVertexAttrib1dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) /* glVertexAttrib1fARB */ (GLuint index, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) /* glVertexAttrib1fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) /* glVertexAttrib1sARB */ (GLuint index, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) /* glVertexAttrib1svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) /* glVertexAttrib2dARB */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) /* glVertexAttrib2dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) /* glVertexAttrib2fARB */ (GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) /* glVertexAttrib2fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) /* glVertexAttrib2sARB */ (GLuint index, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) /* glVertexAttrib2svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) /* glVertexAttrib3dARB */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) /* glVertexAttrib3dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) /* glVertexAttrib3fARB */ (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) /* glVertexAttrib3fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) /* glVertexAttrib3sARB */ (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) /* glVertexAttrib3svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) /* glVertexAttrib4NbvARB */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) /* glVertexAttrib4NivARB */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) /* glVertexAttrib4NsvARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) /* glVertexAttrib4NubARB */ (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) /* glVertexAttrib4NubvARB */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) /* glVertexAttrib4NuivARB */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) /* glVertexAttrib4NusvARB */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) /* glVertexAttrib4bvARB */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) /* glVertexAttrib4dARB */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) /* glVertexAttrib4dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) /* glVertexAttrib4fARB */ (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) /* glVertexAttrib4fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) /* glVertexAttrib4ivARB */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) /* glVertexAttrib4sARB */ (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) /* glVertexAttrib4svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) /* glVertexAttrib4ubvARB */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) /* glVertexAttrib4uivARB */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) /* glVertexAttrib4usvARB */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) /* glVertexAttribPointerARB */ (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) /* glEnableVertexAttribArrayARB */ (GLuint index);
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) /* glDisableVertexAttribArrayARB */ (GLuint index);
typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) /* glProgramStringARB */ (GLenum target, GLenum format, GLsizei len, const void * string);
typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) /* glBindProgramARB */ (GLenum target, GLuint program);
typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) /* glDeleteProgramsARB */ (GLsizei n, const GLuint * programs);
typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) /* glGenProgramsARB */ (GLsizei n, GLuint * programs);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) /* glProgramEnvParameter4dARB */ (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) /* glProgramEnvParameter4dvARB */ (GLenum target, GLuint index, const GLdouble * params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) /* glProgramEnvParameter4fARB */ (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) /* glProgramEnvParameter4fvARB */ (GLenum target, GLuint index, const GLfloat * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) /* glProgramLocalParameter4dARB */ (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) /* glProgramLocalParameter4dvARB */ (GLenum target, GLuint index, const GLdouble * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) /* glProgramLocalParameter4fARB */ (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) /* glProgramLocalParameter4fvARB */ (GLenum target, GLuint index, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) /* glGetProgramEnvParameterdvARB */ (GLenum target, GLuint index, GLdouble * params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) /* glGetProgramEnvParameterfvARB */ (GLenum target, GLuint index, GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) /* glGetProgramLocalParameterdvARB */ (GLenum target, GLuint index, GLdouble * params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) /* glGetProgramLocalParameterfvARB */ (GLenum target, GLuint index, GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) /* glGetProgramivARB */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) /* glGetProgramStringARB */ (GLenum target, GLenum pname, void * string);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) /* glGetVertexAttribdvARB */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) /* glGetVertexAttribfvARB */ (GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) /* glGetVertexAttribivARB */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) /* glGetVertexAttribPointervARB */ (GLuint index, GLenum pname, void ** pointer);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) /* glIsProgramARB */ (GLuint program);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) /* glVertexAttrib1fARB */ (GLuint index, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) /* glVertexAttrib1sARB */ (GLuint index, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) /* glVertexAttrib1dARB */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) /* glVertexAttrib2fARB */ (GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) /* glVertexAttrib2sARB */ (GLuint index, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) /* glVertexAttrib2dARB */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) /* glVertexAttrib3fARB */ (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) /* glVertexAttrib3sARB */ (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) /* glVertexAttrib3dARB */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) /* glVertexAttrib4fARB */ (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) /* glVertexAttrib4sARB */ (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) /* glVertexAttrib4dARB */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) /* glVertexAttrib4NubARB */ (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) /* glVertexAttrib1fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) /* glVertexAttrib1svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) /* glVertexAttrib1dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) /* glVertexAttrib2fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) /* glVertexAttrib2svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) /* glVertexAttrib2dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) /* glVertexAttrib3fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) /* glVertexAttrib3svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) /* glVertexAttrib3dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) /* glVertexAttrib4fvARB */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) /* glVertexAttrib4svARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) /* glVertexAttrib4dvARB */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) /* glVertexAttrib4ivARB */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) /* glVertexAttrib4bvARB */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) /* glVertexAttrib4ubvARB */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) /* glVertexAttrib4usvARB */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) /* glVertexAttrib4uivARB */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) /* glVertexAttrib4NbvARB */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) /* glVertexAttrib4NsvARB */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) /* glVertexAttrib4NivARB */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) /* glVertexAttrib4NubvARB */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) /* glVertexAttrib4NusvARB */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) /* glVertexAttrib4NuivARB */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) /* glVertexAttribPointerARB */ (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) /* glEnableVertexAttribArrayARB */ (GLuint index);
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) /* glDisableVertexAttribArrayARB */ (GLuint index);
typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) /* glBindAttribLocationARB */ (GLhandleARB programObj, GLuint index, const GLcharARB * name);
typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) /* glGetActiveAttribARB */ (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) /* glGetAttribLocationARB */ (GLhandleARB programObj, const GLcharARB * name);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) /* glGetVertexAttribdvARB */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) /* glGetVertexAttribfvARB */ (GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) /* glGetVertexAttribivARB */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) /* glGetVertexAttribPointervARB */ (GLuint index, GLenum pname, void ** pointer);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) /* glVertexAttribP1ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) /* glVertexAttribP1uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) /* glVertexAttribP2ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) /* glVertexAttribP2uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) /* glVertexAttribP3ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) /* glVertexAttribP3uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) /* glVertexAttribP4ui */ (GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) /* glVertexAttribP4uiv */ (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) /* glVertexP2ui */ (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) /* glVertexP2uiv */ (GLenum type, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) /* glVertexP3ui */ (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) /* glVertexP3uiv */ (GLenum type, const GLuint * value);
typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) /* glVertexP4ui */ (GLenum type, GLuint value);
typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) /* glVertexP4uiv */ (GLenum type, const GLuint * value);
typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) /* glTexCoordP1ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) /* glTexCoordP1uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) /* glTexCoordP2ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) /* glTexCoordP2uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) /* glTexCoordP3ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) /* glTexCoordP3uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) /* glTexCoordP4ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) /* glTexCoordP4uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) /* glMultiTexCoordP1ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) /* glMultiTexCoordP1uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) /* glMultiTexCoordP2ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) /* glMultiTexCoordP2uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) /* glMultiTexCoordP3ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) /* glMultiTexCoordP3uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) /* glMultiTexCoordP4ui */ (GLenum texture, GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) /* glMultiTexCoordP4uiv */ (GLenum texture, GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLNORMALP3UIPROC) /* glNormalP3ui */ (GLenum type, GLuint coords);
typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) /* glNormalP3uiv */ (GLenum type, const GLuint * coords);
typedef void (APIENTRYP PFNGLCOLORP3UIPROC) /* glColorP3ui */ (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) /* glColorP3uiv */ (GLenum type, const GLuint * color);
typedef void (APIENTRYP PFNGLCOLORP4UIPROC) /* glColorP4ui */ (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) /* glColorP4uiv */ (GLenum type, const GLuint * color);
typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) /* glSecondaryColorP3ui */ (GLenum type, GLuint color);
typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) /* glSecondaryColorP3uiv */ (GLenum type, const GLuint * color);
typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) /* glViewportArrayv */ (GLuint first, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) /* glViewportIndexedf */ (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) /* glViewportIndexedfv */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) /* glScissorArrayv */ (GLuint first, GLsizei count, const GLint * v);
typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) /* glScissorIndexed */ (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) /* glScissorIndexedv */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) /* glDepthRangeArrayv */ (GLuint first, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) /* glDepthRangeIndexed */ (GLuint index, GLdouble n, GLdouble f);
typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) /* glGetFloati_v */ (GLenum target, GLuint index, GLfloat * data);
typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) /* glGetDoublei_v */ (GLenum target, GLuint index, GLdouble * data);
typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) /* glWindowPos2dARB */ (GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) /* glWindowPos2dvARB */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) /* glWindowPos2fARB */ (GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) /* glWindowPos2fvARB */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) /* glWindowPos2iARB */ (GLint x, GLint y);
typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) /* glWindowPos2ivARB */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) /* glWindowPos2sARB */ (GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) /* glWindowPos2svARB */ (const GLshort * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) /* glWindowPos3dARB */ (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) /* glWindowPos3dvARB */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) /* glWindowPos3fARB */ (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) /* glWindowPos3fvARB */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) /* glWindowPos3iARB */ (GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) /* glWindowPos3ivARB */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) /* glWindowPos3sARB */ (GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) /* glWindowPos3svARB */ (const GLshort * v);
typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) /* glDrawBuffersATI */ (GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) /* glElementPointerATI */ (GLenum type, const void * pointer);
typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) /* glDrawElementArrayATI */ (GLenum mode, GLsizei count);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) /* glDrawRangeElementArrayATI */ (GLenum mode, GLuint start, GLuint end, GLsizei count);
typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) /* glTexBumpParameterivATI */ (GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) /* glTexBumpParameterfvATI */ (GLenum pname, const GLfloat * param);
typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) /* glGetTexBumpParameterivATI */ (GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) /* glGetTexBumpParameterfvATI */ (GLenum pname, GLfloat * param);
typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) /* glGenFragmentShadersATI */ (GLuint range);
typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) /* glBindFragmentShaderATI */ (GLuint id);
typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) /* glDeleteFragmentShaderATI */ (GLuint id);
typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) /* glBeginFragmentShaderATI */ ();
typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) /* glEndFragmentShaderATI */ ();
typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) /* glPassTexCoordATI */ (GLuint dst, GLuint coord, GLenum swizzle);
typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) /* glSampleMapATI */ (GLuint dst, GLuint interp, GLenum swizzle);
typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) /* glColorFragmentOp1ATI */ (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) /* glColorFragmentOp2ATI */ (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) /* glColorFragmentOp3ATI */ (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) /* glAlphaFragmentOp1ATI */ (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) /* glAlphaFragmentOp2ATI */ (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) /* glAlphaFragmentOp3ATI */ (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) /* glSetFragmentShaderConstantATI */ (GLuint dst, const GLfloat * value);
typedef void * (APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) /* glMapObjectBufferATI */ (GLuint buffer);
typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) /* glUnmapObjectBufferATI */ (GLuint buffer);
typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) /* glPNTrianglesiATI */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) /* glPNTrianglesfATI */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) /* glStencilOpSeparateATI */ (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) /* glStencilFuncSeparateATI */ (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) /* glNewObjectBufferATI */ (GLsizei size, const void * pointer, GLenum usage);
typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) /* glIsObjectBufferATI */ (GLuint buffer);
typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) /* glUpdateObjectBufferATI */ (GLuint buffer, GLuint offset, GLsizei size, const void * pointer, GLenum preserve);
typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) /* glGetObjectBufferfvATI */ (GLuint buffer, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) /* glGetObjectBufferivATI */ (GLuint buffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) /* glFreeObjectBufferATI */ (GLuint buffer);
typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) /* glArrayObjectATI */ (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) /* glGetArrayObjectfvATI */ (GLenum array, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) /* glGetArrayObjectivATI */ (GLenum array, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) /* glVariantArrayObjectATI */ (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) /* glGetVariantArrayObjectfvATI */ (GLuint id, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) /* glGetVariantArrayObjectivATI */ (GLuint id, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) /* glVertexAttribArrayObjectATI */ (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) /* glGetVertexAttribArrayObjectfvATI */ (GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) /* glGetVertexAttribArrayObjectivATI */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) /* glVertexStream1sATI */ (GLenum stream, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) /* glVertexStream1svATI */ (GLenum stream, const GLshort * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) /* glVertexStream1iATI */ (GLenum stream, GLint x);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) /* glVertexStream1ivATI */ (GLenum stream, const GLint * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) /* glVertexStream1fATI */ (GLenum stream, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) /* glVertexStream1fvATI */ (GLenum stream, const GLfloat * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) /* glVertexStream1dATI */ (GLenum stream, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) /* glVertexStream1dvATI */ (GLenum stream, const GLdouble * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) /* glVertexStream2sATI */ (GLenum stream, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) /* glVertexStream2svATI */ (GLenum stream, const GLshort * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) /* glVertexStream2iATI */ (GLenum stream, GLint x, GLint y);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) /* glVertexStream2ivATI */ (GLenum stream, const GLint * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) /* glVertexStream2fATI */ (GLenum stream, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) /* glVertexStream2fvATI */ (GLenum stream, const GLfloat * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) /* glVertexStream2dATI */ (GLenum stream, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) /* glVertexStream2dvATI */ (GLenum stream, const GLdouble * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) /* glVertexStream3sATI */ (GLenum stream, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) /* glVertexStream3svATI */ (GLenum stream, const GLshort * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) /* glVertexStream3iATI */ (GLenum stream, GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) /* glVertexStream3ivATI */ (GLenum stream, const GLint * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) /* glVertexStream3fATI */ (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) /* glVertexStream3fvATI */ (GLenum stream, const GLfloat * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) /* glVertexStream3dATI */ (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) /* glVertexStream3dvATI */ (GLenum stream, const GLdouble * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) /* glVertexStream4sATI */ (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) /* glVertexStream4svATI */ (GLenum stream, const GLshort * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) /* glVertexStream4iATI */ (GLenum stream, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) /* glVertexStream4ivATI */ (GLenum stream, const GLint * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) /* glVertexStream4fATI */ (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) /* glVertexStream4fvATI */ (GLenum stream, const GLfloat * coords);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) /* glVertexStream4dATI */ (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) /* glVertexStream4dvATI */ (GLenum stream, const GLdouble * coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) /* glNormalStream3bATI */ (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) /* glNormalStream3bvATI */ (GLenum stream, const GLbyte * coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) /* glNormalStream3sATI */ (GLenum stream, GLshort nx, GLshort ny, GLshort nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) /* glNormalStream3svATI */ (GLenum stream, const GLshort * coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) /* glNormalStream3iATI */ (GLenum stream, GLint nx, GLint ny, GLint nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) /* glNormalStream3ivATI */ (GLenum stream, const GLint * coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) /* glNormalStream3fATI */ (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) /* glNormalStream3fvATI */ (GLenum stream, const GLfloat * coords);
typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) /* glNormalStream3dATI */ (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) /* glNormalStream3dvATI */ (GLenum stream, const GLdouble * coords);
typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) /* glClientActiveVertexStreamATI */ (GLenum stream);
typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) /* glVertexBlendEnviATI */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) /* glVertexBlendEnvfATI */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC) /* glDrawArraysInstancedBaseInstanceEXT */ (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC) /* glDrawElementsInstancedBaseInstanceEXT */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC) /* glDrawElementsInstancedBaseVertexBaseInstanceEXT */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) /* glUniformBufferEXT */ (GLuint program, GLint location, GLuint buffer);
typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) /* glGetUniformBufferSizeEXT */ (GLuint program, GLint location);
typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) /* glGetUniformOffsetEXT */ (GLuint program, GLint location);
typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) /* glBlendColorEXT */ (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) /* glBlendEquationSeparateEXT */ (GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC) /* glBindFragDataLocationIndexedEXT */ (GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) /* glBindFragDataLocationEXT */ (GLuint program, GLuint color, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC) /* glGetProgramResourceLocationIndexEXT */ (GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXEXTPROC) /* glGetFragDataIndexEXT */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) /* glBlendFuncSeparateEXT */ (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) /* glBlendEquationEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLBUFFERSTORAGEEXTPROC) /* glBufferStorageEXT */ (GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) /* glColorSubTableEXT */ (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) /* glCopyColorSubTableEXT */ (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) /* glLockArraysEXT */ (GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) /* glUnlockArraysEXT */ ();
typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) /* glConvolutionFilter1DEXT */ (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) /* glConvolutionFilter2DEXT */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) /* glConvolutionParameterfEXT */ (GLenum target, GLenum pname, GLfloat params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) /* glConvolutionParameterfvEXT */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) /* glConvolutionParameteriEXT */ (GLenum target, GLenum pname, GLint params);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) /* glConvolutionParameterivEXT */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) /* glCopyConvolutionFilter1DEXT */ (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) /* glCopyConvolutionFilter2DEXT */ (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) /* glGetConvolutionFilterEXT */ (GLenum target, GLenum format, GLenum type, void * image);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) /* glGetConvolutionParameterfvEXT */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) /* glGetConvolutionParameterivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) /* glGetSeparableFilterEXT */ (GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) /* glSeparableFilter2DEXT */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) /* glTangent3bEXT */ (GLbyte tx, GLbyte ty, GLbyte tz);
typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) /* glTangent3bvEXT */ (const GLbyte * v);
typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) /* glTangent3dEXT */ (GLdouble tx, GLdouble ty, GLdouble tz);
typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) /* glTangent3dvEXT */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) /* glTangent3fEXT */ (GLfloat tx, GLfloat ty, GLfloat tz);
typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) /* glTangent3fvEXT */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) /* glTangent3iEXT */ (GLint tx, GLint ty, GLint tz);
typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) /* glTangent3ivEXT */ (const GLint * v);
typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) /* glTangent3sEXT */ (GLshort tx, GLshort ty, GLshort tz);
typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) /* glTangent3svEXT */ (const GLshort * v);
typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) /* glBinormal3bEXT */ (GLbyte bx, GLbyte by, GLbyte bz);
typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) /* glBinormal3bvEXT */ (const GLbyte * v);
typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) /* glBinormal3dEXT */ (GLdouble bx, GLdouble by, GLdouble bz);
typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) /* glBinormal3dvEXT */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) /* glBinormal3fEXT */ (GLfloat bx, GLfloat by, GLfloat bz);
typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) /* glBinormal3fvEXT */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) /* glBinormal3iEXT */ (GLint bx, GLint by, GLint bz);
typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) /* glBinormal3ivEXT */ (const GLint * v);
typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) /* glBinormal3sEXT */ (GLshort bx, GLshort by, GLshort bz);
typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) /* glBinormal3svEXT */ (const GLshort * v);
typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) /* glTangentPointerEXT */ (GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) /* glBinormalPointerEXT */ (GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAEXTPROC) /* glCopyImageSubDataEXT */ (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) /* glCopyTexImage1DEXT */ (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) /* glCopyTexImage2DEXT */ (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) /* glCopyTexSubImage1DEXT */ (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) /* glCopyTexSubImage2DEXT */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) /* glCopyTexSubImage3DEXT */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) /* glCullParameterdvEXT */ (GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) /* glCullParameterfvEXT */ (GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) /* glLabelObjectEXT */ (GLenum type, GLuint object, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) /* glGetObjectLabelEXT */ (GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) /* glInsertEventMarkerEXT */ (GLsizei length, const GLchar * marker);
typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) /* glPushGroupMarkerEXT */ (GLsizei length, const GLchar * marker);
typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) /* glPopGroupMarkerEXT */ ();
typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) /* glDepthBoundsEXT */ (GLclampd zmin, GLclampd zmax);
typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) /* glMatrixLoadfEXT */ (GLenum mode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) /* glMatrixLoaddEXT */ (GLenum mode, const GLdouble * m);
typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) /* glMatrixMultfEXT */ (GLenum mode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) /* glMatrixMultdEXT */ (GLenum mode, const GLdouble * m);
typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) /* glMatrixLoadIdentityEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) /* glMatrixRotatefEXT */ (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) /* glMatrixRotatedEXT */ (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) /* glMatrixScalefEXT */ (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) /* glMatrixScaledEXT */ (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) /* glMatrixTranslatefEXT */ (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) /* glMatrixTranslatedEXT */ (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) /* glMatrixFrustumEXT */ (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) /* glMatrixOrthoEXT */ (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) /* glMatrixPopEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) /* glMatrixPushEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) /* glClientAttribDefaultEXT */ (GLbitfield mask);
typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) /* glPushClientAttribDefaultEXT */ (GLbitfield mask);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) /* glTextureParameterfEXT */ (GLuint texture, GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) /* glTextureParameterfvEXT */ (GLuint texture, GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) /* glTextureParameteriEXT */ (GLuint texture, GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) /* glTextureParameterivEXT */ (GLuint texture, GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) /* glTextureImage1DEXT */ (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) /* glTextureImage2DEXT */ (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) /* glTextureSubImage1DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) /* glTextureSubImage2DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) /* glCopyTextureImage1DEXT */ (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) /* glCopyTextureImage2DEXT */ (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) /* glCopyTextureSubImage1DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) /* glCopyTextureSubImage2DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) /* glGetTextureImageEXT */ (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) /* glGetTextureParameterfvEXT */ (GLuint texture, GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) /* glGetTextureParameterivEXT */ (GLuint texture, GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) /* glGetTextureLevelParameterfvEXT */ (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) /* glGetTextureLevelParameterivEXT */ (GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) /* glTextureImage3DEXT */ (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) /* glTextureSubImage3DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) /* glCopyTextureSubImage3DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) /* glBindMultiTextureEXT */ (GLenum texunit, GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) /* glMultiTexCoordPointerEXT */ (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) /* glMultiTexEnvfEXT */ (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) /* glMultiTexEnvfvEXT */ (GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) /* glMultiTexEnviEXT */ (GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) /* glMultiTexEnvivEXT */ (GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) /* glMultiTexGendEXT */ (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) /* glMultiTexGendvEXT */ (GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params);
typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) /* glMultiTexGenfEXT */ (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) /* glMultiTexGenfvEXT */ (GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) /* glMultiTexGeniEXT */ (GLenum texunit, GLenum coord, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) /* glMultiTexGenivEXT */ (GLenum texunit, GLenum coord, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) /* glGetMultiTexEnvfvEXT */ (GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) /* glGetMultiTexEnvivEXT */ (GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) /* glGetMultiTexGendvEXT */ (GLenum texunit, GLenum coord, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) /* glGetMultiTexGenfvEXT */ (GLenum texunit, GLenum coord, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) /* glGetMultiTexGenivEXT */ (GLenum texunit, GLenum coord, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) /* glMultiTexParameteriEXT */ (GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) /* glMultiTexParameterivEXT */ (GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) /* glMultiTexParameterfEXT */ (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) /* glMultiTexParameterfvEXT */ (GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) /* glMultiTexImage1DEXT */ (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) /* glMultiTexImage2DEXT */ (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) /* glMultiTexSubImage1DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) /* glMultiTexSubImage2DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) /* glCopyMultiTexImage1DEXT */ (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) /* glCopyMultiTexImage2DEXT */ (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) /* glCopyMultiTexSubImage1DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) /* glCopyMultiTexSubImage2DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) /* glGetMultiTexImageEXT */ (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) /* glGetMultiTexParameterfvEXT */ (GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) /* glGetMultiTexParameterivEXT */ (GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) /* glGetMultiTexLevelParameterfvEXT */ (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) /* glGetMultiTexLevelParameterivEXT */ (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) /* glMultiTexImage3DEXT */ (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) /* glMultiTexSubImage3DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) /* glCopyMultiTexSubImage3DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) /* glEnableClientStateIndexedEXT */ (GLenum array, GLuint index);
typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) /* glDisableClientStateIndexedEXT */ (GLenum array, GLuint index);
typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) /* glGetFloatIndexedvEXT */ (GLenum target, GLuint index, GLfloat * data);
typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) /* glGetDoubleIndexedvEXT */ (GLenum target, GLuint index, GLdouble * data);
typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) /* glGetPointerIndexedvEXT */ (GLenum target, GLuint index, void ** data);
typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) /* glEnableIndexedEXT */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) /* glDisableIndexedEXT */ (GLenum target, GLuint index);
typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) /* glIsEnabledIndexedEXT */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) /* glGetIntegerIndexedvEXT */ (GLenum target, GLuint index, GLint * data);
typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) /* glGetBooleanIndexedvEXT */ (GLenum target, GLuint index, GLboolean * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) /* glCompressedTextureImage3DEXT */ (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) /* glCompressedTextureImage2DEXT */ (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) /* glCompressedTextureImage1DEXT */ (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) /* glCompressedTextureSubImage3DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) /* glCompressedTextureSubImage2DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) /* glCompressedTextureSubImage1DEXT */ (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) /* glGetCompressedTextureImageEXT */ (GLuint texture, GLenum target, GLint lod, void * img);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) /* glCompressedMultiTexImage3DEXT */ (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) /* glCompressedMultiTexImage2DEXT */ (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) /* glCompressedMultiTexImage1DEXT */ (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) /* glCompressedMultiTexSubImage3DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) /* glCompressedMultiTexSubImage2DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) /* glCompressedMultiTexSubImage1DEXT */ (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) /* glGetCompressedMultiTexImageEXT */ (GLenum texunit, GLenum target, GLint lod, void * img);
typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) /* glMatrixLoadTransposefEXT */ (GLenum mode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) /* glMatrixLoadTransposedEXT */ (GLenum mode, const GLdouble * m);
typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) /* glMatrixMultTransposefEXT */ (GLenum mode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) /* glMatrixMultTransposedEXT */ (GLenum mode, const GLdouble * m);
typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) /* glNamedBufferDataEXT */ (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) /* glNamedBufferSubDataEXT */ (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void * (APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) /* glMapNamedBufferEXT */ (GLuint buffer, GLenum access);
typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) /* glUnmapNamedBufferEXT */ (GLuint buffer);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) /* glGetNamedBufferParameterivEXT */ (GLuint buffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) /* glGetNamedBufferPointervEXT */ (GLuint buffer, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) /* glGetNamedBufferSubDataEXT */ (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) /* glProgramUniform1fEXT */ (GLuint program, GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) /* glProgramUniform2fEXT */ (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) /* glProgramUniform3fEXT */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) /* glProgramUniform4fEXT */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) /* glProgramUniform1iEXT */ (GLuint program, GLint location, GLint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) /* glProgramUniform2iEXT */ (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) /* glProgramUniform3iEXT */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) /* glProgramUniform4iEXT */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) /* glProgramUniform1fvEXT */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) /* glProgramUniform2fvEXT */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) /* glProgramUniform3fvEXT */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) /* glProgramUniform4fvEXT */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) /* glProgramUniform1ivEXT */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) /* glProgramUniform2ivEXT */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) /* glProgramUniform3ivEXT */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) /* glProgramUniform4ivEXT */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) /* glProgramUniformMatrix2fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) /* glProgramUniformMatrix3fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) /* glProgramUniformMatrix4fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) /* glProgramUniformMatrix2x3fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) /* glProgramUniformMatrix3x2fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) /* glProgramUniformMatrix2x4fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) /* glProgramUniformMatrix4x2fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) /* glProgramUniformMatrix3x4fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) /* glProgramUniformMatrix4x3fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) /* glTextureBufferEXT */ (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) /* glMultiTexBufferEXT */ (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) /* glTextureParameterIivEXT */ (GLuint texture, GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) /* glTextureParameterIuivEXT */ (GLuint texture, GLenum target, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) /* glGetTextureParameterIivEXT */ (GLuint texture, GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) /* glGetTextureParameterIuivEXT */ (GLuint texture, GLenum target, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) /* glMultiTexParameterIivEXT */ (GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) /* glMultiTexParameterIuivEXT */ (GLenum texunit, GLenum target, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) /* glGetMultiTexParameterIivEXT */ (GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) /* glGetMultiTexParameterIuivEXT */ (GLenum texunit, GLenum target, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) /* glProgramUniform1uiEXT */ (GLuint program, GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) /* glProgramUniform2uiEXT */ (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) /* glProgramUniform3uiEXT */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) /* glProgramUniform4uiEXT */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) /* glProgramUniform1uivEXT */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) /* glProgramUniform2uivEXT */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) /* glProgramUniform3uivEXT */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) /* glProgramUniform4uivEXT */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) /* glNamedProgramLocalParameters4fvEXT */ (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) /* glNamedProgramLocalParameterI4iEXT */ (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) /* glNamedProgramLocalParameterI4ivEXT */ (GLuint program, GLenum target, GLuint index, const GLint * params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) /* glNamedProgramLocalParametersI4ivEXT */ (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) /* glNamedProgramLocalParameterI4uiEXT */ (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) /* glNamedProgramLocalParameterI4uivEXT */ (GLuint program, GLenum target, GLuint index, const GLuint * params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) /* glNamedProgramLocalParametersI4uivEXT */ (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) /* glGetNamedProgramLocalParameterIivEXT */ (GLuint program, GLenum target, GLuint index, GLint * params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) /* glGetNamedProgramLocalParameterIuivEXT */ (GLuint program, GLenum target, GLuint index, GLuint * params);
typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) /* glEnableClientStateiEXT */ (GLenum array, GLuint index);
typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) /* glDisableClientStateiEXT */ (GLenum array, GLuint index);
typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) /* glGetFloati_vEXT */ (GLenum pname, GLuint index, GLfloat * params);
typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) /* glGetDoublei_vEXT */ (GLenum pname, GLuint index, GLdouble * params);
typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) /* glGetPointeri_vEXT */ (GLenum pname, GLuint index, void ** params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) /* glNamedProgramStringEXT */ (GLuint program, GLenum target, GLenum format, GLsizei len, const void * string);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) /* glNamedProgramLocalParameter4dEXT */ (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) /* glNamedProgramLocalParameter4dvEXT */ (GLuint program, GLenum target, GLuint index, const GLdouble * params);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) /* glNamedProgramLocalParameter4fEXT */ (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) /* glNamedProgramLocalParameter4fvEXT */ (GLuint program, GLenum target, GLuint index, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) /* glGetNamedProgramLocalParameterdvEXT */ (GLuint program, GLenum target, GLuint index, GLdouble * params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) /* glGetNamedProgramLocalParameterfvEXT */ (GLuint program, GLenum target, GLuint index, GLfloat * params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) /* glGetNamedProgramivEXT */ (GLuint program, GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) /* glGetNamedProgramStringEXT */ (GLuint program, GLenum target, GLenum pname, void * string);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) /* glNamedRenderbufferStorageEXT */ (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) /* glGetNamedRenderbufferParameterivEXT */ (GLuint renderbuffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) /* glNamedRenderbufferStorageMultisampleEXT */ (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) /* glNamedRenderbufferStorageMultisampleCoverageEXT */ (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) /* glCheckNamedFramebufferStatusEXT */ (GLuint framebuffer, GLenum target);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) /* glNamedFramebufferTexture1DEXT */ (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) /* glNamedFramebufferTexture2DEXT */ (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) /* glNamedFramebufferTexture3DEXT */ (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) /* glNamedFramebufferRenderbufferEXT */ (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) /* glGetNamedFramebufferAttachmentParameterivEXT */ (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) /* glGenerateTextureMipmapEXT */ (GLuint texture, GLenum target);
typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) /* glGenerateMultiTexMipmapEXT */ (GLenum texunit, GLenum target);
typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) /* glFramebufferDrawBufferEXT */ (GLuint framebuffer, GLenum mode);
typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) /* glFramebufferDrawBuffersEXT */ (GLuint framebuffer, GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) /* glFramebufferReadBufferEXT */ (GLuint framebuffer, GLenum mode);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) /* glGetFramebufferParameterivEXT */ (GLuint framebuffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) /* glNamedCopyBufferSubDataEXT */ (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) /* glNamedFramebufferTextureEXT */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) /* glNamedFramebufferTextureLayerEXT */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) /* glNamedFramebufferTextureFaceEXT */ (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) /* glTextureRenderbufferEXT */ (GLuint texture, GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) /* glMultiTexRenderbufferEXT */ (GLenum texunit, GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) /* glVertexArrayVertexOffsetEXT */ (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) /* glVertexArrayColorOffsetEXT */ (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) /* glVertexArrayEdgeFlagOffsetEXT */ (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) /* glVertexArrayIndexOffsetEXT */ (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) /* glVertexArrayNormalOffsetEXT */ (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) /* glVertexArrayTexCoordOffsetEXT */ (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) /* glVertexArrayMultiTexCoordOffsetEXT */ (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) /* glVertexArrayFogCoordOffsetEXT */ (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) /* glVertexArraySecondaryColorOffsetEXT */ (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) /* glVertexArrayVertexAttribOffsetEXT */ (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) /* glVertexArrayVertexAttribIOffsetEXT */ (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) /* glEnableVertexArrayEXT */ (GLuint vaobj, GLenum array);
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) /* glDisableVertexArrayEXT */ (GLuint vaobj, GLenum array);
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) /* glEnableVertexArrayAttribEXT */ (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) /* glDisableVertexArrayAttribEXT */ (GLuint vaobj, GLuint index);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) /* glGetVertexArrayIntegervEXT */ (GLuint vaobj, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) /* glGetVertexArrayPointervEXT */ (GLuint vaobj, GLenum pname, void ** param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) /* glGetVertexArrayIntegeri_vEXT */ (GLuint vaobj, GLuint index, GLenum pname, GLint * param);
typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) /* glGetVertexArrayPointeri_vEXT */ (GLuint vaobj, GLuint index, GLenum pname, void ** param);
typedef void * (APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) /* glMapNamedBufferRangeEXT */ (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) /* glFlushMappedNamedBufferRangeEXT */ (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) /* glNamedBufferStorageEXT */ (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) /* glClearNamedBufferDataEXT */ (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) /* glClearNamedBufferSubDataEXT */ (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) /* glNamedFramebufferParameteriEXT */ (GLuint framebuffer, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) /* glGetNamedFramebufferParameterivEXT */ (GLuint framebuffer, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) /* glProgramUniform1dEXT */ (GLuint program, GLint location, GLdouble x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) /* glProgramUniform2dEXT */ (GLuint program, GLint location, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) /* glProgramUniform3dEXT */ (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) /* glProgramUniform4dEXT */ (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) /* glProgramUniform1dvEXT */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) /* glProgramUniform2dvEXT */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) /* glProgramUniform3dvEXT */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) /* glProgramUniform4dvEXT */ (GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) /* glProgramUniformMatrix2dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) /* glProgramUniformMatrix3dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) /* glProgramUniformMatrix4dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) /* glProgramUniformMatrix2x3dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) /* glProgramUniformMatrix2x4dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) /* glProgramUniformMatrix3x2dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) /* glProgramUniformMatrix3x4dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) /* glProgramUniformMatrix4x2dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) /* glProgramUniformMatrix4x3dvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) /* glTextureBufferRangeEXT */ (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) /* glTextureStorage1DEXT */ (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) /* glTextureStorage2DEXT */ (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) /* glTextureStorage3DEXT */ (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) /* glTextureStorage2DMultisampleEXT */ (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) /* glTextureStorage3DMultisampleEXT */ (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) /* glVertexArrayBindVertexBufferEXT */ (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) /* glVertexArrayVertexAttribFormatEXT */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) /* glVertexArrayVertexAttribIFormatEXT */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) /* glVertexArrayVertexAttribLFormatEXT */ (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) /* glVertexArrayVertexAttribBindingEXT */ (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) /* glVertexArrayVertexBindingDivisorEXT */ (GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) /* glVertexArrayVertexAttribLOffsetEXT */ (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) /* glTexturePageCommitmentEXT */ (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) /* glVertexArrayVertexAttribDivisorEXT */ (GLuint vaobj, GLuint index, GLuint divisor);
typedef void (APIENTRYP PFNGLDISCARDFRAMEBUFFEREXTPROC) /* glDiscardFramebufferEXT */ (GLenum target, GLsizei numAttachments, const GLenum * attachments);
typedef void (APIENTRYP PFNGLGENQUERIESEXTPROC) /* glGenQueriesEXT */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLDELETEQUERIESEXTPROC) /* glDeleteQueriesEXT */ (GLsizei n, const GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISQUERYEXTPROC) /* glIsQueryEXT */ (GLuint id);
typedef void (APIENTRYP PFNGLBEGINQUERYEXTPROC) /* glBeginQueryEXT */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYEXTPROC) /* glEndQueryEXT */ (GLenum target);
typedef void (APIENTRYP PFNGLQUERYCOUNTEREXTPROC) /* glQueryCounterEXT */ (GLuint id, GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYIVEXTPROC) /* glGetQueryivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVEXTPROC) /* glGetQueryObjectivEXT */ (GLuint id, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVEXTPROC) /* glGetQueryObjectuivEXT */ (GLuint id, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) /* glGetQueryObjecti64vEXT */ (GLuint id, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) /* glGetQueryObjectui64vEXT */ (GLuint id, GLenum pname, GLuint64 * params);
typedef void (APIENTRYP PFNGLDRAWBUFFERSEXTPROC) /* glDrawBuffersEXT */ (GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) /* glColorMaskIndexedEXT */ (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) /* glGetBooleanIndexedvEXT */ (GLenum target, GLuint index, GLboolean * data);
typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) /* glGetIntegerIndexedvEXT */ (GLenum target, GLuint index, GLint * data);
typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) /* glEnableIndexedEXT */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) /* glDisableIndexedEXT */ (GLenum target, GLuint index);
typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) /* glIsEnabledIndexedEXT */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLENABLEIEXTPROC) /* glEnableiEXT */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEIEXTPROC) /* glDisableiEXT */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLBLENDEQUATIONIEXTPROC) /* glBlendEquationiEXT */ (GLuint buf, GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIEXTPROC) /* glBlendEquationSeparateiEXT */ (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLBLENDFUNCIEXTPROC) /* glBlendFunciEXT */ (GLuint buf, GLenum src, GLenum dst);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIEXTPROC) /* glBlendFuncSeparateiEXT */ (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (APIENTRYP PFNGLCOLORMASKIEXTPROC) /* glColorMaskiEXT */ (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef GLboolean (APIENTRYP PFNGLISENABLEDIEXTPROC) /* glIsEnablediEXT */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXEXTPROC) /* glDrawElementsBaseVertexEXT */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC) /* glDrawRangeElementsBaseVertexEXT */ (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC) /* glDrawElementsInstancedBaseVertexEXT */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC) /* glMultiDrawElementsBaseVertexEXT */ (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) /* glDrawArraysInstancedEXT */ (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) /* glDrawElementsInstancedEXT */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) /* glDrawRangeElementsEXT */ (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) /* glFogCoordfEXT */ (GLfloat coord);
typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) /* glFogCoordfvEXT */ (const GLfloat * coord);
typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) /* glFogCoorddEXT */ (GLdouble coord);
typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) /* glFogCoorddvEXT */ (const GLdouble * coord);
typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) /* glFogCoordPointerEXT */ (GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) /* glBlitFramebufferEXT */ (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) /* glRenderbufferStorageMultisampleEXT */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) /* glIsRenderbufferEXT */ (GLuint renderbuffer);
typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) /* glBindRenderbufferEXT */ (GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) /* glDeleteRenderbuffersEXT */ (GLsizei n, const GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) /* glGenRenderbuffersEXT */ (GLsizei n, GLuint * renderbuffers);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) /* glRenderbufferStorageEXT */ (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) /* glGetRenderbufferParameterivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) /* glIsFramebufferEXT */ (GLuint framebuffer);
typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) /* glBindFramebufferEXT */ (GLenum target, GLuint framebuffer);
typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) /* glDeleteFramebuffersEXT */ (GLsizei n, const GLuint * framebuffers);
typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) /* glGenFramebuffersEXT */ (GLsizei n, GLuint * framebuffers);
typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) /* glCheckFramebufferStatusEXT */ (GLenum target);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) /* glFramebufferTexture1DEXT */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) /* glFramebufferTexture2DEXT */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) /* glFramebufferTexture3DEXT */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) /* glFramebufferRenderbufferEXT */ (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) /* glGetFramebufferAttachmentParameterivEXT */ (GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) /* glGenerateMipmapEXT */ (GLenum target);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) /* glFramebufferTextureEXT */ (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) /* glProgramParameteriEXT */ (GLuint program, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) /* glProgramEnvParameters4fvEXT */ (GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) /* glProgramLocalParameters4fvEXT */ (GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) /* glGetUniformuivEXT */ (GLuint program, GLint location, GLuint * params);
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) /* glBindFragDataLocationEXT */ (GLuint program, GLuint color, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) /* glGetFragDataLocationEXT */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) /* glUniform1uiEXT */ (GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) /* glUniform2uiEXT */ (GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) /* glUniform3uiEXT */ (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) /* glUniform4uiEXT */ (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) /* glUniform1uivEXT */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) /* glUniform2uivEXT */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) /* glUniform3uivEXT */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) /* glUniform4uivEXT */ (GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) /* glGetHistogramEXT */ (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) /* glGetHistogramParameterfvEXT */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) /* glGetHistogramParameterivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) /* glGetMinmaxEXT */ (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) /* glGetMinmaxParameterfvEXT */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) /* glGetMinmaxParameterivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) /* glHistogramEXT */ (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (APIENTRYP PFNGLMINMAXEXTPROC) /* glMinmaxEXT */ (GLenum target, GLenum internalformat, GLboolean sink);
typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) /* glResetHistogramEXT */ (GLenum target);
typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) /* glResetMinmaxEXT */ (GLenum target);
typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) /* glIndexFuncEXT */ (GLenum func, GLclampf ref);
typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) /* glIndexMaterialEXT */ (GLenum face, GLenum mode);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) /* glDrawArraysInstancedEXT */ (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) /* glDrawElementsInstancedEXT */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISOREXTPROC) /* glVertexAttribDivisorEXT */ (GLuint index, GLuint divisor);
typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) /* glApplyTextureEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) /* glTextureLightEXT */ (GLenum pname);
typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) /* glTextureMaterialEXT */ (GLenum face, GLenum mode);
typedef void * (APIENTRYP PFNGLMAPBUFFERRANGEEXTPROC) /* glMapBufferRangeEXT */ (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC) /* glFlushMappedBufferRangeEXT */ (GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) /* glMultiDrawArraysEXT */ (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) /* glMultiDrawElementsEXT */ (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC) /* glMultiDrawArraysIndirectEXT */ (GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC) /* glMultiDrawElementsIndirectEXT */ (GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) /* glSampleMaskEXT */ (GLclampf value, GLboolean invert);
typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) /* glSamplePatternEXT */ (GLenum pattern);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) /* glRenderbufferStorageMultisampleEXT */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC) /* glFramebufferTexture2DMultisampleEXT */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
typedef void (APIENTRYP PFNGLREADBUFFERINDEXEDEXTPROC) /* glReadBufferIndexedEXT */ (GLenum src, GLint index);
typedef void (APIENTRYP PFNGLDRAWBUFFERSINDEXEDEXTPROC) /* glDrawBuffersIndexedEXT */ (GLint n, const GLenum * location, const GLint * indices);
typedef void (APIENTRYP PFNGLGETINTEGERI_VEXTPROC) /* glGetIntegeri_vEXT */ (GLenum target, GLuint index, GLint * data);
typedef void (APIENTRYP PFNGLGENQUERIESEXTPROC) /* glGenQueriesEXT */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLDELETEQUERIESEXTPROC) /* glDeleteQueriesEXT */ (GLsizei n, const GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISQUERYEXTPROC) /* glIsQueryEXT */ (GLuint id);
typedef void (APIENTRYP PFNGLBEGINQUERYEXTPROC) /* glBeginQueryEXT */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLENDQUERYEXTPROC) /* glEndQueryEXT */ (GLenum target);
typedef void (APIENTRYP PFNGLGETQUERYIVEXTPROC) /* glGetQueryivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVEXTPROC) /* glGetQueryObjectuivEXT */ (GLuint id, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) /* glColorTableEXT */ (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void * table);
typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) /* glGetColorTableEXT */ (GLenum target, GLenum format, GLenum type, void * data);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) /* glGetColorTableParameterivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) /* glGetColorTableParameterfvEXT */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) /* glPixelTransformParameteriEXT */ (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) /* glPixelTransformParameterfEXT */ (GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) /* glPixelTransformParameterivEXT */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) /* glPixelTransformParameterfvEXT */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) /* glGetPixelTransformParameterivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) /* glGetPixelTransformParameterfvEXT */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) /* glPointParameterfEXT */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) /* glPointParameterfvEXT */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) /* glPolygonOffsetEXT */ (GLfloat factor, GLfloat bias);
typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPEXTPROC) /* glPolygonOffsetClampEXT */ (GLfloat factor, GLfloat units, GLfloat clamp);
typedef void (APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXEXTPROC) /* glPrimitiveBoundingBoxEXT */ (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) /* glProvokingVertexEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) /* glRasterSamplesEXT */ (GLuint samples, GLboolean fixedsamplelocations);
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSEXTPROC) /* glGetGraphicsResetStatusEXT */ ();
typedef void (APIENTRYP PFNGLREADNPIXELSEXTPROC) /* glReadnPixelsEXT */ (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (APIENTRYP PFNGLGETNUNIFORMFVEXTPROC) /* glGetnUniformfvEXT */ (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMIVEXTPROC) /* glGetnUniformivEXT */ (GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) /* glSecondaryColor3bEXT */ (GLbyte red, GLbyte green, GLbyte blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) /* glSecondaryColor3bvEXT */ (const GLbyte * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) /* glSecondaryColor3dEXT */ (GLdouble red, GLdouble green, GLdouble blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) /* glSecondaryColor3dvEXT */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) /* glSecondaryColor3fEXT */ (GLfloat red, GLfloat green, GLfloat blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) /* glSecondaryColor3fvEXT */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) /* glSecondaryColor3iEXT */ (GLint red, GLint green, GLint blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) /* glSecondaryColor3ivEXT */ (const GLint * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) /* glSecondaryColor3sEXT */ (GLshort red, GLshort green, GLshort blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) /* glSecondaryColor3svEXT */ (const GLshort * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) /* glSecondaryColor3ubEXT */ (GLubyte red, GLubyte green, GLubyte blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) /* glSecondaryColor3ubvEXT */ (const GLubyte * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) /* glSecondaryColor3uiEXT */ (GLuint red, GLuint green, GLuint blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) /* glSecondaryColor3uivEXT */ (const GLuint * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) /* glSecondaryColor3usEXT */ (GLushort red, GLushort green, GLushort blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) /* glSecondaryColor3usvEXT */ (const GLushort * v);
typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) /* glSecondaryColorPointerEXT */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) /* glUseShaderProgramEXT */ (GLenum type, GLuint program);
typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) /* glActiveProgramEXT */ (GLuint program);
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) /* glCreateShaderProgramEXT */ (GLenum type, const GLchar * string);
typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMEXTPROC) /* glActiveShaderProgramEXT */ (GLuint pipeline, GLuint program);
typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEEXTPROC) /* glBindProgramPipelineEXT */ (GLuint pipeline);
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVEXTPROC) /* glCreateShaderProgramvEXT */ (GLenum type, GLsizei count, const GLchar ** strings);
typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESEXTPROC) /* glDeleteProgramPipelinesEXT */ (GLsizei n, const GLuint * pipelines);
typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESEXTPROC) /* glGenProgramPipelinesEXT */ (GLsizei n, GLuint * pipelines);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC) /* glGetProgramPipelineInfoLogEXT */ (GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVEXTPROC) /* glGetProgramPipelineivEXT */ (GLuint pipeline, GLenum pname, GLint * params);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEEXTPROC) /* glIsProgramPipelineEXT */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) /* glProgramParameteriEXT */ (GLuint program, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) /* glProgramUniform1fEXT */ (GLuint program, GLint location, GLfloat v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) /* glProgramUniform1fvEXT */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) /* glProgramUniform1iEXT */ (GLuint program, GLint location, GLint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) /* glProgramUniform1ivEXT */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) /* glProgramUniform2fEXT */ (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) /* glProgramUniform2fvEXT */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) /* glProgramUniform2iEXT */ (GLuint program, GLint location, GLint v0, GLint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) /* glProgramUniform2ivEXT */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) /* glProgramUniform3fEXT */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) /* glProgramUniform3fvEXT */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) /* glProgramUniform3iEXT */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) /* glProgramUniform3ivEXT */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) /* glProgramUniform4fEXT */ (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) /* glProgramUniform4fvEXT */ (GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) /* glProgramUniform4iEXT */ (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) /* glProgramUniform4ivEXT */ (GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) /* glProgramUniformMatrix2fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) /* glProgramUniformMatrix3fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) /* glProgramUniformMatrix4fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESEXTPROC) /* glUseProgramStagesEXT */ (GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEEXTPROC) /* glValidateProgramPipelineEXT */ (GLuint pipeline);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) /* glProgramUniform1uiEXT */ (GLuint program, GLint location, GLuint v0);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) /* glProgramUniform2uiEXT */ (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) /* glProgramUniform3uiEXT */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) /* glProgramUniform4uiEXT */ (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) /* glProgramUniform1uivEXT */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) /* glProgramUniform2uivEXT */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) /* glProgramUniform3uivEXT */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) /* glProgramUniform4uivEXT */ (GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) /* glProgramUniformMatrix4fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) /* glProgramUniformMatrix2x3fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) /* glProgramUniformMatrix3x2fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) /* glProgramUniformMatrix2x4fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) /* glProgramUniformMatrix4x2fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) /* glProgramUniformMatrix3x4fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) /* glProgramUniformMatrix4x3fvEXT */ (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) /* glBindImageTextureEXT */ (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
typedef void (APIENTRYP PFNGLMEMORYBARRIEREXTPROC) /* glMemoryBarrierEXT */ (GLbitfield barriers);
typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTEXTPROC) /* glTexPageCommitmentEXT */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) /* glStencilClearTagEXT */ (GLsizei stencilTagBits, GLuint stencilClearTag);
typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) /* glActiveStencilFaceEXT */ (GLenum face);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) /* glTexSubImage1DEXT */ (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) /* glTexSubImage2DEXT */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLPATCHPARAMETERIEXTPROC) /* glPatchParameteriEXT */ (GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) /* glTexImage3DEXT */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) /* glTexSubImage3DEXT */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) /* glFramebufferTextureLayerEXT */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) /* glTexParameterIivEXT */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) /* glTexParameterIuivEXT */ (GLenum target, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) /* glGetTexParameterIivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) /* glGetTexParameterIuivEXT */ (GLenum target, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVEXTPROC) /* glSamplerParameterIivEXT */ (GLuint sampler, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVEXTPROC) /* glSamplerParameterIuivEXT */ (GLuint sampler, GLenum pname, const GLuint * param);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVEXTPROC) /* glGetSamplerParameterIivEXT */ (GLuint sampler, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVEXTPROC) /* glGetSamplerParameterIuivEXT */ (GLuint sampler, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) /* glTexBufferEXT */ (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXBUFFERRANGEEXTPROC) /* glTexBufferRangeEXT */ (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) /* glTexBufferEXT */ (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) /* glRasterSamplesEXT */ (GLuint samples, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) /* glTexParameterIivEXT */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) /* glTexParameterIuivEXT */ (GLenum target, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) /* glGetTexParameterIivEXT */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) /* glGetTexParameterIuivEXT */ (GLenum target, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) /* glClearColorIiEXT */ (GLint red, GLint green, GLint blue, GLint alpha);
typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) /* glClearColorIuiEXT */ (GLuint red, GLuint green, GLuint blue, GLuint alpha);
typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) /* glAreTexturesResidentEXT */ (GLsizei n, const GLuint * textures, GLboolean * residences);
typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) /* glBindTextureEXT */ (GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) /* glDeleteTexturesEXT */ (GLsizei n, const GLuint * textures);
typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) /* glGenTexturesEXT */ (GLsizei n, GLuint * textures);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) /* glIsTextureEXT */ (GLuint texture);
typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) /* glPrioritizeTexturesEXT */ (GLsizei n, const GLuint * textures, const GLclampf * priorities);
typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) /* glTextureNormalEXT */ (GLenum mode);
typedef void (APIENTRYP PFNGLTEXSTORAGE1DEXTPROC) /* glTexStorage1DEXT */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXSTORAGE2DEXTPROC) /* glTexStorage2DEXT */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DEXTPROC) /* glTexStorage3DEXT */ (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) /* glTextureStorage1DEXT */ (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) /* glTextureStorage2DEXT */ (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) /* glTextureStorage3DEXT */ (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLTEXTUREVIEWEXTPROC) /* glTextureViewEXT */ (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) /* glGetQueryObjecti64vEXT */ (GLuint id, GLenum pname, GLint64 * params);
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) /* glGetQueryObjectui64vEXT */ (GLuint id, GLenum pname, GLuint64 * params);
typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) /* glBeginTransformFeedbackEXT */ (GLenum primitiveMode);
typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) /* glEndTransformFeedbackEXT */ ();
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) /* glBindBufferRangeEXT */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) /* glBindBufferOffsetEXT */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) /* glBindBufferBaseEXT */ (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) /* glTransformFeedbackVaryingsEXT */ (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) /* glGetTransformFeedbackVaryingEXT */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) /* glArrayElementEXT */ (GLint i);
typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) /* glColorPointerEXT */ (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) /* glDrawArraysEXT */ (GLenum mode, GLint first, GLsizei count);
typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) /* glEdgeFlagPointerEXT */ (GLsizei stride, GLsizei count, const GLboolean * pointer);
typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) /* glGetPointervEXT */ (GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) /* glIndexPointerEXT */ (GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) /* glNormalPointerEXT */ (GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) /* glTexCoordPointerEXT */ (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) /* glVertexPointerEXT */ (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) /* glVertexAttribL1dEXT */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) /* glVertexAttribL2dEXT */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) /* glVertexAttribL3dEXT */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) /* glVertexAttribL4dEXT */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) /* glVertexAttribL1dvEXT */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) /* glVertexAttribL2dvEXT */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) /* glVertexAttribL3dvEXT */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) /* glVertexAttribL4dvEXT */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) /* glVertexAttribLPointerEXT */ (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) /* glGetVertexAttribLdvEXT */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) /* glBeginVertexShaderEXT */ ();
typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) /* glEndVertexShaderEXT */ ();
typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) /* glBindVertexShaderEXT */ (GLuint id);
typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) /* glGenVertexShadersEXT */ (GLuint range);
typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) /* glDeleteVertexShaderEXT */ (GLuint id);
typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) /* glShaderOp1EXT */ (GLenum op, GLuint res, GLuint arg1);
typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) /* glShaderOp2EXT */ (GLenum op, GLuint res, GLuint arg1, GLuint arg2);
typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) /* glShaderOp3EXT */ (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) /* glSwizzleEXT */ (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) /* glWriteMaskEXT */ (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) /* glInsertComponentEXT */ (GLuint res, GLuint src, GLuint num);
typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) /* glExtractComponentEXT */ (GLuint res, GLuint src, GLuint num);
typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) /* glGenSymbolsEXT */ (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) /* glSetInvariantEXT */ (GLuint id, GLenum type, const void * addr);
typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) /* glSetLocalConstantEXT */ (GLuint id, GLenum type, const void * addr);
typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) /* glVariantbvEXT */ (GLuint id, const GLbyte * addr);
typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) /* glVariantsvEXT */ (GLuint id, const GLshort * addr);
typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) /* glVariantivEXT */ (GLuint id, const GLint * addr);
typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) /* glVariantfvEXT */ (GLuint id, const GLfloat * addr);
typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) /* glVariantdvEXT */ (GLuint id, const GLdouble * addr);
typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) /* glVariantubvEXT */ (GLuint id, const GLubyte * addr);
typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) /* glVariantusvEXT */ (GLuint id, const GLushort * addr);
typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) /* glVariantuivEXT */ (GLuint id, const GLuint * addr);
typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) /* glVariantPointerEXT */ (GLuint id, GLenum type, GLuint stride, const void * addr);
typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) /* glEnableVariantClientStateEXT */ (GLuint id);
typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) /* glDisableVariantClientStateEXT */ (GLuint id);
typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) /* glBindLightParameterEXT */ (GLenum light, GLenum value);
typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) /* glBindMaterialParameterEXT */ (GLenum face, GLenum value);
typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) /* glBindTexGenParameterEXT */ (GLenum unit, GLenum coord, GLenum value);
typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) /* glBindTextureUnitParameterEXT */ (GLenum unit, GLenum value);
typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) /* glBindParameterEXT */ (GLenum value);
typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) /* glIsVariantEnabledEXT */ (GLuint id, GLenum cap);
typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) /* glGetVariantBooleanvEXT */ (GLuint id, GLenum value, GLboolean * data);
typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) /* glGetVariantIntegervEXT */ (GLuint id, GLenum value, GLint * data);
typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) /* glGetVariantFloatvEXT */ (GLuint id, GLenum value, GLfloat * data);
typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) /* glGetVariantPointervEXT */ (GLuint id, GLenum value, void ** data);
typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) /* glGetInvariantBooleanvEXT */ (GLuint id, GLenum value, GLboolean * data);
typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) /* glGetInvariantIntegervEXT */ (GLuint id, GLenum value, GLint * data);
typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) /* glGetInvariantFloatvEXT */ (GLuint id, GLenum value, GLfloat * data);
typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) /* glGetLocalConstantBooleanvEXT */ (GLuint id, GLenum value, GLboolean * data);
typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) /* glGetLocalConstantIntegervEXT */ (GLuint id, GLenum value, GLint * data);
typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) /* glGetLocalConstantFloatvEXT */ (GLuint id, GLenum value, GLfloat * data);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) /* glVertexWeightfEXT */ (GLfloat weight);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) /* glVertexWeightfvEXT */ (const GLfloat * weight);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) /* glVertexWeightPointerEXT */ (GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef GLsync (APIENTRYP PFNGLIMPORTSYNCEXTPROC) /* glImportSyncEXT */ (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) /* glFrameTerminatorGREMEDY */ ();
typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) /* glStringMarkerGREMEDY */ (GLsizei len, const void * string);
typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) /* glImageTransformParameteriHP */ (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) /* glImageTransformParameterfHP */ (GLenum target, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) /* glImageTransformParameterivHP */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) /* glImageTransformParameterfvHP */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) /* glGetImageTransformParameterivHP */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) /* glGetImageTransformParameterfvHP */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) /* glMultiModeDrawArraysIBM */ (const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride);
typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) /* glMultiModeDrawElementsIBM */ (const GLenum * mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, GLint modestride);
typedef void (APIENTRYP PFNGLFLUSHSTATICDATAIBMPROC) /* glFlushStaticDataIBM */ (GLenum target);
typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) /* glColorPointerListIBM */ (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) /* glSecondaryColorPointerListIBM */ (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) /* glEdgeFlagPointerListIBM */ (GLint stride, const GLboolean ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) /* glFogCoordPointerListIBM */ (GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) /* glIndexPointerListIBM */ (GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) /* glNormalPointerListIBM */ (GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) /* glTexCoordPointerListIBM */ (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) /* glVertexPointerListIBM */ (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC) /* glRenderbufferStorageMultisampleIMG */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC) /* glFramebufferTexture2DMultisampleIMG */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) /* glBlendFuncSeparateINGR */ (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (APIENTRYP PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC) /* glApplyFramebufferAttachmentCMAAINTEL */ ();
typedef void (APIENTRYP PFNGLSYNCTEXTUREINTELPROC) /* glSyncTextureINTEL */ (GLuint texture);
typedef void (APIENTRYP PFNGLUNMAPTEXTURE2DINTELPROC) /* glUnmapTexture2DINTEL */ (GLuint texture, GLint level);
typedef void * (APIENTRYP PFNGLMAPTEXTURE2DINTELPROC) /* glMapTexture2DINTEL */ (GLuint texture, GLint level, GLbitfield access, GLint * stride, GLenum * layout);
typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) /* glVertexPointervINTEL */ (GLint size, GLenum type, const void ** pointer);
typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) /* glNormalPointervINTEL */ (GLenum type, const void ** pointer);
typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) /* glColorPointervINTEL */ (GLint size, GLenum type, const void ** pointer);
typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) /* glTexCoordPointervINTEL */ (GLint size, GLenum type, const void ** pointer);
typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) /* glBeginPerfQueryINTEL */ (GLuint queryHandle);
typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) /* glCreatePerfQueryINTEL */ (GLuint queryId, GLuint * queryHandle);
typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) /* glDeletePerfQueryINTEL */ (GLuint queryHandle);
typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) /* glEndPerfQueryINTEL */ (GLuint queryHandle);
typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) /* glGetFirstPerfQueryIdINTEL */ (GLuint * queryId);
typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) /* glGetNextPerfQueryIdINTEL */ (GLuint queryId, GLuint * nextQueryId);
typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) /* glGetPerfCounterInfoINTEL */ (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue);
typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) /* glGetPerfQueryDataINTEL */ (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid * data, GLuint * bytesWritten);
typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) /* glGetPerfQueryIdByNameINTEL */ (GLchar * queryName, GLuint * queryId);
typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) /* glGetPerfQueryInfoINTEL */ (GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask);
typedef void (APIENTRYP PFNGLBLENDBARRIERKHRPROC) /* glBlendBarrierKHR */ ();
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) /* glDebugMessageControl */ (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) /* glDebugMessageInsert */ (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) /* glDebugMessageCallback */ (GLDEBUGPROC callback, const void * userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) /* glGetDebugMessageLog */ (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) /* glPushDebugGroup */ (GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) /* glPopDebugGroup */ ();
typedef void (APIENTRYP PFNGLOBJECTLABELPROC) /* glObjectLabel */ (GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) /* glGetObjectLabel */ (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) /* glObjectPtrLabel */ (const void * ptr, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) /* glGetObjectPtrLabel */ (const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLGETPOINTERVPROC) /* glGetPointerv */ (GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLKHRPROC) /* glDebugMessageControlKHR */ (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTKHRPROC) /* glDebugMessageInsertKHR */ (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKKHRPROC) /* glDebugMessageCallbackKHR */ (GLDEBUGPROCKHR callback, const void * userParam);
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGKHRPROC) /* glGetDebugMessageLogKHR */ (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPKHRPROC) /* glPushDebugGroupKHR */ (GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (APIENTRYP PFNGLPOPDEBUGGROUPKHRPROC) /* glPopDebugGroupKHR */ ();
typedef void (APIENTRYP PFNGLOBJECTLABELKHRPROC) /* glObjectLabelKHR */ (GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTLABELKHRPROC) /* glGetObjectLabelKHR */ (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLOBJECTPTRLABELKHRPROC) /* glObjectPtrLabelKHR */ (const void * ptr, GLsizei length, const GLchar * label);
typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELKHRPROC) /* glGetObjectPtrLabelKHR */ (const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (APIENTRYP PFNGLGETPOINTERVKHRPROC) /* glGetPointervKHR */ (GLenum pname, void ** params);
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) /* glGetGraphicsResetStatus */ ();
typedef void (APIENTRYP PFNGLREADNPIXELSPROC) /* glReadnPixels */ (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) /* glGetnUniformfv */ (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) /* glGetnUniformiv */ (GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) /* glGetnUniformuiv */ (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSKHRPROC) /* glGetGraphicsResetStatusKHR */ ();
typedef void (APIENTRYP PFNGLREADNPIXELSKHRPROC) /* glReadnPixelsKHR */ (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (APIENTRYP PFNGLGETNUNIFORMFVKHRPROC) /* glGetnUniformfvKHR */ (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMIVKHRPROC) /* glGetnUniformivKHR */ (GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVKHRPROC) /* glGetnUniformuivKHR */ (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) /* glResizeBuffersMESA */ ();
typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) /* glWindowPos2dMESA */ (GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) /* glWindowPos2dvMESA */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) /* glWindowPos2fMESA */ (GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) /* glWindowPos2fvMESA */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) /* glWindowPos2iMESA */ (GLint x, GLint y);
typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) /* glWindowPos2ivMESA */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) /* glWindowPos2sMESA */ (GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) /* glWindowPos2svMESA */ (const GLshort * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) /* glWindowPos3dMESA */ (GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) /* glWindowPos3dvMESA */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) /* glWindowPos3fMESA */ (GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) /* glWindowPos3fvMESA */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) /* glWindowPos3iMESA */ (GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) /* glWindowPos3ivMESA */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) /* glWindowPos3sMESA */ (GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) /* glWindowPos3svMESA */ (const GLshort * v);
typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) /* glWindowPos4dMESA */ (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) /* glWindowPos4dvMESA */ (const GLdouble * v);
typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) /* glWindowPos4fMESA */ (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) /* glWindowPos4fvMESA */ (const GLfloat * v);
typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) /* glWindowPos4iMESA */ (GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) /* glWindowPos4ivMESA */ (const GLint * v);
typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) /* glWindowPos4sMESA */ (GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) /* glWindowPos4svMESA */ (const GLshort * v);
typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVXPROC) /* glBeginConditionalRenderNVX */ (GLuint id);
typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVXPROC) /* glEndConditionalRenderNVX */ ();
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) /* glMultiDrawArraysIndirectBindlessNV */ (GLenum mode, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) /* glMultiDrawElementsIndirectBindlessNV */ (GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) /* glMultiDrawArraysIndirectBindlessCountNV */ (GLenum mode, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) /* glMultiDrawElementsIndirectBindlessCountNV */ (GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) /* glGetTextureHandleNV */ (GLuint texture);
typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) /* glGetTextureSamplerHandleNV */ (GLuint texture, GLuint sampler);
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) /* glMakeTextureHandleResidentNV */ (GLuint64 handle);
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) /* glMakeTextureHandleNonResidentNV */ (GLuint64 handle);
typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) /* glGetImageHandleNV */ (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) /* glMakeImageHandleResidentNV */ (GLuint64 handle, GLenum access);
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) /* glMakeImageHandleNonResidentNV */ (GLuint64 handle);
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) /* glUniformHandleui64NV */ (GLint location, GLuint64 value);
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) /* glUniformHandleui64vNV */ (GLint location, GLsizei count, const GLuint64 * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) /* glProgramUniformHandleui64NV */ (GLuint program, GLint location, GLuint64 value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) /* glProgramUniformHandleui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64 * values);
typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) /* glIsTextureHandleResidentNV */ (GLuint64 handle);
typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) /* glIsImageHandleResidentNV */ (GLuint64 handle);
typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) /* glBlendParameteriNV */ (GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) /* glBlendBarrierNV */ ();
typedef void (APIENTRYP PFNGLCREATESTATESNVPROC) /* glCreateStatesNV */ (GLsizei n, GLuint * states);
typedef void (APIENTRYP PFNGLDELETESTATESNVPROC) /* glDeleteStatesNV */ (GLsizei n, const GLuint * states);
typedef GLboolean (APIENTRYP PFNGLISSTATENVPROC) /* glIsStateNV */ (GLuint state);
typedef void (APIENTRYP PFNGLSTATECAPTURENVPROC) /* glStateCaptureNV */ (GLuint state, GLenum mode);
typedef GLuint (APIENTRYP PFNGLGETCOMMANDHEADERNVPROC) /* glGetCommandHeaderNV */ (GLenum tokenID, GLuint size);
typedef GLushort (APIENTRYP PFNGLGETSTAGEINDEXNVPROC) /* glGetStageIndexNV */ (GLenum shadertype);
typedef void (APIENTRYP PFNGLDRAWCOMMANDSNVPROC) /* glDrawCommandsNV */ (GLenum primitiveMode, GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, GLuint count);
typedef void (APIENTRYP PFNGLDRAWCOMMANDSADDRESSNVPROC) /* glDrawCommandsAddressNV */ (GLenum primitiveMode, const GLuint64 * indirects, const GLsizei * sizes, GLuint count);
typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESNVPROC) /* glDrawCommandsStatesNV */ (GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) /* glDrawCommandsStatesAddressNV */ (const GLuint64 * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
typedef void (APIENTRYP PFNGLCREATECOMMANDLISTSNVPROC) /* glCreateCommandListsNV */ (GLsizei n, GLuint * lists);
typedef void (APIENTRYP PFNGLDELETECOMMANDLISTSNVPROC) /* glDeleteCommandListsNV */ (GLsizei n, const GLuint * lists);
typedef GLboolean (APIENTRYP PFNGLISCOMMANDLISTNVPROC) /* glIsCommandListNV */ (GLuint list);
typedef void (APIENTRYP PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) /* glListDrawCommandsStatesClientNV */ (GLuint list, GLuint segment, const void ** indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
typedef void (APIENTRYP PFNGLCOMMANDLISTSEGMENTSNVPROC) /* glCommandListSegmentsNV */ (GLuint list, GLuint segments);
typedef void (APIENTRYP PFNGLCOMPILECOMMANDLISTNVPROC) /* glCompileCommandListNV */ (GLuint list);
typedef void (APIENTRYP PFNGLCALLCOMMANDLISTNVPROC) /* glCallCommandListNV */ (GLuint list);
typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) /* glBeginConditionalRenderNV */ (GLuint id, GLenum mode);
typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) /* glEndConditionalRenderNV */ ();
typedef void (APIENTRYP PFNGLSUBPIXELPRECISIONBIASNVPROC) /* glSubpixelPrecisionBiasNV */ (GLuint xbits, GLuint ybits);
typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) /* glConservativeRasterParameterfNV */ (GLenum pname, GLfloat value);
typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATANVPROC) /* glCopyBufferSubDataNV */ (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) /* glCopyImageSubDataNV */ (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
typedef void (APIENTRYP PFNGLCOVERAGEMASKNVPROC) /* glCoverageMaskNV */ (GLboolean mask);
typedef void (APIENTRYP PFNGLCOVERAGEOPERATIONNVPROC) /* glCoverageOperationNV */ (GLenum operation);
typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) /* glDepthRangedNV */ (GLdouble zNear, GLdouble zFar);
typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) /* glClearDepthdNV */ (GLdouble depth);
typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) /* glDepthBoundsdNV */ (GLdouble zmin, GLdouble zmax);
typedef void (APIENTRYP PFNGLDRAWBUFFERSNVPROC) /* glDrawBuffersNV */ (GLsizei n, const GLenum * bufs);
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDNVPROC) /* glDrawArraysInstancedNV */ (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDNVPROC) /* glDrawElementsInstancedNV */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (APIENTRYP PFNGLDRAWTEXTURENVPROC) /* glDrawTextureNV */ (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) /* glMapControlPointsNV */ (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void * points);
typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) /* glMapParameterivNV */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) /* glMapParameterfvNV */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) /* glGetMapControlPointsNV */ (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void * points);
typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) /* glGetMapParameterivNV */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) /* glGetMapParameterfvNV */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) /* glGetMapAttribParameterivNV */ (GLenum target, GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) /* glGetMapAttribParameterfvNV */ (GLenum target, GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) /* glEvalMapsNV */ (GLenum target, GLenum mode);
typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) /* glGetMultisamplefvNV */ (GLenum pname, GLuint index, GLfloat * val);
typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) /* glSampleMaskIndexedNV */ (GLuint index, GLbitfield mask);
typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) /* glTexRenderbufferNV */ (GLenum target, GLuint renderbuffer);
typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) /* glDeleteFencesNV */ (GLsizei n, const GLuint * fences);
typedef void (APIENTRYP PFNGLGENFENCESNVPROC) /* glGenFencesNV */ (GLsizei n, GLuint * fences);
typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) /* glIsFenceNV */ (GLuint fence);
typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) /* glTestFenceNV */ (GLuint fence);
typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) /* glGetFenceivNV */ (GLuint fence, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) /* glFinishFenceNV */ (GLuint fence);
typedef void (APIENTRYP PFNGLSETFENCENVPROC) /* glSetFenceNV */ (GLuint fence, GLenum condition);
typedef void (APIENTRYP PFNGLFRAGMENTCOVERAGECOLORNVPROC) /* glFragmentCoverageColorNV */ (GLuint color);
typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) /* glProgramNamedParameter4fNV */ (GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) /* glProgramNamedParameter4fvNV */ (GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) /* glProgramNamedParameter4dNV */ (GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) /* glProgramNamedParameter4dvNV */ (GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) /* glGetProgramNamedParameterfvNV */ (GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) /* glGetProgramNamedParameterdvNV */ (GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERNVPROC) /* glBlitFramebufferNV */ (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) /* glRasterSamplesEXT */ (GLuint samples, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) /* glCoverageModulationTableNV */ (GLsizei n, const GLfloat * v);
typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) /* glGetCoverageModulationTableNV */ (GLsizei bufsize, GLfloat * v);
typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) /* glCoverageModulationNV */ (GLenum components);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC) /* glRenderbufferStorageMultisampleNV */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) /* glRenderbufferStorageMultisampleCoverageNV */ (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) /* glProgramVertexLimitNV */ (GLenum target, GLint limit);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) /* glFramebufferTextureEXT */ (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) /* glFramebufferTextureLayerEXT */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) /* glFramebufferTextureFaceEXT */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) /* glProgramLocalParameterI4iNV */ (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) /* glProgramLocalParameterI4ivNV */ (GLenum target, GLuint index, const GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) /* glProgramLocalParametersI4ivNV */ (GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) /* glProgramLocalParameterI4uiNV */ (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) /* glProgramLocalParameterI4uivNV */ (GLenum target, GLuint index, const GLuint * params);
typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) /* glProgramLocalParametersI4uivNV */ (GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) /* glProgramEnvParameterI4iNV */ (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) /* glProgramEnvParameterI4ivNV */ (GLenum target, GLuint index, const GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) /* glProgramEnvParametersI4ivNV */ (GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) /* glProgramEnvParameterI4uiNV */ (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) /* glProgramEnvParameterI4uivNV */ (GLenum target, GLuint index, const GLuint * params);
typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) /* glProgramEnvParametersI4uivNV */ (GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) /* glGetProgramLocalParameterIivNV */ (GLenum target, GLuint index, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) /* glGetProgramLocalParameterIuivNV */ (GLenum target, GLuint index, GLuint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) /* glGetProgramEnvParameterIivNV */ (GLenum target, GLuint index, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) /* glGetProgramEnvParameterIuivNV */ (GLenum target, GLuint index, GLuint * params);
typedef void (APIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) /* glProgramSubroutineParametersuivNV */ (GLenum target, GLsizei count, const GLuint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) /* glGetProgramSubroutineParameteruivNV */ (GLenum target, GLuint index, GLuint * param);
typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) /* glUniform1i64NV */ (GLint location, GLint64EXT x);
typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) /* glUniform2i64NV */ (GLint location, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) /* glUniform3i64NV */ (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) /* glUniform4i64NV */ (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) /* glUniform1i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) /* glUniform2i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) /* glUniform3i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) /* glUniform4i64vNV */ (GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) /* glUniform1ui64NV */ (GLint location, GLuint64EXT x);
typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) /* glUniform2ui64NV */ (GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) /* glUniform3ui64NV */ (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) /* glUniform4ui64NV */ (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) /* glUniform1ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) /* glUniform2ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) /* glUniform3ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) /* glUniform4ui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) /* glGetUniformi64vNV */ (GLuint program, GLint location, GLint64EXT * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) /* glProgramUniform1i64NV */ (GLuint program, GLint location, GLint64EXT x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) /* glProgramUniform2i64NV */ (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) /* glProgramUniform3i64NV */ (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) /* glProgramUniform4i64NV */ (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) /* glProgramUniform1i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) /* glProgramUniform2i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) /* glProgramUniform3i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) /* glProgramUniform4i64vNV */ (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) /* glProgramUniform1ui64NV */ (GLuint program, GLint location, GLuint64EXT x);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) /* glProgramUniform2ui64NV */ (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) /* glProgramUniform3ui64NV */ (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) /* glProgramUniform4ui64NV */ (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) /* glProgramUniform1ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) /* glProgramUniform2ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) /* glProgramUniform3ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) /* glProgramUniform4ui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) /* glVertex2hNV */ (GLhalfNV x, GLhalfNV y);
typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) /* glVertex2hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) /* glVertex3hNV */ (GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) /* glVertex3hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) /* glVertex4hNV */ (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) /* glVertex4hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) /* glNormal3hNV */ (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) /* glNormal3hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) /* glColor3hNV */ (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) /* glColor3hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) /* glColor4hNV */ (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) /* glColor4hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) /* glTexCoord1hNV */ (GLhalfNV s);
typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) /* glTexCoord1hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) /* glTexCoord2hNV */ (GLhalfNV s, GLhalfNV t);
typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) /* glTexCoord2hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) /* glTexCoord3hNV */ (GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) /* glTexCoord3hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) /* glTexCoord4hNV */ (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) /* glTexCoord4hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) /* glMultiTexCoord1hNV */ (GLenum target, GLhalfNV s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) /* glMultiTexCoord1hvNV */ (GLenum target, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) /* glMultiTexCoord2hNV */ (GLenum target, GLhalfNV s, GLhalfNV t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) /* glMultiTexCoord2hvNV */ (GLenum target, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) /* glMultiTexCoord3hNV */ (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) /* glMultiTexCoord3hvNV */ (GLenum target, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) /* glMultiTexCoord4hNV */ (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) /* glMultiTexCoord4hvNV */ (GLenum target, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) /* glFogCoordhNV */ (GLhalfNV fog);
typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) /* glFogCoordhvNV */ (const GLhalfNV * fog);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) /* glSecondaryColor3hNV */ (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) /* glSecondaryColor3hvNV */ (const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) /* glVertexWeighthNV */ (GLhalfNV weight);
typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) /* glVertexWeighthvNV */ (const GLhalfNV * weight);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) /* glVertexAttrib1hNV */ (GLuint index, GLhalfNV x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) /* glVertexAttrib1hvNV */ (GLuint index, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) /* glVertexAttrib2hNV */ (GLuint index, GLhalfNV x, GLhalfNV y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) /* glVertexAttrib2hvNV */ (GLuint index, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) /* glVertexAttrib3hNV */ (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) /* glVertexAttrib3hvNV */ (GLuint index, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) /* glVertexAttrib4hNV */ (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) /* glVertexAttrib4hvNV */ (GLuint index, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) /* glVertexAttribs1hvNV */ (GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) /* glVertexAttribs2hvNV */ (GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) /* glVertexAttribs3hvNV */ (GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) /* glVertexAttribs4hvNV */ (GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORNVPROC) /* glVertexAttribDivisorNV */ (GLuint index, GLuint divisor);
typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) /* glGetInternalformatSampleivNV */ (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint * params);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVNVPROC) /* glUniformMatrix2x3fvNV */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVNVPROC) /* glUniformMatrix3x2fvNV */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVNVPROC) /* glUniformMatrix2x4fvNV */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVNVPROC) /* glUniformMatrix4x2fvNV */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVNVPROC) /* glUniformMatrix3x4fvNV */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVNVPROC) /* glUniformMatrix4x3fvNV */ (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) /* glGenOcclusionQueriesNV */ (GLsizei n, GLuint * ids);
typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) /* glDeleteOcclusionQueriesNV */ (GLsizei n, const GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) /* glIsOcclusionQueryNV */ (GLuint id);
typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) /* glBeginOcclusionQueryNV */ (GLuint id);
typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) /* glEndOcclusionQueryNV */ ();
typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) /* glGetOcclusionQueryivNV */ (GLuint id, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) /* glGetOcclusionQueryuivNV */ (GLuint id, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) /* glProgramBufferParametersfvNV */ (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat * params);
typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) /* glProgramBufferParametersIivNV */ (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint * params);
typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) /* glProgramBufferParametersIuivNV */ (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint * params);
typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) /* glGenPathsNV */ (GLsizei range);
typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) /* glDeletePathsNV */ (GLuint path, GLsizei range);
typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) /* glIsPathNV */ (GLuint path);
typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) /* glPathCommandsNV */ (GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) /* glPathCoordsNV */ (GLuint path, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) /* glPathSubCommandsNV */ (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) /* glPathSubCoordsNV */ (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) /* glPathStringNV */ (GLuint path, GLenum format, GLsizei length, const void * pathString);
typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) /* glPathGlyphsNV */ (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) /* glPathGlyphRangeNV */ (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) /* glWeightPathsNV */ (GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights);
typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) /* glCopyPathNV */ (GLuint resultPath, GLuint srcPath);
typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) /* glInterpolatePathsNV */ (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) /* glTransformPathNV */ (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues);
typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) /* glPathParameterivNV */ (GLuint path, GLenum pname, const GLint * value);
typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) /* glPathParameteriNV */ (GLuint path, GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) /* glPathParameterfvNV */ (GLuint path, GLenum pname, const GLfloat * value);
typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) /* glPathParameterfNV */ (GLuint path, GLenum pname, GLfloat value);
typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) /* glPathDashArrayNV */ (GLuint path, GLsizei dashCount, const GLfloat * dashArray);
typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) /* glPathStencilFuncNV */ (GLenum func, GLint ref, GLuint mask);
typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) /* glPathStencilDepthOffsetNV */ (GLfloat factor, GLfloat units);
typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) /* glStencilFillPathNV */ (GLuint path, GLenum fillMode, GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) /* glStencilStrokePathNV */ (GLuint path, GLint reference, GLuint mask);
typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) /* glStencilFillPathInstancedNV */ (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues);
typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) /* glStencilStrokePathInstancedNV */ (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues);
typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) /* glPathCoverDepthFuncNV */ (GLenum func);
typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) /* glCoverFillPathNV */ (GLuint path, GLenum coverMode);
typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) /* glCoverStrokePathNV */ (GLuint path, GLenum coverMode);
typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) /* glCoverFillPathInstancedNV */ (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) /* glCoverStrokePathInstancedNV */ (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) /* glGetPathParameterivNV */ (GLuint path, GLenum pname, GLint * value);
typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) /* glGetPathParameterfvNV */ (GLuint path, GLenum pname, GLfloat * value);
typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) /* glGetPathCommandsNV */ (GLuint path, GLubyte * commands);
typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) /* glGetPathCoordsNV */ (GLuint path, GLfloat * coords);
typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) /* glGetPathDashArrayNV */ (GLuint path, GLfloat * dashArray);
typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) /* glGetPathMetricsNV */ (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics);
typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) /* glGetPathMetricRangeNV */ (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics);
typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) /* glGetPathSpacingNV */ (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing);
typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) /* glIsPointInFillPathNV */ (GLuint path, GLuint mask, GLfloat x, GLfloat y);
typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) /* glIsPointInStrokePathNV */ (GLuint path, GLfloat x, GLfloat y);
typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) /* glGetPathLengthNV */ (GLuint path, GLsizei startSegment, GLsizei numSegments);
typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) /* glPointAlongPathNV */ (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY);
typedef void (APIENTRYP PFNGLMATRIXLOAD3X2FNVPROC) /* glMatrixLoad3x2fNV */ (GLenum matrixMode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXLOAD3X3FNVPROC) /* glMatrixLoad3x3fNV */ (GLenum matrixMode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) /* glMatrixLoadTranspose3x3fNV */ (GLenum matrixMode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXMULT3X2FNVPROC) /* glMatrixMult3x2fNV */ (GLenum matrixMode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXMULT3X3FNVPROC) /* glMatrixMult3x3fNV */ (GLenum matrixMode, const GLfloat * m);
typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) /* glMatrixMultTranspose3x3fNV */ (GLenum matrixMode, const GLfloat * m);
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) /* glStencilThenCoverFillPathNV */ (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) /* glStencilThenCoverStrokePathNV */ (GLuint path, GLint reference, GLuint mask, GLenum coverMode);
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) /* glStencilThenCoverFillPathInstancedNV */ (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) /* glStencilThenCoverStrokePathInstancedNV */ (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) /* glPathGlyphIndexRangeNV */ (GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) /* glPathGlyphIndexArrayNV */ (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) /* glPathMemoryGlyphIndexArrayNV */ (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void * fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) /* glProgramPathFragmentInputGenNV */ (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat * coeffs);
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) /* glGetProgramResourcefvNV */ (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLfloat * params);
typedef void (APIENTRYP PFNGLPATHCOLORGENNVPROC) /* glPathColorGenNV */ (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat * coeffs);
typedef void (APIENTRYP PFNGLPATHTEXGENNVPROC) /* glPathTexGenNV */ (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat * coeffs);
typedef void (APIENTRYP PFNGLPATHFOGGENNVPROC) /* glPathFogGenNV */ (GLenum genMode);
typedef void (APIENTRYP PFNGLGETPATHCOLORGENIVNVPROC) /* glGetPathColorGenivNV */ (GLenum color, GLenum pname, GLint * value);
typedef void (APIENTRYP PFNGLGETPATHCOLORGENFVNVPROC) /* glGetPathColorGenfvNV */ (GLenum color, GLenum pname, GLfloat * value);
typedef void (APIENTRYP PFNGLGETPATHTEXGENIVNVPROC) /* glGetPathTexGenivNV */ (GLenum texCoordSet, GLenum pname, GLint * value);
typedef void (APIENTRYP PFNGLGETPATHTEXGENFVNVPROC) /* glGetPathTexGenfvNV */ (GLenum texCoordSet, GLenum pname, GLfloat * value);
typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) /* glPixelDataRangeNV */ (GLenum target, GLsizei length, const void * pointer);
typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) /* glFlushPixelDataRangeNV */ (GLenum target);
typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) /* glPointParameteriNV */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) /* glPointParameterivNV */ (GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLPOLYGONMODENVPROC) /* glPolygonModeNV */ (GLenum face, GLenum mode);
typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) /* glPresentFrameKeyedNV */ (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) /* glPresentFrameDualFillNV */ (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) /* glGetVideoivNV */ (GLuint video_slot, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) /* glGetVideouivNV */ (GLuint video_slot, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) /* glGetVideoi64vNV */ (GLuint video_slot, GLenum pname, GLint64EXT * params);
typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) /* glGetVideoui64vNV */ (GLuint video_slot, GLenum pname, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) /* glPrimitiveRestartNV */ ();
typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) /* glPrimitiveRestartIndexNV */ (GLuint index);
typedef void (APIENTRYP PFNGLREADBUFFERNVPROC) /* glReadBufferNV */ (GLenum mode);
typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) /* glCombinerParameterfvNV */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) /* glCombinerParameterfNV */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) /* glCombinerParameterivNV */ (GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) /* glCombinerParameteriNV */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) /* glCombinerInputNV */ (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) /* glCombinerOutputNV */ (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) /* glFinalCombinerInputNV */ (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) /* glGetCombinerInputParameterfvNV */ (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) /* glGetCombinerInputParameterivNV */ (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) /* glGetCombinerOutputParameterfvNV */ (GLenum stage, GLenum portion, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) /* glGetCombinerOutputParameterivNV */ (GLenum stage, GLenum portion, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) /* glGetFinalCombinerInputParameterfvNV */ (GLenum variable, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) /* glGetFinalCombinerInputParameterivNV */ (GLenum variable, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) /* glCombinerStageParameterfvNV */ (GLenum stage, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) /* glGetCombinerStageParameterfvNV */ (GLenum stage, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) /* glFramebufferSampleLocationsfvNV */ (GLenum target, GLuint start, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) /* glNamedFramebufferSampleLocationsfvNV */ (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLRESOLVEDEPTHVALUESNVPROC) /* glResolveDepthValuesNV */ ();
typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) /* glMakeBufferResidentNV */ (GLenum target, GLenum access);
typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) /* glMakeBufferNonResidentNV */ (GLenum target);
typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) /* glIsBufferResidentNV */ (GLenum target);
typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) /* glMakeNamedBufferResidentNV */ (GLuint buffer, GLenum access);
typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) /* glMakeNamedBufferNonResidentNV */ (GLuint buffer);
typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) /* glIsNamedBufferResidentNV */ (GLuint buffer);
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) /* glGetBufferParameterui64vNV */ (GLenum target, GLenum pname, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) /* glGetNamedBufferParameterui64vNV */ (GLuint buffer, GLenum pname, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) /* glGetIntegerui64vNV */ (GLenum value, GLuint64EXT * result);
typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) /* glUniformui64NV */ (GLint location, GLuint64EXT value);
typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) /* glUniformui64vNV */ (GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) /* glGetUniformui64vNV */ (GLuint program, GLint location, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) /* glProgramUniformui64NV */ (GLuint program, GLint location, GLuint64EXT value);
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) /* glProgramUniformui64vNV */ (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) /* glTextureBarrierNV */ ();
typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) /* glTexImage2DMultisampleCoverageNV */ (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) /* glTexImage3DMultisampleCoverageNV */ (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) /* glTextureImage2DMultisampleNV */ (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) /* glTextureImage3DMultisampleNV */ (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) /* glTextureImage2DMultisampleCoverageNV */ (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) /* glTextureImage3DMultisampleCoverageNV */ (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) /* glBeginTransformFeedbackNV */ (GLenum primitiveMode);
typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) /* glEndTransformFeedbackNV */ ();
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) /* glTransformFeedbackAttribsNV */ (GLsizei count, const GLint * attribs, GLenum bufferMode);
typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) /* glBindBufferRangeNV */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) /* glBindBufferOffsetNV */ (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) /* glBindBufferBaseNV */ (GLenum target, GLuint index, GLuint buffer);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) /* glTransformFeedbackVaryingsNV */ (GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode);
typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) /* glActiveVaryingNV */ (GLuint program, const GLchar * name);
typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) /* glGetVaryingLocationNV */ (GLuint program, const GLchar * name);
typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) /* glGetActiveVaryingNV */ (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) /* glGetTransformFeedbackVaryingNV */ (GLuint program, GLuint index, GLint * location);
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) /* glTransformFeedbackStreamAttribsNV */ (GLsizei count, const GLint * attribs, GLsizei nbuffers, const GLint * bufstreams, GLenum bufferMode);
typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) /* glBindTransformFeedbackNV */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) /* glDeleteTransformFeedbacksNV */ (GLsizei n, const GLuint * ids);
typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) /* glGenTransformFeedbacksNV */ (GLsizei n, GLuint * ids);
typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) /* glIsTransformFeedbackNV */ (GLuint id);
typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) /* glPauseTransformFeedbackNV */ ();
typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) /* glResumeTransformFeedbackNV */ ();
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) /* glDrawTransformFeedbackNV */ (GLenum mode, GLuint id);
typedef void (APIENTRYP PFNGLVDPAUINITNVPROC) /* glVDPAUInitNV */ (const void * vdpDevice, const void * getProcAddress);
typedef void (APIENTRYP PFNGLVDPAUFININVPROC) /* glVDPAUFiniNV */ ();
typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) /* glVDPAURegisterVideoSurfaceNV */ (const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) /* glVDPAURegisterOutputSurfaceNV */ (const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
typedef GLboolean (APIENTRYP PFNGLVDPAUISSURFACENVPROC) /* glVDPAUIsSurfaceNV */ (GLvdpauSurfaceNV surface);
typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) /* glVDPAUUnregisterSurfaceNV */ (GLvdpauSurfaceNV surface);
typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) /* glVDPAUGetSurfaceivNV */ (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) /* glVDPAUSurfaceAccessNV */ (GLvdpauSurfaceNV surface, GLenum access);
typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) /* glVDPAUMapSurfacesNV */ (GLsizei numSurfaces, const GLvdpauSurfaceNV * surfaces);
typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) /* glVDPAUUnmapSurfacesNV */ (GLsizei numSurface, const GLvdpauSurfaceNV * surfaces);
typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) /* glFlushVertexArrayRangeNV */ ();
typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) /* glVertexArrayRangeNV */ (GLsizei length, const void * pointer);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) /* glVertexAttribL1i64NV */ (GLuint index, GLint64EXT x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) /* glVertexAttribL2i64NV */ (GLuint index, GLint64EXT x, GLint64EXT y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) /* glVertexAttribL3i64NV */ (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) /* glVertexAttribL4i64NV */ (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) /* glVertexAttribL1i64vNV */ (GLuint index, const GLint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) /* glVertexAttribL2i64vNV */ (GLuint index, const GLint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) /* glVertexAttribL3i64vNV */ (GLuint index, const GLint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) /* glVertexAttribL4i64vNV */ (GLuint index, const GLint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) /* glVertexAttribL1ui64NV */ (GLuint index, GLuint64EXT x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) /* glVertexAttribL2ui64NV */ (GLuint index, GLuint64EXT x, GLuint64EXT y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) /* glVertexAttribL3ui64NV */ (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) /* glVertexAttribL4ui64NV */ (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) /* glVertexAttribL1ui64vNV */ (GLuint index, const GLuint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) /* glVertexAttribL2ui64vNV */ (GLuint index, const GLuint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) /* glVertexAttribL3ui64vNV */ (GLuint index, const GLuint64EXT * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) /* glVertexAttribL4ui64vNV */ (GLuint index, const GLuint64EXT * v);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) /* glGetVertexAttribLi64vNV */ (GLuint index, GLenum pname, GLint64EXT * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) /* glGetVertexAttribLui64vNV */ (GLuint index, GLenum pname, GLuint64EXT * params);
typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) /* glVertexAttribLFormatNV */ (GLuint index, GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) /* glBufferAddressRangeNV */ (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) /* glVertexFormatNV */ (GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) /* glNormalFormatNV */ (GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) /* glColorFormatNV */ (GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) /* glIndexFormatNV */ (GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) /* glTexCoordFormatNV */ (GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) /* glEdgeFlagFormatNV */ (GLsizei stride);
typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) /* glSecondaryColorFormatNV */ (GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) /* glFogCoordFormatNV */ (GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) /* glVertexAttribFormatNV */ (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) /* glVertexAttribIFormatNV */ (GLuint index, GLint size, GLenum type, GLsizei stride);
typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) /* glGetIntegerui64i_vNV */ (GLenum value, GLuint index, GLuint64EXT * result);
typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) /* glAreProgramsResidentNV */ (GLsizei n, const GLuint * programs, GLboolean * residences);
typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) /* glBindProgramNV */ (GLenum target, GLuint id);
typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) /* glDeleteProgramsNV */ (GLsizei n, const GLuint * programs);
typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) /* glExecuteProgramNV */ (GLenum target, GLuint id, const GLfloat * params);
typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) /* glGenProgramsNV */ (GLsizei n, GLuint * programs);
typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) /* glGetProgramParameterdvNV */ (GLenum target, GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) /* glGetProgramParameterfvNV */ (GLenum target, GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) /* glGetProgramivNV */ (GLuint id, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) /* glGetProgramStringNV */ (GLuint id, GLenum pname, GLubyte * program);
typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) /* glGetTrackMatrixivNV */ (GLenum target, GLuint address, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) /* glGetVertexAttribdvNV */ (GLuint index, GLenum pname, GLdouble * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) /* glGetVertexAttribfvNV */ (GLuint index, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) /* glGetVertexAttribivNV */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) /* glGetVertexAttribPointervNV */ (GLuint index, GLenum pname, void ** pointer);
typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) /* glIsProgramNV */ (GLuint id);
typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) /* glLoadProgramNV */ (GLenum target, GLuint id, GLsizei len, const GLubyte * program);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) /* glProgramParameter4dNV */ (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) /* glProgramParameter4dvNV */ (GLenum target, GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) /* glProgramParameter4fNV */ (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) /* glProgramParameter4fvNV */ (GLenum target, GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) /* glProgramParameters4dvNV */ (GLenum target, GLuint index, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) /* glProgramParameters4fvNV */ (GLenum target, GLuint index, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) /* glRequestResidentProgramsNV */ (GLsizei n, const GLuint * programs);
typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) /* glTrackMatrixNV */ (GLenum target, GLuint address, GLenum matrix, GLenum transform);
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) /* glVertexAttribPointerNV */ (GLuint index, GLint fsize, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) /* glVertexAttrib1dNV */ (GLuint index, GLdouble x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) /* glVertexAttrib1dvNV */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) /* glVertexAttrib1fNV */ (GLuint index, GLfloat x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) /* glVertexAttrib1fvNV */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) /* glVertexAttrib1sNV */ (GLuint index, GLshort x);
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) /* glVertexAttrib1svNV */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) /* glVertexAttrib2dNV */ (GLuint index, GLdouble x, GLdouble y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) /* glVertexAttrib2dvNV */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) /* glVertexAttrib2fNV */ (GLuint index, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) /* glVertexAttrib2fvNV */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) /* glVertexAttrib2sNV */ (GLuint index, GLshort x, GLshort y);
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) /* glVertexAttrib2svNV */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) /* glVertexAttrib3dNV */ (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) /* glVertexAttrib3dvNV */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) /* glVertexAttrib3fNV */ (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) /* glVertexAttrib3fvNV */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) /* glVertexAttrib3sNV */ (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) /* glVertexAttrib3svNV */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) /* glVertexAttrib4dNV */ (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) /* glVertexAttrib4dvNV */ (GLuint index, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) /* glVertexAttrib4fNV */ (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) /* glVertexAttrib4fvNV */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) /* glVertexAttrib4sNV */ (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) /* glVertexAttrib4svNV */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) /* glVertexAttrib4ubNV */ (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) /* glVertexAttrib4ubvNV */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) /* glVertexAttribs1dvNV */ (GLuint index, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) /* glVertexAttribs1fvNV */ (GLuint index, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) /* glVertexAttribs1svNV */ (GLuint index, GLsizei count, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) /* glVertexAttribs2dvNV */ (GLuint index, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) /* glVertexAttribs2fvNV */ (GLuint index, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) /* glVertexAttribs2svNV */ (GLuint index, GLsizei count, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) /* glVertexAttribs3dvNV */ (GLuint index, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) /* glVertexAttribs3fvNV */ (GLuint index, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) /* glVertexAttribs3svNV */ (GLuint index, GLsizei count, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) /* glVertexAttribs4dvNV */ (GLuint index, GLsizei count, const GLdouble * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) /* glVertexAttribs4fvNV */ (GLuint index, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) /* glVertexAttribs4svNV */ (GLuint index, GLsizei count, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) /* glVertexAttribs4ubvNV */ (GLuint index, GLsizei count, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) /* glVertexAttribI1iEXT */ (GLuint index, GLint x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) /* glVertexAttribI2iEXT */ (GLuint index, GLint x, GLint y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) /* glVertexAttribI3iEXT */ (GLuint index, GLint x, GLint y, GLint z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) /* glVertexAttribI4iEXT */ (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) /* glVertexAttribI1uiEXT */ (GLuint index, GLuint x);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) /* glVertexAttribI2uiEXT */ (GLuint index, GLuint x, GLuint y);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) /* glVertexAttribI3uiEXT */ (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) /* glVertexAttribI4uiEXT */ (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) /* glVertexAttribI1ivEXT */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) /* glVertexAttribI2ivEXT */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) /* glVertexAttribI3ivEXT */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) /* glVertexAttribI4ivEXT */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) /* glVertexAttribI1uivEXT */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) /* glVertexAttribI2uivEXT */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) /* glVertexAttribI3uivEXT */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) /* glVertexAttribI4uivEXT */ (GLuint index, const GLuint * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) /* glVertexAttribI4bvEXT */ (GLuint index, const GLbyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) /* glVertexAttribI4svEXT */ (GLuint index, const GLshort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) /* glVertexAttribI4ubvEXT */ (GLuint index, const GLubyte * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) /* glVertexAttribI4usvEXT */ (GLuint index, const GLushort * v);
typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) /* glVertexAttribIPointerEXT */ (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) /* glGetVertexAttribIivEXT */ (GLuint index, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) /* glGetVertexAttribIuivEXT */ (GLuint index, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) /* glBeginVideoCaptureNV */ (GLuint video_capture_slot);
typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) /* glBindVideoCaptureStreamBufferNV */ (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) /* glBindVideoCaptureStreamTextureNV */ (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) /* glEndVideoCaptureNV */ (GLuint video_capture_slot);
typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) /* glGetVideoCaptureivNV */ (GLuint video_capture_slot, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) /* glGetVideoCaptureStreamivNV */ (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) /* glGetVideoCaptureStreamfvNV */ (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) /* glGetVideoCaptureStreamdvNV */ (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble * params);
typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) /* glVideoCaptureNV */ (GLuint video_capture_slot, GLuint * sequence_num, GLuint64EXT * capture_time);
typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) /* glVideoCaptureStreamParameterivNV */ (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) /* glVideoCaptureStreamParameterfvNV */ (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) /* glVideoCaptureStreamParameterdvNV */ (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble * params);
typedef void (APIENTRYP PFNGLVIEWPORTARRAYVNVPROC) /* glViewportArrayvNV */ (GLuint first, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFNVPROC) /* glViewportIndexedfNV */ (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVNVPROC) /* glViewportIndexedfvNV */ (GLuint index, const GLfloat * v);
typedef void (APIENTRYP PFNGLSCISSORARRAYVNVPROC) /* glScissorArrayvNV */ (GLuint first, GLsizei count, const GLint * v);
typedef void (APIENTRYP PFNGLSCISSORINDEXEDNVPROC) /* glScissorIndexedNV */ (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLSCISSORINDEXEDVNVPROC) /* glScissorIndexedvNV */ (GLuint index, const GLint * v);
typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYFVNVPROC) /* glDepthRangeArrayfvNV */ (GLuint first, GLsizei count, const GLfloat * v);
typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDFNVPROC) /* glDepthRangeIndexedfNV */ (GLuint index, GLfloat n, GLfloat f);
typedef void (APIENTRYP PFNGLGETFLOATI_VNVPROC) /* glGetFloati_vNV */ (GLenum target, GLuint index, GLfloat * data);
typedef void (APIENTRYP PFNGLENABLEINVPROC) /* glEnableiNV */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEINVPROC) /* glDisableiNV */ (GLenum target, GLuint index);
typedef GLboolean (APIENTRYP PFNGLISENABLEDINVPROC) /* glIsEnablediNV */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXTURE2DOESPROC) /* glEGLImageTargetTexture2DOES */ (GLenum target, GLeglImageOES image);
typedef void (APIENTRYP PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) /* glEGLImageTargetRenderbufferStorageOES */ (GLenum target, GLeglImageOES image);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1BOESPROC) /* glMultiTexCoord1bOES */ (GLenum texture, GLbyte s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1BVOESPROC) /* glMultiTexCoord1bvOES */ (GLenum texture, const GLbyte * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2BOESPROC) /* glMultiTexCoord2bOES */ (GLenum texture, GLbyte s, GLbyte t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2BVOESPROC) /* glMultiTexCoord2bvOES */ (GLenum texture, const GLbyte * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3BOESPROC) /* glMultiTexCoord3bOES */ (GLenum texture, GLbyte s, GLbyte t, GLbyte r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3BVOESPROC) /* glMultiTexCoord3bvOES */ (GLenum texture, const GLbyte * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4BOESPROC) /* glMultiTexCoord4bOES */ (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4BVOESPROC) /* glMultiTexCoord4bvOES */ (GLenum texture, const GLbyte * coords);
typedef void (APIENTRYP PFNGLTEXCOORD1BOESPROC) /* glTexCoord1bOES */ (GLbyte s);
typedef void (APIENTRYP PFNGLTEXCOORD1BVOESPROC) /* glTexCoord1bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLTEXCOORD2BOESPROC) /* glTexCoord2bOES */ (GLbyte s, GLbyte t);
typedef void (APIENTRYP PFNGLTEXCOORD2BVOESPROC) /* glTexCoord2bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLTEXCOORD3BOESPROC) /* glTexCoord3bOES */ (GLbyte s, GLbyte t, GLbyte r);
typedef void (APIENTRYP PFNGLTEXCOORD3BVOESPROC) /* glTexCoord3bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLTEXCOORD4BOESPROC) /* glTexCoord4bOES */ (GLbyte s, GLbyte t, GLbyte r, GLbyte q);
typedef void (APIENTRYP PFNGLTEXCOORD4BVOESPROC) /* glTexCoord4bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLVERTEX2BOESPROC) /* glVertex2bOES */ (GLbyte x, GLbyte y);
typedef void (APIENTRYP PFNGLVERTEX2BVOESPROC) /* glVertex2bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLVERTEX3BOESPROC) /* glVertex3bOES */ (GLbyte x, GLbyte y, GLbyte z);
typedef void (APIENTRYP PFNGLVERTEX3BVOESPROC) /* glVertex3bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLVERTEX4BOESPROC) /* glVertex4bOES */ (GLbyte x, GLbyte y, GLbyte z, GLbyte w);
typedef void (APIENTRYP PFNGLVERTEX4BVOESPROC) /* glVertex4bvOES */ (const GLbyte * coords);
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAOESPROC) /* glCopyImageSubDataOES */ (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (APIENTRYP PFNGLENABLEIOESPROC) /* glEnableiOES */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDISABLEIOESPROC) /* glDisableiOES */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLBLENDEQUATIONIOESPROC) /* glBlendEquationiOES */ (GLuint buf, GLenum mode);
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIOESPROC) /* glBlendEquationSeparateiOES */ (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (APIENTRYP PFNGLBLENDFUNCIOESPROC) /* glBlendFunciOES */ (GLuint buf, GLenum src, GLenum dst);
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIOESPROC) /* glBlendFuncSeparateiOES */ (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (APIENTRYP PFNGLCOLORMASKIOESPROC) /* glColorMaskiOES */ (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef GLboolean (APIENTRYP PFNGLISENABLEDIOESPROC) /* glIsEnablediOES */ (GLenum target, GLuint index);
typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXOESPROC) /* glDrawElementsBaseVertexOES */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC) /* glDrawRangeElementsBaseVertexOES */ (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC) /* glDrawElementsInstancedBaseVertexOES */ (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXOESPROC) /* glMultiDrawElementsBaseVertexOES */ (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex);
typedef void (APIENTRYP PFNGLALPHAFUNCXOESPROC) /* glAlphaFuncxOES */ (GLenum func, GLfixed ref);
typedef void (APIENTRYP PFNGLCLEARCOLORXOESPROC) /* glClearColorxOES */ (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (APIENTRYP PFNGLCLEARDEPTHXOESPROC) /* glClearDepthxOES */ (GLfixed depth);
typedef void (APIENTRYP PFNGLCLIPPLANEXOESPROC) /* glClipPlanexOES */ (GLenum plane, const GLfixed * equation);
typedef void (APIENTRYP PFNGLCOLOR4XOESPROC) /* glColor4xOES */ (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (APIENTRYP PFNGLDEPTHRANGEXOESPROC) /* glDepthRangexOES */ (GLfixed n, GLfixed f);
typedef void (APIENTRYP PFNGLFOGXOESPROC) /* glFogxOES */ (GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLFOGXVOESPROC) /* glFogxvOES */ (GLenum pname, const GLfixed * param);
typedef void (APIENTRYP PFNGLFRUSTUMXOESPROC) /* glFrustumxOES */ (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (APIENTRYP PFNGLGETCLIPPLANEXOESPROC) /* glGetClipPlanexOES */ (GLenum plane, GLfixed * equation);
typedef void (APIENTRYP PFNGLGETFIXEDVOESPROC) /* glGetFixedvOES */ (GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLGETTEXENVXVOESPROC) /* glGetTexEnvxvOES */ (GLenum target, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) /* glGetTexParameterxvOES */ (GLenum target, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLLIGHTMODELXOESPROC) /* glLightModelxOES */ (GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLLIGHTMODELXVOESPROC) /* glLightModelxvOES */ (GLenum pname, const GLfixed * param);
typedef void (APIENTRYP PFNGLLIGHTXOESPROC) /* glLightxOES */ (GLenum light, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLLIGHTXVOESPROC) /* glLightxvOES */ (GLenum light, GLenum pname, const GLfixed * params);
typedef void (APIENTRYP PFNGLLINEWIDTHXOESPROC) /* glLineWidthxOES */ (GLfixed width);
typedef void (APIENTRYP PFNGLLOADMATRIXXOESPROC) /* glLoadMatrixxOES */ (const GLfixed * m);
typedef void (APIENTRYP PFNGLMATERIALXOESPROC) /* glMaterialxOES */ (GLenum face, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLMATERIALXVOESPROC) /* glMaterialxvOES */ (GLenum face, GLenum pname, const GLfixed * param);
typedef void (APIENTRYP PFNGLMULTMATRIXXOESPROC) /* glMultMatrixxOES */ (const GLfixed * m);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4XOESPROC) /* glMultiTexCoord4xOES */ (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (APIENTRYP PFNGLNORMAL3XOESPROC) /* glNormal3xOES */ (GLfixed nx, GLfixed ny, GLfixed nz);
typedef void (APIENTRYP PFNGLORTHOXOESPROC) /* glOrthoxOES */ (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (APIENTRYP PFNGLPOINTPARAMETERXVOESPROC) /* glPointParameterxvOES */ (GLenum pname, const GLfixed * params);
typedef void (APIENTRYP PFNGLPOINTSIZEXOESPROC) /* glPointSizexOES */ (GLfixed size);
typedef void (APIENTRYP PFNGLPOLYGONOFFSETXOESPROC) /* glPolygonOffsetxOES */ (GLfixed factor, GLfixed units);
typedef void (APIENTRYP PFNGLROTATEXOESPROC) /* glRotatexOES */ (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLSCALEXOESPROC) /* glScalexOES */ (GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLTEXENVXOESPROC) /* glTexEnvxOES */ (GLenum target, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLTEXENVXVOESPROC) /* glTexEnvxvOES */ (GLenum target, GLenum pname, const GLfixed * params);
typedef void (APIENTRYP PFNGLTEXPARAMETERXOESPROC) /* glTexParameterxOES */ (GLenum target, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLTEXPARAMETERXVOESPROC) /* glTexParameterxvOES */ (GLenum target, GLenum pname, const GLfixed * params);
typedef void (APIENTRYP PFNGLTRANSLATEXOESPROC) /* glTranslatexOES */ (GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLACCUMXOESPROC) /* glAccumxOES */ (GLenum op, GLfixed value);
typedef void (APIENTRYP PFNGLBITMAPXOESPROC) /* glBitmapxOES */ (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte * bitmap);
typedef void (APIENTRYP PFNGLBLENDCOLORXOESPROC) /* glBlendColorxOES */ (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (APIENTRYP PFNGLCLEARACCUMXOESPROC) /* glClearAccumxOES */ (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (APIENTRYP PFNGLCOLOR3XOESPROC) /* glColor3xOES */ (GLfixed red, GLfixed green, GLfixed blue);
typedef void (APIENTRYP PFNGLCOLOR3XVOESPROC) /* glColor3xvOES */ (const GLfixed * components);
typedef void (APIENTRYP PFNGLCOLOR4XVOESPROC) /* glColor4xvOES */ (const GLfixed * components);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXOESPROC) /* glConvolutionParameterxOES */ (GLenum target, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXVOESPROC) /* glConvolutionParameterxvOES */ (GLenum target, GLenum pname, const GLfixed * params);
typedef void (APIENTRYP PFNGLEVALCOORD1XOESPROC) /* glEvalCoord1xOES */ (GLfixed u);
typedef void (APIENTRYP PFNGLEVALCOORD1XVOESPROC) /* glEvalCoord1xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLEVALCOORD2XOESPROC) /* glEvalCoord2xOES */ (GLfixed u, GLfixed v);
typedef void (APIENTRYP PFNGLEVALCOORD2XVOESPROC) /* glEvalCoord2xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLFEEDBACKBUFFERXOESPROC) /* glFeedbackBufferxOES */ (GLsizei n, GLenum type, const GLfixed * buffer);
typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERXVOESPROC) /* glGetConvolutionParameterxvOES */ (GLenum target, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERXVOESPROC) /* glGetHistogramParameterxvOES */ (GLenum target, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLGETLIGHTXOESPROC) /* glGetLightxOES */ (GLenum light, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLGETMAPXVOESPROC) /* glGetMapxvOES */ (GLenum target, GLenum query, GLfixed * v);
typedef void (APIENTRYP PFNGLGETMATERIALXOESPROC) /* glGetMaterialxOES */ (GLenum face, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLGETPIXELMAPXVPROC) /* glGetPixelMapxv */ (GLenum map, GLint size, GLfixed * values);
typedef void (APIENTRYP PFNGLGETTEXGENXVOESPROC) /* glGetTexGenxvOES */ (GLenum coord, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERXVOESPROC) /* glGetTexLevelParameterxvOES */ (GLenum target, GLint level, GLenum pname, GLfixed * params);
typedef void (APIENTRYP PFNGLINDEXXOESPROC) /* glIndexxOES */ (GLfixed component);
typedef void (APIENTRYP PFNGLINDEXXVOESPROC) /* glIndexxvOES */ (const GLfixed * component);
typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXXOESPROC) /* glLoadTransposeMatrixxOES */ (const GLfixed * m);
typedef void (APIENTRYP PFNGLMAP1XOESPROC) /* glMap1xOES */ (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
typedef void (APIENTRYP PFNGLMAP2XOESPROC) /* glMap2xOES */ (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
typedef void (APIENTRYP PFNGLMAPGRID1XOESPROC) /* glMapGrid1xOES */ (GLint n, GLfixed u1, GLfixed u2);
typedef void (APIENTRYP PFNGLMAPGRID2XOESPROC) /* glMapGrid2xOES */ (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXXOESPROC) /* glMultTransposeMatrixxOES */ (const GLfixed * m);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1XOESPROC) /* glMultiTexCoord1xOES */ (GLenum texture, GLfixed s);
typedef void (APIENTRYP PFNGLMULTITEXCOORD1XVOESPROC) /* glMultiTexCoord1xvOES */ (GLenum texture, const GLfixed * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2XOESPROC) /* glMultiTexCoord2xOES */ (GLenum texture, GLfixed s, GLfixed t);
typedef void (APIENTRYP PFNGLMULTITEXCOORD2XVOESPROC) /* glMultiTexCoord2xvOES */ (GLenum texture, const GLfixed * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3XOESPROC) /* glMultiTexCoord3xOES */ (GLenum texture, GLfixed s, GLfixed t, GLfixed r);
typedef void (APIENTRYP PFNGLMULTITEXCOORD3XVOESPROC) /* glMultiTexCoord3xvOES */ (GLenum texture, const GLfixed * coords);
typedef void (APIENTRYP PFNGLMULTITEXCOORD4XVOESPROC) /* glMultiTexCoord4xvOES */ (GLenum texture, const GLfixed * coords);
typedef void (APIENTRYP PFNGLNORMAL3XVOESPROC) /* glNormal3xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLPASSTHROUGHXOESPROC) /* glPassThroughxOES */ (GLfixed token);
typedef void (APIENTRYP PFNGLPIXELMAPXPROC) /* glPixelMapx */ (GLenum map, GLint size, const GLfixed * values);
typedef void (APIENTRYP PFNGLPIXELSTOREXPROC) /* glPixelStorex */ (GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLPIXELTRANSFERXOESPROC) /* glPixelTransferxOES */ (GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLPIXELZOOMXOESPROC) /* glPixelZoomxOES */ (GLfixed xfactor, GLfixed yfactor);
typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESXOESPROC) /* glPrioritizeTexturesxOES */ (GLsizei n, const GLuint * textures, const GLfixed * priorities);
typedef void (APIENTRYP PFNGLRASTERPOS2XOESPROC) /* glRasterPos2xOES */ (GLfixed x, GLfixed y);
typedef void (APIENTRYP PFNGLRASTERPOS2XVOESPROC) /* glRasterPos2xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLRASTERPOS3XOESPROC) /* glRasterPos3xOES */ (GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLRASTERPOS3XVOESPROC) /* glRasterPos3xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLRASTERPOS4XOESPROC) /* glRasterPos4xOES */ (GLfixed x, GLfixed y, GLfixed z, GLfixed w);
typedef void (APIENTRYP PFNGLRASTERPOS4XVOESPROC) /* glRasterPos4xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLRECTXOESPROC) /* glRectxOES */ (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
typedef void (APIENTRYP PFNGLRECTXVOESPROC) /* glRectxvOES */ (const GLfixed * v1, const GLfixed * v2);
typedef void (APIENTRYP PFNGLTEXCOORD1XOESPROC) /* glTexCoord1xOES */ (GLfixed s);
typedef void (APIENTRYP PFNGLTEXCOORD1XVOESPROC) /* glTexCoord1xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLTEXCOORD2XOESPROC) /* glTexCoord2xOES */ (GLfixed s, GLfixed t);
typedef void (APIENTRYP PFNGLTEXCOORD2XVOESPROC) /* glTexCoord2xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLTEXCOORD3XOESPROC) /* glTexCoord3xOES */ (GLfixed s, GLfixed t, GLfixed r);
typedef void (APIENTRYP PFNGLTEXCOORD3XVOESPROC) /* glTexCoord3xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLTEXCOORD4XOESPROC) /* glTexCoord4xOES */ (GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (APIENTRYP PFNGLTEXCOORD4XVOESPROC) /* glTexCoord4xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLTEXGENXOESPROC) /* glTexGenxOES */ (GLenum coord, GLenum pname, GLfixed param);
typedef void (APIENTRYP PFNGLTEXGENXVOESPROC) /* glTexGenxvOES */ (GLenum coord, GLenum pname, const GLfixed * params);
typedef void (APIENTRYP PFNGLVERTEX2XOESPROC) /* glVertex2xOES */ (GLfixed x);
typedef void (APIENTRYP PFNGLVERTEX2XVOESPROC) /* glVertex2xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLVERTEX3XOESPROC) /* glVertex3xOES */ (GLfixed x, GLfixed y);
typedef void (APIENTRYP PFNGLVERTEX3XVOESPROC) /* glVertex3xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLVERTEX4XOESPROC) /* glVertex4xOES */ (GLfixed x, GLfixed y, GLfixed z);
typedef void (APIENTRYP PFNGLVERTEX4XVOESPROC) /* glVertex4xvOES */ (const GLfixed * coords);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREOESPROC) /* glFramebufferTextureOES */ (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (APIENTRYP PFNGLGETPROGRAMBINARYOESPROC) /* glGetProgramBinaryOES */ (GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (APIENTRYP PFNGLPROGRAMBINARYOESPROC) /* glProgramBinaryOES */ (GLuint program, GLenum binaryFormat, const void * binary, GLint length);
typedef void * (APIENTRYP PFNGLMAPBUFFEROESPROC) /* glMapBufferOES */ (GLenum target, GLenum access);
typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFEROESPROC) /* glUnmapBufferOES */ (GLenum target);
typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVOESPROC) /* glGetBufferPointervOES */ (GLenum target, GLenum pname, void ** params);
typedef void (APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXOESPROC) /* glPrimitiveBoundingBoxOES */ (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef GLbitfield (APIENTRYP PFNGLQUERYMATRIXXOESPROC) /* glQueryMatrixxOES */ (GLfixed * mantissa, GLint * exponent);
typedef void (APIENTRYP PFNGLMINSAMPLESHADINGOESPROC) /* glMinSampleShadingOES */ (GLfloat value);
typedef void (APIENTRYP PFNGLCLEARDEPTHFOESPROC) /* glClearDepthfOES */ (GLclampf depth);
typedef void (APIENTRYP PFNGLCLIPPLANEFOESPROC) /* glClipPlanefOES */ (GLenum plane, const GLfloat * equation);
typedef void (APIENTRYP PFNGLDEPTHRANGEFOESPROC) /* glDepthRangefOES */ (GLclampf n, GLclampf f);
typedef void (APIENTRYP PFNGLFRUSTUMFOESPROC) /* glFrustumfOES */ (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (APIENTRYP PFNGLGETCLIPPLANEFOESPROC) /* glGetClipPlanefOES */ (GLenum plane, GLfloat * equation);
typedef void (APIENTRYP PFNGLORTHOFOESPROC) /* glOrthofOES */ (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (APIENTRYP PFNGLPATCHPARAMETERIOESPROC) /* glPatchParameteriOES */ (GLenum pname, GLint value);
typedef void (APIENTRYP PFNGLTEXIMAGE3DOESPROC) /* glTexImage3DOES */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DOESPROC) /* glTexSubImage3DOES */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DOESPROC) /* glCopyTexSubImage3DOES */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DOESPROC) /* glCompressedTexImage3DOES */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC) /* glCompressedTexSubImage3DOES */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DOESPROC) /* glFramebufferTexture3DOES */ (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (APIENTRYP PFNGLTEXPARAMETERIIVOESPROC) /* glTexParameterIivOES */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVOESPROC) /* glTexParameterIuivOES */ (GLenum target, GLenum pname, const GLuint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVOESPROC) /* glGetTexParameterIivOES */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVOESPROC) /* glGetTexParameterIuivOES */ (GLenum target, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVOESPROC) /* glSamplerParameterIivOES */ (GLuint sampler, GLenum pname, const GLint * param);
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVOESPROC) /* glSamplerParameterIuivOES */ (GLuint sampler, GLenum pname, const GLuint * param);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVOESPROC) /* glGetSamplerParameterIivOES */ (GLuint sampler, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVOESPROC) /* glGetSamplerParameterIuivOES */ (GLuint sampler, GLenum pname, GLuint * params);
typedef void (APIENTRYP PFNGLTEXBUFFEROESPROC) /* glTexBufferOES */ (GLenum target, GLenum internalformat, GLuint buffer);
typedef void (APIENTRYP PFNGLTEXBUFFERRANGEOESPROC) /* glTexBufferRangeOES */ (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC) /* glTexStorage3DMultisampleOES */ (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (APIENTRYP PFNGLTEXTUREVIEWOESPROC) /* glTextureViewOES */ (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void (APIENTRYP PFNGLBINDVERTEXARRAYOESPROC) /* glBindVertexArrayOES */ (GLuint array);
typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSOESPROC) /* glDeleteVertexArraysOES */ (GLsizei n, const GLuint * arrays);
typedef void (APIENTRYP PFNGLGENVERTEXARRAYSOESPROC) /* glGenVertexArraysOES */ (GLsizei n, GLuint * arrays);
typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYOESPROC) /* glIsVertexArrayOES */ (GLuint array);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) /* glFramebufferTextureMultiviewOVR */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC) /* glFramebufferTextureMultisampleMultiviewOVR */ (GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews);
typedef void (APIENTRYP PFNGLHINTPGIPROC) /* glHintPGI */ (GLenum target, GLint mode);
typedef void (APIENTRYP PFNGLALPHAFUNCQCOMPROC) /* glAlphaFuncQCOM */ (GLenum func, GLclampf ref);
typedef void (APIENTRYP PFNGLGETDRIVERCONTROLSQCOMPROC) /* glGetDriverControlsQCOM */ (GLint * num, GLsizei size, GLuint * driverControls);
typedef void (APIENTRYP PFNGLGETDRIVERCONTROLSTRINGQCOMPROC) /* glGetDriverControlStringQCOM */ (GLuint driverControl, GLsizei bufSize, GLsizei * length, GLchar * driverControlString);
typedef void (APIENTRYP PFNGLENABLEDRIVERCONTROLQCOMPROC) /* glEnableDriverControlQCOM */ (GLuint driverControl);
typedef void (APIENTRYP PFNGLDISABLEDRIVERCONTROLQCOMPROC) /* glDisableDriverControlQCOM */ (GLuint driverControl);
typedef void (APIENTRYP PFNGLEXTGETTEXTURESQCOMPROC) /* glExtGetTexturesQCOM */ (GLuint * textures, GLint maxTextures, GLint * numTextures);
typedef void (APIENTRYP PFNGLEXTGETBUFFERSQCOMPROC) /* glExtGetBuffersQCOM */ (GLuint * buffers, GLint maxBuffers, GLint * numBuffers);
typedef void (APIENTRYP PFNGLEXTGETRENDERBUFFERSQCOMPROC) /* glExtGetRenderbuffersQCOM */ (GLuint * renderbuffers, GLint maxRenderbuffers, GLint * numRenderbuffers);
typedef void (APIENTRYP PFNGLEXTGETFRAMEBUFFERSQCOMPROC) /* glExtGetFramebuffersQCOM */ (GLuint * framebuffers, GLint maxFramebuffers, GLint * numFramebuffers);
typedef void (APIENTRYP PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC) /* glExtGetTexLevelParameterivQCOM */ (GLuint texture, GLenum face, GLint level, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC) /* glExtTexObjectStateOverrideiQCOM */ (GLenum target, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLEXTGETTEXSUBIMAGEQCOMPROC) /* glExtGetTexSubImageQCOM */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void * texels);
typedef void (APIENTRYP PFNGLEXTGETBUFFERPOINTERVQCOMPROC) /* glExtGetBufferPointervQCOM */ (GLenum target, void ** params);
typedef void (APIENTRYP PFNGLEXTGETSHADERSQCOMPROC) /* glExtGetShadersQCOM */ (GLuint * shaders, GLint maxShaders, GLint * numShaders);
typedef void (APIENTRYP PFNGLEXTGETPROGRAMSQCOMPROC) /* glExtGetProgramsQCOM */ (GLuint * programs, GLint maxPrograms, GLint * numPrograms);
typedef GLboolean (APIENTRYP PFNGLEXTISPROGRAMBINARYQCOMPROC) /* glExtIsProgramBinaryQCOM */ (GLuint program);
typedef void (APIENTRYP PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC) /* glExtGetProgramBinarySourceQCOM */ (GLuint program, GLenum shadertype, GLchar * source, GLint * length);
typedef void (APIENTRYP PFNGLSTARTTILINGQCOMPROC) /* glStartTilingQCOM */ (GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
typedef void (APIENTRYP PFNGLENDTILINGQCOMPROC) /* glEndTilingQCOM */ (GLbitfield preserveMask);
typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) /* glDetailTexFuncSGIS */ (GLenum target, GLsizei n, const GLfloat * points);
typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) /* glGetDetailTexFuncSGIS */ (GLenum target, GLfloat * points);
typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) /* glFogFuncSGIS */ (GLsizei n, const GLfloat * points);
typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) /* glGetFogFuncSGIS */ (GLfloat * points);
typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) /* glSampleMaskSGIS */ (GLclampf value, GLboolean invert);
typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) /* glSamplePatternSGIS */ (GLenum pattern);
typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) /* glPixelTexGenParameteriSGIS */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) /* glPixelTexGenParameterivSGIS */ (GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) /* glPixelTexGenParameterfSGIS */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) /* glPixelTexGenParameterfvSGIS */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) /* glGetPixelTexGenParameterivSGIS */ (GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) /* glGetPixelTexGenParameterfvSGIS */ (GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) /* glPointParameterfSGIS */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) /* glPointParameterfvSGIS */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) /* glSharpenTexFuncSGIS */ (GLenum target, GLsizei n, const GLfloat * points);
typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) /* glGetSharpenTexFuncSGIS */ (GLenum target, GLfloat * points);
typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) /* glTexImage4DSGIS */ (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) /* glTexSubImage4DSGIS */ (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void * pixels);
typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) /* glTextureColorMaskSGIS */ (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) /* glGetTexFilterFuncSGIS */ (GLenum target, GLenum filter, GLfloat * weights);
typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) /* glTexFilterFuncSGIS */ (GLenum target, GLenum filter, GLsizei n, const GLfloat * weights);
typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) /* glAsyncMarkerSGIX */ (GLuint marker);
typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) /* glFinishAsyncSGIX */ (GLuint * markerp);
typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) /* glPollAsyncSGIX */ (GLuint * markerp);
typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) /* glGenAsyncMarkersSGIX */ (GLsizei range);
typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) /* glDeleteAsyncMarkersSGIX */ (GLuint marker, GLsizei range);
typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) /* glIsAsyncMarkerSGIX */ (GLuint marker);
typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) /* glFlushRasterSGIX */ ();
typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) /* glFragmentColorMaterialSGIX */ (GLenum face, GLenum mode);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) /* glFragmentLightfSGIX */ (GLenum light, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) /* glFragmentLightfvSGIX */ (GLenum light, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) /* glFragmentLightiSGIX */ (GLenum light, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) /* glFragmentLightivSGIX */ (GLenum light, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) /* glFragmentLightModelfSGIX */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) /* glFragmentLightModelfvSGIX */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) /* glFragmentLightModeliSGIX */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) /* glFragmentLightModelivSGIX */ (GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) /* glFragmentMaterialfSGIX */ (GLenum face, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) /* glFragmentMaterialfvSGIX */ (GLenum face, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) /* glFragmentMaterialiSGIX */ (GLenum face, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) /* glFragmentMaterialivSGIX */ (GLenum face, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) /* glGetFragmentLightfvSGIX */ (GLenum light, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) /* glGetFragmentLightivSGIX */ (GLenum light, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) /* glGetFragmentMaterialfvSGIX */ (GLenum face, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) /* glGetFragmentMaterialivSGIX */ (GLenum face, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) /* glLightEnviSGIX */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) /* glFrameZoomSGIX */ (GLint factor);
typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) /* glIglooInterfaceSGIX */ (GLenum pname, const void * params);
typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) /* glGetInstrumentsSGIX */ ();
typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) /* glInstrumentsBufferSGIX */ (GLsizei size, GLint * buffer);
typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) /* glPollInstrumentsSGIX */ (GLint * marker_p);
typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) /* glReadInstrumentsSGIX */ (GLint marker);
typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) /* glStartInstrumentsSGIX */ ();
typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) /* glStopInstrumentsSGIX */ (GLint marker);
typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) /* glGetListParameterfvSGIX */ (GLuint list, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) /* glGetListParameterivSGIX */ (GLuint list, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) /* glListParameterfSGIX */ (GLuint list, GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) /* glListParameterfvSGIX */ (GLuint list, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) /* glListParameteriSGIX */ (GLuint list, GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) /* glListParameterivSGIX */ (GLuint list, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) /* glPixelTexGenSGIX */ (GLenum mode);
typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) /* glDeformationMap3dSGIX */ (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble * points);
typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) /* glDeformationMap3fSGIX */ (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat * points);
typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) /* glDeformSGIX */ (GLbitfield mask);
typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) /* glLoadIdentityDeformationMapSGIX */ (GLbitfield mask);
typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) /* glReferencePlaneSGIX */ (const GLdouble * equation);
typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) /* glSpriteParameterfSGIX */ (GLenum pname, GLfloat param);
typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) /* glSpriteParameterfvSGIX */ (GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) /* glSpriteParameteriSGIX */ (GLenum pname, GLint param);
typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) /* glSpriteParameterivSGIX */ (GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) /* glTagSampleBufferSGIX */ ();
typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) /* glColorTableSGI */ (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) /* glColorTableParameterfvSGI */ (GLenum target, GLenum pname, const GLfloat * params);
typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) /* glColorTableParameterivSGI */ (GLenum target, GLenum pname, const GLint * params);
typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) /* glCopyColorTableSGI */ (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) /* glGetColorTableSGI */ (GLenum target, GLenum format, GLenum type, void * table);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) /* glGetColorTableParameterfvSGI */ (GLenum target, GLenum pname, GLfloat * params);
typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) /* glGetColorTableParameterivSGI */ (GLenum target, GLenum pname, GLint * params);
typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) /* glFinishTextureSUNX */ ();
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) /* glGlobalAlphaFactorbSUN */ (GLbyte factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) /* glGlobalAlphaFactorsSUN */ (GLshort factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) /* glGlobalAlphaFactoriSUN */ (GLint factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) /* glGlobalAlphaFactorfSUN */ (GLfloat factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) /* glGlobalAlphaFactordSUN */ (GLdouble factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) /* glGlobalAlphaFactorubSUN */ (GLubyte factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) /* glGlobalAlphaFactorusSUN */ (GLushort factor);
typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) /* glGlobalAlphaFactoruiSUN */ (GLuint factor);
typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) /* glDrawMeshArraysSUN */ (GLenum mode, GLint first, GLsizei count, GLsizei width);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) /* glReplacementCodeuiSUN */ (GLuint code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) /* glReplacementCodeusSUN */ (GLushort code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) /* glReplacementCodeubSUN */ (GLubyte code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) /* glReplacementCodeuivSUN */ (const GLuint * code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) /* glReplacementCodeusvSUN */ (const GLushort * code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) /* glReplacementCodeubvSUN */ (const GLubyte * code);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) /* glReplacementCodePointerSUN */ (GLenum type, GLsizei stride, const void ** pointer);
typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) /* glColor4ubVertex2fSUN */ (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) /* glColor4ubVertex2fvSUN */ (const GLubyte * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) /* glColor4ubVertex3fSUN */ (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) /* glColor4ubVertex3fvSUN */ (const GLubyte * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) /* glColor3fVertex3fSUN */ (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) /* glColor3fVertex3fvSUN */ (const GLfloat * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) /* glNormal3fVertex3fSUN */ (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) /* glNormal3fVertex3fvSUN */ (const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) /* glColor4fNormal3fVertex3fSUN */ (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) /* glColor4fNormal3fVertex3fvSUN */ (const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) /* glTexCoord2fVertex3fSUN */ (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) /* glTexCoord2fVertex3fvSUN */ (const GLfloat * tc, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) /* glTexCoord4fVertex4fSUN */ (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) /* glTexCoord4fVertex4fvSUN */ (const GLfloat * tc, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) /* glTexCoord2fColor4ubVertex3fSUN */ (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) /* glTexCoord2fColor4ubVertex3fvSUN */ (const GLfloat * tc, const GLubyte * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) /* glTexCoord2fColor3fVertex3fSUN */ (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) /* glTexCoord2fColor3fVertex3fvSUN */ (const GLfloat * tc, const GLfloat * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) /* glTexCoord2fNormal3fVertex3fSUN */ (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) /* glTexCoord2fNormal3fVertex3fvSUN */ (const GLfloat * tc, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) /* glTexCoord2fColor4fNormal3fVertex3fSUN */ (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) /* glTexCoord2fColor4fNormal3fVertex3fvSUN */ (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) /* glTexCoord4fColor4fNormal3fVertex4fSUN */ (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) /* glTexCoord4fColor4fNormal3fVertex4fvSUN */ (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) /* glReplacementCodeuiVertex3fSUN */ (GLuint rc, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) /* glReplacementCodeuiVertex3fvSUN */ (const GLuint * rc, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) /* glReplacementCodeuiColor4ubVertex3fSUN */ (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) /* glReplacementCodeuiColor4ubVertex3fvSUN */ (const GLuint * rc, const GLubyte * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) /* glReplacementCodeuiColor3fVertex3fSUN */ (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) /* glReplacementCodeuiColor3fVertex3fvSUN */ (const GLuint * rc, const GLfloat * c, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) /* glReplacementCodeuiNormal3fVertex3fSUN */ (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) /* glReplacementCodeuiNormal3fVertex3fvSUN */ (const GLuint * rc, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) /* glReplacementCodeuiColor4fNormal3fVertex3fSUN */ (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) /* glReplacementCodeuiColor4fNormal3fVertex3fvSUN */ (const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) /* glReplacementCodeuiTexCoord2fVertex3fSUN */ (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) /* glReplacementCodeuiTexCoord2fVertex3fvSUN */ (const GLuint * rc, const GLfloat * tc, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) /* glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN */ (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) /* glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN */ (const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) /* glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN */ (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) /* glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN */ (const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace glew
{

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class gl
  {
  public:

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    class DeviceConfig
    {
    public:

      bool m_featureSupported [GLEW_GL_FeatureSetCount];

      PFNGLDRAWARRAYSPROC m_glDrawArrays;
      PFNGLDRAWELEMENTSPROC m_glDrawElements;
      PFNGLGETPOINTERVPROC m_glGetPointerv;
      PFNGLPOLYGONOFFSETPROC m_glPolygonOffset;
      PFNGLCOPYTEXIMAGE1DPROC m_glCopyTexImage1D;
      PFNGLCOPYTEXIMAGE2DPROC m_glCopyTexImage2D;
      PFNGLCOPYTEXSUBIMAGE1DPROC m_glCopyTexSubImage1D;
      PFNGLCOPYTEXSUBIMAGE2DPROC m_glCopyTexSubImage2D;
      PFNGLTEXSUBIMAGE1DPROC m_glTexSubImage1D;
      PFNGLTEXSUBIMAGE2DPROC m_glTexSubImage2D;
      PFNGLBINDTEXTUREPROC m_glBindTexture;
      PFNGLDELETETEXTURESPROC m_glDeleteTextures;
      PFNGLGENTEXTURESPROC m_glGenTextures;
      PFNGLISTEXTUREPROC m_glIsTexture;
      PFNGLARRAYELEMENTPROC m_glArrayElement;
      PFNGLCOLORPOINTERPROC m_glColorPointer;
      PFNGLDISABLECLIENTSTATEPROC m_glDisableClientState;
      PFNGLEDGEFLAGPOINTERPROC m_glEdgeFlagPointer;
      PFNGLENABLECLIENTSTATEPROC m_glEnableClientState;
      PFNGLINDEXPOINTERPROC m_glIndexPointer;
      PFNGLINTERLEAVEDARRAYSPROC m_glInterleavedArrays;
      PFNGLNORMALPOINTERPROC m_glNormalPointer;
      PFNGLTEXCOORDPOINTERPROC m_glTexCoordPointer;
      PFNGLVERTEXPOINTERPROC m_glVertexPointer;
      PFNGLARETEXTURESRESIDENTPROC m_glAreTexturesResident;
      PFNGLPRIORITIZETEXTURESPROC m_glPrioritizeTextures;
      PFNGLINDEXUBPROC m_glIndexub;
      PFNGLINDEXUBVPROC m_glIndexubv;
      PFNGLPOPCLIENTATTRIBPROC m_glPopClientAttrib;
      PFNGLPUSHCLIENTATTRIBPROC m_glPushClientAttrib;
      PFNGLDRAWRANGEELEMENTSPROC m_glDrawRangeElements;
      PFNGLTEXIMAGE3DPROC m_glTexImage3D;
      PFNGLTEXSUBIMAGE3DPROC m_glTexSubImage3D;
      PFNGLCOPYTEXSUBIMAGE3DPROC m_glCopyTexSubImage3D;
      PFNGLACTIVETEXTUREPROC m_glActiveTexture;
      PFNGLSAMPLECOVERAGEPROC m_glSampleCoverage;
      PFNGLCOMPRESSEDTEXIMAGE3DPROC m_glCompressedTexImage3D;
      PFNGLCOMPRESSEDTEXIMAGE2DPROC m_glCompressedTexImage2D;
      PFNGLCOMPRESSEDTEXIMAGE1DPROC m_glCompressedTexImage1D;
      PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC m_glCompressedTexSubImage3D;
      PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC m_glCompressedTexSubImage2D;
      PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC m_glCompressedTexSubImage1D;
      PFNGLGETCOMPRESSEDTEXIMAGEPROC m_glGetCompressedTexImage;
      PFNGLCLIENTACTIVETEXTUREPROC m_glClientActiveTexture;
      PFNGLMULTITEXCOORD1DPROC m_glMultiTexCoord1d;
      PFNGLMULTITEXCOORD1DVPROC m_glMultiTexCoord1dv;
      PFNGLMULTITEXCOORD1FPROC m_glMultiTexCoord1f;
      PFNGLMULTITEXCOORD1FVPROC m_glMultiTexCoord1fv;
      PFNGLMULTITEXCOORD1IPROC m_glMultiTexCoord1i;
      PFNGLMULTITEXCOORD1IVPROC m_glMultiTexCoord1iv;
      PFNGLMULTITEXCOORD1SPROC m_glMultiTexCoord1s;
      PFNGLMULTITEXCOORD1SVPROC m_glMultiTexCoord1sv;
      PFNGLMULTITEXCOORD2DPROC m_glMultiTexCoord2d;
      PFNGLMULTITEXCOORD2DVPROC m_glMultiTexCoord2dv;
      PFNGLMULTITEXCOORD2FPROC m_glMultiTexCoord2f;
      PFNGLMULTITEXCOORD2FVPROC m_glMultiTexCoord2fv;
      PFNGLMULTITEXCOORD2IPROC m_glMultiTexCoord2i;
      PFNGLMULTITEXCOORD2IVPROC m_glMultiTexCoord2iv;
      PFNGLMULTITEXCOORD2SPROC m_glMultiTexCoord2s;
      PFNGLMULTITEXCOORD2SVPROC m_glMultiTexCoord2sv;
      PFNGLMULTITEXCOORD3DPROC m_glMultiTexCoord3d;
      PFNGLMULTITEXCOORD3DVPROC m_glMultiTexCoord3dv;
      PFNGLMULTITEXCOORD3FPROC m_glMultiTexCoord3f;
      PFNGLMULTITEXCOORD3FVPROC m_glMultiTexCoord3fv;
      PFNGLMULTITEXCOORD3IPROC m_glMultiTexCoord3i;
      PFNGLMULTITEXCOORD3IVPROC m_glMultiTexCoord3iv;
      PFNGLMULTITEXCOORD3SPROC m_glMultiTexCoord3s;
      PFNGLMULTITEXCOORD3SVPROC m_glMultiTexCoord3sv;
      PFNGLMULTITEXCOORD4DPROC m_glMultiTexCoord4d;
      PFNGLMULTITEXCOORD4DVPROC m_glMultiTexCoord4dv;
      PFNGLMULTITEXCOORD4FPROC m_glMultiTexCoord4f;
      PFNGLMULTITEXCOORD4FVPROC m_glMultiTexCoord4fv;
      PFNGLMULTITEXCOORD4IPROC m_glMultiTexCoord4i;
      PFNGLMULTITEXCOORD4IVPROC m_glMultiTexCoord4iv;
      PFNGLMULTITEXCOORD4SPROC m_glMultiTexCoord4s;
      PFNGLMULTITEXCOORD4SVPROC m_glMultiTexCoord4sv;
      PFNGLLOADTRANSPOSEMATRIXFPROC m_glLoadTransposeMatrixf;
      PFNGLLOADTRANSPOSEMATRIXDPROC m_glLoadTransposeMatrixd;
      PFNGLMULTTRANSPOSEMATRIXFPROC m_glMultTransposeMatrixf;
      PFNGLMULTTRANSPOSEMATRIXDPROC m_glMultTransposeMatrixd;
      PFNGLBLENDFUNCSEPARATEPROC m_glBlendFuncSeparate;
      PFNGLMULTIDRAWARRAYSPROC m_glMultiDrawArrays;
      PFNGLMULTIDRAWELEMENTSPROC m_glMultiDrawElements;
      PFNGLPOINTPARAMETERFPROC m_glPointParameterf;
      PFNGLPOINTPARAMETERFVPROC m_glPointParameterfv;
      PFNGLPOINTPARAMETERIPROC m_glPointParameteri;
      PFNGLPOINTPARAMETERIVPROC m_glPointParameteriv;
      PFNGLFOGCOORDFPROC m_glFogCoordf;
      PFNGLFOGCOORDFVPROC m_glFogCoordfv;
      PFNGLFOGCOORDDPROC m_glFogCoordd;
      PFNGLFOGCOORDDVPROC m_glFogCoorddv;
      PFNGLFOGCOORDPOINTERPROC m_glFogCoordPointer;
      PFNGLSECONDARYCOLOR3BPROC m_glSecondaryColor3b;
      PFNGLSECONDARYCOLOR3BVPROC m_glSecondaryColor3bv;
      PFNGLSECONDARYCOLOR3DPROC m_glSecondaryColor3d;
      PFNGLSECONDARYCOLOR3DVPROC m_glSecondaryColor3dv;
      PFNGLSECONDARYCOLOR3FPROC m_glSecondaryColor3f;
      PFNGLSECONDARYCOLOR3FVPROC m_glSecondaryColor3fv;
      PFNGLSECONDARYCOLOR3IPROC m_glSecondaryColor3i;
      PFNGLSECONDARYCOLOR3IVPROC m_glSecondaryColor3iv;
      PFNGLSECONDARYCOLOR3SPROC m_glSecondaryColor3s;
      PFNGLSECONDARYCOLOR3SVPROC m_glSecondaryColor3sv;
      PFNGLSECONDARYCOLOR3UBPROC m_glSecondaryColor3ub;
      PFNGLSECONDARYCOLOR3UBVPROC m_glSecondaryColor3ubv;
      PFNGLSECONDARYCOLOR3UIPROC m_glSecondaryColor3ui;
      PFNGLSECONDARYCOLOR3UIVPROC m_glSecondaryColor3uiv;
      PFNGLSECONDARYCOLOR3USPROC m_glSecondaryColor3us;
      PFNGLSECONDARYCOLOR3USVPROC m_glSecondaryColor3usv;
      PFNGLSECONDARYCOLORPOINTERPROC m_glSecondaryColorPointer;
      PFNGLWINDOWPOS2DPROC m_glWindowPos2d;
      PFNGLWINDOWPOS2DVPROC m_glWindowPos2dv;
      PFNGLWINDOWPOS2FPROC m_glWindowPos2f;
      PFNGLWINDOWPOS2FVPROC m_glWindowPos2fv;
      PFNGLWINDOWPOS2IPROC m_glWindowPos2i;
      PFNGLWINDOWPOS2IVPROC m_glWindowPos2iv;
      PFNGLWINDOWPOS2SPROC m_glWindowPos2s;
      PFNGLWINDOWPOS2SVPROC m_glWindowPos2sv;
      PFNGLWINDOWPOS3DPROC m_glWindowPos3d;
      PFNGLWINDOWPOS3DVPROC m_glWindowPos3dv;
      PFNGLWINDOWPOS3FPROC m_glWindowPos3f;
      PFNGLWINDOWPOS3FVPROC m_glWindowPos3fv;
      PFNGLWINDOWPOS3IPROC m_glWindowPos3i;
      PFNGLWINDOWPOS3IVPROC m_glWindowPos3iv;
      PFNGLWINDOWPOS3SPROC m_glWindowPos3s;
      PFNGLWINDOWPOS3SVPROC m_glWindowPos3sv;
      PFNGLBLENDCOLORPROC m_glBlendColor;
      PFNGLBLENDEQUATIONPROC m_glBlendEquation;
      PFNGLGENQUERIESPROC m_glGenQueries;
      PFNGLDELETEQUERIESPROC m_glDeleteQueries;
      PFNGLISQUERYPROC m_glIsQuery;
      PFNGLBEGINQUERYPROC m_glBeginQuery;
      PFNGLENDQUERYPROC m_glEndQuery;
      PFNGLGETQUERYIVPROC m_glGetQueryiv;
      PFNGLGETQUERYOBJECTIVPROC m_glGetQueryObjectiv;
      PFNGLGETQUERYOBJECTUIVPROC m_glGetQueryObjectuiv;
      PFNGLBINDBUFFERPROC m_glBindBuffer;
      PFNGLDELETEBUFFERSPROC m_glDeleteBuffers;
      PFNGLGENBUFFERSPROC m_glGenBuffers;
      PFNGLISBUFFERPROC m_glIsBuffer;
      PFNGLBUFFERDATAPROC m_glBufferData;
      PFNGLBUFFERSUBDATAPROC m_glBufferSubData;
      PFNGLGETBUFFERSUBDATAPROC m_glGetBufferSubData;
      PFNGLMAPBUFFERPROC m_glMapBuffer;
      PFNGLUNMAPBUFFERPROC m_glUnmapBuffer;
      PFNGLGETBUFFERPARAMETERIVPROC m_glGetBufferParameteriv;
      PFNGLGETBUFFERPOINTERVPROC m_glGetBufferPointerv;
      PFNGLBLENDEQUATIONSEPARATEPROC m_glBlendEquationSeparate;
      PFNGLDRAWBUFFERSPROC m_glDrawBuffers;
      PFNGLSTENCILOPSEPARATEPROC m_glStencilOpSeparate;
      PFNGLSTENCILFUNCSEPARATEPROC m_glStencilFuncSeparate;
      PFNGLSTENCILMASKSEPARATEPROC m_glStencilMaskSeparate;
      PFNGLATTACHSHADERPROC m_glAttachShader;
      PFNGLBINDATTRIBLOCATIONPROC m_glBindAttribLocation;
      PFNGLCOMPILESHADERPROC m_glCompileShader;
      PFNGLCREATEPROGRAMPROC m_glCreateProgram;
      PFNGLCREATESHADERPROC m_glCreateShader;
      PFNGLDELETEPROGRAMPROC m_glDeleteProgram;
      PFNGLDELETESHADERPROC m_glDeleteShader;
      PFNGLDETACHSHADERPROC m_glDetachShader;
      PFNGLDISABLEVERTEXATTRIBARRAYPROC m_glDisableVertexAttribArray;
      PFNGLENABLEVERTEXATTRIBARRAYPROC m_glEnableVertexAttribArray;
      PFNGLGETACTIVEATTRIBPROC m_glGetActiveAttrib;
      PFNGLGETACTIVEUNIFORMPROC m_glGetActiveUniform;
      PFNGLGETATTACHEDSHADERSPROC m_glGetAttachedShaders;
      PFNGLGETATTRIBLOCATIONPROC m_glGetAttribLocation;
      PFNGLGETPROGRAMIVPROC m_glGetProgramiv;
      PFNGLGETPROGRAMINFOLOGPROC m_glGetProgramInfoLog;
      PFNGLGETSHADERIVPROC m_glGetShaderiv;
      PFNGLGETSHADERINFOLOGPROC m_glGetShaderInfoLog;
      PFNGLGETSHADERSOURCEPROC m_glGetShaderSource;
      PFNGLGETUNIFORMLOCATIONPROC m_glGetUniformLocation;
      PFNGLGETUNIFORMFVPROC m_glGetUniformfv;
      PFNGLGETUNIFORMIVPROC m_glGetUniformiv;
      PFNGLGETVERTEXATTRIBDVPROC m_glGetVertexAttribdv;
      PFNGLGETVERTEXATTRIBFVPROC m_glGetVertexAttribfv;
      PFNGLGETVERTEXATTRIBIVPROC m_glGetVertexAttribiv;
      PFNGLGETVERTEXATTRIBPOINTERVPROC m_glGetVertexAttribPointerv;
      PFNGLISPROGRAMPROC m_glIsProgram;
      PFNGLISSHADERPROC m_glIsShader;
      PFNGLLINKPROGRAMPROC m_glLinkProgram;
      PFNGLSHADERSOURCEPROC m_glShaderSource;
      PFNGLUSEPROGRAMPROC m_glUseProgram;
      PFNGLUNIFORM1FPROC m_glUniform1f;
      PFNGLUNIFORM2FPROC m_glUniform2f;
      PFNGLUNIFORM3FPROC m_glUniform3f;
      PFNGLUNIFORM4FPROC m_glUniform4f;
      PFNGLUNIFORM1IPROC m_glUniform1i;
      PFNGLUNIFORM2IPROC m_glUniform2i;
      PFNGLUNIFORM3IPROC m_glUniform3i;
      PFNGLUNIFORM4IPROC m_glUniform4i;
      PFNGLUNIFORM1FVPROC m_glUniform1fv;
      PFNGLUNIFORM2FVPROC m_glUniform2fv;
      PFNGLUNIFORM3FVPROC m_glUniform3fv;
      PFNGLUNIFORM4FVPROC m_glUniform4fv;
      PFNGLUNIFORM1IVPROC m_glUniform1iv;
      PFNGLUNIFORM2IVPROC m_glUniform2iv;
      PFNGLUNIFORM3IVPROC m_glUniform3iv;
      PFNGLUNIFORM4IVPROC m_glUniform4iv;
      PFNGLUNIFORMMATRIX2FVPROC m_glUniformMatrix2fv;
      PFNGLUNIFORMMATRIX3FVPROC m_glUniformMatrix3fv;
      PFNGLUNIFORMMATRIX4FVPROC m_glUniformMatrix4fv;
      PFNGLVALIDATEPROGRAMPROC m_glValidateProgram;
      PFNGLVERTEXATTRIB1DPROC m_glVertexAttrib1d;
      PFNGLVERTEXATTRIB1DVPROC m_glVertexAttrib1dv;
      PFNGLVERTEXATTRIB1FPROC m_glVertexAttrib1f;
      PFNGLVERTEXATTRIB1FVPROC m_glVertexAttrib1fv;
      PFNGLVERTEXATTRIB1SPROC m_glVertexAttrib1s;
      PFNGLVERTEXATTRIB1SVPROC m_glVertexAttrib1sv;
      PFNGLVERTEXATTRIB2DPROC m_glVertexAttrib2d;
      PFNGLVERTEXATTRIB2DVPROC m_glVertexAttrib2dv;
      PFNGLVERTEXATTRIB2FPROC m_glVertexAttrib2f;
      PFNGLVERTEXATTRIB2FVPROC m_glVertexAttrib2fv;
      PFNGLVERTEXATTRIB2SPROC m_glVertexAttrib2s;
      PFNGLVERTEXATTRIB2SVPROC m_glVertexAttrib2sv;
      PFNGLVERTEXATTRIB3DPROC m_glVertexAttrib3d;
      PFNGLVERTEXATTRIB3DVPROC m_glVertexAttrib3dv;
      PFNGLVERTEXATTRIB3FPROC m_glVertexAttrib3f;
      PFNGLVERTEXATTRIB3FVPROC m_glVertexAttrib3fv;
      PFNGLVERTEXATTRIB3SPROC m_glVertexAttrib3s;
      PFNGLVERTEXATTRIB3SVPROC m_glVertexAttrib3sv;
      PFNGLVERTEXATTRIB4NBVPROC m_glVertexAttrib4Nbv;
      PFNGLVERTEXATTRIB4NIVPROC m_glVertexAttrib4Niv;
      PFNGLVERTEXATTRIB4NSVPROC m_glVertexAttrib4Nsv;
      PFNGLVERTEXATTRIB4NUBPROC m_glVertexAttrib4Nub;
      PFNGLVERTEXATTRIB4NUBVPROC m_glVertexAttrib4Nubv;
      PFNGLVERTEXATTRIB4NUIVPROC m_glVertexAttrib4Nuiv;
      PFNGLVERTEXATTRIB4NUSVPROC m_glVertexAttrib4Nusv;
      PFNGLVERTEXATTRIB4BVPROC m_glVertexAttrib4bv;
      PFNGLVERTEXATTRIB4DPROC m_glVertexAttrib4d;
      PFNGLVERTEXATTRIB4DVPROC m_glVertexAttrib4dv;
      PFNGLVERTEXATTRIB4FPROC m_glVertexAttrib4f;
      PFNGLVERTEXATTRIB4FVPROC m_glVertexAttrib4fv;
      PFNGLVERTEXATTRIB4IVPROC m_glVertexAttrib4iv;
      PFNGLVERTEXATTRIB4SPROC m_glVertexAttrib4s;
      PFNGLVERTEXATTRIB4SVPROC m_glVertexAttrib4sv;
      PFNGLVERTEXATTRIB4UBVPROC m_glVertexAttrib4ubv;
      PFNGLVERTEXATTRIB4UIVPROC m_glVertexAttrib4uiv;
      PFNGLVERTEXATTRIB4USVPROC m_glVertexAttrib4usv;
      PFNGLVERTEXATTRIBPOINTERPROC m_glVertexAttribPointer;
      PFNGLUNIFORMMATRIX2X3FVPROC m_glUniformMatrix2x3fv;
      PFNGLUNIFORMMATRIX3X2FVPROC m_glUniformMatrix3x2fv;
      PFNGLUNIFORMMATRIX2X4FVPROC m_glUniformMatrix2x4fv;
      PFNGLUNIFORMMATRIX4X2FVPROC m_glUniformMatrix4x2fv;
      PFNGLUNIFORMMATRIX3X4FVPROC m_glUniformMatrix3x4fv;
      PFNGLUNIFORMMATRIX4X3FVPROC m_glUniformMatrix4x3fv;
      PFNGLCOLORMASKIPROC m_glColorMaski;
      PFNGLGETBOOLEANI_VPROC m_glGetBooleani_v;
      PFNGLGETINTEGERI_VPROC m_glGetIntegeri_v;
      PFNGLENABLEIPROC m_glEnablei;
      PFNGLDISABLEIPROC m_glDisablei;
      PFNGLISENABLEDIPROC m_glIsEnabledi;
      PFNGLBEGINTRANSFORMFEEDBACKPROC m_glBeginTransformFeedback;
      PFNGLENDTRANSFORMFEEDBACKPROC m_glEndTransformFeedback;
      PFNGLBINDBUFFERRANGEPROC m_glBindBufferRange;
      PFNGLBINDBUFFERBASEPROC m_glBindBufferBase;
      PFNGLTRANSFORMFEEDBACKVARYINGSPROC m_glTransformFeedbackVaryings;
      PFNGLGETTRANSFORMFEEDBACKVARYINGPROC m_glGetTransformFeedbackVarying;
      PFNGLCLAMPCOLORPROC m_glClampColor;
      PFNGLBEGINCONDITIONALRENDERPROC m_glBeginConditionalRender;
      PFNGLENDCONDITIONALRENDERPROC m_glEndConditionalRender;
      PFNGLVERTEXATTRIBIPOINTERPROC m_glVertexAttribIPointer;
      PFNGLGETVERTEXATTRIBIIVPROC m_glGetVertexAttribIiv;
      PFNGLGETVERTEXATTRIBIUIVPROC m_glGetVertexAttribIuiv;
      PFNGLVERTEXATTRIBI1IPROC m_glVertexAttribI1i;
      PFNGLVERTEXATTRIBI2IPROC m_glVertexAttribI2i;
      PFNGLVERTEXATTRIBI3IPROC m_glVertexAttribI3i;
      PFNGLVERTEXATTRIBI4IPROC m_glVertexAttribI4i;
      PFNGLVERTEXATTRIBI1UIPROC m_glVertexAttribI1ui;
      PFNGLVERTEXATTRIBI2UIPROC m_glVertexAttribI2ui;
      PFNGLVERTEXATTRIBI3UIPROC m_glVertexAttribI3ui;
      PFNGLVERTEXATTRIBI4UIPROC m_glVertexAttribI4ui;
      PFNGLVERTEXATTRIBI1IVPROC m_glVertexAttribI1iv;
      PFNGLVERTEXATTRIBI2IVPROC m_glVertexAttribI2iv;
      PFNGLVERTEXATTRIBI3IVPROC m_glVertexAttribI3iv;
      PFNGLVERTEXATTRIBI4IVPROC m_glVertexAttribI4iv;
      PFNGLVERTEXATTRIBI1UIVPROC m_glVertexAttribI1uiv;
      PFNGLVERTEXATTRIBI2UIVPROC m_glVertexAttribI2uiv;
      PFNGLVERTEXATTRIBI3UIVPROC m_glVertexAttribI3uiv;
      PFNGLVERTEXATTRIBI4UIVPROC m_glVertexAttribI4uiv;
      PFNGLVERTEXATTRIBI4BVPROC m_glVertexAttribI4bv;
      PFNGLVERTEXATTRIBI4SVPROC m_glVertexAttribI4sv;
      PFNGLVERTEXATTRIBI4UBVPROC m_glVertexAttribI4ubv;
      PFNGLVERTEXATTRIBI4USVPROC m_glVertexAttribI4usv;
      PFNGLGETUNIFORMUIVPROC m_glGetUniformuiv;
      PFNGLBINDFRAGDATALOCATIONPROC m_glBindFragDataLocation;
      PFNGLGETFRAGDATALOCATIONPROC m_glGetFragDataLocation;
      PFNGLUNIFORM1UIPROC m_glUniform1ui;
      PFNGLUNIFORM2UIPROC m_glUniform2ui;
      PFNGLUNIFORM3UIPROC m_glUniform3ui;
      PFNGLUNIFORM4UIPROC m_glUniform4ui;
      PFNGLUNIFORM1UIVPROC m_glUniform1uiv;
      PFNGLUNIFORM2UIVPROC m_glUniform2uiv;
      PFNGLUNIFORM3UIVPROC m_glUniform3uiv;
      PFNGLUNIFORM4UIVPROC m_glUniform4uiv;
      PFNGLTEXPARAMETERIIVPROC m_glTexParameterIiv;
      PFNGLTEXPARAMETERIUIVPROC m_glTexParameterIuiv;
      PFNGLGETTEXPARAMETERIIVPROC m_glGetTexParameterIiv;
      PFNGLGETTEXPARAMETERIUIVPROC m_glGetTexParameterIuiv;
      PFNGLCLEARBUFFERIVPROC m_glClearBufferiv;
      PFNGLCLEARBUFFERUIVPROC m_glClearBufferuiv;
      PFNGLCLEARBUFFERFVPROC m_glClearBufferfv;
      PFNGLCLEARBUFFERFIPROC m_glClearBufferfi;
      PFNGLGETSTRINGIPROC m_glGetStringi;
      PFNGLISRENDERBUFFERPROC m_glIsRenderbuffer;
      PFNGLBINDRENDERBUFFERPROC m_glBindRenderbuffer;
      PFNGLDELETERENDERBUFFERSPROC m_glDeleteRenderbuffers;
      PFNGLGENRENDERBUFFERSPROC m_glGenRenderbuffers;
      PFNGLRENDERBUFFERSTORAGEPROC m_glRenderbufferStorage;
      PFNGLGETRENDERBUFFERPARAMETERIVPROC m_glGetRenderbufferParameteriv;
      PFNGLISFRAMEBUFFERPROC m_glIsFramebuffer;
      PFNGLBINDFRAMEBUFFERPROC m_glBindFramebuffer;
      PFNGLDELETEFRAMEBUFFERSPROC m_glDeleteFramebuffers;
      PFNGLGENFRAMEBUFFERSPROC m_glGenFramebuffers;
      PFNGLCHECKFRAMEBUFFERSTATUSPROC m_glCheckFramebufferStatus;
      PFNGLFRAMEBUFFERTEXTURE1DPROC m_glFramebufferTexture1D;
      PFNGLFRAMEBUFFERTEXTURE2DPROC m_glFramebufferTexture2D;
      PFNGLFRAMEBUFFERTEXTURE3DPROC m_glFramebufferTexture3D;
      PFNGLFRAMEBUFFERRENDERBUFFERPROC m_glFramebufferRenderbuffer;
      PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC m_glGetFramebufferAttachmentParameteriv;
      PFNGLGENERATEMIPMAPPROC m_glGenerateMipmap;
      PFNGLBLITFRAMEBUFFERPROC m_glBlitFramebuffer;
      PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC m_glRenderbufferStorageMultisample;
      PFNGLFRAMEBUFFERTEXTURELAYERPROC m_glFramebufferTextureLayer;
      PFNGLMAPBUFFERRANGEPROC m_glMapBufferRange;
      PFNGLFLUSHMAPPEDBUFFERRANGEPROC m_glFlushMappedBufferRange;
      PFNGLBINDVERTEXARRAYPROC m_glBindVertexArray;
      PFNGLDELETEVERTEXARRAYSPROC m_glDeleteVertexArrays;
      PFNGLGENVERTEXARRAYSPROC m_glGenVertexArrays;
      PFNGLISVERTEXARRAYPROC m_glIsVertexArray;
      PFNGLDRAWARRAYSINSTANCEDPROC m_glDrawArraysInstanced;
      PFNGLDRAWELEMENTSINSTANCEDPROC m_glDrawElementsInstanced;
      PFNGLTEXBUFFERPROC m_glTexBuffer;
      PFNGLPRIMITIVERESTARTINDEXPROC m_glPrimitiveRestartIndex;
      PFNGLCOPYBUFFERSUBDATAPROC m_glCopyBufferSubData;
      PFNGLGETUNIFORMINDICESPROC m_glGetUniformIndices;
      PFNGLGETACTIVEUNIFORMSIVPROC m_glGetActiveUniformsiv;
      PFNGLGETACTIVEUNIFORMNAMEPROC m_glGetActiveUniformName;
      PFNGLGETUNIFORMBLOCKINDEXPROC m_glGetUniformBlockIndex;
      PFNGLGETACTIVEUNIFORMBLOCKIVPROC m_glGetActiveUniformBlockiv;
      PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC m_glGetActiveUniformBlockName;
      PFNGLUNIFORMBLOCKBINDINGPROC m_glUniformBlockBinding;
      PFNGLDRAWELEMENTSBASEVERTEXPROC m_glDrawElementsBaseVertex;
      PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC m_glDrawRangeElementsBaseVertex;
      PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC m_glDrawElementsInstancedBaseVertex;
      PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC m_glMultiDrawElementsBaseVertex;
      PFNGLPROVOKINGVERTEXPROC m_glProvokingVertex;
      PFNGLFENCESYNCPROC m_glFenceSync;
      PFNGLISSYNCPROC m_glIsSync;
      PFNGLDELETESYNCPROC m_glDeleteSync;
      PFNGLCLIENTWAITSYNCPROC m_glClientWaitSync;
      PFNGLWAITSYNCPROC m_glWaitSync;
      PFNGLGETINTEGER64VPROC m_glGetInteger64v;
      PFNGLGETSYNCIVPROC m_glGetSynciv;
      PFNGLGETINTEGER64I_VPROC m_glGetInteger64i_v;
      PFNGLGETBUFFERPARAMETERI64VPROC m_glGetBufferParameteri64v;
      PFNGLFRAMEBUFFERTEXTUREPROC m_glFramebufferTexture;
      PFNGLTEXIMAGE2DMULTISAMPLEPROC m_glTexImage2DMultisample;
      PFNGLTEXIMAGE3DMULTISAMPLEPROC m_glTexImage3DMultisample;
      PFNGLGETMULTISAMPLEFVPROC m_glGetMultisamplefv;
      PFNGLSAMPLEMASKIPROC m_glSampleMaski;
      PFNGLBINDFRAGDATALOCATIONINDEXEDPROC m_glBindFragDataLocationIndexed;
      PFNGLGETFRAGDATAINDEXPROC m_glGetFragDataIndex;
      PFNGLGENSAMPLERSPROC m_glGenSamplers;
      PFNGLDELETESAMPLERSPROC m_glDeleteSamplers;
      PFNGLISSAMPLERPROC m_glIsSampler;
      PFNGLBINDSAMPLERPROC m_glBindSampler;
      PFNGLSAMPLERPARAMETERIPROC m_glSamplerParameteri;
      PFNGLSAMPLERPARAMETERIVPROC m_glSamplerParameteriv;
      PFNGLSAMPLERPARAMETERFPROC m_glSamplerParameterf;
      PFNGLSAMPLERPARAMETERFVPROC m_glSamplerParameterfv;
      PFNGLSAMPLERPARAMETERIIVPROC m_glSamplerParameterIiv;
      PFNGLSAMPLERPARAMETERIUIVPROC m_glSamplerParameterIuiv;
      PFNGLGETSAMPLERPARAMETERIVPROC m_glGetSamplerParameteriv;
      PFNGLGETSAMPLERPARAMETERIIVPROC m_glGetSamplerParameterIiv;
      PFNGLGETSAMPLERPARAMETERFVPROC m_glGetSamplerParameterfv;
      PFNGLGETSAMPLERPARAMETERIUIVPROC m_glGetSamplerParameterIuiv;
      PFNGLQUERYCOUNTERPROC m_glQueryCounter;
      PFNGLGETQUERYOBJECTI64VPROC m_glGetQueryObjecti64v;
      PFNGLGETQUERYOBJECTUI64VPROC m_glGetQueryObjectui64v;
      PFNGLVERTEXATTRIBDIVISORPROC m_glVertexAttribDivisor;
      PFNGLVERTEXATTRIBP1UIPROC m_glVertexAttribP1ui;
      PFNGLVERTEXATTRIBP1UIVPROC m_glVertexAttribP1uiv;
      PFNGLVERTEXATTRIBP2UIPROC m_glVertexAttribP2ui;
      PFNGLVERTEXATTRIBP2UIVPROC m_glVertexAttribP2uiv;
      PFNGLVERTEXATTRIBP3UIPROC m_glVertexAttribP3ui;
      PFNGLVERTEXATTRIBP3UIVPROC m_glVertexAttribP3uiv;
      PFNGLVERTEXATTRIBP4UIPROC m_glVertexAttribP4ui;
      PFNGLVERTEXATTRIBP4UIVPROC m_glVertexAttribP4uiv;
      PFNGLVERTEXP2UIPROC m_glVertexP2ui;
      PFNGLVERTEXP2UIVPROC m_glVertexP2uiv;
      PFNGLVERTEXP3UIPROC m_glVertexP3ui;
      PFNGLVERTEXP3UIVPROC m_glVertexP3uiv;
      PFNGLVERTEXP4UIPROC m_glVertexP4ui;
      PFNGLVERTEXP4UIVPROC m_glVertexP4uiv;
      PFNGLTEXCOORDP1UIPROC m_glTexCoordP1ui;
      PFNGLTEXCOORDP1UIVPROC m_glTexCoordP1uiv;
      PFNGLTEXCOORDP2UIPROC m_glTexCoordP2ui;
      PFNGLTEXCOORDP2UIVPROC m_glTexCoordP2uiv;
      PFNGLTEXCOORDP3UIPROC m_glTexCoordP3ui;
      PFNGLTEXCOORDP3UIVPROC m_glTexCoordP3uiv;
      PFNGLTEXCOORDP4UIPROC m_glTexCoordP4ui;
      PFNGLTEXCOORDP4UIVPROC m_glTexCoordP4uiv;
      PFNGLMULTITEXCOORDP1UIPROC m_glMultiTexCoordP1ui;
      PFNGLMULTITEXCOORDP1UIVPROC m_glMultiTexCoordP1uiv;
      PFNGLMULTITEXCOORDP2UIPROC m_glMultiTexCoordP2ui;
      PFNGLMULTITEXCOORDP2UIVPROC m_glMultiTexCoordP2uiv;
      PFNGLMULTITEXCOORDP3UIPROC m_glMultiTexCoordP3ui;
      PFNGLMULTITEXCOORDP3UIVPROC m_glMultiTexCoordP3uiv;
      PFNGLMULTITEXCOORDP4UIPROC m_glMultiTexCoordP4ui;
      PFNGLMULTITEXCOORDP4UIVPROC m_glMultiTexCoordP4uiv;
      PFNGLNORMALP3UIPROC m_glNormalP3ui;
      PFNGLNORMALP3UIVPROC m_glNormalP3uiv;
      PFNGLCOLORP3UIPROC m_glColorP3ui;
      PFNGLCOLORP3UIVPROC m_glColorP3uiv;
      PFNGLCOLORP4UIPROC m_glColorP4ui;
      PFNGLCOLORP4UIVPROC m_glColorP4uiv;
      PFNGLSECONDARYCOLORP3UIPROC m_glSecondaryColorP3ui;
      PFNGLSECONDARYCOLORP3UIVPROC m_glSecondaryColorP3uiv;
      PFNGLMINSAMPLESHADINGPROC m_glMinSampleShading;
      PFNGLBLENDEQUATIONIPROC m_glBlendEquationi;
      PFNGLBLENDEQUATIONSEPARATEIPROC m_glBlendEquationSeparatei;
      PFNGLBLENDFUNCIPROC m_glBlendFunci;
      PFNGLBLENDFUNCSEPARATEIPROC m_glBlendFuncSeparatei;
      PFNGLDRAWARRAYSINDIRECTPROC m_glDrawArraysIndirect;
      PFNGLDRAWELEMENTSINDIRECTPROC m_glDrawElementsIndirect;
      PFNGLUNIFORM1DPROC m_glUniform1d;
      PFNGLUNIFORM2DPROC m_glUniform2d;
      PFNGLUNIFORM3DPROC m_glUniform3d;
      PFNGLUNIFORM4DPROC m_glUniform4d;
      PFNGLUNIFORM1DVPROC m_glUniform1dv;
      PFNGLUNIFORM2DVPROC m_glUniform2dv;
      PFNGLUNIFORM3DVPROC m_glUniform3dv;
      PFNGLUNIFORM4DVPROC m_glUniform4dv;
      PFNGLUNIFORMMATRIX2DVPROC m_glUniformMatrix2dv;
      PFNGLUNIFORMMATRIX3DVPROC m_glUniformMatrix3dv;
      PFNGLUNIFORMMATRIX4DVPROC m_glUniformMatrix4dv;
      PFNGLUNIFORMMATRIX2X3DVPROC m_glUniformMatrix2x3dv;
      PFNGLUNIFORMMATRIX2X4DVPROC m_glUniformMatrix2x4dv;
      PFNGLUNIFORMMATRIX3X2DVPROC m_glUniformMatrix3x2dv;
      PFNGLUNIFORMMATRIX3X4DVPROC m_glUniformMatrix3x4dv;
      PFNGLUNIFORMMATRIX4X2DVPROC m_glUniformMatrix4x2dv;
      PFNGLUNIFORMMATRIX4X3DVPROC m_glUniformMatrix4x3dv;
      PFNGLGETUNIFORMDVPROC m_glGetUniformdv;
      PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC m_glGetSubroutineUniformLocation;
      PFNGLGETSUBROUTINEINDEXPROC m_glGetSubroutineIndex;
      PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC m_glGetActiveSubroutineUniformiv;
      PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC m_glGetActiveSubroutineUniformName;
      PFNGLGETACTIVESUBROUTINENAMEPROC m_glGetActiveSubroutineName;
      PFNGLUNIFORMSUBROUTINESUIVPROC m_glUniformSubroutinesuiv;
      PFNGLGETUNIFORMSUBROUTINEUIVPROC m_glGetUniformSubroutineuiv;
      PFNGLGETPROGRAMSTAGEIVPROC m_glGetProgramStageiv;
      PFNGLPATCHPARAMETERIPROC m_glPatchParameteri;
      PFNGLPATCHPARAMETERFVPROC m_glPatchParameterfv;
      PFNGLBINDTRANSFORMFEEDBACKPROC m_glBindTransformFeedback;
      PFNGLDELETETRANSFORMFEEDBACKSPROC m_glDeleteTransformFeedbacks;
      PFNGLGENTRANSFORMFEEDBACKSPROC m_glGenTransformFeedbacks;
      PFNGLISTRANSFORMFEEDBACKPROC m_glIsTransformFeedback;
      PFNGLPAUSETRANSFORMFEEDBACKPROC m_glPauseTransformFeedback;
      PFNGLRESUMETRANSFORMFEEDBACKPROC m_glResumeTransformFeedback;
      PFNGLDRAWTRANSFORMFEEDBACKPROC m_glDrawTransformFeedback;
      PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC m_glDrawTransformFeedbackStream;
      PFNGLBEGINQUERYINDEXEDPROC m_glBeginQueryIndexed;
      PFNGLENDQUERYINDEXEDPROC m_glEndQueryIndexed;
      PFNGLGETQUERYINDEXEDIVPROC m_glGetQueryIndexediv;
      PFNGLRELEASESHADERCOMPILERPROC m_glReleaseShaderCompiler;
      PFNGLSHADERBINARYPROC m_glShaderBinary;
      PFNGLGETSHADERPRECISIONFORMATPROC m_glGetShaderPrecisionFormat;
      PFNGLDEPTHRANGEFPROC m_glDepthRangef;
      PFNGLCLEARDEPTHFPROC m_glClearDepthf;
      PFNGLGETPROGRAMBINARYPROC m_glGetProgramBinary;
      PFNGLPROGRAMBINARYPROC m_glProgramBinary;
      PFNGLPROGRAMPARAMETERIPROC m_glProgramParameteri;
      PFNGLUSEPROGRAMSTAGESPROC m_glUseProgramStages;
      PFNGLACTIVESHADERPROGRAMPROC m_glActiveShaderProgram;
      PFNGLCREATESHADERPROGRAMVPROC m_glCreateShaderProgramv;
      PFNGLBINDPROGRAMPIPELINEPROC m_glBindProgramPipeline;
      PFNGLDELETEPROGRAMPIPELINESPROC m_glDeleteProgramPipelines;
      PFNGLGENPROGRAMPIPELINESPROC m_glGenProgramPipelines;
      PFNGLISPROGRAMPIPELINEPROC m_glIsProgramPipeline;
      PFNGLGETPROGRAMPIPELINEIVPROC m_glGetProgramPipelineiv;
      PFNGLPROGRAMUNIFORM1IPROC m_glProgramUniform1i;
      PFNGLPROGRAMUNIFORM1IVPROC m_glProgramUniform1iv;
      PFNGLPROGRAMUNIFORM1FPROC m_glProgramUniform1f;
      PFNGLPROGRAMUNIFORM1FVPROC m_glProgramUniform1fv;
      PFNGLPROGRAMUNIFORM1DPROC m_glProgramUniform1d;
      PFNGLPROGRAMUNIFORM1DVPROC m_glProgramUniform1dv;
      PFNGLPROGRAMUNIFORM1UIPROC m_glProgramUniform1ui;
      PFNGLPROGRAMUNIFORM1UIVPROC m_glProgramUniform1uiv;
      PFNGLPROGRAMUNIFORM2IPROC m_glProgramUniform2i;
      PFNGLPROGRAMUNIFORM2IVPROC m_glProgramUniform2iv;
      PFNGLPROGRAMUNIFORM2FPROC m_glProgramUniform2f;
      PFNGLPROGRAMUNIFORM2FVPROC m_glProgramUniform2fv;
      PFNGLPROGRAMUNIFORM2DPROC m_glProgramUniform2d;
      PFNGLPROGRAMUNIFORM2DVPROC m_glProgramUniform2dv;
      PFNGLPROGRAMUNIFORM2UIPROC m_glProgramUniform2ui;
      PFNGLPROGRAMUNIFORM2UIVPROC m_glProgramUniform2uiv;
      PFNGLPROGRAMUNIFORM3IPROC m_glProgramUniform3i;
      PFNGLPROGRAMUNIFORM3IVPROC m_glProgramUniform3iv;
      PFNGLPROGRAMUNIFORM3FPROC m_glProgramUniform3f;
      PFNGLPROGRAMUNIFORM3FVPROC m_glProgramUniform3fv;
      PFNGLPROGRAMUNIFORM3DPROC m_glProgramUniform3d;
      PFNGLPROGRAMUNIFORM3DVPROC m_glProgramUniform3dv;
      PFNGLPROGRAMUNIFORM3UIPROC m_glProgramUniform3ui;
      PFNGLPROGRAMUNIFORM3UIVPROC m_glProgramUniform3uiv;
      PFNGLPROGRAMUNIFORM4IPROC m_glProgramUniform4i;
      PFNGLPROGRAMUNIFORM4IVPROC m_glProgramUniform4iv;
      PFNGLPROGRAMUNIFORM4FPROC m_glProgramUniform4f;
      PFNGLPROGRAMUNIFORM4FVPROC m_glProgramUniform4fv;
      PFNGLPROGRAMUNIFORM4DPROC m_glProgramUniform4d;
      PFNGLPROGRAMUNIFORM4DVPROC m_glProgramUniform4dv;
      PFNGLPROGRAMUNIFORM4UIPROC m_glProgramUniform4ui;
      PFNGLPROGRAMUNIFORM4UIVPROC m_glProgramUniform4uiv;
      PFNGLPROGRAMUNIFORMMATRIX2FVPROC m_glProgramUniformMatrix2fv;
      PFNGLPROGRAMUNIFORMMATRIX3FVPROC m_glProgramUniformMatrix3fv;
      PFNGLPROGRAMUNIFORMMATRIX4FVPROC m_glProgramUniformMatrix4fv;
      PFNGLPROGRAMUNIFORMMATRIX2DVPROC m_glProgramUniformMatrix2dv;
      PFNGLPROGRAMUNIFORMMATRIX3DVPROC m_glProgramUniformMatrix3dv;
      PFNGLPROGRAMUNIFORMMATRIX4DVPROC m_glProgramUniformMatrix4dv;
      PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC m_glProgramUniformMatrix2x3fv;
      PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC m_glProgramUniformMatrix3x2fv;
      PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC m_glProgramUniformMatrix2x4fv;
      PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC m_glProgramUniformMatrix4x2fv;
      PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC m_glProgramUniformMatrix3x4fv;
      PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC m_glProgramUniformMatrix4x3fv;
      PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC m_glProgramUniformMatrix2x3dv;
      PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC m_glProgramUniformMatrix3x2dv;
      PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC m_glProgramUniformMatrix2x4dv;
      PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC m_glProgramUniformMatrix4x2dv;
      PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC m_glProgramUniformMatrix3x4dv;
      PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC m_glProgramUniformMatrix4x3dv;
      PFNGLVALIDATEPROGRAMPIPELINEPROC m_glValidateProgramPipeline;
      PFNGLGETPROGRAMPIPELINEINFOLOGPROC m_glGetProgramPipelineInfoLog;
      PFNGLVERTEXATTRIBL1DPROC m_glVertexAttribL1d;
      PFNGLVERTEXATTRIBL2DPROC m_glVertexAttribL2d;
      PFNGLVERTEXATTRIBL3DPROC m_glVertexAttribL3d;
      PFNGLVERTEXATTRIBL4DPROC m_glVertexAttribL4d;
      PFNGLVERTEXATTRIBL1DVPROC m_glVertexAttribL1dv;
      PFNGLVERTEXATTRIBL2DVPROC m_glVertexAttribL2dv;
      PFNGLVERTEXATTRIBL3DVPROC m_glVertexAttribL3dv;
      PFNGLVERTEXATTRIBL4DVPROC m_glVertexAttribL4dv;
      PFNGLVERTEXATTRIBLPOINTERPROC m_glVertexAttribLPointer;
      PFNGLGETVERTEXATTRIBLDVPROC m_glGetVertexAttribLdv;
      PFNGLVIEWPORTARRAYVPROC m_glViewportArrayv;
      PFNGLVIEWPORTINDEXEDFPROC m_glViewportIndexedf;
      PFNGLVIEWPORTINDEXEDFVPROC m_glViewportIndexedfv;
      PFNGLSCISSORARRAYVPROC m_glScissorArrayv;
      PFNGLSCISSORINDEXEDPROC m_glScissorIndexed;
      PFNGLSCISSORINDEXEDVPROC m_glScissorIndexedv;
      PFNGLDEPTHRANGEARRAYVPROC m_glDepthRangeArrayv;
      PFNGLDEPTHRANGEINDEXEDPROC m_glDepthRangeIndexed;
      PFNGLGETFLOATI_VPROC m_glGetFloati_v;
      PFNGLGETDOUBLEI_VPROC m_glGetDoublei_v;
      PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC m_glDrawArraysInstancedBaseInstance;
      PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC m_glDrawElementsInstancedBaseInstance;
      PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC m_glDrawElementsInstancedBaseVertexBaseInstance;
      PFNGLGETINTERNALFORMATIVPROC m_glGetInternalformativ;
      PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC m_glGetActiveAtomicCounterBufferiv;
      PFNGLBINDIMAGETEXTUREPROC m_glBindImageTexture;
      PFNGLMEMORYBARRIERPROC m_glMemoryBarrier;
      PFNGLTEXSTORAGE1DPROC m_glTexStorage1D;
      PFNGLTEXSTORAGE2DPROC m_glTexStorage2D;
      PFNGLTEXSTORAGE3DPROC m_glTexStorage3D;
      PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC m_glDrawTransformFeedbackInstanced;
      PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC m_glDrawTransformFeedbackStreamInstanced;
      PFNGLCLEARBUFFERDATAPROC m_glClearBufferData;
      PFNGLCLEARBUFFERSUBDATAPROC m_glClearBufferSubData;
      PFNGLDISPATCHCOMPUTEPROC m_glDispatchCompute;
      PFNGLDISPATCHCOMPUTEINDIRECTPROC m_glDispatchComputeIndirect;
      PFNGLCOPYIMAGESUBDATAPROC m_glCopyImageSubData;
      PFNGLFRAMEBUFFERPARAMETERIPROC m_glFramebufferParameteri;
      PFNGLGETFRAMEBUFFERPARAMETERIVPROC m_glGetFramebufferParameteriv;
      PFNGLGETINTERNALFORMATI64VPROC m_glGetInternalformati64v;
      PFNGLINVALIDATETEXSUBIMAGEPROC m_glInvalidateTexSubImage;
      PFNGLINVALIDATETEXIMAGEPROC m_glInvalidateTexImage;
      PFNGLINVALIDATEBUFFERSUBDATAPROC m_glInvalidateBufferSubData;
      PFNGLINVALIDATEBUFFERDATAPROC m_glInvalidateBufferData;
      PFNGLINVALIDATEFRAMEBUFFERPROC m_glInvalidateFramebuffer;
      PFNGLINVALIDATESUBFRAMEBUFFERPROC m_glInvalidateSubFramebuffer;
      PFNGLMULTIDRAWARRAYSINDIRECTPROC m_glMultiDrawArraysIndirect;
      PFNGLMULTIDRAWELEMENTSINDIRECTPROC m_glMultiDrawElementsIndirect;
      PFNGLGETPROGRAMINTERFACEIVPROC m_glGetProgramInterfaceiv;
      PFNGLGETPROGRAMRESOURCEINDEXPROC m_glGetProgramResourceIndex;
      PFNGLGETPROGRAMRESOURCENAMEPROC m_glGetProgramResourceName;
      PFNGLGETPROGRAMRESOURCEIVPROC m_glGetProgramResourceiv;
      PFNGLGETPROGRAMRESOURCELOCATIONPROC m_glGetProgramResourceLocation;
      PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC m_glGetProgramResourceLocationIndex;
      PFNGLSHADERSTORAGEBLOCKBINDINGPROC m_glShaderStorageBlockBinding;
      PFNGLTEXBUFFERRANGEPROC m_glTexBufferRange;
      PFNGLTEXSTORAGE2DMULTISAMPLEPROC m_glTexStorage2DMultisample;
      PFNGLTEXSTORAGE3DMULTISAMPLEPROC m_glTexStorage3DMultisample;
      PFNGLTEXTUREVIEWPROC m_glTextureView;
      PFNGLBINDVERTEXBUFFERPROC m_glBindVertexBuffer;
      PFNGLVERTEXATTRIBFORMATPROC m_glVertexAttribFormat;
      PFNGLVERTEXATTRIBIFORMATPROC m_glVertexAttribIFormat;
      PFNGLVERTEXATTRIBLFORMATPROC m_glVertexAttribLFormat;
      PFNGLVERTEXATTRIBBINDINGPROC m_glVertexAttribBinding;
      PFNGLVERTEXBINDINGDIVISORPROC m_glVertexBindingDivisor;
      PFNGLDEBUGMESSAGECONTROLPROC m_glDebugMessageControl;
      PFNGLDEBUGMESSAGEINSERTPROC m_glDebugMessageInsert;
      PFNGLDEBUGMESSAGECALLBACKPROC m_glDebugMessageCallback;
      PFNGLGETDEBUGMESSAGELOGPROC m_glGetDebugMessageLog;
      PFNGLPUSHDEBUGGROUPPROC m_glPushDebugGroup;
      PFNGLPOPDEBUGGROUPPROC m_glPopDebugGroup;
      PFNGLOBJECTLABELPROC m_glObjectLabel;
      PFNGLGETOBJECTLABELPROC m_glGetObjectLabel;
      PFNGLOBJECTPTRLABELPROC m_glObjectPtrLabel;
      PFNGLGETOBJECTPTRLABELPROC m_glGetObjectPtrLabel;
      PFNGLBUFFERSTORAGEPROC m_glBufferStorage;
      PFNGLCLEARTEXIMAGEPROC m_glClearTexImage;
      PFNGLCLEARTEXSUBIMAGEPROC m_glClearTexSubImage;
      PFNGLBINDBUFFERSBASEPROC m_glBindBuffersBase;
      PFNGLBINDBUFFERSRANGEPROC m_glBindBuffersRange;
      PFNGLBINDTEXTURESPROC m_glBindTextures;
      PFNGLBINDSAMPLERSPROC m_glBindSamplers;
      PFNGLBINDIMAGETEXTURESPROC m_glBindImageTextures;
      PFNGLBINDVERTEXBUFFERSPROC m_glBindVertexBuffers;
      PFNGLCLIPCONTROLPROC m_glClipControl;
      PFNGLCREATETRANSFORMFEEDBACKSPROC m_glCreateTransformFeedbacks;
      PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC m_glTransformFeedbackBufferBase;
      PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC m_glTransformFeedbackBufferRange;
      PFNGLGETTRANSFORMFEEDBACKIVPROC m_glGetTransformFeedbackiv;
      PFNGLGETTRANSFORMFEEDBACKI_VPROC m_glGetTransformFeedbacki_v;
      PFNGLGETTRANSFORMFEEDBACKI64_VPROC m_glGetTransformFeedbacki64_v;
      PFNGLCREATEBUFFERSPROC m_glCreateBuffers;
      PFNGLNAMEDBUFFERSTORAGEPROC m_glNamedBufferStorage;
      PFNGLNAMEDBUFFERDATAPROC m_glNamedBufferData;
      PFNGLNAMEDBUFFERSUBDATAPROC m_glNamedBufferSubData;
      PFNGLCOPYNAMEDBUFFERSUBDATAPROC m_glCopyNamedBufferSubData;
      PFNGLCLEARNAMEDBUFFERDATAPROC m_glClearNamedBufferData;
      PFNGLCLEARNAMEDBUFFERSUBDATAPROC m_glClearNamedBufferSubData;
      PFNGLMAPNAMEDBUFFERPROC m_glMapNamedBuffer;
      PFNGLMAPNAMEDBUFFERRANGEPROC m_glMapNamedBufferRange;
      PFNGLUNMAPNAMEDBUFFERPROC m_glUnmapNamedBuffer;
      PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC m_glFlushMappedNamedBufferRange;
      PFNGLGETNAMEDBUFFERPARAMETERIVPROC m_glGetNamedBufferParameteriv;
      PFNGLGETNAMEDBUFFERPARAMETERI64VPROC m_glGetNamedBufferParameteri64v;
      PFNGLGETNAMEDBUFFERPOINTERVPROC m_glGetNamedBufferPointerv;
      PFNGLGETNAMEDBUFFERSUBDATAPROC m_glGetNamedBufferSubData;
      PFNGLCREATEFRAMEBUFFERSPROC m_glCreateFramebuffers;
      PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC m_glNamedFramebufferRenderbuffer;
      PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC m_glNamedFramebufferParameteri;
      PFNGLNAMEDFRAMEBUFFERTEXTUREPROC m_glNamedFramebufferTexture;
      PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC m_glNamedFramebufferTextureLayer;
      PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC m_glNamedFramebufferDrawBuffer;
      PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC m_glNamedFramebufferDrawBuffers;
      PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC m_glNamedFramebufferReadBuffer;
      PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC m_glInvalidateNamedFramebufferData;
      PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC m_glInvalidateNamedFramebufferSubData;
      PFNGLCLEARNAMEDFRAMEBUFFERIVPROC m_glClearNamedFramebufferiv;
      PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC m_glClearNamedFramebufferuiv;
      PFNGLCLEARNAMEDFRAMEBUFFERFVPROC m_glClearNamedFramebufferfv;
      PFNGLCLEARNAMEDFRAMEBUFFERFIPROC m_glClearNamedFramebufferfi;
      PFNGLBLITNAMEDFRAMEBUFFERPROC m_glBlitNamedFramebuffer;
      PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC m_glCheckNamedFramebufferStatus;
      PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC m_glGetNamedFramebufferParameteriv;
      PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC m_glGetNamedFramebufferAttachmentParameteriv;
      PFNGLCREATERENDERBUFFERSPROC m_glCreateRenderbuffers;
      PFNGLNAMEDRENDERBUFFERSTORAGEPROC m_glNamedRenderbufferStorage;
      PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC m_glNamedRenderbufferStorageMultisample;
      PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC m_glGetNamedRenderbufferParameteriv;
      PFNGLCREATETEXTURESPROC m_glCreateTextures;
      PFNGLTEXTUREBUFFERPROC m_glTextureBuffer;
      PFNGLTEXTUREBUFFERRANGEPROC m_glTextureBufferRange;
      PFNGLTEXTURESTORAGE1DPROC m_glTextureStorage1D;
      PFNGLTEXTURESTORAGE2DPROC m_glTextureStorage2D;
      PFNGLTEXTURESTORAGE3DPROC m_glTextureStorage3D;
      PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC m_glTextureStorage2DMultisample;
      PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC m_glTextureStorage3DMultisample;
      PFNGLTEXTURESUBIMAGE1DPROC m_glTextureSubImage1D;
      PFNGLTEXTURESUBIMAGE2DPROC m_glTextureSubImage2D;
      PFNGLTEXTURESUBIMAGE3DPROC m_glTextureSubImage3D;
      PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC m_glCompressedTextureSubImage1D;
      PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC m_glCompressedTextureSubImage2D;
      PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC m_glCompressedTextureSubImage3D;
      PFNGLCOPYTEXTURESUBIMAGE1DPROC m_glCopyTextureSubImage1D;
      PFNGLCOPYTEXTURESUBIMAGE2DPROC m_glCopyTextureSubImage2D;
      PFNGLCOPYTEXTURESUBIMAGE3DPROC m_glCopyTextureSubImage3D;
      PFNGLTEXTUREPARAMETERFPROC m_glTextureParameterf;
      PFNGLTEXTUREPARAMETERFVPROC m_glTextureParameterfv;
      PFNGLTEXTUREPARAMETERIPROC m_glTextureParameteri;
      PFNGLTEXTUREPARAMETERIIVPROC m_glTextureParameterIiv;
      PFNGLTEXTUREPARAMETERIUIVPROC m_glTextureParameterIuiv;
      PFNGLTEXTUREPARAMETERIVPROC m_glTextureParameteriv;
      PFNGLGENERATETEXTUREMIPMAPPROC m_glGenerateTextureMipmap;
      PFNGLBINDTEXTUREUNITPROC m_glBindTextureUnit;
      PFNGLGETTEXTUREIMAGEPROC m_glGetTextureImage;
      PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC m_glGetCompressedTextureImage;
      PFNGLGETTEXTURELEVELPARAMETERFVPROC m_glGetTextureLevelParameterfv;
      PFNGLGETTEXTURELEVELPARAMETERIVPROC m_glGetTextureLevelParameteriv;
      PFNGLGETTEXTUREPARAMETERFVPROC m_glGetTextureParameterfv;
      PFNGLGETTEXTUREPARAMETERIIVPROC m_glGetTextureParameterIiv;
      PFNGLGETTEXTUREPARAMETERIUIVPROC m_glGetTextureParameterIuiv;
      PFNGLGETTEXTUREPARAMETERIVPROC m_glGetTextureParameteriv;
      PFNGLCREATEVERTEXARRAYSPROC m_glCreateVertexArrays;
      PFNGLDISABLEVERTEXARRAYATTRIBPROC m_glDisableVertexArrayAttrib;
      PFNGLENABLEVERTEXARRAYATTRIBPROC m_glEnableVertexArrayAttrib;
      PFNGLVERTEXARRAYELEMENTBUFFERPROC m_glVertexArrayElementBuffer;
      PFNGLVERTEXARRAYVERTEXBUFFERPROC m_glVertexArrayVertexBuffer;
      PFNGLVERTEXARRAYVERTEXBUFFERSPROC m_glVertexArrayVertexBuffers;
      PFNGLVERTEXARRAYATTRIBBINDINGPROC m_glVertexArrayAttribBinding;
      PFNGLVERTEXARRAYATTRIBFORMATPROC m_glVertexArrayAttribFormat;
      PFNGLVERTEXARRAYATTRIBIFORMATPROC m_glVertexArrayAttribIFormat;
      PFNGLVERTEXARRAYATTRIBLFORMATPROC m_glVertexArrayAttribLFormat;
      PFNGLVERTEXARRAYBINDINGDIVISORPROC m_glVertexArrayBindingDivisor;
      PFNGLGETVERTEXARRAYIVPROC m_glGetVertexArrayiv;
      PFNGLGETVERTEXARRAYINDEXEDIVPROC m_glGetVertexArrayIndexediv;
      PFNGLGETVERTEXARRAYINDEXED64IVPROC m_glGetVertexArrayIndexed64iv;
      PFNGLCREATESAMPLERSPROC m_glCreateSamplers;
      PFNGLCREATEPROGRAMPIPELINESPROC m_glCreateProgramPipelines;
      PFNGLCREATEQUERIESPROC m_glCreateQueries;
      PFNGLGETQUERYBUFFEROBJECTI64VPROC m_glGetQueryBufferObjecti64v;
      PFNGLGETQUERYBUFFEROBJECTIVPROC m_glGetQueryBufferObjectiv;
      PFNGLGETQUERYBUFFEROBJECTUI64VPROC m_glGetQueryBufferObjectui64v;
      PFNGLGETQUERYBUFFEROBJECTUIVPROC m_glGetQueryBufferObjectuiv;
      PFNGLMEMORYBARRIERBYREGIONPROC m_glMemoryBarrierByRegion;
      PFNGLGETTEXTURESUBIMAGEPROC m_glGetTextureSubImage;
      PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC m_glGetCompressedTextureSubImage;
      PFNGLGETGRAPHICSRESETSTATUSPROC m_glGetGraphicsResetStatus;
      PFNGLGETNCOMPRESSEDTEXIMAGEPROC m_glGetnCompressedTexImage;
      PFNGLGETNTEXIMAGEPROC m_glGetnTexImage;
      PFNGLGETNUNIFORMDVPROC m_glGetnUniformdv;
      PFNGLGETNUNIFORMFVPROC m_glGetnUniformfv;
      PFNGLGETNUNIFORMIVPROC m_glGetnUniformiv;
      PFNGLGETNUNIFORMUIVPROC m_glGetnUniformuiv;
      PFNGLREADNPIXELSPROC m_glReadnPixels;
      PFNGLGETNMAPDVPROC m_glGetnMapdv;
      PFNGLGETNMAPFVPROC m_glGetnMapfv;
      PFNGLGETNMAPIVPROC m_glGetnMapiv;
      PFNGLGETNPIXELMAPFVPROC m_glGetnPixelMapfv;
      PFNGLGETNPIXELMAPUIVPROC m_glGetnPixelMapuiv;
      PFNGLGETNPIXELMAPUSVPROC m_glGetnPixelMapusv;
      PFNGLGETNPOLYGONSTIPPLEPROC m_glGetnPolygonStipple;
      PFNGLGETNCOLORTABLEPROC m_glGetnColorTable;
      PFNGLGETNCONVOLUTIONFILTERPROC m_glGetnConvolutionFilter;
      PFNGLGETNSEPARABLEFILTERPROC m_glGetnSeparableFilter;
      PFNGLGETNHISTOGRAMPROC m_glGetnHistogram;
      PFNGLGETNMINMAXPROC m_glGetnMinmax;
      PFNGLTEXTUREBARRIERPROC m_glTextureBarrier;
      PFNGLBLENDFUNCPROC m_glBlendFunc;
      PFNGLCLEARPROC m_glClear;
      PFNGLCLEARCOLORPROC m_glClearColor;
      PFNGLCLEARSTENCILPROC m_glClearStencil;
      PFNGLCOLORMASKPROC m_glColorMask;
      PFNGLCULLFACEPROC m_glCullFace;
      PFNGLDEPTHFUNCPROC m_glDepthFunc;
      PFNGLDEPTHMASKPROC m_glDepthMask;
      PFNGLDISABLEPROC m_glDisable;
      PFNGLENABLEPROC m_glEnable;
      PFNGLFINISHPROC m_glFinish;
      PFNGLFLUSHPROC m_glFlush;
      PFNGLFRONTFACEPROC m_glFrontFace;
      PFNGLGETBOOLEANVPROC m_glGetBooleanv;
      PFNGLGETERRORPROC m_glGetError;
      PFNGLGETFLOATVPROC m_glGetFloatv;
      PFNGLGETINTEGERVPROC m_glGetIntegerv;
      PFNGLGETSTRINGPROC m_glGetString;
      PFNGLGETTEXPARAMETERFVPROC m_glGetTexParameterfv;
      PFNGLGETTEXPARAMETERIVPROC m_glGetTexParameteriv;
      PFNGLHINTPROC m_glHint;
      PFNGLISENABLEDPROC m_glIsEnabled;
      PFNGLLINEWIDTHPROC m_glLineWidth;
      PFNGLPIXELSTOREIPROC m_glPixelStorei;
      PFNGLREADPIXELSPROC m_glReadPixels;
      PFNGLSCISSORPROC m_glScissor;
      PFNGLSTENCILFUNCPROC m_glStencilFunc;
      PFNGLSTENCILMASKPROC m_glStencilMask;
      PFNGLSTENCILOPPROC m_glStencilOp;
      PFNGLTEXIMAGE2DPROC m_glTexImage2D;
      PFNGLTEXPARAMETERFPROC m_glTexParameterf;
      PFNGLTEXPARAMETERFVPROC m_glTexParameterfv;
      PFNGLTEXPARAMETERIPROC m_glTexParameteri;
      PFNGLTEXPARAMETERIVPROC m_glTexParameteriv;
      PFNGLVIEWPORTPROC m_glViewport;
      PFNGLREADBUFFERPROC m_glReadBuffer;
      PFNGLGETTEXLEVELPARAMETERIVPROC m_glGetTexLevelParameteriv;
      PFNGLGETTEXLEVELPARAMETERFVPROC m_glGetTexLevelParameterfv;
      PFNGLBLENDBARRIERPROC m_glBlendBarrier;
      PFNGLPRIMITIVEBOUNDINGBOXPROC m_glPrimitiveBoundingBox;
      PFNGLTBUFFERMASK3DFXPROC m_glTbufferMask3DFX;
      PFNGLDEBUGMESSAGEENABLEAMDPROC m_glDebugMessageEnableAMD;
      PFNGLDEBUGMESSAGEINSERTAMDPROC m_glDebugMessageInsertAMD;
      PFNGLDEBUGMESSAGECALLBACKAMDPROC m_glDebugMessageCallbackAMD;
      PFNGLGETDEBUGMESSAGELOGAMDPROC m_glGetDebugMessageLogAMD;
      PFNGLBLENDFUNCINDEXEDAMDPROC m_glBlendFuncIndexedAMD;
      PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC m_glBlendFuncSeparateIndexedAMD;
      PFNGLBLENDEQUATIONINDEXEDAMDPROC m_glBlendEquationIndexedAMD;
      PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC m_glBlendEquationSeparateIndexedAMD;
      PFNGLUNIFORM1I64NVPROC m_glUniform1i64NV;
      PFNGLUNIFORM2I64NVPROC m_glUniform2i64NV;
      PFNGLUNIFORM3I64NVPROC m_glUniform3i64NV;
      PFNGLUNIFORM4I64NVPROC m_glUniform4i64NV;
      PFNGLUNIFORM1I64VNVPROC m_glUniform1i64vNV;
      PFNGLUNIFORM2I64VNVPROC m_glUniform2i64vNV;
      PFNGLUNIFORM3I64VNVPROC m_glUniform3i64vNV;
      PFNGLUNIFORM4I64VNVPROC m_glUniform4i64vNV;
      PFNGLUNIFORM1UI64NVPROC m_glUniform1ui64NV;
      PFNGLUNIFORM2UI64NVPROC m_glUniform2ui64NV;
      PFNGLUNIFORM3UI64NVPROC m_glUniform3ui64NV;
      PFNGLUNIFORM4UI64NVPROC m_glUniform4ui64NV;
      PFNGLUNIFORM1UI64VNVPROC m_glUniform1ui64vNV;
      PFNGLUNIFORM2UI64VNVPROC m_glUniform2ui64vNV;
      PFNGLUNIFORM3UI64VNVPROC m_glUniform3ui64vNV;
      PFNGLUNIFORM4UI64VNVPROC m_glUniform4ui64vNV;
      PFNGLGETUNIFORMI64VNVPROC m_glGetUniformi64vNV;
      PFNGLGETUNIFORMUI64VNVPROC m_glGetUniformui64vNV;
      PFNGLPROGRAMUNIFORM1I64NVPROC m_glProgramUniform1i64NV;
      PFNGLPROGRAMUNIFORM2I64NVPROC m_glProgramUniform2i64NV;
      PFNGLPROGRAMUNIFORM3I64NVPROC m_glProgramUniform3i64NV;
      PFNGLPROGRAMUNIFORM4I64NVPROC m_glProgramUniform4i64NV;
      PFNGLPROGRAMUNIFORM1I64VNVPROC m_glProgramUniform1i64vNV;
      PFNGLPROGRAMUNIFORM2I64VNVPROC m_glProgramUniform2i64vNV;
      PFNGLPROGRAMUNIFORM3I64VNVPROC m_glProgramUniform3i64vNV;
      PFNGLPROGRAMUNIFORM4I64VNVPROC m_glProgramUniform4i64vNV;
      PFNGLPROGRAMUNIFORM1UI64NVPROC m_glProgramUniform1ui64NV;
      PFNGLPROGRAMUNIFORM2UI64NVPROC m_glProgramUniform2ui64NV;
      PFNGLPROGRAMUNIFORM3UI64NVPROC m_glProgramUniform3ui64NV;
      PFNGLPROGRAMUNIFORM4UI64NVPROC m_glProgramUniform4ui64NV;
      PFNGLPROGRAMUNIFORM1UI64VNVPROC m_glProgramUniform1ui64vNV;
      PFNGLPROGRAMUNIFORM2UI64VNVPROC m_glProgramUniform2ui64vNV;
      PFNGLPROGRAMUNIFORM3UI64VNVPROC m_glProgramUniform3ui64vNV;
      PFNGLPROGRAMUNIFORM4UI64VNVPROC m_glProgramUniform4ui64vNV;
      PFNGLVERTEXATTRIBPARAMETERIAMDPROC m_glVertexAttribParameteriAMD;
      PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC m_glMultiDrawArraysIndirectAMD;
      PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC m_glMultiDrawElementsIndirectAMD;
      PFNGLGENNAMESAMDPROC m_glGenNamesAMD;
      PFNGLDELETENAMESAMDPROC m_glDeleteNamesAMD;
      PFNGLISNAMEAMDPROC m_glIsNameAMD;
      PFNGLQUERYOBJECTPARAMETERUIAMDPROC m_glQueryObjectParameteruiAMD;
      PFNGLGETPERFMONITORGROUPSAMDPROC m_glGetPerfMonitorGroupsAMD;
      PFNGLGETPERFMONITORCOUNTERSAMDPROC m_glGetPerfMonitorCountersAMD;
      PFNGLGETPERFMONITORGROUPSTRINGAMDPROC m_glGetPerfMonitorGroupStringAMD;
      PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC m_glGetPerfMonitorCounterStringAMD;
      PFNGLGETPERFMONITORCOUNTERINFOAMDPROC m_glGetPerfMonitorCounterInfoAMD;
      PFNGLGENPERFMONITORSAMDPROC m_glGenPerfMonitorsAMD;
      PFNGLDELETEPERFMONITORSAMDPROC m_glDeletePerfMonitorsAMD;
      PFNGLSELECTPERFMONITORCOUNTERSAMDPROC m_glSelectPerfMonitorCountersAMD;
      PFNGLBEGINPERFMONITORAMDPROC m_glBeginPerfMonitorAMD;
      PFNGLENDPERFMONITORAMDPROC m_glEndPerfMonitorAMD;
      PFNGLGETPERFMONITORCOUNTERDATAAMDPROC m_glGetPerfMonitorCounterDataAMD;
      PFNGLSETMULTISAMPLEFVAMDPROC m_glSetMultisamplefvAMD;
      PFNGLTEXSTORAGESPARSEAMDPROC m_glTexStorageSparseAMD;
      PFNGLTEXTURESTORAGESPARSEAMDPROC m_glTextureStorageSparseAMD;
      PFNGLSTENCILOPVALUEAMDPROC m_glStencilOpValueAMD;
      PFNGLTESSELLATIONFACTORAMDPROC m_glTessellationFactorAMD;
      PFNGLTESSELLATIONMODEAMDPROC m_glTessellationModeAMD;
      PFNGLBLITFRAMEBUFFERANGLEPROC m_glBlitFramebufferANGLE;
      PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC m_glRenderbufferStorageMultisampleANGLE;
      PFNGLDRAWARRAYSINSTANCEDANGLEPROC m_glDrawArraysInstancedANGLE;
      PFNGLDRAWELEMENTSINSTANCEDANGLEPROC m_glDrawElementsInstancedANGLE;
      PFNGLVERTEXATTRIBDIVISORANGLEPROC m_glVertexAttribDivisorANGLE;
      PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC m_glGetTranslatedShaderSourceANGLE;
      PFNGLCOPYTEXTURELEVELSAPPLEPROC m_glCopyTextureLevelsAPPLE;
      PFNGLELEMENTPOINTERAPPLEPROC m_glElementPointerAPPLE;
      PFNGLDRAWELEMENTARRAYAPPLEPROC m_glDrawElementArrayAPPLE;
      PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC m_glDrawRangeElementArrayAPPLE;
      PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC m_glMultiDrawElementArrayAPPLE;
      PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC m_glMultiDrawRangeElementArrayAPPLE;
      PFNGLGENFENCESAPPLEPROC m_glGenFencesAPPLE;
      PFNGLDELETEFENCESAPPLEPROC m_glDeleteFencesAPPLE;
      PFNGLSETFENCEAPPLEPROC m_glSetFenceAPPLE;
      PFNGLISFENCEAPPLEPROC m_glIsFenceAPPLE;
      PFNGLTESTFENCEAPPLEPROC m_glTestFenceAPPLE;
      PFNGLFINISHFENCEAPPLEPROC m_glFinishFenceAPPLE;
      PFNGLTESTOBJECTAPPLEPROC m_glTestObjectAPPLE;
      PFNGLFINISHOBJECTAPPLEPROC m_glFinishObjectAPPLE;
      PFNGLBUFFERPARAMETERIAPPLEPROC m_glBufferParameteriAPPLE;
      PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC m_glFlushMappedBufferRangeAPPLE;
      PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC m_glRenderbufferStorageMultisampleAPPLE;
      PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC m_glResolveMultisampleFramebufferAPPLE;
      PFNGLOBJECTPURGEABLEAPPLEPROC m_glObjectPurgeableAPPLE;
      PFNGLOBJECTUNPURGEABLEAPPLEPROC m_glObjectUnpurgeableAPPLE;
      PFNGLGETOBJECTPARAMETERIVAPPLEPROC m_glGetObjectParameterivAPPLE;
      PFNGLFENCESYNCAPPLEPROC m_glFenceSyncAPPLE;
      PFNGLISSYNCAPPLEPROC m_glIsSyncAPPLE;
      PFNGLDELETESYNCAPPLEPROC m_glDeleteSyncAPPLE;
      PFNGLCLIENTWAITSYNCAPPLEPROC m_glClientWaitSyncAPPLE;
      PFNGLWAITSYNCAPPLEPROC m_glWaitSyncAPPLE;
      PFNGLGETINTEGER64VAPPLEPROC m_glGetInteger64vAPPLE;
      PFNGLGETSYNCIVAPPLEPROC m_glGetSyncivAPPLE;
      PFNGLTEXTURERANGEAPPLEPROC m_glTextureRangeAPPLE;
      PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC m_glGetTexParameterPointervAPPLE;
      PFNGLBINDVERTEXARRAYAPPLEPROC m_glBindVertexArrayAPPLE;
      PFNGLDELETEVERTEXARRAYSAPPLEPROC m_glDeleteVertexArraysAPPLE;
      PFNGLGENVERTEXARRAYSAPPLEPROC m_glGenVertexArraysAPPLE;
      PFNGLISVERTEXARRAYAPPLEPROC m_glIsVertexArrayAPPLE;
      PFNGLVERTEXARRAYRANGEAPPLEPROC m_glVertexArrayRangeAPPLE;
      PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC m_glFlushVertexArrayRangeAPPLE;
      PFNGLVERTEXARRAYPARAMETERIAPPLEPROC m_glVertexArrayParameteriAPPLE;
      PFNGLENABLEVERTEXATTRIBAPPLEPROC m_glEnableVertexAttribAPPLE;
      PFNGLDISABLEVERTEXATTRIBAPPLEPROC m_glDisableVertexAttribAPPLE;
      PFNGLISVERTEXATTRIBENABLEDAPPLEPROC m_glIsVertexAttribEnabledAPPLE;
      PFNGLMAPVERTEXATTRIB1DAPPLEPROC m_glMapVertexAttrib1dAPPLE;
      PFNGLMAPVERTEXATTRIB1FAPPLEPROC m_glMapVertexAttrib1fAPPLE;
      PFNGLMAPVERTEXATTRIB2DAPPLEPROC m_glMapVertexAttrib2dAPPLE;
      PFNGLMAPVERTEXATTRIB2FAPPLEPROC m_glMapVertexAttrib2fAPPLE;
      PFNGLPRIMITIVEBOUNDINGBOXARBPROC m_glPrimitiveBoundingBoxARB;
      PFNGLGETTEXTUREHANDLEARBPROC m_glGetTextureHandleARB;
      PFNGLGETTEXTURESAMPLERHANDLEARBPROC m_glGetTextureSamplerHandleARB;
      PFNGLMAKETEXTUREHANDLERESIDENTARBPROC m_glMakeTextureHandleResidentARB;
      PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC m_glMakeTextureHandleNonResidentARB;
      PFNGLGETIMAGEHANDLEARBPROC m_glGetImageHandleARB;
      PFNGLMAKEIMAGEHANDLERESIDENTARBPROC m_glMakeImageHandleResidentARB;
      PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC m_glMakeImageHandleNonResidentARB;
      PFNGLUNIFORMHANDLEUI64ARBPROC m_glUniformHandleui64ARB;
      PFNGLUNIFORMHANDLEUI64VARBPROC m_glUniformHandleui64vARB;
      PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC m_glProgramUniformHandleui64ARB;
      PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC m_glProgramUniformHandleui64vARB;
      PFNGLISTEXTUREHANDLERESIDENTARBPROC m_glIsTextureHandleResidentARB;
      PFNGLISIMAGEHANDLERESIDENTARBPROC m_glIsImageHandleResidentARB;
      PFNGLVERTEXATTRIBL1UI64ARBPROC m_glVertexAttribL1ui64ARB;
      PFNGLVERTEXATTRIBL1UI64VARBPROC m_glVertexAttribL1ui64vARB;
      PFNGLGETVERTEXATTRIBLUI64VARBPROC m_glGetVertexAttribLui64vARB;
      PFNGLCREATESYNCFROMCLEVENTARBPROC m_glCreateSyncFromCLeventARB;
      PFNGLCLAMPCOLORARBPROC m_glClampColorARB;
      PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC m_glDispatchComputeGroupSizeARB;
      PFNGLDEBUGMESSAGECONTROLARBPROC m_glDebugMessageControlARB;
      PFNGLDEBUGMESSAGEINSERTARBPROC m_glDebugMessageInsertARB;
      PFNGLDEBUGMESSAGECALLBACKARBPROC m_glDebugMessageCallbackARB;
      PFNGLGETDEBUGMESSAGELOGARBPROC m_glGetDebugMessageLogARB;
      PFNGLDRAWBUFFERSARBPROC m_glDrawBuffersARB;
      PFNGLBLENDEQUATIONIARBPROC m_glBlendEquationiARB;
      PFNGLBLENDEQUATIONSEPARATEIARBPROC m_glBlendEquationSeparateiARB;
      PFNGLBLENDFUNCIARBPROC m_glBlendFunciARB;
      PFNGLBLENDFUNCSEPARATEIARBPROC m_glBlendFuncSeparateiARB;
      PFNGLDRAWARRAYSINSTANCEDARBPROC m_glDrawArraysInstancedARB;
      PFNGLDRAWELEMENTSINSTANCEDARBPROC m_glDrawElementsInstancedARB;
      PFNGLPROGRAMSTRINGARBPROC m_glProgramStringARB;
      PFNGLBINDPROGRAMARBPROC m_glBindProgramARB;
      PFNGLDELETEPROGRAMSARBPROC m_glDeleteProgramsARB;
      PFNGLGENPROGRAMSARBPROC m_glGenProgramsARB;
      PFNGLPROGRAMENVPARAMETER4DARBPROC m_glProgramEnvParameter4dARB;
      PFNGLPROGRAMENVPARAMETER4DVARBPROC m_glProgramEnvParameter4dvARB;
      PFNGLPROGRAMENVPARAMETER4FARBPROC m_glProgramEnvParameter4fARB;
      PFNGLPROGRAMENVPARAMETER4FVARBPROC m_glProgramEnvParameter4fvARB;
      PFNGLPROGRAMLOCALPARAMETER4DARBPROC m_glProgramLocalParameter4dARB;
      PFNGLPROGRAMLOCALPARAMETER4DVARBPROC m_glProgramLocalParameter4dvARB;
      PFNGLPROGRAMLOCALPARAMETER4FARBPROC m_glProgramLocalParameter4fARB;
      PFNGLPROGRAMLOCALPARAMETER4FVARBPROC m_glProgramLocalParameter4fvARB;
      PFNGLGETPROGRAMENVPARAMETERDVARBPROC m_glGetProgramEnvParameterdvARB;
      PFNGLGETPROGRAMENVPARAMETERFVARBPROC m_glGetProgramEnvParameterfvARB;
      PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC m_glGetProgramLocalParameterdvARB;
      PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC m_glGetProgramLocalParameterfvARB;
      PFNGLGETPROGRAMIVARBPROC m_glGetProgramivARB;
      PFNGLGETPROGRAMSTRINGARBPROC m_glGetProgramStringARB;
      PFNGLISPROGRAMARBPROC m_glIsProgramARB;
      PFNGLPROGRAMPARAMETERIARBPROC m_glProgramParameteriARB;
      PFNGLFRAMEBUFFERTEXTUREARBPROC m_glFramebufferTextureARB;
      PFNGLFRAMEBUFFERTEXTURELAYERARBPROC m_glFramebufferTextureLayerARB;
      PFNGLFRAMEBUFFERTEXTUREFACEARBPROC m_glFramebufferTextureFaceARB;
      PFNGLUNIFORM1I64ARBPROC m_glUniform1i64ARB;
      PFNGLUNIFORM2I64ARBPROC m_glUniform2i64ARB;
      PFNGLUNIFORM3I64ARBPROC m_glUniform3i64ARB;
      PFNGLUNIFORM4I64ARBPROC m_glUniform4i64ARB;
      PFNGLUNIFORM1I64VARBPROC m_glUniform1i64vARB;
      PFNGLUNIFORM2I64VARBPROC m_glUniform2i64vARB;
      PFNGLUNIFORM3I64VARBPROC m_glUniform3i64vARB;
      PFNGLUNIFORM4I64VARBPROC m_glUniform4i64vARB;
      PFNGLUNIFORM1UI64ARBPROC m_glUniform1ui64ARB;
      PFNGLUNIFORM2UI64ARBPROC m_glUniform2ui64ARB;
      PFNGLUNIFORM3UI64ARBPROC m_glUniform3ui64ARB;
      PFNGLUNIFORM4UI64ARBPROC m_glUniform4ui64ARB;
      PFNGLUNIFORM1UI64VARBPROC m_glUniform1ui64vARB;
      PFNGLUNIFORM2UI64VARBPROC m_glUniform2ui64vARB;
      PFNGLUNIFORM3UI64VARBPROC m_glUniform3ui64vARB;
      PFNGLUNIFORM4UI64VARBPROC m_glUniform4ui64vARB;
      PFNGLGETUNIFORMI64VARBPROC m_glGetUniformi64vARB;
      PFNGLGETUNIFORMUI64VARBPROC m_glGetUniformui64vARB;
      PFNGLGETNUNIFORMI64VARBPROC m_glGetnUniformi64vARB;
      PFNGLGETNUNIFORMUI64VARBPROC m_glGetnUniformui64vARB;
      PFNGLPROGRAMUNIFORM1I64ARBPROC m_glProgramUniform1i64ARB;
      PFNGLPROGRAMUNIFORM2I64ARBPROC m_glProgramUniform2i64ARB;
      PFNGLPROGRAMUNIFORM3I64ARBPROC m_glProgramUniform3i64ARB;
      PFNGLPROGRAMUNIFORM4I64ARBPROC m_glProgramUniform4i64ARB;
      PFNGLPROGRAMUNIFORM1I64VARBPROC m_glProgramUniform1i64vARB;
      PFNGLPROGRAMUNIFORM2I64VARBPROC m_glProgramUniform2i64vARB;
      PFNGLPROGRAMUNIFORM3I64VARBPROC m_glProgramUniform3i64vARB;
      PFNGLPROGRAMUNIFORM4I64VARBPROC m_glProgramUniform4i64vARB;
      PFNGLPROGRAMUNIFORM1UI64ARBPROC m_glProgramUniform1ui64ARB;
      PFNGLPROGRAMUNIFORM2UI64ARBPROC m_glProgramUniform2ui64ARB;
      PFNGLPROGRAMUNIFORM3UI64ARBPROC m_glProgramUniform3ui64ARB;
      PFNGLPROGRAMUNIFORM4UI64ARBPROC m_glProgramUniform4ui64ARB;
      PFNGLPROGRAMUNIFORM1UI64VARBPROC m_glProgramUniform1ui64vARB;
      PFNGLPROGRAMUNIFORM2UI64VARBPROC m_glProgramUniform2ui64vARB;
      PFNGLPROGRAMUNIFORM3UI64VARBPROC m_glProgramUniform3ui64vARB;
      PFNGLPROGRAMUNIFORM4UI64VARBPROC m_glProgramUniform4ui64vARB;
      PFNGLCOLORTABLEPROC m_glColorTable;
      PFNGLCOLORTABLEPARAMETERFVPROC m_glColorTableParameterfv;
      PFNGLCOLORTABLEPARAMETERIVPROC m_glColorTableParameteriv;
      PFNGLCOPYCOLORTABLEPROC m_glCopyColorTable;
      PFNGLGETCOLORTABLEPROC m_glGetColorTable;
      PFNGLGETCOLORTABLEPARAMETERFVPROC m_glGetColorTableParameterfv;
      PFNGLGETCOLORTABLEPARAMETERIVPROC m_glGetColorTableParameteriv;
      PFNGLCOLORSUBTABLEPROC m_glColorSubTable;
      PFNGLCOPYCOLORSUBTABLEPROC m_glCopyColorSubTable;
      PFNGLCONVOLUTIONFILTER1DPROC m_glConvolutionFilter1D;
      PFNGLCONVOLUTIONFILTER2DPROC m_glConvolutionFilter2D;
      PFNGLCONVOLUTIONPARAMETERFPROC m_glConvolutionParameterf;
      PFNGLCONVOLUTIONPARAMETERFVPROC m_glConvolutionParameterfv;
      PFNGLCONVOLUTIONPARAMETERIPROC m_glConvolutionParameteri;
      PFNGLCONVOLUTIONPARAMETERIVPROC m_glConvolutionParameteriv;
      PFNGLCOPYCONVOLUTIONFILTER1DPROC m_glCopyConvolutionFilter1D;
      PFNGLCOPYCONVOLUTIONFILTER2DPROC m_glCopyConvolutionFilter2D;
      PFNGLGETCONVOLUTIONFILTERPROC m_glGetConvolutionFilter;
      PFNGLGETCONVOLUTIONPARAMETERFVPROC m_glGetConvolutionParameterfv;
      PFNGLGETCONVOLUTIONPARAMETERIVPROC m_glGetConvolutionParameteriv;
      PFNGLGETSEPARABLEFILTERPROC m_glGetSeparableFilter;
      PFNGLSEPARABLEFILTER2DPROC m_glSeparableFilter2D;
      PFNGLGETHISTOGRAMPROC m_glGetHistogram;
      PFNGLGETHISTOGRAMPARAMETERFVPROC m_glGetHistogramParameterfv;
      PFNGLGETHISTOGRAMPARAMETERIVPROC m_glGetHistogramParameteriv;
      PFNGLGETMINMAXPROC m_glGetMinmax;
      PFNGLGETMINMAXPARAMETERFVPROC m_glGetMinmaxParameterfv;
      PFNGLGETMINMAXPARAMETERIVPROC m_glGetMinmaxParameteriv;
      PFNGLHISTOGRAMPROC m_glHistogram;
      PFNGLMINMAXPROC m_glMinmax;
      PFNGLRESETHISTOGRAMPROC m_glResetHistogram;
      PFNGLRESETMINMAXPROC m_glResetMinmax;
      PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC m_glMultiDrawArraysIndirectCountARB;
      PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC m_glMultiDrawElementsIndirectCountARB;
      PFNGLVERTEXATTRIBDIVISORARBPROC m_glVertexAttribDivisorARB;
      PFNGLCURRENTPALETTEMATRIXARBPROC m_glCurrentPaletteMatrixARB;
      PFNGLMATRIXINDEXUBVARBPROC m_glMatrixIndexubvARB;
      PFNGLMATRIXINDEXUSVARBPROC m_glMatrixIndexusvARB;
      PFNGLMATRIXINDEXUIVARBPROC m_glMatrixIndexuivARB;
      PFNGLMATRIXINDEXPOINTERARBPROC m_glMatrixIndexPointerARB;
      PFNGLSAMPLECOVERAGEARBPROC m_glSampleCoverageARB;
      PFNGLACTIVETEXTUREARBPROC m_glActiveTextureARB;
      PFNGLCLIENTACTIVETEXTUREARBPROC m_glClientActiveTextureARB;
      PFNGLMULTITEXCOORD1DARBPROC m_glMultiTexCoord1dARB;
      PFNGLMULTITEXCOORD1DVARBPROC m_glMultiTexCoord1dvARB;
      PFNGLMULTITEXCOORD1FARBPROC m_glMultiTexCoord1fARB;
      PFNGLMULTITEXCOORD1FVARBPROC m_glMultiTexCoord1fvARB;
      PFNGLMULTITEXCOORD1IARBPROC m_glMultiTexCoord1iARB;
      PFNGLMULTITEXCOORD1IVARBPROC m_glMultiTexCoord1ivARB;
      PFNGLMULTITEXCOORD1SARBPROC m_glMultiTexCoord1sARB;
      PFNGLMULTITEXCOORD1SVARBPROC m_glMultiTexCoord1svARB;
      PFNGLMULTITEXCOORD2DARBPROC m_glMultiTexCoord2dARB;
      PFNGLMULTITEXCOORD2DVARBPROC m_glMultiTexCoord2dvARB;
      PFNGLMULTITEXCOORD2FARBPROC m_glMultiTexCoord2fARB;
      PFNGLMULTITEXCOORD2FVARBPROC m_glMultiTexCoord2fvARB;
      PFNGLMULTITEXCOORD2IARBPROC m_glMultiTexCoord2iARB;
      PFNGLMULTITEXCOORD2IVARBPROC m_glMultiTexCoord2ivARB;
      PFNGLMULTITEXCOORD2SARBPROC m_glMultiTexCoord2sARB;
      PFNGLMULTITEXCOORD2SVARBPROC m_glMultiTexCoord2svARB;
      PFNGLMULTITEXCOORD3DARBPROC m_glMultiTexCoord3dARB;
      PFNGLMULTITEXCOORD3DVARBPROC m_glMultiTexCoord3dvARB;
      PFNGLMULTITEXCOORD3FARBPROC m_glMultiTexCoord3fARB;
      PFNGLMULTITEXCOORD3FVARBPROC m_glMultiTexCoord3fvARB;
      PFNGLMULTITEXCOORD3IARBPROC m_glMultiTexCoord3iARB;
      PFNGLMULTITEXCOORD3IVARBPROC m_glMultiTexCoord3ivARB;
      PFNGLMULTITEXCOORD3SARBPROC m_glMultiTexCoord3sARB;
      PFNGLMULTITEXCOORD3SVARBPROC m_glMultiTexCoord3svARB;
      PFNGLMULTITEXCOORD4DARBPROC m_glMultiTexCoord4dARB;
      PFNGLMULTITEXCOORD4DVARBPROC m_glMultiTexCoord4dvARB;
      PFNGLMULTITEXCOORD4FARBPROC m_glMultiTexCoord4fARB;
      PFNGLMULTITEXCOORD4FVARBPROC m_glMultiTexCoord4fvARB;
      PFNGLMULTITEXCOORD4IARBPROC m_glMultiTexCoord4iARB;
      PFNGLMULTITEXCOORD4IVARBPROC m_glMultiTexCoord4ivARB;
      PFNGLMULTITEXCOORD4SARBPROC m_glMultiTexCoord4sARB;
      PFNGLMULTITEXCOORD4SVARBPROC m_glMultiTexCoord4svARB;
      PFNGLGENQUERIESARBPROC m_glGenQueriesARB;
      PFNGLDELETEQUERIESARBPROC m_glDeleteQueriesARB;
      PFNGLISQUERYARBPROC m_glIsQueryARB;
      PFNGLBEGINQUERYARBPROC m_glBeginQueryARB;
      PFNGLENDQUERYARBPROC m_glEndQueryARB;
      PFNGLGETQUERYIVARBPROC m_glGetQueryivARB;
      PFNGLGETQUERYOBJECTIVARBPROC m_glGetQueryObjectivARB;
      PFNGLGETQUERYOBJECTUIVARBPROC m_glGetQueryObjectuivARB;
      PFNGLMAXSHADERCOMPILERTHREADSARBPROC m_glMaxShaderCompilerThreadsARB;
      PFNGLPOINTPARAMETERFARBPROC m_glPointParameterfARB;
      PFNGLPOINTPARAMETERFVARBPROC m_glPointParameterfvARB;
      PFNGLGETGRAPHICSRESETSTATUSARBPROC m_glGetGraphicsResetStatusARB;
      PFNGLGETNTEXIMAGEARBPROC m_glGetnTexImageARB;
      PFNGLREADNPIXELSARBPROC m_glReadnPixelsARB;
      PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC m_glGetnCompressedTexImageARB;
      PFNGLGETNUNIFORMFVARBPROC m_glGetnUniformfvARB;
      PFNGLGETNUNIFORMIVARBPROC m_glGetnUniformivARB;
      PFNGLGETNUNIFORMUIVARBPROC m_glGetnUniformuivARB;
      PFNGLGETNUNIFORMDVARBPROC m_glGetnUniformdvARB;
      PFNGLGETNMAPDVARBPROC m_glGetnMapdvARB;
      PFNGLGETNMAPFVARBPROC m_glGetnMapfvARB;
      PFNGLGETNMAPIVARBPROC m_glGetnMapivARB;
      PFNGLGETNPIXELMAPFVARBPROC m_glGetnPixelMapfvARB;
      PFNGLGETNPIXELMAPUIVARBPROC m_glGetnPixelMapuivARB;
      PFNGLGETNPIXELMAPUSVARBPROC m_glGetnPixelMapusvARB;
      PFNGLGETNPOLYGONSTIPPLEARBPROC m_glGetnPolygonStippleARB;
      PFNGLGETNCOLORTABLEARBPROC m_glGetnColorTableARB;
      PFNGLGETNCONVOLUTIONFILTERARBPROC m_glGetnConvolutionFilterARB;
      PFNGLGETNSEPARABLEFILTERARBPROC m_glGetnSeparableFilterARB;
      PFNGLGETNHISTOGRAMARBPROC m_glGetnHistogramARB;
      PFNGLGETNMINMAXARBPROC m_glGetnMinmaxARB;
      PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC m_glFramebufferSampleLocationsfvARB;
      PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC m_glNamedFramebufferSampleLocationsfvARB;
      PFNGLEVALUATEDEPTHVALUESARBPROC m_glEvaluateDepthValuesARB;
      PFNGLMINSAMPLESHADINGARBPROC m_glMinSampleShadingARB;
      PFNGLDELETEOBJECTARBPROC m_glDeleteObjectARB;
      PFNGLGETHANDLEARBPROC m_glGetHandleARB;
      PFNGLDETACHOBJECTARBPROC m_glDetachObjectARB;
      PFNGLCREATESHADEROBJECTARBPROC m_glCreateShaderObjectARB;
      PFNGLSHADERSOURCEARBPROC m_glShaderSourceARB;
      PFNGLCOMPILESHADERARBPROC m_glCompileShaderARB;
      PFNGLCREATEPROGRAMOBJECTARBPROC m_glCreateProgramObjectARB;
      PFNGLATTACHOBJECTARBPROC m_glAttachObjectARB;
      PFNGLLINKPROGRAMARBPROC m_glLinkProgramARB;
      PFNGLUSEPROGRAMOBJECTARBPROC m_glUseProgramObjectARB;
      PFNGLVALIDATEPROGRAMARBPROC m_glValidateProgramARB;
      PFNGLUNIFORM1FARBPROC m_glUniform1fARB;
      PFNGLUNIFORM2FARBPROC m_glUniform2fARB;
      PFNGLUNIFORM3FARBPROC m_glUniform3fARB;
      PFNGLUNIFORM4FARBPROC m_glUniform4fARB;
      PFNGLUNIFORM1IARBPROC m_glUniform1iARB;
      PFNGLUNIFORM2IARBPROC m_glUniform2iARB;
      PFNGLUNIFORM3IARBPROC m_glUniform3iARB;
      PFNGLUNIFORM4IARBPROC m_glUniform4iARB;
      PFNGLUNIFORM1FVARBPROC m_glUniform1fvARB;
      PFNGLUNIFORM2FVARBPROC m_glUniform2fvARB;
      PFNGLUNIFORM3FVARBPROC m_glUniform3fvARB;
      PFNGLUNIFORM4FVARBPROC m_glUniform4fvARB;
      PFNGLUNIFORM1IVARBPROC m_glUniform1ivARB;
      PFNGLUNIFORM2IVARBPROC m_glUniform2ivARB;
      PFNGLUNIFORM3IVARBPROC m_glUniform3ivARB;
      PFNGLUNIFORM4IVARBPROC m_glUniform4ivARB;
      PFNGLUNIFORMMATRIX2FVARBPROC m_glUniformMatrix2fvARB;
      PFNGLUNIFORMMATRIX3FVARBPROC m_glUniformMatrix3fvARB;
      PFNGLUNIFORMMATRIX4FVARBPROC m_glUniformMatrix4fvARB;
      PFNGLGETOBJECTPARAMETERFVARBPROC m_glGetObjectParameterfvARB;
      PFNGLGETOBJECTPARAMETERIVARBPROC m_glGetObjectParameterivARB;
      PFNGLGETINFOLOGARBPROC m_glGetInfoLogARB;
      PFNGLGETATTACHEDOBJECTSARBPROC m_glGetAttachedObjectsARB;
      PFNGLGETUNIFORMLOCATIONARBPROC m_glGetUniformLocationARB;
      PFNGLGETACTIVEUNIFORMARBPROC m_glGetActiveUniformARB;
      PFNGLGETUNIFORMFVARBPROC m_glGetUniformfvARB;
      PFNGLGETUNIFORMIVARBPROC m_glGetUniformivARB;
      PFNGLGETSHADERSOURCEARBPROC m_glGetShaderSourceARB;
      PFNGLNAMEDSTRINGARBPROC m_glNamedStringARB;
      PFNGLDELETENAMEDSTRINGARBPROC m_glDeleteNamedStringARB;
      PFNGLCOMPILESHADERINCLUDEARBPROC m_glCompileShaderIncludeARB;
      PFNGLISNAMEDSTRINGARBPROC m_glIsNamedStringARB;
      PFNGLGETNAMEDSTRINGARBPROC m_glGetNamedStringARB;
      PFNGLGETNAMEDSTRINGIVARBPROC m_glGetNamedStringivARB;
      PFNGLBUFFERPAGECOMMITMENTARBPROC m_glBufferPageCommitmentARB;
      PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC m_glNamedBufferPageCommitmentEXT;
      PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC m_glNamedBufferPageCommitmentARB;
      PFNGLTEXPAGECOMMITMENTARBPROC m_glTexPageCommitmentARB;
      PFNGLTEXBUFFERARBPROC m_glTexBufferARB;
      PFNGLCOMPRESSEDTEXIMAGE3DARBPROC m_glCompressedTexImage3DARB;
      PFNGLCOMPRESSEDTEXIMAGE2DARBPROC m_glCompressedTexImage2DARB;
      PFNGLCOMPRESSEDTEXIMAGE1DARBPROC m_glCompressedTexImage1DARB;
      PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC m_glCompressedTexSubImage3DARB;
      PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC m_glCompressedTexSubImage2DARB;
      PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC m_glCompressedTexSubImage1DARB;
      PFNGLGETCOMPRESSEDTEXIMAGEARBPROC m_glGetCompressedTexImageARB;
      PFNGLLOADTRANSPOSEMATRIXFARBPROC m_glLoadTransposeMatrixfARB;
      PFNGLLOADTRANSPOSEMATRIXDARBPROC m_glLoadTransposeMatrixdARB;
      PFNGLMULTTRANSPOSEMATRIXFARBPROC m_glMultTransposeMatrixfARB;
      PFNGLMULTTRANSPOSEMATRIXDARBPROC m_glMultTransposeMatrixdARB;
      PFNGLWEIGHTBVARBPROC m_glWeightbvARB;
      PFNGLWEIGHTSVARBPROC m_glWeightsvARB;
      PFNGLWEIGHTIVARBPROC m_glWeightivARB;
      PFNGLWEIGHTFVARBPROC m_glWeightfvARB;
      PFNGLWEIGHTDVARBPROC m_glWeightdvARB;
      PFNGLWEIGHTUBVARBPROC m_glWeightubvARB;
      PFNGLWEIGHTUSVARBPROC m_glWeightusvARB;
      PFNGLWEIGHTUIVARBPROC m_glWeightuivARB;
      PFNGLWEIGHTPOINTERARBPROC m_glWeightPointerARB;
      PFNGLVERTEXBLENDARBPROC m_glVertexBlendARB;
      PFNGLBINDBUFFERARBPROC m_glBindBufferARB;
      PFNGLDELETEBUFFERSARBPROC m_glDeleteBuffersARB;
      PFNGLGENBUFFERSARBPROC m_glGenBuffersARB;
      PFNGLISBUFFERARBPROC m_glIsBufferARB;
      PFNGLBUFFERDATAARBPROC m_glBufferDataARB;
      PFNGLBUFFERSUBDATAARBPROC m_glBufferSubDataARB;
      PFNGLGETBUFFERSUBDATAARBPROC m_glGetBufferSubDataARB;
      PFNGLMAPBUFFERARBPROC m_glMapBufferARB;
      PFNGLUNMAPBUFFERARBPROC m_glUnmapBufferARB;
      PFNGLGETBUFFERPARAMETERIVARBPROC m_glGetBufferParameterivARB;
      PFNGLGETBUFFERPOINTERVARBPROC m_glGetBufferPointervARB;
      PFNGLVERTEXATTRIB1DARBPROC m_glVertexAttrib1dARB;
      PFNGLVERTEXATTRIB1DVARBPROC m_glVertexAttrib1dvARB;
      PFNGLVERTEXATTRIB1FARBPROC m_glVertexAttrib1fARB;
      PFNGLVERTEXATTRIB1FVARBPROC m_glVertexAttrib1fvARB;
      PFNGLVERTEXATTRIB1SARBPROC m_glVertexAttrib1sARB;
      PFNGLVERTEXATTRIB1SVARBPROC m_glVertexAttrib1svARB;
      PFNGLVERTEXATTRIB2DARBPROC m_glVertexAttrib2dARB;
      PFNGLVERTEXATTRIB2DVARBPROC m_glVertexAttrib2dvARB;
      PFNGLVERTEXATTRIB2FARBPROC m_glVertexAttrib2fARB;
      PFNGLVERTEXATTRIB2FVARBPROC m_glVertexAttrib2fvARB;
      PFNGLVERTEXATTRIB2SARBPROC m_glVertexAttrib2sARB;
      PFNGLVERTEXATTRIB2SVARBPROC m_glVertexAttrib2svARB;
      PFNGLVERTEXATTRIB3DARBPROC m_glVertexAttrib3dARB;
      PFNGLVERTEXATTRIB3DVARBPROC m_glVertexAttrib3dvARB;
      PFNGLVERTEXATTRIB3FARBPROC m_glVertexAttrib3fARB;
      PFNGLVERTEXATTRIB3FVARBPROC m_glVertexAttrib3fvARB;
      PFNGLVERTEXATTRIB3SARBPROC m_glVertexAttrib3sARB;
      PFNGLVERTEXATTRIB3SVARBPROC m_glVertexAttrib3svARB;
      PFNGLVERTEXATTRIB4NBVARBPROC m_glVertexAttrib4NbvARB;
      PFNGLVERTEXATTRIB4NIVARBPROC m_glVertexAttrib4NivARB;
      PFNGLVERTEXATTRIB4NSVARBPROC m_glVertexAttrib4NsvARB;
      PFNGLVERTEXATTRIB4NUBARBPROC m_glVertexAttrib4NubARB;
      PFNGLVERTEXATTRIB4NUBVARBPROC m_glVertexAttrib4NubvARB;
      PFNGLVERTEXATTRIB4NUIVARBPROC m_glVertexAttrib4NuivARB;
      PFNGLVERTEXATTRIB4NUSVARBPROC m_glVertexAttrib4NusvARB;
      PFNGLVERTEXATTRIB4BVARBPROC m_glVertexAttrib4bvARB;
      PFNGLVERTEXATTRIB4DARBPROC m_glVertexAttrib4dARB;
      PFNGLVERTEXATTRIB4DVARBPROC m_glVertexAttrib4dvARB;
      PFNGLVERTEXATTRIB4FARBPROC m_glVertexAttrib4fARB;
      PFNGLVERTEXATTRIB4FVARBPROC m_glVertexAttrib4fvARB;
      PFNGLVERTEXATTRIB4IVARBPROC m_glVertexAttrib4ivARB;
      PFNGLVERTEXATTRIB4SARBPROC m_glVertexAttrib4sARB;
      PFNGLVERTEXATTRIB4SVARBPROC m_glVertexAttrib4svARB;
      PFNGLVERTEXATTRIB4UBVARBPROC m_glVertexAttrib4ubvARB;
      PFNGLVERTEXATTRIB4UIVARBPROC m_glVertexAttrib4uivARB;
      PFNGLVERTEXATTRIB4USVARBPROC m_glVertexAttrib4usvARB;
      PFNGLVERTEXATTRIBPOINTERARBPROC m_glVertexAttribPointerARB;
      PFNGLENABLEVERTEXATTRIBARRAYARBPROC m_glEnableVertexAttribArrayARB;
      PFNGLDISABLEVERTEXATTRIBARRAYARBPROC m_glDisableVertexAttribArrayARB;
      PFNGLGETVERTEXATTRIBDVARBPROC m_glGetVertexAttribdvARB;
      PFNGLGETVERTEXATTRIBFVARBPROC m_glGetVertexAttribfvARB;
      PFNGLGETVERTEXATTRIBIVARBPROC m_glGetVertexAttribivARB;
      PFNGLGETVERTEXATTRIBPOINTERVARBPROC m_glGetVertexAttribPointervARB;
      PFNGLBINDATTRIBLOCATIONARBPROC m_glBindAttribLocationARB;
      PFNGLGETACTIVEATTRIBARBPROC m_glGetActiveAttribARB;
      PFNGLGETATTRIBLOCATIONARBPROC m_glGetAttribLocationARB;
      PFNGLWINDOWPOS2DARBPROC m_glWindowPos2dARB;
      PFNGLWINDOWPOS2DVARBPROC m_glWindowPos2dvARB;
      PFNGLWINDOWPOS2FARBPROC m_glWindowPos2fARB;
      PFNGLWINDOWPOS2FVARBPROC m_glWindowPos2fvARB;
      PFNGLWINDOWPOS2IARBPROC m_glWindowPos2iARB;
      PFNGLWINDOWPOS2IVARBPROC m_glWindowPos2ivARB;
      PFNGLWINDOWPOS2SARBPROC m_glWindowPos2sARB;
      PFNGLWINDOWPOS2SVARBPROC m_glWindowPos2svARB;
      PFNGLWINDOWPOS3DARBPROC m_glWindowPos3dARB;
      PFNGLWINDOWPOS3DVARBPROC m_glWindowPos3dvARB;
      PFNGLWINDOWPOS3FARBPROC m_glWindowPos3fARB;
      PFNGLWINDOWPOS3FVARBPROC m_glWindowPos3fvARB;
      PFNGLWINDOWPOS3IARBPROC m_glWindowPos3iARB;
      PFNGLWINDOWPOS3IVARBPROC m_glWindowPos3ivARB;
      PFNGLWINDOWPOS3SARBPROC m_glWindowPos3sARB;
      PFNGLWINDOWPOS3SVARBPROC m_glWindowPos3svARB;
      PFNGLDRAWBUFFERSATIPROC m_glDrawBuffersATI;
      PFNGLELEMENTPOINTERATIPROC m_glElementPointerATI;
      PFNGLDRAWELEMENTARRAYATIPROC m_glDrawElementArrayATI;
      PFNGLDRAWRANGEELEMENTARRAYATIPROC m_glDrawRangeElementArrayATI;
      PFNGLTEXBUMPPARAMETERIVATIPROC m_glTexBumpParameterivATI;
      PFNGLTEXBUMPPARAMETERFVATIPROC m_glTexBumpParameterfvATI;
      PFNGLGETTEXBUMPPARAMETERIVATIPROC m_glGetTexBumpParameterivATI;
      PFNGLGETTEXBUMPPARAMETERFVATIPROC m_glGetTexBumpParameterfvATI;
      PFNGLGENFRAGMENTSHADERSATIPROC m_glGenFragmentShadersATI;
      PFNGLBINDFRAGMENTSHADERATIPROC m_glBindFragmentShaderATI;
      PFNGLDELETEFRAGMENTSHADERATIPROC m_glDeleteFragmentShaderATI;
      PFNGLBEGINFRAGMENTSHADERATIPROC m_glBeginFragmentShaderATI;
      PFNGLENDFRAGMENTSHADERATIPROC m_glEndFragmentShaderATI;
      PFNGLPASSTEXCOORDATIPROC m_glPassTexCoordATI;
      PFNGLSAMPLEMAPATIPROC m_glSampleMapATI;
      PFNGLCOLORFRAGMENTOP1ATIPROC m_glColorFragmentOp1ATI;
      PFNGLCOLORFRAGMENTOP2ATIPROC m_glColorFragmentOp2ATI;
      PFNGLCOLORFRAGMENTOP3ATIPROC m_glColorFragmentOp3ATI;
      PFNGLALPHAFRAGMENTOP1ATIPROC m_glAlphaFragmentOp1ATI;
      PFNGLALPHAFRAGMENTOP2ATIPROC m_glAlphaFragmentOp2ATI;
      PFNGLALPHAFRAGMENTOP3ATIPROC m_glAlphaFragmentOp3ATI;
      PFNGLSETFRAGMENTSHADERCONSTANTATIPROC m_glSetFragmentShaderConstantATI;
      PFNGLMAPOBJECTBUFFERATIPROC m_glMapObjectBufferATI;
      PFNGLUNMAPOBJECTBUFFERATIPROC m_glUnmapObjectBufferATI;
      PFNGLPNTRIANGLESIATIPROC m_glPNTrianglesiATI;
      PFNGLPNTRIANGLESFATIPROC m_glPNTrianglesfATI;
      PFNGLSTENCILOPSEPARATEATIPROC m_glStencilOpSeparateATI;
      PFNGLSTENCILFUNCSEPARATEATIPROC m_glStencilFuncSeparateATI;
      PFNGLNEWOBJECTBUFFERATIPROC m_glNewObjectBufferATI;
      PFNGLISOBJECTBUFFERATIPROC m_glIsObjectBufferATI;
      PFNGLUPDATEOBJECTBUFFERATIPROC m_glUpdateObjectBufferATI;
      PFNGLGETOBJECTBUFFERFVATIPROC m_glGetObjectBufferfvATI;
      PFNGLGETOBJECTBUFFERIVATIPROC m_glGetObjectBufferivATI;
      PFNGLFREEOBJECTBUFFERATIPROC m_glFreeObjectBufferATI;
      PFNGLARRAYOBJECTATIPROC m_glArrayObjectATI;
      PFNGLGETARRAYOBJECTFVATIPROC m_glGetArrayObjectfvATI;
      PFNGLGETARRAYOBJECTIVATIPROC m_glGetArrayObjectivATI;
      PFNGLVARIANTARRAYOBJECTATIPROC m_glVariantArrayObjectATI;
      PFNGLGETVARIANTARRAYOBJECTFVATIPROC m_glGetVariantArrayObjectfvATI;
      PFNGLGETVARIANTARRAYOBJECTIVATIPROC m_glGetVariantArrayObjectivATI;
      PFNGLVERTEXATTRIBARRAYOBJECTATIPROC m_glVertexAttribArrayObjectATI;
      PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC m_glGetVertexAttribArrayObjectfvATI;
      PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC m_glGetVertexAttribArrayObjectivATI;
      PFNGLVERTEXSTREAM1SATIPROC m_glVertexStream1sATI;
      PFNGLVERTEXSTREAM1SVATIPROC m_glVertexStream1svATI;
      PFNGLVERTEXSTREAM1IATIPROC m_glVertexStream1iATI;
      PFNGLVERTEXSTREAM1IVATIPROC m_glVertexStream1ivATI;
      PFNGLVERTEXSTREAM1FATIPROC m_glVertexStream1fATI;
      PFNGLVERTEXSTREAM1FVATIPROC m_glVertexStream1fvATI;
      PFNGLVERTEXSTREAM1DATIPROC m_glVertexStream1dATI;
      PFNGLVERTEXSTREAM1DVATIPROC m_glVertexStream1dvATI;
      PFNGLVERTEXSTREAM2SATIPROC m_glVertexStream2sATI;
      PFNGLVERTEXSTREAM2SVATIPROC m_glVertexStream2svATI;
      PFNGLVERTEXSTREAM2IATIPROC m_glVertexStream2iATI;
      PFNGLVERTEXSTREAM2IVATIPROC m_glVertexStream2ivATI;
      PFNGLVERTEXSTREAM2FATIPROC m_glVertexStream2fATI;
      PFNGLVERTEXSTREAM2FVATIPROC m_glVertexStream2fvATI;
      PFNGLVERTEXSTREAM2DATIPROC m_glVertexStream2dATI;
      PFNGLVERTEXSTREAM2DVATIPROC m_glVertexStream2dvATI;
      PFNGLVERTEXSTREAM3SATIPROC m_glVertexStream3sATI;
      PFNGLVERTEXSTREAM3SVATIPROC m_glVertexStream3svATI;
      PFNGLVERTEXSTREAM3IATIPROC m_glVertexStream3iATI;
      PFNGLVERTEXSTREAM3IVATIPROC m_glVertexStream3ivATI;
      PFNGLVERTEXSTREAM3FATIPROC m_glVertexStream3fATI;
      PFNGLVERTEXSTREAM3FVATIPROC m_glVertexStream3fvATI;
      PFNGLVERTEXSTREAM3DATIPROC m_glVertexStream3dATI;
      PFNGLVERTEXSTREAM3DVATIPROC m_glVertexStream3dvATI;
      PFNGLVERTEXSTREAM4SATIPROC m_glVertexStream4sATI;
      PFNGLVERTEXSTREAM4SVATIPROC m_glVertexStream4svATI;
      PFNGLVERTEXSTREAM4IATIPROC m_glVertexStream4iATI;
      PFNGLVERTEXSTREAM4IVATIPROC m_glVertexStream4ivATI;
      PFNGLVERTEXSTREAM4FATIPROC m_glVertexStream4fATI;
      PFNGLVERTEXSTREAM4FVATIPROC m_glVertexStream4fvATI;
      PFNGLVERTEXSTREAM4DATIPROC m_glVertexStream4dATI;
      PFNGLVERTEXSTREAM4DVATIPROC m_glVertexStream4dvATI;
      PFNGLNORMALSTREAM3BATIPROC m_glNormalStream3bATI;
      PFNGLNORMALSTREAM3BVATIPROC m_glNormalStream3bvATI;
      PFNGLNORMALSTREAM3SATIPROC m_glNormalStream3sATI;
      PFNGLNORMALSTREAM3SVATIPROC m_glNormalStream3svATI;
      PFNGLNORMALSTREAM3IATIPROC m_glNormalStream3iATI;
      PFNGLNORMALSTREAM3IVATIPROC m_glNormalStream3ivATI;
      PFNGLNORMALSTREAM3FATIPROC m_glNormalStream3fATI;
      PFNGLNORMALSTREAM3FVATIPROC m_glNormalStream3fvATI;
      PFNGLNORMALSTREAM3DATIPROC m_glNormalStream3dATI;
      PFNGLNORMALSTREAM3DVATIPROC m_glNormalStream3dvATI;
      PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC m_glClientActiveVertexStreamATI;
      PFNGLVERTEXBLENDENVIATIPROC m_glVertexBlendEnviATI;
      PFNGLVERTEXBLENDENVFATIPROC m_glVertexBlendEnvfATI;
      PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC m_glDrawArraysInstancedBaseInstanceEXT;
      PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC m_glDrawElementsInstancedBaseInstanceEXT;
      PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC m_glDrawElementsInstancedBaseVertexBaseInstanceEXT;
      PFNGLUNIFORMBUFFEREXTPROC m_glUniformBufferEXT;
      PFNGLGETUNIFORMBUFFERSIZEEXTPROC m_glGetUniformBufferSizeEXT;
      PFNGLGETUNIFORMOFFSETEXTPROC m_glGetUniformOffsetEXT;
      PFNGLBLENDCOLOREXTPROC m_glBlendColorEXT;
      PFNGLBLENDEQUATIONSEPARATEEXTPROC m_glBlendEquationSeparateEXT;
      PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC m_glBindFragDataLocationIndexedEXT;
      PFNGLBINDFRAGDATALOCATIONEXTPROC m_glBindFragDataLocationEXT;
      PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC m_glGetProgramResourceLocationIndexEXT;
      PFNGLGETFRAGDATAINDEXEXTPROC m_glGetFragDataIndexEXT;
      PFNGLBLENDFUNCSEPARATEEXTPROC m_glBlendFuncSeparateEXT;
      PFNGLBLENDEQUATIONEXTPROC m_glBlendEquationEXT;
      PFNGLBUFFERSTORAGEEXTPROC m_glBufferStorageEXT;
      PFNGLCOLORSUBTABLEEXTPROC m_glColorSubTableEXT;
      PFNGLCOPYCOLORSUBTABLEEXTPROC m_glCopyColorSubTableEXT;
      PFNGLLOCKARRAYSEXTPROC m_glLockArraysEXT;
      PFNGLUNLOCKARRAYSEXTPROC m_glUnlockArraysEXT;
      PFNGLCONVOLUTIONFILTER1DEXTPROC m_glConvolutionFilter1DEXT;
      PFNGLCONVOLUTIONFILTER2DEXTPROC m_glConvolutionFilter2DEXT;
      PFNGLCONVOLUTIONPARAMETERFEXTPROC m_glConvolutionParameterfEXT;
      PFNGLCONVOLUTIONPARAMETERFVEXTPROC m_glConvolutionParameterfvEXT;
      PFNGLCONVOLUTIONPARAMETERIEXTPROC m_glConvolutionParameteriEXT;
      PFNGLCONVOLUTIONPARAMETERIVEXTPROC m_glConvolutionParameterivEXT;
      PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC m_glCopyConvolutionFilter1DEXT;
      PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC m_glCopyConvolutionFilter2DEXT;
      PFNGLGETCONVOLUTIONFILTEREXTPROC m_glGetConvolutionFilterEXT;
      PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC m_glGetConvolutionParameterfvEXT;
      PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC m_glGetConvolutionParameterivEXT;
      PFNGLGETSEPARABLEFILTEREXTPROC m_glGetSeparableFilterEXT;
      PFNGLSEPARABLEFILTER2DEXTPROC m_glSeparableFilter2DEXT;
      PFNGLTANGENT3BEXTPROC m_glTangent3bEXT;
      PFNGLTANGENT3BVEXTPROC m_glTangent3bvEXT;
      PFNGLTANGENT3DEXTPROC m_glTangent3dEXT;
      PFNGLTANGENT3DVEXTPROC m_glTangent3dvEXT;
      PFNGLTANGENT3FEXTPROC m_glTangent3fEXT;
      PFNGLTANGENT3FVEXTPROC m_glTangent3fvEXT;
      PFNGLTANGENT3IEXTPROC m_glTangent3iEXT;
      PFNGLTANGENT3IVEXTPROC m_glTangent3ivEXT;
      PFNGLTANGENT3SEXTPROC m_glTangent3sEXT;
      PFNGLTANGENT3SVEXTPROC m_glTangent3svEXT;
      PFNGLBINORMAL3BEXTPROC m_glBinormal3bEXT;
      PFNGLBINORMAL3BVEXTPROC m_glBinormal3bvEXT;
      PFNGLBINORMAL3DEXTPROC m_glBinormal3dEXT;
      PFNGLBINORMAL3DVEXTPROC m_glBinormal3dvEXT;
      PFNGLBINORMAL3FEXTPROC m_glBinormal3fEXT;
      PFNGLBINORMAL3FVEXTPROC m_glBinormal3fvEXT;
      PFNGLBINORMAL3IEXTPROC m_glBinormal3iEXT;
      PFNGLBINORMAL3IVEXTPROC m_glBinormal3ivEXT;
      PFNGLBINORMAL3SEXTPROC m_glBinormal3sEXT;
      PFNGLBINORMAL3SVEXTPROC m_glBinormal3svEXT;
      PFNGLTANGENTPOINTEREXTPROC m_glTangentPointerEXT;
      PFNGLBINORMALPOINTEREXTPROC m_glBinormalPointerEXT;
      PFNGLCOPYIMAGESUBDATAEXTPROC m_glCopyImageSubDataEXT;
      PFNGLCOPYTEXIMAGE1DEXTPROC m_glCopyTexImage1DEXT;
      PFNGLCOPYTEXIMAGE2DEXTPROC m_glCopyTexImage2DEXT;
      PFNGLCOPYTEXSUBIMAGE1DEXTPROC m_glCopyTexSubImage1DEXT;
      PFNGLCOPYTEXSUBIMAGE2DEXTPROC m_glCopyTexSubImage2DEXT;
      PFNGLCOPYTEXSUBIMAGE3DEXTPROC m_glCopyTexSubImage3DEXT;
      PFNGLCULLPARAMETERDVEXTPROC m_glCullParameterdvEXT;
      PFNGLCULLPARAMETERFVEXTPROC m_glCullParameterfvEXT;
      PFNGLLABELOBJECTEXTPROC m_glLabelObjectEXT;
      PFNGLGETOBJECTLABELEXTPROC m_glGetObjectLabelEXT;
      PFNGLINSERTEVENTMARKEREXTPROC m_glInsertEventMarkerEXT;
      PFNGLPUSHGROUPMARKEREXTPROC m_glPushGroupMarkerEXT;
      PFNGLPOPGROUPMARKEREXTPROC m_glPopGroupMarkerEXT;
      PFNGLDEPTHBOUNDSEXTPROC m_glDepthBoundsEXT;
      PFNGLMATRIXLOADFEXTPROC m_glMatrixLoadfEXT;
      PFNGLMATRIXLOADDEXTPROC m_glMatrixLoaddEXT;
      PFNGLMATRIXMULTFEXTPROC m_glMatrixMultfEXT;
      PFNGLMATRIXMULTDEXTPROC m_glMatrixMultdEXT;
      PFNGLMATRIXLOADIDENTITYEXTPROC m_glMatrixLoadIdentityEXT;
      PFNGLMATRIXROTATEFEXTPROC m_glMatrixRotatefEXT;
      PFNGLMATRIXROTATEDEXTPROC m_glMatrixRotatedEXT;
      PFNGLMATRIXSCALEFEXTPROC m_glMatrixScalefEXT;
      PFNGLMATRIXSCALEDEXTPROC m_glMatrixScaledEXT;
      PFNGLMATRIXTRANSLATEFEXTPROC m_glMatrixTranslatefEXT;
      PFNGLMATRIXTRANSLATEDEXTPROC m_glMatrixTranslatedEXT;
      PFNGLMATRIXFRUSTUMEXTPROC m_glMatrixFrustumEXT;
      PFNGLMATRIXORTHOEXTPROC m_glMatrixOrthoEXT;
      PFNGLMATRIXPOPEXTPROC m_glMatrixPopEXT;
      PFNGLMATRIXPUSHEXTPROC m_glMatrixPushEXT;
      PFNGLCLIENTATTRIBDEFAULTEXTPROC m_glClientAttribDefaultEXT;
      PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC m_glPushClientAttribDefaultEXT;
      PFNGLTEXTUREPARAMETERFEXTPROC m_glTextureParameterfEXT;
      PFNGLTEXTUREPARAMETERFVEXTPROC m_glTextureParameterfvEXT;
      PFNGLTEXTUREPARAMETERIEXTPROC m_glTextureParameteriEXT;
      PFNGLTEXTUREPARAMETERIVEXTPROC m_glTextureParameterivEXT;
      PFNGLTEXTUREIMAGE1DEXTPROC m_glTextureImage1DEXT;
      PFNGLTEXTUREIMAGE2DEXTPROC m_glTextureImage2DEXT;
      PFNGLTEXTURESUBIMAGE1DEXTPROC m_glTextureSubImage1DEXT;
      PFNGLTEXTURESUBIMAGE2DEXTPROC m_glTextureSubImage2DEXT;
      PFNGLCOPYTEXTUREIMAGE1DEXTPROC m_glCopyTextureImage1DEXT;
      PFNGLCOPYTEXTUREIMAGE2DEXTPROC m_glCopyTextureImage2DEXT;
      PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC m_glCopyTextureSubImage1DEXT;
      PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC m_glCopyTextureSubImage2DEXT;
      PFNGLGETTEXTUREIMAGEEXTPROC m_glGetTextureImageEXT;
      PFNGLGETTEXTUREPARAMETERFVEXTPROC m_glGetTextureParameterfvEXT;
      PFNGLGETTEXTUREPARAMETERIVEXTPROC m_glGetTextureParameterivEXT;
      PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC m_glGetTextureLevelParameterfvEXT;
      PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC m_glGetTextureLevelParameterivEXT;
      PFNGLTEXTUREIMAGE3DEXTPROC m_glTextureImage3DEXT;
      PFNGLTEXTURESUBIMAGE3DEXTPROC m_glTextureSubImage3DEXT;
      PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC m_glCopyTextureSubImage3DEXT;
      PFNGLBINDMULTITEXTUREEXTPROC m_glBindMultiTextureEXT;
      PFNGLMULTITEXCOORDPOINTEREXTPROC m_glMultiTexCoordPointerEXT;
      PFNGLMULTITEXENVFEXTPROC m_glMultiTexEnvfEXT;
      PFNGLMULTITEXENVFVEXTPROC m_glMultiTexEnvfvEXT;
      PFNGLMULTITEXENVIEXTPROC m_glMultiTexEnviEXT;
      PFNGLMULTITEXENVIVEXTPROC m_glMultiTexEnvivEXT;
      PFNGLMULTITEXGENDEXTPROC m_glMultiTexGendEXT;
      PFNGLMULTITEXGENDVEXTPROC m_glMultiTexGendvEXT;
      PFNGLMULTITEXGENFEXTPROC m_glMultiTexGenfEXT;
      PFNGLMULTITEXGENFVEXTPROC m_glMultiTexGenfvEXT;
      PFNGLMULTITEXGENIEXTPROC m_glMultiTexGeniEXT;
      PFNGLMULTITEXGENIVEXTPROC m_glMultiTexGenivEXT;
      PFNGLGETMULTITEXENVFVEXTPROC m_glGetMultiTexEnvfvEXT;
      PFNGLGETMULTITEXENVIVEXTPROC m_glGetMultiTexEnvivEXT;
      PFNGLGETMULTITEXGENDVEXTPROC m_glGetMultiTexGendvEXT;
      PFNGLGETMULTITEXGENFVEXTPROC m_glGetMultiTexGenfvEXT;
      PFNGLGETMULTITEXGENIVEXTPROC m_glGetMultiTexGenivEXT;
      PFNGLMULTITEXPARAMETERIEXTPROC m_glMultiTexParameteriEXT;
      PFNGLMULTITEXPARAMETERIVEXTPROC m_glMultiTexParameterivEXT;
      PFNGLMULTITEXPARAMETERFEXTPROC m_glMultiTexParameterfEXT;
      PFNGLMULTITEXPARAMETERFVEXTPROC m_glMultiTexParameterfvEXT;
      PFNGLMULTITEXIMAGE1DEXTPROC m_glMultiTexImage1DEXT;
      PFNGLMULTITEXIMAGE2DEXTPROC m_glMultiTexImage2DEXT;
      PFNGLMULTITEXSUBIMAGE1DEXTPROC m_glMultiTexSubImage1DEXT;
      PFNGLMULTITEXSUBIMAGE2DEXTPROC m_glMultiTexSubImage2DEXT;
      PFNGLCOPYMULTITEXIMAGE1DEXTPROC m_glCopyMultiTexImage1DEXT;
      PFNGLCOPYMULTITEXIMAGE2DEXTPROC m_glCopyMultiTexImage2DEXT;
      PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC m_glCopyMultiTexSubImage1DEXT;
      PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC m_glCopyMultiTexSubImage2DEXT;
      PFNGLGETMULTITEXIMAGEEXTPROC m_glGetMultiTexImageEXT;
      PFNGLGETMULTITEXPARAMETERFVEXTPROC m_glGetMultiTexParameterfvEXT;
      PFNGLGETMULTITEXPARAMETERIVEXTPROC m_glGetMultiTexParameterivEXT;
      PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC m_glGetMultiTexLevelParameterfvEXT;
      PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC m_glGetMultiTexLevelParameterivEXT;
      PFNGLMULTITEXIMAGE3DEXTPROC m_glMultiTexImage3DEXT;
      PFNGLMULTITEXSUBIMAGE3DEXTPROC m_glMultiTexSubImage3DEXT;
      PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC m_glCopyMultiTexSubImage3DEXT;
      PFNGLENABLECLIENTSTATEINDEXEDEXTPROC m_glEnableClientStateIndexedEXT;
      PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC m_glDisableClientStateIndexedEXT;
      PFNGLGETFLOATINDEXEDVEXTPROC m_glGetFloatIndexedvEXT;
      PFNGLGETDOUBLEINDEXEDVEXTPROC m_glGetDoubleIndexedvEXT;
      PFNGLGETPOINTERINDEXEDVEXTPROC m_glGetPointerIndexedvEXT;
      PFNGLENABLEINDEXEDEXTPROC m_glEnableIndexedEXT;
      PFNGLDISABLEINDEXEDEXTPROC m_glDisableIndexedEXT;
      PFNGLISENABLEDINDEXEDEXTPROC m_glIsEnabledIndexedEXT;
      PFNGLGETINTEGERINDEXEDVEXTPROC m_glGetIntegerIndexedvEXT;
      PFNGLGETBOOLEANINDEXEDVEXTPROC m_glGetBooleanIndexedvEXT;
      PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC m_glCompressedTextureImage3DEXT;
      PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC m_glCompressedTextureImage2DEXT;
      PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC m_glCompressedTextureImage1DEXT;
      PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC m_glCompressedTextureSubImage3DEXT;
      PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC m_glCompressedTextureSubImage2DEXT;
      PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC m_glCompressedTextureSubImage1DEXT;
      PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC m_glGetCompressedTextureImageEXT;
      PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC m_glCompressedMultiTexImage3DEXT;
      PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC m_glCompressedMultiTexImage2DEXT;
      PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC m_glCompressedMultiTexImage1DEXT;
      PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC m_glCompressedMultiTexSubImage3DEXT;
      PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC m_glCompressedMultiTexSubImage2DEXT;
      PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC m_glCompressedMultiTexSubImage1DEXT;
      PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC m_glGetCompressedMultiTexImageEXT;
      PFNGLMATRIXLOADTRANSPOSEFEXTPROC m_glMatrixLoadTransposefEXT;
      PFNGLMATRIXLOADTRANSPOSEDEXTPROC m_glMatrixLoadTransposedEXT;
      PFNGLMATRIXMULTTRANSPOSEFEXTPROC m_glMatrixMultTransposefEXT;
      PFNGLMATRIXMULTTRANSPOSEDEXTPROC m_glMatrixMultTransposedEXT;
      PFNGLNAMEDBUFFERDATAEXTPROC m_glNamedBufferDataEXT;
      PFNGLNAMEDBUFFERSUBDATAEXTPROC m_glNamedBufferSubDataEXT;
      PFNGLMAPNAMEDBUFFEREXTPROC m_glMapNamedBufferEXT;
      PFNGLUNMAPNAMEDBUFFEREXTPROC m_glUnmapNamedBufferEXT;
      PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC m_glGetNamedBufferParameterivEXT;
      PFNGLGETNAMEDBUFFERPOINTERVEXTPROC m_glGetNamedBufferPointervEXT;
      PFNGLGETNAMEDBUFFERSUBDATAEXTPROC m_glGetNamedBufferSubDataEXT;
      PFNGLPROGRAMUNIFORM1FEXTPROC m_glProgramUniform1fEXT;
      PFNGLPROGRAMUNIFORM2FEXTPROC m_glProgramUniform2fEXT;
      PFNGLPROGRAMUNIFORM3FEXTPROC m_glProgramUniform3fEXT;
      PFNGLPROGRAMUNIFORM4FEXTPROC m_glProgramUniform4fEXT;
      PFNGLPROGRAMUNIFORM1IEXTPROC m_glProgramUniform1iEXT;
      PFNGLPROGRAMUNIFORM2IEXTPROC m_glProgramUniform2iEXT;
      PFNGLPROGRAMUNIFORM3IEXTPROC m_glProgramUniform3iEXT;
      PFNGLPROGRAMUNIFORM4IEXTPROC m_glProgramUniform4iEXT;
      PFNGLPROGRAMUNIFORM1FVEXTPROC m_glProgramUniform1fvEXT;
      PFNGLPROGRAMUNIFORM2FVEXTPROC m_glProgramUniform2fvEXT;
      PFNGLPROGRAMUNIFORM3FVEXTPROC m_glProgramUniform3fvEXT;
      PFNGLPROGRAMUNIFORM4FVEXTPROC m_glProgramUniform4fvEXT;
      PFNGLPROGRAMUNIFORM1IVEXTPROC m_glProgramUniform1ivEXT;
      PFNGLPROGRAMUNIFORM2IVEXTPROC m_glProgramUniform2ivEXT;
      PFNGLPROGRAMUNIFORM3IVEXTPROC m_glProgramUniform3ivEXT;
      PFNGLPROGRAMUNIFORM4IVEXTPROC m_glProgramUniform4ivEXT;
      PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC m_glProgramUniformMatrix2fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC m_glProgramUniformMatrix3fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC m_glProgramUniformMatrix4fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC m_glProgramUniformMatrix2x3fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC m_glProgramUniformMatrix3x2fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC m_glProgramUniformMatrix2x4fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC m_glProgramUniformMatrix4x2fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC m_glProgramUniformMatrix3x4fvEXT;
      PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC m_glProgramUniformMatrix4x3fvEXT;
      PFNGLTEXTUREBUFFEREXTPROC m_glTextureBufferEXT;
      PFNGLMULTITEXBUFFEREXTPROC m_glMultiTexBufferEXT;
      PFNGLTEXTUREPARAMETERIIVEXTPROC m_glTextureParameterIivEXT;
      PFNGLTEXTUREPARAMETERIUIVEXTPROC m_glTextureParameterIuivEXT;
      PFNGLGETTEXTUREPARAMETERIIVEXTPROC m_glGetTextureParameterIivEXT;
      PFNGLGETTEXTUREPARAMETERIUIVEXTPROC m_glGetTextureParameterIuivEXT;
      PFNGLMULTITEXPARAMETERIIVEXTPROC m_glMultiTexParameterIivEXT;
      PFNGLMULTITEXPARAMETERIUIVEXTPROC m_glMultiTexParameterIuivEXT;
      PFNGLGETMULTITEXPARAMETERIIVEXTPROC m_glGetMultiTexParameterIivEXT;
      PFNGLGETMULTITEXPARAMETERIUIVEXTPROC m_glGetMultiTexParameterIuivEXT;
      PFNGLPROGRAMUNIFORM1UIEXTPROC m_glProgramUniform1uiEXT;
      PFNGLPROGRAMUNIFORM2UIEXTPROC m_glProgramUniform2uiEXT;
      PFNGLPROGRAMUNIFORM3UIEXTPROC m_glProgramUniform3uiEXT;
      PFNGLPROGRAMUNIFORM4UIEXTPROC m_glProgramUniform4uiEXT;
      PFNGLPROGRAMUNIFORM1UIVEXTPROC m_glProgramUniform1uivEXT;
      PFNGLPROGRAMUNIFORM2UIVEXTPROC m_glProgramUniform2uivEXT;
      PFNGLPROGRAMUNIFORM3UIVEXTPROC m_glProgramUniform3uivEXT;
      PFNGLPROGRAMUNIFORM4UIVEXTPROC m_glProgramUniform4uivEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC m_glNamedProgramLocalParameters4fvEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC m_glNamedProgramLocalParameterI4iEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC m_glNamedProgramLocalParameterI4ivEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC m_glNamedProgramLocalParametersI4ivEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC m_glNamedProgramLocalParameterI4uiEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC m_glNamedProgramLocalParameterI4uivEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC m_glNamedProgramLocalParametersI4uivEXT;
      PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC m_glGetNamedProgramLocalParameterIivEXT;
      PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC m_glGetNamedProgramLocalParameterIuivEXT;
      PFNGLENABLECLIENTSTATEIEXTPROC m_glEnableClientStateiEXT;
      PFNGLDISABLECLIENTSTATEIEXTPROC m_glDisableClientStateiEXT;
      PFNGLGETFLOATI_VEXTPROC m_glGetFloati_vEXT;
      PFNGLGETDOUBLEI_VEXTPROC m_glGetDoublei_vEXT;
      PFNGLGETPOINTERI_VEXTPROC m_glGetPointeri_vEXT;
      PFNGLNAMEDPROGRAMSTRINGEXTPROC m_glNamedProgramStringEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC m_glNamedProgramLocalParameter4dEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC m_glNamedProgramLocalParameter4dvEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC m_glNamedProgramLocalParameter4fEXT;
      PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC m_glNamedProgramLocalParameter4fvEXT;
      PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC m_glGetNamedProgramLocalParameterdvEXT;
      PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC m_glGetNamedProgramLocalParameterfvEXT;
      PFNGLGETNAMEDPROGRAMIVEXTPROC m_glGetNamedProgramivEXT;
      PFNGLGETNAMEDPROGRAMSTRINGEXTPROC m_glGetNamedProgramStringEXT;
      PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC m_glNamedRenderbufferStorageEXT;
      PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC m_glGetNamedRenderbufferParameterivEXT;
      PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC m_glNamedRenderbufferStorageMultisampleEXT;
      PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC m_glNamedRenderbufferStorageMultisampleCoverageEXT;
      PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC m_glCheckNamedFramebufferStatusEXT;
      PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC m_glNamedFramebufferTexture1DEXT;
      PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC m_glNamedFramebufferTexture2DEXT;
      PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC m_glNamedFramebufferTexture3DEXT;
      PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC m_glNamedFramebufferRenderbufferEXT;
      PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC m_glGetNamedFramebufferAttachmentParameterivEXT;
      PFNGLGENERATETEXTUREMIPMAPEXTPROC m_glGenerateTextureMipmapEXT;
      PFNGLGENERATEMULTITEXMIPMAPEXTPROC m_glGenerateMultiTexMipmapEXT;
      PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC m_glFramebufferDrawBufferEXT;
      PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC m_glFramebufferDrawBuffersEXT;
      PFNGLFRAMEBUFFERREADBUFFEREXTPROC m_glFramebufferReadBufferEXT;
      PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC m_glGetFramebufferParameterivEXT;
      PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC m_glNamedCopyBufferSubDataEXT;
      PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC m_glNamedFramebufferTextureEXT;
      PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC m_glNamedFramebufferTextureLayerEXT;
      PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC m_glNamedFramebufferTextureFaceEXT;
      PFNGLTEXTURERENDERBUFFEREXTPROC m_glTextureRenderbufferEXT;
      PFNGLMULTITEXRENDERBUFFEREXTPROC m_glMultiTexRenderbufferEXT;
      PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC m_glVertexArrayVertexOffsetEXT;
      PFNGLVERTEXARRAYCOLOROFFSETEXTPROC m_glVertexArrayColorOffsetEXT;
      PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC m_glVertexArrayEdgeFlagOffsetEXT;
      PFNGLVERTEXARRAYINDEXOFFSETEXTPROC m_glVertexArrayIndexOffsetEXT;
      PFNGLVERTEXARRAYNORMALOFFSETEXTPROC m_glVertexArrayNormalOffsetEXT;
      PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC m_glVertexArrayTexCoordOffsetEXT;
      PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC m_glVertexArrayMultiTexCoordOffsetEXT;
      PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC m_glVertexArrayFogCoordOffsetEXT;
      PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC m_glVertexArraySecondaryColorOffsetEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC m_glVertexArrayVertexAttribOffsetEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC m_glVertexArrayVertexAttribIOffsetEXT;
      PFNGLENABLEVERTEXARRAYEXTPROC m_glEnableVertexArrayEXT;
      PFNGLDISABLEVERTEXARRAYEXTPROC m_glDisableVertexArrayEXT;
      PFNGLENABLEVERTEXARRAYATTRIBEXTPROC m_glEnableVertexArrayAttribEXT;
      PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC m_glDisableVertexArrayAttribEXT;
      PFNGLGETVERTEXARRAYINTEGERVEXTPROC m_glGetVertexArrayIntegervEXT;
      PFNGLGETVERTEXARRAYPOINTERVEXTPROC m_glGetVertexArrayPointervEXT;
      PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC m_glGetVertexArrayIntegeri_vEXT;
      PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC m_glGetVertexArrayPointeri_vEXT;
      PFNGLMAPNAMEDBUFFERRANGEEXTPROC m_glMapNamedBufferRangeEXT;
      PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC m_glFlushMappedNamedBufferRangeEXT;
      PFNGLNAMEDBUFFERSTORAGEEXTPROC m_glNamedBufferStorageEXT;
      PFNGLCLEARNAMEDBUFFERDATAEXTPROC m_glClearNamedBufferDataEXT;
      PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC m_glClearNamedBufferSubDataEXT;
      PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC m_glNamedFramebufferParameteriEXT;
      PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC m_glGetNamedFramebufferParameterivEXT;
      PFNGLPROGRAMUNIFORM1DEXTPROC m_glProgramUniform1dEXT;
      PFNGLPROGRAMUNIFORM2DEXTPROC m_glProgramUniform2dEXT;
      PFNGLPROGRAMUNIFORM3DEXTPROC m_glProgramUniform3dEXT;
      PFNGLPROGRAMUNIFORM4DEXTPROC m_glProgramUniform4dEXT;
      PFNGLPROGRAMUNIFORM1DVEXTPROC m_glProgramUniform1dvEXT;
      PFNGLPROGRAMUNIFORM2DVEXTPROC m_glProgramUniform2dvEXT;
      PFNGLPROGRAMUNIFORM3DVEXTPROC m_glProgramUniform3dvEXT;
      PFNGLPROGRAMUNIFORM4DVEXTPROC m_glProgramUniform4dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC m_glProgramUniformMatrix2dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC m_glProgramUniformMatrix3dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC m_glProgramUniformMatrix4dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC m_glProgramUniformMatrix2x3dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC m_glProgramUniformMatrix2x4dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC m_glProgramUniformMatrix3x2dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC m_glProgramUniformMatrix3x4dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC m_glProgramUniformMatrix4x2dvEXT;
      PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC m_glProgramUniformMatrix4x3dvEXT;
      PFNGLTEXTUREBUFFERRANGEEXTPROC m_glTextureBufferRangeEXT;
      PFNGLTEXTURESTORAGE1DEXTPROC m_glTextureStorage1DEXT;
      PFNGLTEXTURESTORAGE2DEXTPROC m_glTextureStorage2DEXT;
      PFNGLTEXTURESTORAGE3DEXTPROC m_glTextureStorage3DEXT;
      PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC m_glTextureStorage2DMultisampleEXT;
      PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC m_glTextureStorage3DMultisampleEXT;
      PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC m_glVertexArrayBindVertexBufferEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC m_glVertexArrayVertexAttribFormatEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC m_glVertexArrayVertexAttribIFormatEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC m_glVertexArrayVertexAttribLFormatEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC m_glVertexArrayVertexAttribBindingEXT;
      PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC m_glVertexArrayVertexBindingDivisorEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC m_glVertexArrayVertexAttribLOffsetEXT;
      PFNGLTEXTUREPAGECOMMITMENTEXTPROC m_glTexturePageCommitmentEXT;
      PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC m_glVertexArrayVertexAttribDivisorEXT;
      PFNGLDISCARDFRAMEBUFFEREXTPROC m_glDiscardFramebufferEXT;
      PFNGLGENQUERIESEXTPROC m_glGenQueriesEXT;
      PFNGLDELETEQUERIESEXTPROC m_glDeleteQueriesEXT;
      PFNGLISQUERYEXTPROC m_glIsQueryEXT;
      PFNGLBEGINQUERYEXTPROC m_glBeginQueryEXT;
      PFNGLENDQUERYEXTPROC m_glEndQueryEXT;
      PFNGLQUERYCOUNTEREXTPROC m_glQueryCounterEXT;
      PFNGLGETQUERYIVEXTPROC m_glGetQueryivEXT;
      PFNGLGETQUERYOBJECTIVEXTPROC m_glGetQueryObjectivEXT;
      PFNGLGETQUERYOBJECTUIVEXTPROC m_glGetQueryObjectuivEXT;
      PFNGLGETQUERYOBJECTI64VEXTPROC m_glGetQueryObjecti64vEXT;
      PFNGLGETQUERYOBJECTUI64VEXTPROC m_glGetQueryObjectui64vEXT;
      PFNGLDRAWBUFFERSEXTPROC m_glDrawBuffersEXT;
      PFNGLCOLORMASKINDEXEDEXTPROC m_glColorMaskIndexedEXT;
      PFNGLENABLEIEXTPROC m_glEnableiEXT;
      PFNGLDISABLEIEXTPROC m_glDisableiEXT;
      PFNGLBLENDEQUATIONIEXTPROC m_glBlendEquationiEXT;
      PFNGLBLENDEQUATIONSEPARATEIEXTPROC m_glBlendEquationSeparateiEXT;
      PFNGLBLENDFUNCIEXTPROC m_glBlendFunciEXT;
      PFNGLBLENDFUNCSEPARATEIEXTPROC m_glBlendFuncSeparateiEXT;
      PFNGLCOLORMASKIEXTPROC m_glColorMaskiEXT;
      PFNGLISENABLEDIEXTPROC m_glIsEnablediEXT;
      PFNGLDRAWELEMENTSBASEVERTEXEXTPROC m_glDrawElementsBaseVertexEXT;
      PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC m_glDrawRangeElementsBaseVertexEXT;
      PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC m_glDrawElementsInstancedBaseVertexEXT;
      PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC m_glMultiDrawElementsBaseVertexEXT;
      PFNGLDRAWARRAYSINSTANCEDEXTPROC m_glDrawArraysInstancedEXT;
      PFNGLDRAWELEMENTSINSTANCEDEXTPROC m_glDrawElementsInstancedEXT;
      PFNGLDRAWRANGEELEMENTSEXTPROC m_glDrawRangeElementsEXT;
      PFNGLFOGCOORDFEXTPROC m_glFogCoordfEXT;
      PFNGLFOGCOORDFVEXTPROC m_glFogCoordfvEXT;
      PFNGLFOGCOORDDEXTPROC m_glFogCoorddEXT;
      PFNGLFOGCOORDDVEXTPROC m_glFogCoorddvEXT;
      PFNGLFOGCOORDPOINTEREXTPROC m_glFogCoordPointerEXT;
      PFNGLBLITFRAMEBUFFEREXTPROC m_glBlitFramebufferEXT;
      PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC m_glRenderbufferStorageMultisampleEXT;
      PFNGLISRENDERBUFFEREXTPROC m_glIsRenderbufferEXT;
      PFNGLBINDRENDERBUFFEREXTPROC m_glBindRenderbufferEXT;
      PFNGLDELETERENDERBUFFERSEXTPROC m_glDeleteRenderbuffersEXT;
      PFNGLGENRENDERBUFFERSEXTPROC m_glGenRenderbuffersEXT;
      PFNGLRENDERBUFFERSTORAGEEXTPROC m_glRenderbufferStorageEXT;
      PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC m_glGetRenderbufferParameterivEXT;
      PFNGLISFRAMEBUFFEREXTPROC m_glIsFramebufferEXT;
      PFNGLBINDFRAMEBUFFEREXTPROC m_glBindFramebufferEXT;
      PFNGLDELETEFRAMEBUFFERSEXTPROC m_glDeleteFramebuffersEXT;
      PFNGLGENFRAMEBUFFERSEXTPROC m_glGenFramebuffersEXT;
      PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC m_glCheckFramebufferStatusEXT;
      PFNGLFRAMEBUFFERTEXTURE1DEXTPROC m_glFramebufferTexture1DEXT;
      PFNGLFRAMEBUFFERTEXTURE2DEXTPROC m_glFramebufferTexture2DEXT;
      PFNGLFRAMEBUFFERTEXTURE3DEXTPROC m_glFramebufferTexture3DEXT;
      PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC m_glFramebufferRenderbufferEXT;
      PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC m_glGetFramebufferAttachmentParameterivEXT;
      PFNGLGENERATEMIPMAPEXTPROC m_glGenerateMipmapEXT;
      PFNGLFRAMEBUFFERTEXTUREEXTPROC m_glFramebufferTextureEXT;
      PFNGLPROGRAMPARAMETERIEXTPROC m_glProgramParameteriEXT;
      PFNGLPROGRAMENVPARAMETERS4FVEXTPROC m_glProgramEnvParameters4fvEXT;
      PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC m_glProgramLocalParameters4fvEXT;
      PFNGLGETUNIFORMUIVEXTPROC m_glGetUniformuivEXT;
      PFNGLGETFRAGDATALOCATIONEXTPROC m_glGetFragDataLocationEXT;
      PFNGLUNIFORM1UIEXTPROC m_glUniform1uiEXT;
      PFNGLUNIFORM2UIEXTPROC m_glUniform2uiEXT;
      PFNGLUNIFORM3UIEXTPROC m_glUniform3uiEXT;
      PFNGLUNIFORM4UIEXTPROC m_glUniform4uiEXT;
      PFNGLUNIFORM1UIVEXTPROC m_glUniform1uivEXT;
      PFNGLUNIFORM2UIVEXTPROC m_glUniform2uivEXT;
      PFNGLUNIFORM3UIVEXTPROC m_glUniform3uivEXT;
      PFNGLUNIFORM4UIVEXTPROC m_glUniform4uivEXT;
      PFNGLGETHISTOGRAMEXTPROC m_glGetHistogramEXT;
      PFNGLGETHISTOGRAMPARAMETERFVEXTPROC m_glGetHistogramParameterfvEXT;
      PFNGLGETHISTOGRAMPARAMETERIVEXTPROC m_glGetHistogramParameterivEXT;
      PFNGLGETMINMAXEXTPROC m_glGetMinmaxEXT;
      PFNGLGETMINMAXPARAMETERFVEXTPROC m_glGetMinmaxParameterfvEXT;
      PFNGLGETMINMAXPARAMETERIVEXTPROC m_glGetMinmaxParameterivEXT;
      PFNGLHISTOGRAMEXTPROC m_glHistogramEXT;
      PFNGLMINMAXEXTPROC m_glMinmaxEXT;
      PFNGLRESETHISTOGRAMEXTPROC m_glResetHistogramEXT;
      PFNGLRESETMINMAXEXTPROC m_glResetMinmaxEXT;
      PFNGLINDEXFUNCEXTPROC m_glIndexFuncEXT;
      PFNGLINDEXMATERIALEXTPROC m_glIndexMaterialEXT;
      PFNGLVERTEXATTRIBDIVISOREXTPROC m_glVertexAttribDivisorEXT;
      PFNGLAPPLYTEXTUREEXTPROC m_glApplyTextureEXT;
      PFNGLTEXTURELIGHTEXTPROC m_glTextureLightEXT;
      PFNGLTEXTUREMATERIALEXTPROC m_glTextureMaterialEXT;
      PFNGLMAPBUFFERRANGEEXTPROC m_glMapBufferRangeEXT;
      PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC m_glFlushMappedBufferRangeEXT;
      PFNGLMULTIDRAWARRAYSEXTPROC m_glMultiDrawArraysEXT;
      PFNGLMULTIDRAWELEMENTSEXTPROC m_glMultiDrawElementsEXT;
      PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC m_glMultiDrawArraysIndirectEXT;
      PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC m_glMultiDrawElementsIndirectEXT;
      PFNGLSAMPLEMASKEXTPROC m_glSampleMaskEXT;
      PFNGLSAMPLEPATTERNEXTPROC m_glSamplePatternEXT;
      PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC m_glFramebufferTexture2DMultisampleEXT;
      PFNGLREADBUFFERINDEXEDEXTPROC m_glReadBufferIndexedEXT;
      PFNGLDRAWBUFFERSINDEXEDEXTPROC m_glDrawBuffersIndexedEXT;
      PFNGLGETINTEGERI_VEXTPROC m_glGetIntegeri_vEXT;
      PFNGLCOLORTABLEEXTPROC m_glColorTableEXT;
      PFNGLGETCOLORTABLEEXTPROC m_glGetColorTableEXT;
      PFNGLGETCOLORTABLEPARAMETERIVEXTPROC m_glGetColorTableParameterivEXT;
      PFNGLGETCOLORTABLEPARAMETERFVEXTPROC m_glGetColorTableParameterfvEXT;
      PFNGLPIXELTRANSFORMPARAMETERIEXTPROC m_glPixelTransformParameteriEXT;
      PFNGLPIXELTRANSFORMPARAMETERFEXTPROC m_glPixelTransformParameterfEXT;
      PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC m_glPixelTransformParameterivEXT;
      PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC m_glPixelTransformParameterfvEXT;
      PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC m_glGetPixelTransformParameterivEXT;
      PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC m_glGetPixelTransformParameterfvEXT;
      PFNGLPOINTPARAMETERFEXTPROC m_glPointParameterfEXT;
      PFNGLPOINTPARAMETERFVEXTPROC m_glPointParameterfvEXT;
      PFNGLPOLYGONOFFSETEXTPROC m_glPolygonOffsetEXT;
      PFNGLPOLYGONOFFSETCLAMPEXTPROC m_glPolygonOffsetClampEXT;
      PFNGLPRIMITIVEBOUNDINGBOXEXTPROC m_glPrimitiveBoundingBoxEXT;
      PFNGLPROVOKINGVERTEXEXTPROC m_glProvokingVertexEXT;
      PFNGLRASTERSAMPLESEXTPROC m_glRasterSamplesEXT;
      PFNGLGETGRAPHICSRESETSTATUSEXTPROC m_glGetGraphicsResetStatusEXT;
      PFNGLREADNPIXELSEXTPROC m_glReadnPixelsEXT;
      PFNGLGETNUNIFORMFVEXTPROC m_glGetnUniformfvEXT;
      PFNGLGETNUNIFORMIVEXTPROC m_glGetnUniformivEXT;
      PFNGLSECONDARYCOLOR3BEXTPROC m_glSecondaryColor3bEXT;
      PFNGLSECONDARYCOLOR3BVEXTPROC m_glSecondaryColor3bvEXT;
      PFNGLSECONDARYCOLOR3DEXTPROC m_glSecondaryColor3dEXT;
      PFNGLSECONDARYCOLOR3DVEXTPROC m_glSecondaryColor3dvEXT;
      PFNGLSECONDARYCOLOR3FEXTPROC m_glSecondaryColor3fEXT;
      PFNGLSECONDARYCOLOR3FVEXTPROC m_glSecondaryColor3fvEXT;
      PFNGLSECONDARYCOLOR3IEXTPROC m_glSecondaryColor3iEXT;
      PFNGLSECONDARYCOLOR3IVEXTPROC m_glSecondaryColor3ivEXT;
      PFNGLSECONDARYCOLOR3SEXTPROC m_glSecondaryColor3sEXT;
      PFNGLSECONDARYCOLOR3SVEXTPROC m_glSecondaryColor3svEXT;
      PFNGLSECONDARYCOLOR3UBEXTPROC m_glSecondaryColor3ubEXT;
      PFNGLSECONDARYCOLOR3UBVEXTPROC m_glSecondaryColor3ubvEXT;
      PFNGLSECONDARYCOLOR3UIEXTPROC m_glSecondaryColor3uiEXT;
      PFNGLSECONDARYCOLOR3UIVEXTPROC m_glSecondaryColor3uivEXT;
      PFNGLSECONDARYCOLOR3USEXTPROC m_glSecondaryColor3usEXT;
      PFNGLSECONDARYCOLOR3USVEXTPROC m_glSecondaryColor3usvEXT;
      PFNGLSECONDARYCOLORPOINTEREXTPROC m_glSecondaryColorPointerEXT;
      PFNGLUSESHADERPROGRAMEXTPROC m_glUseShaderProgramEXT;
      PFNGLACTIVEPROGRAMEXTPROC m_glActiveProgramEXT;
      PFNGLCREATESHADERPROGRAMEXTPROC m_glCreateShaderProgramEXT;
      PFNGLACTIVESHADERPROGRAMEXTPROC m_glActiveShaderProgramEXT;
      PFNGLBINDPROGRAMPIPELINEEXTPROC m_glBindProgramPipelineEXT;
      PFNGLCREATESHADERPROGRAMVEXTPROC m_glCreateShaderProgramvEXT;
      PFNGLDELETEPROGRAMPIPELINESEXTPROC m_glDeleteProgramPipelinesEXT;
      PFNGLGENPROGRAMPIPELINESEXTPROC m_glGenProgramPipelinesEXT;
      PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC m_glGetProgramPipelineInfoLogEXT;
      PFNGLGETPROGRAMPIPELINEIVEXTPROC m_glGetProgramPipelineivEXT;
      PFNGLISPROGRAMPIPELINEEXTPROC m_glIsProgramPipelineEXT;
      PFNGLUSEPROGRAMSTAGESEXTPROC m_glUseProgramStagesEXT;
      PFNGLVALIDATEPROGRAMPIPELINEEXTPROC m_glValidateProgramPipelineEXT;
      PFNGLBINDIMAGETEXTUREEXTPROC m_glBindImageTextureEXT;
      PFNGLMEMORYBARRIEREXTPROC m_glMemoryBarrierEXT;
      PFNGLTEXPAGECOMMITMENTEXTPROC m_glTexPageCommitmentEXT;
      PFNGLSTENCILCLEARTAGEXTPROC m_glStencilClearTagEXT;
      PFNGLACTIVESTENCILFACEEXTPROC m_glActiveStencilFaceEXT;
      PFNGLTEXSUBIMAGE1DEXTPROC m_glTexSubImage1DEXT;
      PFNGLTEXSUBIMAGE2DEXTPROC m_glTexSubImage2DEXT;
      PFNGLPATCHPARAMETERIEXTPROC m_glPatchParameteriEXT;
      PFNGLTEXIMAGE3DEXTPROC m_glTexImage3DEXT;
      PFNGLTEXSUBIMAGE3DEXTPROC m_glTexSubImage3DEXT;
      PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC m_glFramebufferTextureLayerEXT;
      PFNGLTEXPARAMETERIIVEXTPROC m_glTexParameterIivEXT;
      PFNGLTEXPARAMETERIUIVEXTPROC m_glTexParameterIuivEXT;
      PFNGLGETTEXPARAMETERIIVEXTPROC m_glGetTexParameterIivEXT;
      PFNGLGETTEXPARAMETERIUIVEXTPROC m_glGetTexParameterIuivEXT;
      PFNGLSAMPLERPARAMETERIIVEXTPROC m_glSamplerParameterIivEXT;
      PFNGLSAMPLERPARAMETERIUIVEXTPROC m_glSamplerParameterIuivEXT;
      PFNGLGETSAMPLERPARAMETERIIVEXTPROC m_glGetSamplerParameterIivEXT;
      PFNGLGETSAMPLERPARAMETERIUIVEXTPROC m_glGetSamplerParameterIuivEXT;
      PFNGLTEXBUFFEREXTPROC m_glTexBufferEXT;
      PFNGLTEXBUFFERRANGEEXTPROC m_glTexBufferRangeEXT;
      PFNGLCLEARCOLORIIEXTPROC m_glClearColorIiEXT;
      PFNGLCLEARCOLORIUIEXTPROC m_glClearColorIuiEXT;
      PFNGLARETEXTURESRESIDENTEXTPROC m_glAreTexturesResidentEXT;
      PFNGLBINDTEXTUREEXTPROC m_glBindTextureEXT;
      PFNGLDELETETEXTURESEXTPROC m_glDeleteTexturesEXT;
      PFNGLGENTEXTURESEXTPROC m_glGenTexturesEXT;
      PFNGLISTEXTUREEXTPROC m_glIsTextureEXT;
      PFNGLPRIORITIZETEXTURESEXTPROC m_glPrioritizeTexturesEXT;
      PFNGLTEXTURENORMALEXTPROC m_glTextureNormalEXT;
      PFNGLTEXSTORAGE1DEXTPROC m_glTexStorage1DEXT;
      PFNGLTEXSTORAGE2DEXTPROC m_glTexStorage2DEXT;
      PFNGLTEXSTORAGE3DEXTPROC m_glTexStorage3DEXT;
      PFNGLTEXTUREVIEWEXTPROC m_glTextureViewEXT;
      PFNGLBEGINTRANSFORMFEEDBACKEXTPROC m_glBeginTransformFeedbackEXT;
      PFNGLENDTRANSFORMFEEDBACKEXTPROC m_glEndTransformFeedbackEXT;
      PFNGLBINDBUFFERRANGEEXTPROC m_glBindBufferRangeEXT;
      PFNGLBINDBUFFEROFFSETEXTPROC m_glBindBufferOffsetEXT;
      PFNGLBINDBUFFERBASEEXTPROC m_glBindBufferBaseEXT;
      PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC m_glTransformFeedbackVaryingsEXT;
      PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC m_glGetTransformFeedbackVaryingEXT;
      PFNGLARRAYELEMENTEXTPROC m_glArrayElementEXT;
      PFNGLCOLORPOINTEREXTPROC m_glColorPointerEXT;
      PFNGLDRAWARRAYSEXTPROC m_glDrawArraysEXT;
      PFNGLEDGEFLAGPOINTEREXTPROC m_glEdgeFlagPointerEXT;
      PFNGLGETPOINTERVEXTPROC m_glGetPointervEXT;
      PFNGLINDEXPOINTEREXTPROC m_glIndexPointerEXT;
      PFNGLNORMALPOINTEREXTPROC m_glNormalPointerEXT;
      PFNGLTEXCOORDPOINTEREXTPROC m_glTexCoordPointerEXT;
      PFNGLVERTEXPOINTEREXTPROC m_glVertexPointerEXT;
      PFNGLVERTEXATTRIBL1DEXTPROC m_glVertexAttribL1dEXT;
      PFNGLVERTEXATTRIBL2DEXTPROC m_glVertexAttribL2dEXT;
      PFNGLVERTEXATTRIBL3DEXTPROC m_glVertexAttribL3dEXT;
      PFNGLVERTEXATTRIBL4DEXTPROC m_glVertexAttribL4dEXT;
      PFNGLVERTEXATTRIBL1DVEXTPROC m_glVertexAttribL1dvEXT;
      PFNGLVERTEXATTRIBL2DVEXTPROC m_glVertexAttribL2dvEXT;
      PFNGLVERTEXATTRIBL3DVEXTPROC m_glVertexAttribL3dvEXT;
      PFNGLVERTEXATTRIBL4DVEXTPROC m_glVertexAttribL4dvEXT;
      PFNGLVERTEXATTRIBLPOINTEREXTPROC m_glVertexAttribLPointerEXT;
      PFNGLGETVERTEXATTRIBLDVEXTPROC m_glGetVertexAttribLdvEXT;
      PFNGLBEGINVERTEXSHADEREXTPROC m_glBeginVertexShaderEXT;
      PFNGLENDVERTEXSHADEREXTPROC m_glEndVertexShaderEXT;
      PFNGLBINDVERTEXSHADEREXTPROC m_glBindVertexShaderEXT;
      PFNGLGENVERTEXSHADERSEXTPROC m_glGenVertexShadersEXT;
      PFNGLDELETEVERTEXSHADEREXTPROC m_glDeleteVertexShaderEXT;
      PFNGLSHADEROP1EXTPROC m_glShaderOp1EXT;
      PFNGLSHADEROP2EXTPROC m_glShaderOp2EXT;
      PFNGLSHADEROP3EXTPROC m_glShaderOp3EXT;
      PFNGLSWIZZLEEXTPROC m_glSwizzleEXT;
      PFNGLWRITEMASKEXTPROC m_glWriteMaskEXT;
      PFNGLINSERTCOMPONENTEXTPROC m_glInsertComponentEXT;
      PFNGLEXTRACTCOMPONENTEXTPROC m_glExtractComponentEXT;
      PFNGLGENSYMBOLSEXTPROC m_glGenSymbolsEXT;
      PFNGLSETINVARIANTEXTPROC m_glSetInvariantEXT;
      PFNGLSETLOCALCONSTANTEXTPROC m_glSetLocalConstantEXT;
      PFNGLVARIANTBVEXTPROC m_glVariantbvEXT;
      PFNGLVARIANTSVEXTPROC m_glVariantsvEXT;
      PFNGLVARIANTIVEXTPROC m_glVariantivEXT;
      PFNGLVARIANTFVEXTPROC m_glVariantfvEXT;
      PFNGLVARIANTDVEXTPROC m_glVariantdvEXT;
      PFNGLVARIANTUBVEXTPROC m_glVariantubvEXT;
      PFNGLVARIANTUSVEXTPROC m_glVariantusvEXT;
      PFNGLVARIANTUIVEXTPROC m_glVariantuivEXT;
      PFNGLVARIANTPOINTEREXTPROC m_glVariantPointerEXT;
      PFNGLENABLEVARIANTCLIENTSTATEEXTPROC m_glEnableVariantClientStateEXT;
      PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC m_glDisableVariantClientStateEXT;
      PFNGLBINDLIGHTPARAMETEREXTPROC m_glBindLightParameterEXT;
      PFNGLBINDMATERIALPARAMETEREXTPROC m_glBindMaterialParameterEXT;
      PFNGLBINDTEXGENPARAMETEREXTPROC m_glBindTexGenParameterEXT;
      PFNGLBINDTEXTUREUNITPARAMETEREXTPROC m_glBindTextureUnitParameterEXT;
      PFNGLBINDPARAMETEREXTPROC m_glBindParameterEXT;
      PFNGLISVARIANTENABLEDEXTPROC m_glIsVariantEnabledEXT;
      PFNGLGETVARIANTBOOLEANVEXTPROC m_glGetVariantBooleanvEXT;
      PFNGLGETVARIANTINTEGERVEXTPROC m_glGetVariantIntegervEXT;
      PFNGLGETVARIANTFLOATVEXTPROC m_glGetVariantFloatvEXT;
      PFNGLGETVARIANTPOINTERVEXTPROC m_glGetVariantPointervEXT;
      PFNGLGETINVARIANTBOOLEANVEXTPROC m_glGetInvariantBooleanvEXT;
      PFNGLGETINVARIANTINTEGERVEXTPROC m_glGetInvariantIntegervEXT;
      PFNGLGETINVARIANTFLOATVEXTPROC m_glGetInvariantFloatvEXT;
      PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC m_glGetLocalConstantBooleanvEXT;
      PFNGLGETLOCALCONSTANTINTEGERVEXTPROC m_glGetLocalConstantIntegervEXT;
      PFNGLGETLOCALCONSTANTFLOATVEXTPROC m_glGetLocalConstantFloatvEXT;
      PFNGLVERTEXWEIGHTFEXTPROC m_glVertexWeightfEXT;
      PFNGLVERTEXWEIGHTFVEXTPROC m_glVertexWeightfvEXT;
      PFNGLVERTEXWEIGHTPOINTEREXTPROC m_glVertexWeightPointerEXT;
      PFNGLIMPORTSYNCEXTPROC m_glImportSyncEXT;
      PFNGLFRAMETERMINATORGREMEDYPROC m_glFrameTerminatorGREMEDY;
      PFNGLSTRINGMARKERGREMEDYPROC m_glStringMarkerGREMEDY;
      PFNGLIMAGETRANSFORMPARAMETERIHPPROC m_glImageTransformParameteriHP;
      PFNGLIMAGETRANSFORMPARAMETERFHPPROC m_glImageTransformParameterfHP;
      PFNGLIMAGETRANSFORMPARAMETERIVHPPROC m_glImageTransformParameterivHP;
      PFNGLIMAGETRANSFORMPARAMETERFVHPPROC m_glImageTransformParameterfvHP;
      PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC m_glGetImageTransformParameterivHP;
      PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC m_glGetImageTransformParameterfvHP;
      PFNGLMULTIMODEDRAWARRAYSIBMPROC m_glMultiModeDrawArraysIBM;
      PFNGLMULTIMODEDRAWELEMENTSIBMPROC m_glMultiModeDrawElementsIBM;
      PFNGLFLUSHSTATICDATAIBMPROC m_glFlushStaticDataIBM;
      PFNGLCOLORPOINTERLISTIBMPROC m_glColorPointerListIBM;
      PFNGLSECONDARYCOLORPOINTERLISTIBMPROC m_glSecondaryColorPointerListIBM;
      PFNGLEDGEFLAGPOINTERLISTIBMPROC m_glEdgeFlagPointerListIBM;
      PFNGLFOGCOORDPOINTERLISTIBMPROC m_glFogCoordPointerListIBM;
      PFNGLINDEXPOINTERLISTIBMPROC m_glIndexPointerListIBM;
      PFNGLNORMALPOINTERLISTIBMPROC m_glNormalPointerListIBM;
      PFNGLTEXCOORDPOINTERLISTIBMPROC m_glTexCoordPointerListIBM;
      PFNGLVERTEXPOINTERLISTIBMPROC m_glVertexPointerListIBM;
      PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC m_glRenderbufferStorageMultisampleIMG;
      PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC m_glFramebufferTexture2DMultisampleIMG;
      PFNGLBLENDFUNCSEPARATEINGRPROC m_glBlendFuncSeparateINGR;
      PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC m_glApplyFramebufferAttachmentCMAAINTEL;
      PFNGLSYNCTEXTUREINTELPROC m_glSyncTextureINTEL;
      PFNGLUNMAPTEXTURE2DINTELPROC m_glUnmapTexture2DINTEL;
      PFNGLMAPTEXTURE2DINTELPROC m_glMapTexture2DINTEL;
      PFNGLVERTEXPOINTERVINTELPROC m_glVertexPointervINTEL;
      PFNGLNORMALPOINTERVINTELPROC m_glNormalPointervINTEL;
      PFNGLCOLORPOINTERVINTELPROC m_glColorPointervINTEL;
      PFNGLTEXCOORDPOINTERVINTELPROC m_glTexCoordPointervINTEL;
      PFNGLBEGINPERFQUERYINTELPROC m_glBeginPerfQueryINTEL;
      PFNGLCREATEPERFQUERYINTELPROC m_glCreatePerfQueryINTEL;
      PFNGLDELETEPERFQUERYINTELPROC m_glDeletePerfQueryINTEL;
      PFNGLENDPERFQUERYINTELPROC m_glEndPerfQueryINTEL;
      PFNGLGETFIRSTPERFQUERYIDINTELPROC m_glGetFirstPerfQueryIdINTEL;
      PFNGLGETNEXTPERFQUERYIDINTELPROC m_glGetNextPerfQueryIdINTEL;
      PFNGLGETPERFCOUNTERINFOINTELPROC m_glGetPerfCounterInfoINTEL;
      PFNGLGETPERFQUERYDATAINTELPROC m_glGetPerfQueryDataINTEL;
      PFNGLGETPERFQUERYIDBYNAMEINTELPROC m_glGetPerfQueryIdByNameINTEL;
      PFNGLGETPERFQUERYINFOINTELPROC m_glGetPerfQueryInfoINTEL;
      PFNGLBLENDBARRIERKHRPROC m_glBlendBarrierKHR;
      PFNGLDEBUGMESSAGECONTROLKHRPROC m_glDebugMessageControlKHR;
      PFNGLDEBUGMESSAGEINSERTKHRPROC m_glDebugMessageInsertKHR;
      PFNGLDEBUGMESSAGECALLBACKKHRPROC m_glDebugMessageCallbackKHR;
      PFNGLGETDEBUGMESSAGELOGKHRPROC m_glGetDebugMessageLogKHR;
      PFNGLPUSHDEBUGGROUPKHRPROC m_glPushDebugGroupKHR;
      PFNGLPOPDEBUGGROUPKHRPROC m_glPopDebugGroupKHR;
      PFNGLOBJECTLABELKHRPROC m_glObjectLabelKHR;
      PFNGLGETOBJECTLABELKHRPROC m_glGetObjectLabelKHR;
      PFNGLOBJECTPTRLABELKHRPROC m_glObjectPtrLabelKHR;
      PFNGLGETOBJECTPTRLABELKHRPROC m_glGetObjectPtrLabelKHR;
      PFNGLGETPOINTERVKHRPROC m_glGetPointervKHR;
      PFNGLGETGRAPHICSRESETSTATUSKHRPROC m_glGetGraphicsResetStatusKHR;
      PFNGLREADNPIXELSKHRPROC m_glReadnPixelsKHR;
      PFNGLGETNUNIFORMFVKHRPROC m_glGetnUniformfvKHR;
      PFNGLGETNUNIFORMIVKHRPROC m_glGetnUniformivKHR;
      PFNGLGETNUNIFORMUIVKHRPROC m_glGetnUniformuivKHR;
      PFNGLRESIZEBUFFERSMESAPROC m_glResizeBuffersMESA;
      PFNGLWINDOWPOS2DMESAPROC m_glWindowPos2dMESA;
      PFNGLWINDOWPOS2DVMESAPROC m_glWindowPos2dvMESA;
      PFNGLWINDOWPOS2FMESAPROC m_glWindowPos2fMESA;
      PFNGLWINDOWPOS2FVMESAPROC m_glWindowPos2fvMESA;
      PFNGLWINDOWPOS2IMESAPROC m_glWindowPos2iMESA;
      PFNGLWINDOWPOS2IVMESAPROC m_glWindowPos2ivMESA;
      PFNGLWINDOWPOS2SMESAPROC m_glWindowPos2sMESA;
      PFNGLWINDOWPOS2SVMESAPROC m_glWindowPos2svMESA;
      PFNGLWINDOWPOS3DMESAPROC m_glWindowPos3dMESA;
      PFNGLWINDOWPOS3DVMESAPROC m_glWindowPos3dvMESA;
      PFNGLWINDOWPOS3FMESAPROC m_glWindowPos3fMESA;
      PFNGLWINDOWPOS3FVMESAPROC m_glWindowPos3fvMESA;
      PFNGLWINDOWPOS3IMESAPROC m_glWindowPos3iMESA;
      PFNGLWINDOWPOS3IVMESAPROC m_glWindowPos3ivMESA;
      PFNGLWINDOWPOS3SMESAPROC m_glWindowPos3sMESA;
      PFNGLWINDOWPOS3SVMESAPROC m_glWindowPos3svMESA;
      PFNGLWINDOWPOS4DMESAPROC m_glWindowPos4dMESA;
      PFNGLWINDOWPOS4DVMESAPROC m_glWindowPos4dvMESA;
      PFNGLWINDOWPOS4FMESAPROC m_glWindowPos4fMESA;
      PFNGLWINDOWPOS4FVMESAPROC m_glWindowPos4fvMESA;
      PFNGLWINDOWPOS4IMESAPROC m_glWindowPos4iMESA;
      PFNGLWINDOWPOS4IVMESAPROC m_glWindowPos4ivMESA;
      PFNGLWINDOWPOS4SMESAPROC m_glWindowPos4sMESA;
      PFNGLWINDOWPOS4SVMESAPROC m_glWindowPos4svMESA;
      PFNGLBEGINCONDITIONALRENDERNVXPROC m_glBeginConditionalRenderNVX;
      PFNGLENDCONDITIONALRENDERNVXPROC m_glEndConditionalRenderNVX;
      PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC m_glMultiDrawArraysIndirectBindlessNV;
      PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC m_glMultiDrawElementsIndirectBindlessNV;
      PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC m_glMultiDrawArraysIndirectBindlessCountNV;
      PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC m_glMultiDrawElementsIndirectBindlessCountNV;
      PFNGLGETTEXTUREHANDLENVPROC m_glGetTextureHandleNV;
      PFNGLGETTEXTURESAMPLERHANDLENVPROC m_glGetTextureSamplerHandleNV;
      PFNGLMAKETEXTUREHANDLERESIDENTNVPROC m_glMakeTextureHandleResidentNV;
      PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC m_glMakeTextureHandleNonResidentNV;
      PFNGLGETIMAGEHANDLENVPROC m_glGetImageHandleNV;
      PFNGLMAKEIMAGEHANDLERESIDENTNVPROC m_glMakeImageHandleResidentNV;
      PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC m_glMakeImageHandleNonResidentNV;
      PFNGLUNIFORMHANDLEUI64NVPROC m_glUniformHandleui64NV;
      PFNGLUNIFORMHANDLEUI64VNVPROC m_glUniformHandleui64vNV;
      PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC m_glProgramUniformHandleui64NV;
      PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC m_glProgramUniformHandleui64vNV;
      PFNGLISTEXTUREHANDLERESIDENTNVPROC m_glIsTextureHandleResidentNV;
      PFNGLISIMAGEHANDLERESIDENTNVPROC m_glIsImageHandleResidentNV;
      PFNGLBLENDPARAMETERINVPROC m_glBlendParameteriNV;
      PFNGLBLENDBARRIERNVPROC m_glBlendBarrierNV;
      PFNGLCREATESTATESNVPROC m_glCreateStatesNV;
      PFNGLDELETESTATESNVPROC m_glDeleteStatesNV;
      PFNGLISSTATENVPROC m_glIsStateNV;
      PFNGLSTATECAPTURENVPROC m_glStateCaptureNV;
      PFNGLGETCOMMANDHEADERNVPROC m_glGetCommandHeaderNV;
      PFNGLGETSTAGEINDEXNVPROC m_glGetStageIndexNV;
      PFNGLDRAWCOMMANDSNVPROC m_glDrawCommandsNV;
      PFNGLDRAWCOMMANDSADDRESSNVPROC m_glDrawCommandsAddressNV;
      PFNGLDRAWCOMMANDSSTATESNVPROC m_glDrawCommandsStatesNV;
      PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC m_glDrawCommandsStatesAddressNV;
      PFNGLCREATECOMMANDLISTSNVPROC m_glCreateCommandListsNV;
      PFNGLDELETECOMMANDLISTSNVPROC m_glDeleteCommandListsNV;
      PFNGLISCOMMANDLISTNVPROC m_glIsCommandListNV;
      PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC m_glListDrawCommandsStatesClientNV;
      PFNGLCOMMANDLISTSEGMENTSNVPROC m_glCommandListSegmentsNV;
      PFNGLCOMPILECOMMANDLISTNVPROC m_glCompileCommandListNV;
      PFNGLCALLCOMMANDLISTNVPROC m_glCallCommandListNV;
      PFNGLBEGINCONDITIONALRENDERNVPROC m_glBeginConditionalRenderNV;
      PFNGLENDCONDITIONALRENDERNVPROC m_glEndConditionalRenderNV;
      PFNGLSUBPIXELPRECISIONBIASNVPROC m_glSubpixelPrecisionBiasNV;
      PFNGLCONSERVATIVERASTERPARAMETERFNVPROC m_glConservativeRasterParameterfNV;
      PFNGLCOPYBUFFERSUBDATANVPROC m_glCopyBufferSubDataNV;
      PFNGLCOPYIMAGESUBDATANVPROC m_glCopyImageSubDataNV;
      PFNGLCOVERAGEMASKNVPROC m_glCoverageMaskNV;
      PFNGLCOVERAGEOPERATIONNVPROC m_glCoverageOperationNV;
      PFNGLDEPTHRANGEDNVPROC m_glDepthRangedNV;
      PFNGLCLEARDEPTHDNVPROC m_glClearDepthdNV;
      PFNGLDEPTHBOUNDSDNVPROC m_glDepthBoundsdNV;
      PFNGLDRAWBUFFERSNVPROC m_glDrawBuffersNV;
      PFNGLDRAWARRAYSINSTANCEDNVPROC m_glDrawArraysInstancedNV;
      PFNGLDRAWELEMENTSINSTANCEDNVPROC m_glDrawElementsInstancedNV;
      PFNGLDRAWTEXTURENVPROC m_glDrawTextureNV;
      PFNGLMAPCONTROLPOINTSNVPROC m_glMapControlPointsNV;
      PFNGLMAPPARAMETERIVNVPROC m_glMapParameterivNV;
      PFNGLMAPPARAMETERFVNVPROC m_glMapParameterfvNV;
      PFNGLGETMAPCONTROLPOINTSNVPROC m_glGetMapControlPointsNV;
      PFNGLGETMAPPARAMETERIVNVPROC m_glGetMapParameterivNV;
      PFNGLGETMAPPARAMETERFVNVPROC m_glGetMapParameterfvNV;
      PFNGLGETMAPATTRIBPARAMETERIVNVPROC m_glGetMapAttribParameterivNV;
      PFNGLGETMAPATTRIBPARAMETERFVNVPROC m_glGetMapAttribParameterfvNV;
      PFNGLEVALMAPSNVPROC m_glEvalMapsNV;
      PFNGLGETMULTISAMPLEFVNVPROC m_glGetMultisamplefvNV;
      PFNGLSAMPLEMASKINDEXEDNVPROC m_glSampleMaskIndexedNV;
      PFNGLTEXRENDERBUFFERNVPROC m_glTexRenderbufferNV;
      PFNGLDELETEFENCESNVPROC m_glDeleteFencesNV;
      PFNGLGENFENCESNVPROC m_glGenFencesNV;
      PFNGLISFENCENVPROC m_glIsFenceNV;
      PFNGLTESTFENCENVPROC m_glTestFenceNV;
      PFNGLGETFENCEIVNVPROC m_glGetFenceivNV;
      PFNGLFINISHFENCENVPROC m_glFinishFenceNV;
      PFNGLSETFENCENVPROC m_glSetFenceNV;
      PFNGLFRAGMENTCOVERAGECOLORNVPROC m_glFragmentCoverageColorNV;
      PFNGLPROGRAMNAMEDPARAMETER4FNVPROC m_glProgramNamedParameter4fNV;
      PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC m_glProgramNamedParameter4fvNV;
      PFNGLPROGRAMNAMEDPARAMETER4DNVPROC m_glProgramNamedParameter4dNV;
      PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC m_glProgramNamedParameter4dvNV;
      PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC m_glGetProgramNamedParameterfvNV;
      PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC m_glGetProgramNamedParameterdvNV;
      PFNGLBLITFRAMEBUFFERNVPROC m_glBlitFramebufferNV;
      PFNGLCOVERAGEMODULATIONTABLENVPROC m_glCoverageModulationTableNV;
      PFNGLGETCOVERAGEMODULATIONTABLENVPROC m_glGetCoverageModulationTableNV;
      PFNGLCOVERAGEMODULATIONNVPROC m_glCoverageModulationNV;
      PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC m_glRenderbufferStorageMultisampleNV;
      PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC m_glRenderbufferStorageMultisampleCoverageNV;
      PFNGLPROGRAMVERTEXLIMITNVPROC m_glProgramVertexLimitNV;
      PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC m_glFramebufferTextureFaceEXT;
      PFNGLPROGRAMLOCALPARAMETERI4INVPROC m_glProgramLocalParameterI4iNV;
      PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC m_glProgramLocalParameterI4ivNV;
      PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC m_glProgramLocalParametersI4ivNV;
      PFNGLPROGRAMLOCALPARAMETERI4UINVPROC m_glProgramLocalParameterI4uiNV;
      PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC m_glProgramLocalParameterI4uivNV;
      PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC m_glProgramLocalParametersI4uivNV;
      PFNGLPROGRAMENVPARAMETERI4INVPROC m_glProgramEnvParameterI4iNV;
      PFNGLPROGRAMENVPARAMETERI4IVNVPROC m_glProgramEnvParameterI4ivNV;
      PFNGLPROGRAMENVPARAMETERSI4IVNVPROC m_glProgramEnvParametersI4ivNV;
      PFNGLPROGRAMENVPARAMETERI4UINVPROC m_glProgramEnvParameterI4uiNV;
      PFNGLPROGRAMENVPARAMETERI4UIVNVPROC m_glProgramEnvParameterI4uivNV;
      PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC m_glProgramEnvParametersI4uivNV;
      PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC m_glGetProgramLocalParameterIivNV;
      PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC m_glGetProgramLocalParameterIuivNV;
      PFNGLGETPROGRAMENVPARAMETERIIVNVPROC m_glGetProgramEnvParameterIivNV;
      PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC m_glGetProgramEnvParameterIuivNV;
      PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC m_glProgramSubroutineParametersuivNV;
      PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC m_glGetProgramSubroutineParameteruivNV;
      PFNGLVERTEX2HNVPROC m_glVertex2hNV;
      PFNGLVERTEX2HVNVPROC m_glVertex2hvNV;
      PFNGLVERTEX3HNVPROC m_glVertex3hNV;
      PFNGLVERTEX3HVNVPROC m_glVertex3hvNV;
      PFNGLVERTEX4HNVPROC m_glVertex4hNV;
      PFNGLVERTEX4HVNVPROC m_glVertex4hvNV;
      PFNGLNORMAL3HNVPROC m_glNormal3hNV;
      PFNGLNORMAL3HVNVPROC m_glNormal3hvNV;
      PFNGLCOLOR3HNVPROC m_glColor3hNV;
      PFNGLCOLOR3HVNVPROC m_glColor3hvNV;
      PFNGLCOLOR4HNVPROC m_glColor4hNV;
      PFNGLCOLOR4HVNVPROC m_glColor4hvNV;
      PFNGLTEXCOORD1HNVPROC m_glTexCoord1hNV;
      PFNGLTEXCOORD1HVNVPROC m_glTexCoord1hvNV;
      PFNGLTEXCOORD2HNVPROC m_glTexCoord2hNV;
      PFNGLTEXCOORD2HVNVPROC m_glTexCoord2hvNV;
      PFNGLTEXCOORD3HNVPROC m_glTexCoord3hNV;
      PFNGLTEXCOORD3HVNVPROC m_glTexCoord3hvNV;
      PFNGLTEXCOORD4HNVPROC m_glTexCoord4hNV;
      PFNGLTEXCOORD4HVNVPROC m_glTexCoord4hvNV;
      PFNGLMULTITEXCOORD1HNVPROC m_glMultiTexCoord1hNV;
      PFNGLMULTITEXCOORD1HVNVPROC m_glMultiTexCoord1hvNV;
      PFNGLMULTITEXCOORD2HNVPROC m_glMultiTexCoord2hNV;
      PFNGLMULTITEXCOORD2HVNVPROC m_glMultiTexCoord2hvNV;
      PFNGLMULTITEXCOORD3HNVPROC m_glMultiTexCoord3hNV;
      PFNGLMULTITEXCOORD3HVNVPROC m_glMultiTexCoord3hvNV;
      PFNGLMULTITEXCOORD4HNVPROC m_glMultiTexCoord4hNV;
      PFNGLMULTITEXCOORD4HVNVPROC m_glMultiTexCoord4hvNV;
      PFNGLFOGCOORDHNVPROC m_glFogCoordhNV;
      PFNGLFOGCOORDHVNVPROC m_glFogCoordhvNV;
      PFNGLSECONDARYCOLOR3HNVPROC m_glSecondaryColor3hNV;
      PFNGLSECONDARYCOLOR3HVNVPROC m_glSecondaryColor3hvNV;
      PFNGLVERTEXWEIGHTHNVPROC m_glVertexWeighthNV;
      PFNGLVERTEXWEIGHTHVNVPROC m_glVertexWeighthvNV;
      PFNGLVERTEXATTRIB1HNVPROC m_glVertexAttrib1hNV;
      PFNGLVERTEXATTRIB1HVNVPROC m_glVertexAttrib1hvNV;
      PFNGLVERTEXATTRIB2HNVPROC m_glVertexAttrib2hNV;
      PFNGLVERTEXATTRIB2HVNVPROC m_glVertexAttrib2hvNV;
      PFNGLVERTEXATTRIB3HNVPROC m_glVertexAttrib3hNV;
      PFNGLVERTEXATTRIB3HVNVPROC m_glVertexAttrib3hvNV;
      PFNGLVERTEXATTRIB4HNVPROC m_glVertexAttrib4hNV;
      PFNGLVERTEXATTRIB4HVNVPROC m_glVertexAttrib4hvNV;
      PFNGLVERTEXATTRIBS1HVNVPROC m_glVertexAttribs1hvNV;
      PFNGLVERTEXATTRIBS2HVNVPROC m_glVertexAttribs2hvNV;
      PFNGLVERTEXATTRIBS3HVNVPROC m_glVertexAttribs3hvNV;
      PFNGLVERTEXATTRIBS4HVNVPROC m_glVertexAttribs4hvNV;
      PFNGLVERTEXATTRIBDIVISORNVPROC m_glVertexAttribDivisorNV;
      PFNGLGETINTERNALFORMATSAMPLEIVNVPROC m_glGetInternalformatSampleivNV;
      PFNGLUNIFORMMATRIX2X3FVNVPROC m_glUniformMatrix2x3fvNV;
      PFNGLUNIFORMMATRIX3X2FVNVPROC m_glUniformMatrix3x2fvNV;
      PFNGLUNIFORMMATRIX2X4FVNVPROC m_glUniformMatrix2x4fvNV;
      PFNGLUNIFORMMATRIX4X2FVNVPROC m_glUniformMatrix4x2fvNV;
      PFNGLUNIFORMMATRIX3X4FVNVPROC m_glUniformMatrix3x4fvNV;
      PFNGLUNIFORMMATRIX4X3FVNVPROC m_glUniformMatrix4x3fvNV;
      PFNGLGENOCCLUSIONQUERIESNVPROC m_glGenOcclusionQueriesNV;
      PFNGLDELETEOCCLUSIONQUERIESNVPROC m_glDeleteOcclusionQueriesNV;
      PFNGLISOCCLUSIONQUERYNVPROC m_glIsOcclusionQueryNV;
      PFNGLBEGINOCCLUSIONQUERYNVPROC m_glBeginOcclusionQueryNV;
      PFNGLENDOCCLUSIONQUERYNVPROC m_glEndOcclusionQueryNV;
      PFNGLGETOCCLUSIONQUERYIVNVPROC m_glGetOcclusionQueryivNV;
      PFNGLGETOCCLUSIONQUERYUIVNVPROC m_glGetOcclusionQueryuivNV;
      PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC m_glProgramBufferParametersfvNV;
      PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC m_glProgramBufferParametersIivNV;
      PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC m_glProgramBufferParametersIuivNV;
      PFNGLGENPATHSNVPROC m_glGenPathsNV;
      PFNGLDELETEPATHSNVPROC m_glDeletePathsNV;
      PFNGLISPATHNVPROC m_glIsPathNV;
      PFNGLPATHCOMMANDSNVPROC m_glPathCommandsNV;
      PFNGLPATHCOORDSNVPROC m_glPathCoordsNV;
      PFNGLPATHSUBCOMMANDSNVPROC m_glPathSubCommandsNV;
      PFNGLPATHSUBCOORDSNVPROC m_glPathSubCoordsNV;
      PFNGLPATHSTRINGNVPROC m_glPathStringNV;
      PFNGLPATHGLYPHSNVPROC m_glPathGlyphsNV;
      PFNGLPATHGLYPHRANGENVPROC m_glPathGlyphRangeNV;
      PFNGLWEIGHTPATHSNVPROC m_glWeightPathsNV;
      PFNGLCOPYPATHNVPROC m_glCopyPathNV;
      PFNGLINTERPOLATEPATHSNVPROC m_glInterpolatePathsNV;
      PFNGLTRANSFORMPATHNVPROC m_glTransformPathNV;
      PFNGLPATHPARAMETERIVNVPROC m_glPathParameterivNV;
      PFNGLPATHPARAMETERINVPROC m_glPathParameteriNV;
      PFNGLPATHPARAMETERFVNVPROC m_glPathParameterfvNV;
      PFNGLPATHPARAMETERFNVPROC m_glPathParameterfNV;
      PFNGLPATHDASHARRAYNVPROC m_glPathDashArrayNV;
      PFNGLPATHSTENCILFUNCNVPROC m_glPathStencilFuncNV;
      PFNGLPATHSTENCILDEPTHOFFSETNVPROC m_glPathStencilDepthOffsetNV;
      PFNGLSTENCILFILLPATHNVPROC m_glStencilFillPathNV;
      PFNGLSTENCILSTROKEPATHNVPROC m_glStencilStrokePathNV;
      PFNGLSTENCILFILLPATHINSTANCEDNVPROC m_glStencilFillPathInstancedNV;
      PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC m_glStencilStrokePathInstancedNV;
      PFNGLPATHCOVERDEPTHFUNCNVPROC m_glPathCoverDepthFuncNV;
      PFNGLCOVERFILLPATHNVPROC m_glCoverFillPathNV;
      PFNGLCOVERSTROKEPATHNVPROC m_glCoverStrokePathNV;
      PFNGLCOVERFILLPATHINSTANCEDNVPROC m_glCoverFillPathInstancedNV;
      PFNGLCOVERSTROKEPATHINSTANCEDNVPROC m_glCoverStrokePathInstancedNV;
      PFNGLGETPATHPARAMETERIVNVPROC m_glGetPathParameterivNV;
      PFNGLGETPATHPARAMETERFVNVPROC m_glGetPathParameterfvNV;
      PFNGLGETPATHCOMMANDSNVPROC m_glGetPathCommandsNV;
      PFNGLGETPATHCOORDSNVPROC m_glGetPathCoordsNV;
      PFNGLGETPATHDASHARRAYNVPROC m_glGetPathDashArrayNV;
      PFNGLGETPATHMETRICSNVPROC m_glGetPathMetricsNV;
      PFNGLGETPATHMETRICRANGENVPROC m_glGetPathMetricRangeNV;
      PFNGLGETPATHSPACINGNVPROC m_glGetPathSpacingNV;
      PFNGLISPOINTINFILLPATHNVPROC m_glIsPointInFillPathNV;
      PFNGLISPOINTINSTROKEPATHNVPROC m_glIsPointInStrokePathNV;
      PFNGLGETPATHLENGTHNVPROC m_glGetPathLengthNV;
      PFNGLPOINTALONGPATHNVPROC m_glPointAlongPathNV;
      PFNGLMATRIXLOAD3X2FNVPROC m_glMatrixLoad3x2fNV;
      PFNGLMATRIXLOAD3X3FNVPROC m_glMatrixLoad3x3fNV;
      PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC m_glMatrixLoadTranspose3x3fNV;
      PFNGLMATRIXMULT3X2FNVPROC m_glMatrixMult3x2fNV;
      PFNGLMATRIXMULT3X3FNVPROC m_glMatrixMult3x3fNV;
      PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC m_glMatrixMultTranspose3x3fNV;
      PFNGLSTENCILTHENCOVERFILLPATHNVPROC m_glStencilThenCoverFillPathNV;
      PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC m_glStencilThenCoverStrokePathNV;
      PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC m_glStencilThenCoverFillPathInstancedNV;
      PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC m_glStencilThenCoverStrokePathInstancedNV;
      PFNGLPATHGLYPHINDEXRANGENVPROC m_glPathGlyphIndexRangeNV;
      PFNGLPATHGLYPHINDEXARRAYNVPROC m_glPathGlyphIndexArrayNV;
      PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC m_glPathMemoryGlyphIndexArrayNV;
      PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC m_glProgramPathFragmentInputGenNV;
      PFNGLGETPROGRAMRESOURCEFVNVPROC m_glGetProgramResourcefvNV;
      PFNGLPATHCOLORGENNVPROC m_glPathColorGenNV;
      PFNGLPATHTEXGENNVPROC m_glPathTexGenNV;
      PFNGLPATHFOGGENNVPROC m_glPathFogGenNV;
      PFNGLGETPATHCOLORGENIVNVPROC m_glGetPathColorGenivNV;
      PFNGLGETPATHCOLORGENFVNVPROC m_glGetPathColorGenfvNV;
      PFNGLGETPATHTEXGENIVNVPROC m_glGetPathTexGenivNV;
      PFNGLGETPATHTEXGENFVNVPROC m_glGetPathTexGenfvNV;
      PFNGLPIXELDATARANGENVPROC m_glPixelDataRangeNV;
      PFNGLFLUSHPIXELDATARANGENVPROC m_glFlushPixelDataRangeNV;
      PFNGLPOINTPARAMETERINVPROC m_glPointParameteriNV;
      PFNGLPOINTPARAMETERIVNVPROC m_glPointParameterivNV;
      PFNGLPOLYGONMODENVPROC m_glPolygonModeNV;
      PFNGLPRESENTFRAMEKEYEDNVPROC m_glPresentFrameKeyedNV;
      PFNGLPRESENTFRAMEDUALFILLNVPROC m_glPresentFrameDualFillNV;
      PFNGLGETVIDEOIVNVPROC m_glGetVideoivNV;
      PFNGLGETVIDEOUIVNVPROC m_glGetVideouivNV;
      PFNGLGETVIDEOI64VNVPROC m_glGetVideoi64vNV;
      PFNGLGETVIDEOUI64VNVPROC m_glGetVideoui64vNV;
      PFNGLPRIMITIVERESTARTNVPROC m_glPrimitiveRestartNV;
      PFNGLPRIMITIVERESTARTINDEXNVPROC m_glPrimitiveRestartIndexNV;
      PFNGLREADBUFFERNVPROC m_glReadBufferNV;
      PFNGLCOMBINERPARAMETERFVNVPROC m_glCombinerParameterfvNV;
      PFNGLCOMBINERPARAMETERFNVPROC m_glCombinerParameterfNV;
      PFNGLCOMBINERPARAMETERIVNVPROC m_glCombinerParameterivNV;
      PFNGLCOMBINERPARAMETERINVPROC m_glCombinerParameteriNV;
      PFNGLCOMBINERINPUTNVPROC m_glCombinerInputNV;
      PFNGLCOMBINEROUTPUTNVPROC m_glCombinerOutputNV;
      PFNGLFINALCOMBINERINPUTNVPROC m_glFinalCombinerInputNV;
      PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC m_glGetCombinerInputParameterfvNV;
      PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC m_glGetCombinerInputParameterivNV;
      PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC m_glGetCombinerOutputParameterfvNV;
      PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC m_glGetCombinerOutputParameterivNV;
      PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC m_glGetFinalCombinerInputParameterfvNV;
      PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC m_glGetFinalCombinerInputParameterivNV;
      PFNGLCOMBINERSTAGEPARAMETERFVNVPROC m_glCombinerStageParameterfvNV;
      PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC m_glGetCombinerStageParameterfvNV;
      PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC m_glFramebufferSampleLocationsfvNV;
      PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC m_glNamedFramebufferSampleLocationsfvNV;
      PFNGLRESOLVEDEPTHVALUESNVPROC m_glResolveDepthValuesNV;
      PFNGLMAKEBUFFERRESIDENTNVPROC m_glMakeBufferResidentNV;
      PFNGLMAKEBUFFERNONRESIDENTNVPROC m_glMakeBufferNonResidentNV;
      PFNGLISBUFFERRESIDENTNVPROC m_glIsBufferResidentNV;
      PFNGLMAKENAMEDBUFFERRESIDENTNVPROC m_glMakeNamedBufferResidentNV;
      PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC m_glMakeNamedBufferNonResidentNV;
      PFNGLISNAMEDBUFFERRESIDENTNVPROC m_glIsNamedBufferResidentNV;
      PFNGLGETBUFFERPARAMETERUI64VNVPROC m_glGetBufferParameterui64vNV;
      PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC m_glGetNamedBufferParameterui64vNV;
      PFNGLGETINTEGERUI64VNVPROC m_glGetIntegerui64vNV;
      PFNGLUNIFORMUI64NVPROC m_glUniformui64NV;
      PFNGLUNIFORMUI64VNVPROC m_glUniformui64vNV;
      PFNGLPROGRAMUNIFORMUI64NVPROC m_glProgramUniformui64NV;
      PFNGLPROGRAMUNIFORMUI64VNVPROC m_glProgramUniformui64vNV;
      PFNGLTEXTUREBARRIERNVPROC m_glTextureBarrierNV;
      PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC m_glTexImage2DMultisampleCoverageNV;
      PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC m_glTexImage3DMultisampleCoverageNV;
      PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC m_glTextureImage2DMultisampleNV;
      PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC m_glTextureImage3DMultisampleNV;
      PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC m_glTextureImage2DMultisampleCoverageNV;
      PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC m_glTextureImage3DMultisampleCoverageNV;
      PFNGLBEGINTRANSFORMFEEDBACKNVPROC m_glBeginTransformFeedbackNV;
      PFNGLENDTRANSFORMFEEDBACKNVPROC m_glEndTransformFeedbackNV;
      PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC m_glTransformFeedbackAttribsNV;
      PFNGLBINDBUFFERRANGENVPROC m_glBindBufferRangeNV;
      PFNGLBINDBUFFEROFFSETNVPROC m_glBindBufferOffsetNV;
      PFNGLBINDBUFFERBASENVPROC m_glBindBufferBaseNV;
      PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC m_glTransformFeedbackVaryingsNV;
      PFNGLACTIVEVARYINGNVPROC m_glActiveVaryingNV;
      PFNGLGETVARYINGLOCATIONNVPROC m_glGetVaryingLocationNV;
      PFNGLGETACTIVEVARYINGNVPROC m_glGetActiveVaryingNV;
      PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC m_glGetTransformFeedbackVaryingNV;
      PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC m_glTransformFeedbackStreamAttribsNV;
      PFNGLBINDTRANSFORMFEEDBACKNVPROC m_glBindTransformFeedbackNV;
      PFNGLDELETETRANSFORMFEEDBACKSNVPROC m_glDeleteTransformFeedbacksNV;
      PFNGLGENTRANSFORMFEEDBACKSNVPROC m_glGenTransformFeedbacksNV;
      PFNGLISTRANSFORMFEEDBACKNVPROC m_glIsTransformFeedbackNV;
      PFNGLPAUSETRANSFORMFEEDBACKNVPROC m_glPauseTransformFeedbackNV;
      PFNGLRESUMETRANSFORMFEEDBACKNVPROC m_glResumeTransformFeedbackNV;
      PFNGLDRAWTRANSFORMFEEDBACKNVPROC m_glDrawTransformFeedbackNV;
      PFNGLVDPAUINITNVPROC m_glVDPAUInitNV;
      PFNGLVDPAUFININVPROC m_glVDPAUFiniNV;
      PFNGLVDPAUREGISTERVIDEOSURFACENVPROC m_glVDPAURegisterVideoSurfaceNV;
      PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC m_glVDPAURegisterOutputSurfaceNV;
      PFNGLVDPAUISSURFACENVPROC m_glVDPAUIsSurfaceNV;
      PFNGLVDPAUUNREGISTERSURFACENVPROC m_glVDPAUUnregisterSurfaceNV;
      PFNGLVDPAUGETSURFACEIVNVPROC m_glVDPAUGetSurfaceivNV;
      PFNGLVDPAUSURFACEACCESSNVPROC m_glVDPAUSurfaceAccessNV;
      PFNGLVDPAUMAPSURFACESNVPROC m_glVDPAUMapSurfacesNV;
      PFNGLVDPAUUNMAPSURFACESNVPROC m_glVDPAUUnmapSurfacesNV;
      PFNGLFLUSHVERTEXARRAYRANGENVPROC m_glFlushVertexArrayRangeNV;
      PFNGLVERTEXARRAYRANGENVPROC m_glVertexArrayRangeNV;
      PFNGLVERTEXATTRIBL1I64NVPROC m_glVertexAttribL1i64NV;
      PFNGLVERTEXATTRIBL2I64NVPROC m_glVertexAttribL2i64NV;
      PFNGLVERTEXATTRIBL3I64NVPROC m_glVertexAttribL3i64NV;
      PFNGLVERTEXATTRIBL4I64NVPROC m_glVertexAttribL4i64NV;
      PFNGLVERTEXATTRIBL1I64VNVPROC m_glVertexAttribL1i64vNV;
      PFNGLVERTEXATTRIBL2I64VNVPROC m_glVertexAttribL2i64vNV;
      PFNGLVERTEXATTRIBL3I64VNVPROC m_glVertexAttribL3i64vNV;
      PFNGLVERTEXATTRIBL4I64VNVPROC m_glVertexAttribL4i64vNV;
      PFNGLVERTEXATTRIBL1UI64NVPROC m_glVertexAttribL1ui64NV;
      PFNGLVERTEXATTRIBL2UI64NVPROC m_glVertexAttribL2ui64NV;
      PFNGLVERTEXATTRIBL3UI64NVPROC m_glVertexAttribL3ui64NV;
      PFNGLVERTEXATTRIBL4UI64NVPROC m_glVertexAttribL4ui64NV;
      PFNGLVERTEXATTRIBL1UI64VNVPROC m_glVertexAttribL1ui64vNV;
      PFNGLVERTEXATTRIBL2UI64VNVPROC m_glVertexAttribL2ui64vNV;
      PFNGLVERTEXATTRIBL3UI64VNVPROC m_glVertexAttribL3ui64vNV;
      PFNGLVERTEXATTRIBL4UI64VNVPROC m_glVertexAttribL4ui64vNV;
      PFNGLGETVERTEXATTRIBLI64VNVPROC m_glGetVertexAttribLi64vNV;
      PFNGLGETVERTEXATTRIBLUI64VNVPROC m_glGetVertexAttribLui64vNV;
      PFNGLVERTEXATTRIBLFORMATNVPROC m_glVertexAttribLFormatNV;
      PFNGLBUFFERADDRESSRANGENVPROC m_glBufferAddressRangeNV;
      PFNGLVERTEXFORMATNVPROC m_glVertexFormatNV;
      PFNGLNORMALFORMATNVPROC m_glNormalFormatNV;
      PFNGLCOLORFORMATNVPROC m_glColorFormatNV;
      PFNGLINDEXFORMATNVPROC m_glIndexFormatNV;
      PFNGLTEXCOORDFORMATNVPROC m_glTexCoordFormatNV;
      PFNGLEDGEFLAGFORMATNVPROC m_glEdgeFlagFormatNV;
      PFNGLSECONDARYCOLORFORMATNVPROC m_glSecondaryColorFormatNV;
      PFNGLFOGCOORDFORMATNVPROC m_glFogCoordFormatNV;
      PFNGLVERTEXATTRIBFORMATNVPROC m_glVertexAttribFormatNV;
      PFNGLVERTEXATTRIBIFORMATNVPROC m_glVertexAttribIFormatNV;
      PFNGLGETINTEGERUI64I_VNVPROC m_glGetIntegerui64i_vNV;
      PFNGLAREPROGRAMSRESIDENTNVPROC m_glAreProgramsResidentNV;
      PFNGLBINDPROGRAMNVPROC m_glBindProgramNV;
      PFNGLDELETEPROGRAMSNVPROC m_glDeleteProgramsNV;
      PFNGLEXECUTEPROGRAMNVPROC m_glExecuteProgramNV;
      PFNGLGENPROGRAMSNVPROC m_glGenProgramsNV;
      PFNGLGETPROGRAMPARAMETERDVNVPROC m_glGetProgramParameterdvNV;
      PFNGLGETPROGRAMPARAMETERFVNVPROC m_glGetProgramParameterfvNV;
      PFNGLGETPROGRAMIVNVPROC m_glGetProgramivNV;
      PFNGLGETPROGRAMSTRINGNVPROC m_glGetProgramStringNV;
      PFNGLGETTRACKMATRIXIVNVPROC m_glGetTrackMatrixivNV;
      PFNGLGETVERTEXATTRIBDVNVPROC m_glGetVertexAttribdvNV;
      PFNGLGETVERTEXATTRIBFVNVPROC m_glGetVertexAttribfvNV;
      PFNGLGETVERTEXATTRIBIVNVPROC m_glGetVertexAttribivNV;
      PFNGLGETVERTEXATTRIBPOINTERVNVPROC m_glGetVertexAttribPointervNV;
      PFNGLISPROGRAMNVPROC m_glIsProgramNV;
      PFNGLLOADPROGRAMNVPROC m_glLoadProgramNV;
      PFNGLPROGRAMPARAMETER4DNVPROC m_glProgramParameter4dNV;
      PFNGLPROGRAMPARAMETER4DVNVPROC m_glProgramParameter4dvNV;
      PFNGLPROGRAMPARAMETER4FNVPROC m_glProgramParameter4fNV;
      PFNGLPROGRAMPARAMETER4FVNVPROC m_glProgramParameter4fvNV;
      PFNGLPROGRAMPARAMETERS4DVNVPROC m_glProgramParameters4dvNV;
      PFNGLPROGRAMPARAMETERS4FVNVPROC m_glProgramParameters4fvNV;
      PFNGLREQUESTRESIDENTPROGRAMSNVPROC m_glRequestResidentProgramsNV;
      PFNGLTRACKMATRIXNVPROC m_glTrackMatrixNV;
      PFNGLVERTEXATTRIBPOINTERNVPROC m_glVertexAttribPointerNV;
      PFNGLVERTEXATTRIB1DNVPROC m_glVertexAttrib1dNV;
      PFNGLVERTEXATTRIB1DVNVPROC m_glVertexAttrib1dvNV;
      PFNGLVERTEXATTRIB1FNVPROC m_glVertexAttrib1fNV;
      PFNGLVERTEXATTRIB1FVNVPROC m_glVertexAttrib1fvNV;
      PFNGLVERTEXATTRIB1SNVPROC m_glVertexAttrib1sNV;
      PFNGLVERTEXATTRIB1SVNVPROC m_glVertexAttrib1svNV;
      PFNGLVERTEXATTRIB2DNVPROC m_glVertexAttrib2dNV;
      PFNGLVERTEXATTRIB2DVNVPROC m_glVertexAttrib2dvNV;
      PFNGLVERTEXATTRIB2FNVPROC m_glVertexAttrib2fNV;
      PFNGLVERTEXATTRIB2FVNVPROC m_glVertexAttrib2fvNV;
      PFNGLVERTEXATTRIB2SNVPROC m_glVertexAttrib2sNV;
      PFNGLVERTEXATTRIB2SVNVPROC m_glVertexAttrib2svNV;
      PFNGLVERTEXATTRIB3DNVPROC m_glVertexAttrib3dNV;
      PFNGLVERTEXATTRIB3DVNVPROC m_glVertexAttrib3dvNV;
      PFNGLVERTEXATTRIB3FNVPROC m_glVertexAttrib3fNV;
      PFNGLVERTEXATTRIB3FVNVPROC m_glVertexAttrib3fvNV;
      PFNGLVERTEXATTRIB3SNVPROC m_glVertexAttrib3sNV;
      PFNGLVERTEXATTRIB3SVNVPROC m_glVertexAttrib3svNV;
      PFNGLVERTEXATTRIB4DNVPROC m_glVertexAttrib4dNV;
      PFNGLVERTEXATTRIB4DVNVPROC m_glVertexAttrib4dvNV;
      PFNGLVERTEXATTRIB4FNVPROC m_glVertexAttrib4fNV;
      PFNGLVERTEXATTRIB4FVNVPROC m_glVertexAttrib4fvNV;
      PFNGLVERTEXATTRIB4SNVPROC m_glVertexAttrib4sNV;
      PFNGLVERTEXATTRIB4SVNVPROC m_glVertexAttrib4svNV;
      PFNGLVERTEXATTRIB4UBNVPROC m_glVertexAttrib4ubNV;
      PFNGLVERTEXATTRIB4UBVNVPROC m_glVertexAttrib4ubvNV;
      PFNGLVERTEXATTRIBS1DVNVPROC m_glVertexAttribs1dvNV;
      PFNGLVERTEXATTRIBS1FVNVPROC m_glVertexAttribs1fvNV;
      PFNGLVERTEXATTRIBS1SVNVPROC m_glVertexAttribs1svNV;
      PFNGLVERTEXATTRIBS2DVNVPROC m_glVertexAttribs2dvNV;
      PFNGLVERTEXATTRIBS2FVNVPROC m_glVertexAttribs2fvNV;
      PFNGLVERTEXATTRIBS2SVNVPROC m_glVertexAttribs2svNV;
      PFNGLVERTEXATTRIBS3DVNVPROC m_glVertexAttribs3dvNV;
      PFNGLVERTEXATTRIBS3FVNVPROC m_glVertexAttribs3fvNV;
      PFNGLVERTEXATTRIBS3SVNVPROC m_glVertexAttribs3svNV;
      PFNGLVERTEXATTRIBS4DVNVPROC m_glVertexAttribs4dvNV;
      PFNGLVERTEXATTRIBS4FVNVPROC m_glVertexAttribs4fvNV;
      PFNGLVERTEXATTRIBS4SVNVPROC m_glVertexAttribs4svNV;
      PFNGLVERTEXATTRIBS4UBVNVPROC m_glVertexAttribs4ubvNV;
      PFNGLVERTEXATTRIBI1IEXTPROC m_glVertexAttribI1iEXT;
      PFNGLVERTEXATTRIBI2IEXTPROC m_glVertexAttribI2iEXT;
      PFNGLVERTEXATTRIBI3IEXTPROC m_glVertexAttribI3iEXT;
      PFNGLVERTEXATTRIBI4IEXTPROC m_glVertexAttribI4iEXT;
      PFNGLVERTEXATTRIBI1UIEXTPROC m_glVertexAttribI1uiEXT;
      PFNGLVERTEXATTRIBI2UIEXTPROC m_glVertexAttribI2uiEXT;
      PFNGLVERTEXATTRIBI3UIEXTPROC m_glVertexAttribI3uiEXT;
      PFNGLVERTEXATTRIBI4UIEXTPROC m_glVertexAttribI4uiEXT;
      PFNGLVERTEXATTRIBI1IVEXTPROC m_glVertexAttribI1ivEXT;
      PFNGLVERTEXATTRIBI2IVEXTPROC m_glVertexAttribI2ivEXT;
      PFNGLVERTEXATTRIBI3IVEXTPROC m_glVertexAttribI3ivEXT;
      PFNGLVERTEXATTRIBI4IVEXTPROC m_glVertexAttribI4ivEXT;
      PFNGLVERTEXATTRIBI1UIVEXTPROC m_glVertexAttribI1uivEXT;
      PFNGLVERTEXATTRIBI2UIVEXTPROC m_glVertexAttribI2uivEXT;
      PFNGLVERTEXATTRIBI3UIVEXTPROC m_glVertexAttribI3uivEXT;
      PFNGLVERTEXATTRIBI4UIVEXTPROC m_glVertexAttribI4uivEXT;
      PFNGLVERTEXATTRIBI4BVEXTPROC m_glVertexAttribI4bvEXT;
      PFNGLVERTEXATTRIBI4SVEXTPROC m_glVertexAttribI4svEXT;
      PFNGLVERTEXATTRIBI4UBVEXTPROC m_glVertexAttribI4ubvEXT;
      PFNGLVERTEXATTRIBI4USVEXTPROC m_glVertexAttribI4usvEXT;
      PFNGLVERTEXATTRIBIPOINTEREXTPROC m_glVertexAttribIPointerEXT;
      PFNGLGETVERTEXATTRIBIIVEXTPROC m_glGetVertexAttribIivEXT;
      PFNGLGETVERTEXATTRIBIUIVEXTPROC m_glGetVertexAttribIuivEXT;
      PFNGLBEGINVIDEOCAPTURENVPROC m_glBeginVideoCaptureNV;
      PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC m_glBindVideoCaptureStreamBufferNV;
      PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC m_glBindVideoCaptureStreamTextureNV;
      PFNGLENDVIDEOCAPTURENVPROC m_glEndVideoCaptureNV;
      PFNGLGETVIDEOCAPTUREIVNVPROC m_glGetVideoCaptureivNV;
      PFNGLGETVIDEOCAPTURESTREAMIVNVPROC m_glGetVideoCaptureStreamivNV;
      PFNGLGETVIDEOCAPTURESTREAMFVNVPROC m_glGetVideoCaptureStreamfvNV;
      PFNGLGETVIDEOCAPTURESTREAMDVNVPROC m_glGetVideoCaptureStreamdvNV;
      PFNGLVIDEOCAPTURENVPROC m_glVideoCaptureNV;
      PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC m_glVideoCaptureStreamParameterivNV;
      PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC m_glVideoCaptureStreamParameterfvNV;
      PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC m_glVideoCaptureStreamParameterdvNV;
      PFNGLVIEWPORTARRAYVNVPROC m_glViewportArrayvNV;
      PFNGLVIEWPORTINDEXEDFNVPROC m_glViewportIndexedfNV;
      PFNGLVIEWPORTINDEXEDFVNVPROC m_glViewportIndexedfvNV;
      PFNGLSCISSORARRAYVNVPROC m_glScissorArrayvNV;
      PFNGLSCISSORINDEXEDNVPROC m_glScissorIndexedNV;
      PFNGLSCISSORINDEXEDVNVPROC m_glScissorIndexedvNV;
      PFNGLDEPTHRANGEARRAYFVNVPROC m_glDepthRangeArrayfvNV;
      PFNGLDEPTHRANGEINDEXEDFNVPROC m_glDepthRangeIndexedfNV;
      PFNGLGETFLOATI_VNVPROC m_glGetFloati_vNV;
      PFNGLENABLEINVPROC m_glEnableiNV;
      PFNGLDISABLEINVPROC m_glDisableiNV;
      PFNGLISENABLEDINVPROC m_glIsEnablediNV;
      PFNGLEGLIMAGETARGETTEXTURE2DOESPROC m_glEGLImageTargetTexture2DOES;
      PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC m_glEGLImageTargetRenderbufferStorageOES;
      PFNGLMULTITEXCOORD1BOESPROC m_glMultiTexCoord1bOES;
      PFNGLMULTITEXCOORD1BVOESPROC m_glMultiTexCoord1bvOES;
      PFNGLMULTITEXCOORD2BOESPROC m_glMultiTexCoord2bOES;
      PFNGLMULTITEXCOORD2BVOESPROC m_glMultiTexCoord2bvOES;
      PFNGLMULTITEXCOORD3BOESPROC m_glMultiTexCoord3bOES;
      PFNGLMULTITEXCOORD3BVOESPROC m_glMultiTexCoord3bvOES;
      PFNGLMULTITEXCOORD4BOESPROC m_glMultiTexCoord4bOES;
      PFNGLMULTITEXCOORD4BVOESPROC m_glMultiTexCoord4bvOES;
      PFNGLTEXCOORD1BOESPROC m_glTexCoord1bOES;
      PFNGLTEXCOORD1BVOESPROC m_glTexCoord1bvOES;
      PFNGLTEXCOORD2BOESPROC m_glTexCoord2bOES;
      PFNGLTEXCOORD2BVOESPROC m_glTexCoord2bvOES;
      PFNGLTEXCOORD3BOESPROC m_glTexCoord3bOES;
      PFNGLTEXCOORD3BVOESPROC m_glTexCoord3bvOES;
      PFNGLTEXCOORD4BOESPROC m_glTexCoord4bOES;
      PFNGLTEXCOORD4BVOESPROC m_glTexCoord4bvOES;
      PFNGLVERTEX2BOESPROC m_glVertex2bOES;
      PFNGLVERTEX2BVOESPROC m_glVertex2bvOES;
      PFNGLVERTEX3BOESPROC m_glVertex3bOES;
      PFNGLVERTEX3BVOESPROC m_glVertex3bvOES;
      PFNGLVERTEX4BOESPROC m_glVertex4bOES;
      PFNGLVERTEX4BVOESPROC m_glVertex4bvOES;
      PFNGLCOPYIMAGESUBDATAOESPROC m_glCopyImageSubDataOES;
      PFNGLENABLEIOESPROC m_glEnableiOES;
      PFNGLDISABLEIOESPROC m_glDisableiOES;
      PFNGLBLENDEQUATIONIOESPROC m_glBlendEquationiOES;
      PFNGLBLENDEQUATIONSEPARATEIOESPROC m_glBlendEquationSeparateiOES;
      PFNGLBLENDFUNCIOESPROC m_glBlendFunciOES;
      PFNGLBLENDFUNCSEPARATEIOESPROC m_glBlendFuncSeparateiOES;
      PFNGLCOLORMASKIOESPROC m_glColorMaskiOES;
      PFNGLISENABLEDIOESPROC m_glIsEnablediOES;
      PFNGLDRAWELEMENTSBASEVERTEXOESPROC m_glDrawElementsBaseVertexOES;
      PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC m_glDrawRangeElementsBaseVertexOES;
      PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC m_glDrawElementsInstancedBaseVertexOES;
      PFNGLMULTIDRAWELEMENTSBASEVERTEXOESPROC m_glMultiDrawElementsBaseVertexOES;
      PFNGLALPHAFUNCXOESPROC m_glAlphaFuncxOES;
      PFNGLCLEARCOLORXOESPROC m_glClearColorxOES;
      PFNGLCLEARDEPTHXOESPROC m_glClearDepthxOES;
      PFNGLCLIPPLANEXOESPROC m_glClipPlanexOES;
      PFNGLCOLOR4XOESPROC m_glColor4xOES;
      PFNGLDEPTHRANGEXOESPROC m_glDepthRangexOES;
      PFNGLFOGXOESPROC m_glFogxOES;
      PFNGLFOGXVOESPROC m_glFogxvOES;
      PFNGLFRUSTUMXOESPROC m_glFrustumxOES;
      PFNGLGETCLIPPLANEXOESPROC m_glGetClipPlanexOES;
      PFNGLGETFIXEDVOESPROC m_glGetFixedvOES;
      PFNGLGETTEXENVXVOESPROC m_glGetTexEnvxvOES;
      PFNGLGETTEXPARAMETERXVOESPROC m_glGetTexParameterxvOES;
      PFNGLLIGHTMODELXOESPROC m_glLightModelxOES;
      PFNGLLIGHTMODELXVOESPROC m_glLightModelxvOES;
      PFNGLLIGHTXOESPROC m_glLightxOES;
      PFNGLLIGHTXVOESPROC m_glLightxvOES;
      PFNGLLINEWIDTHXOESPROC m_glLineWidthxOES;
      PFNGLLOADMATRIXXOESPROC m_glLoadMatrixxOES;
      PFNGLMATERIALXOESPROC m_glMaterialxOES;
      PFNGLMATERIALXVOESPROC m_glMaterialxvOES;
      PFNGLMULTMATRIXXOESPROC m_glMultMatrixxOES;
      PFNGLMULTITEXCOORD4XOESPROC m_glMultiTexCoord4xOES;
      PFNGLNORMAL3XOESPROC m_glNormal3xOES;
      PFNGLORTHOXOESPROC m_glOrthoxOES;
      PFNGLPOINTPARAMETERXVOESPROC m_glPointParameterxvOES;
      PFNGLPOINTSIZEXOESPROC m_glPointSizexOES;
      PFNGLPOLYGONOFFSETXOESPROC m_glPolygonOffsetxOES;
      PFNGLROTATEXOESPROC m_glRotatexOES;
      PFNGLSCALEXOESPROC m_glScalexOES;
      PFNGLTEXENVXOESPROC m_glTexEnvxOES;
      PFNGLTEXENVXVOESPROC m_glTexEnvxvOES;
      PFNGLTEXPARAMETERXOESPROC m_glTexParameterxOES;
      PFNGLTEXPARAMETERXVOESPROC m_glTexParameterxvOES;
      PFNGLTRANSLATEXOESPROC m_glTranslatexOES;
      PFNGLACCUMXOESPROC m_glAccumxOES;
      PFNGLBITMAPXOESPROC m_glBitmapxOES;
      PFNGLBLENDCOLORXOESPROC m_glBlendColorxOES;
      PFNGLCLEARACCUMXOESPROC m_glClearAccumxOES;
      PFNGLCOLOR3XOESPROC m_glColor3xOES;
      PFNGLCOLOR3XVOESPROC m_glColor3xvOES;
      PFNGLCOLOR4XVOESPROC m_glColor4xvOES;
      PFNGLCONVOLUTIONPARAMETERXOESPROC m_glConvolutionParameterxOES;
      PFNGLCONVOLUTIONPARAMETERXVOESPROC m_glConvolutionParameterxvOES;
      PFNGLEVALCOORD1XOESPROC m_glEvalCoord1xOES;
      PFNGLEVALCOORD1XVOESPROC m_glEvalCoord1xvOES;
      PFNGLEVALCOORD2XOESPROC m_glEvalCoord2xOES;
      PFNGLEVALCOORD2XVOESPROC m_glEvalCoord2xvOES;
      PFNGLFEEDBACKBUFFERXOESPROC m_glFeedbackBufferxOES;
      PFNGLGETCONVOLUTIONPARAMETERXVOESPROC m_glGetConvolutionParameterxvOES;
      PFNGLGETHISTOGRAMPARAMETERXVOESPROC m_glGetHistogramParameterxvOES;
      PFNGLGETLIGHTXOESPROC m_glGetLightxOES;
      PFNGLGETMAPXVOESPROC m_glGetMapxvOES;
      PFNGLGETMATERIALXOESPROC m_glGetMaterialxOES;
      PFNGLGETPIXELMAPXVPROC m_glGetPixelMapxv;
      PFNGLGETTEXGENXVOESPROC m_glGetTexGenxvOES;
      PFNGLGETTEXLEVELPARAMETERXVOESPROC m_glGetTexLevelParameterxvOES;
      PFNGLINDEXXOESPROC m_glIndexxOES;
      PFNGLINDEXXVOESPROC m_glIndexxvOES;
      PFNGLLOADTRANSPOSEMATRIXXOESPROC m_glLoadTransposeMatrixxOES;
      PFNGLMAP1XOESPROC m_glMap1xOES;
      PFNGLMAP2XOESPROC m_glMap2xOES;
      PFNGLMAPGRID1XOESPROC m_glMapGrid1xOES;
      PFNGLMAPGRID2XOESPROC m_glMapGrid2xOES;
      PFNGLMULTTRANSPOSEMATRIXXOESPROC m_glMultTransposeMatrixxOES;
      PFNGLMULTITEXCOORD1XOESPROC m_glMultiTexCoord1xOES;
      PFNGLMULTITEXCOORD1XVOESPROC m_glMultiTexCoord1xvOES;
      PFNGLMULTITEXCOORD2XOESPROC m_glMultiTexCoord2xOES;
      PFNGLMULTITEXCOORD2XVOESPROC m_glMultiTexCoord2xvOES;
      PFNGLMULTITEXCOORD3XOESPROC m_glMultiTexCoord3xOES;
      PFNGLMULTITEXCOORD3XVOESPROC m_glMultiTexCoord3xvOES;
      PFNGLMULTITEXCOORD4XVOESPROC m_glMultiTexCoord4xvOES;
      PFNGLNORMAL3XVOESPROC m_glNormal3xvOES;
      PFNGLPASSTHROUGHXOESPROC m_glPassThroughxOES;
      PFNGLPIXELMAPXPROC m_glPixelMapx;
      PFNGLPIXELSTOREXPROC m_glPixelStorex;
      PFNGLPIXELTRANSFERXOESPROC m_glPixelTransferxOES;
      PFNGLPIXELZOOMXOESPROC m_glPixelZoomxOES;
      PFNGLPRIORITIZETEXTURESXOESPROC m_glPrioritizeTexturesxOES;
      PFNGLRASTERPOS2XOESPROC m_glRasterPos2xOES;
      PFNGLRASTERPOS2XVOESPROC m_glRasterPos2xvOES;
      PFNGLRASTERPOS3XOESPROC m_glRasterPos3xOES;
      PFNGLRASTERPOS3XVOESPROC m_glRasterPos3xvOES;
      PFNGLRASTERPOS4XOESPROC m_glRasterPos4xOES;
      PFNGLRASTERPOS4XVOESPROC m_glRasterPos4xvOES;
      PFNGLRECTXOESPROC m_glRectxOES;
      PFNGLRECTXVOESPROC m_glRectxvOES;
      PFNGLTEXCOORD1XOESPROC m_glTexCoord1xOES;
      PFNGLTEXCOORD1XVOESPROC m_glTexCoord1xvOES;
      PFNGLTEXCOORD2XOESPROC m_glTexCoord2xOES;
      PFNGLTEXCOORD2XVOESPROC m_glTexCoord2xvOES;
      PFNGLTEXCOORD3XOESPROC m_glTexCoord3xOES;
      PFNGLTEXCOORD3XVOESPROC m_glTexCoord3xvOES;
      PFNGLTEXCOORD4XOESPROC m_glTexCoord4xOES;
      PFNGLTEXCOORD4XVOESPROC m_glTexCoord4xvOES;
      PFNGLTEXGENXOESPROC m_glTexGenxOES;
      PFNGLTEXGENXVOESPROC m_glTexGenxvOES;
      PFNGLVERTEX2XOESPROC m_glVertex2xOES;
      PFNGLVERTEX2XVOESPROC m_glVertex2xvOES;
      PFNGLVERTEX3XOESPROC m_glVertex3xOES;
      PFNGLVERTEX3XVOESPROC m_glVertex3xvOES;
      PFNGLVERTEX4XOESPROC m_glVertex4xOES;
      PFNGLVERTEX4XVOESPROC m_glVertex4xvOES;
      PFNGLFRAMEBUFFERTEXTUREOESPROC m_glFramebufferTextureOES;
      PFNGLGETPROGRAMBINARYOESPROC m_glGetProgramBinaryOES;
      PFNGLPROGRAMBINARYOESPROC m_glProgramBinaryOES;
      PFNGLMAPBUFFEROESPROC m_glMapBufferOES;
      PFNGLUNMAPBUFFEROESPROC m_glUnmapBufferOES;
      PFNGLGETBUFFERPOINTERVOESPROC m_glGetBufferPointervOES;
      PFNGLPRIMITIVEBOUNDINGBOXOESPROC m_glPrimitiveBoundingBoxOES;
      PFNGLQUERYMATRIXXOESPROC m_glQueryMatrixxOES;
      PFNGLMINSAMPLESHADINGOESPROC m_glMinSampleShadingOES;
      PFNGLCLEARDEPTHFOESPROC m_glClearDepthfOES;
      PFNGLCLIPPLANEFOESPROC m_glClipPlanefOES;
      PFNGLDEPTHRANGEFOESPROC m_glDepthRangefOES;
      PFNGLFRUSTUMFOESPROC m_glFrustumfOES;
      PFNGLGETCLIPPLANEFOESPROC m_glGetClipPlanefOES;
      PFNGLORTHOFOESPROC m_glOrthofOES;
      PFNGLPATCHPARAMETERIOESPROC m_glPatchParameteriOES;
      PFNGLTEXIMAGE3DOESPROC m_glTexImage3DOES;
      PFNGLTEXSUBIMAGE3DOESPROC m_glTexSubImage3DOES;
      PFNGLCOPYTEXSUBIMAGE3DOESPROC m_glCopyTexSubImage3DOES;
      PFNGLCOMPRESSEDTEXIMAGE3DOESPROC m_glCompressedTexImage3DOES;
      PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC m_glCompressedTexSubImage3DOES;
      PFNGLFRAMEBUFFERTEXTURE3DOESPROC m_glFramebufferTexture3DOES;
      PFNGLTEXPARAMETERIIVOESPROC m_glTexParameterIivOES;
      PFNGLTEXPARAMETERIUIVOESPROC m_glTexParameterIuivOES;
      PFNGLGETTEXPARAMETERIIVOESPROC m_glGetTexParameterIivOES;
      PFNGLGETTEXPARAMETERIUIVOESPROC m_glGetTexParameterIuivOES;
      PFNGLSAMPLERPARAMETERIIVOESPROC m_glSamplerParameterIivOES;
      PFNGLSAMPLERPARAMETERIUIVOESPROC m_glSamplerParameterIuivOES;
      PFNGLGETSAMPLERPARAMETERIIVOESPROC m_glGetSamplerParameterIivOES;
      PFNGLGETSAMPLERPARAMETERIUIVOESPROC m_glGetSamplerParameterIuivOES;
      PFNGLTEXBUFFEROESPROC m_glTexBufferOES;
      PFNGLTEXBUFFERRANGEOESPROC m_glTexBufferRangeOES;
      PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC m_glTexStorage3DMultisampleOES;
      PFNGLTEXTUREVIEWOESPROC m_glTextureViewOES;
      PFNGLBINDVERTEXARRAYOESPROC m_glBindVertexArrayOES;
      PFNGLDELETEVERTEXARRAYSOESPROC m_glDeleteVertexArraysOES;
      PFNGLGENVERTEXARRAYSOESPROC m_glGenVertexArraysOES;
      PFNGLISVERTEXARRAYOESPROC m_glIsVertexArrayOES;
      PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC m_glFramebufferTextureMultiviewOVR;
      PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC m_glFramebufferTextureMultisampleMultiviewOVR;
      PFNGLHINTPGIPROC m_glHintPGI;
      PFNGLALPHAFUNCQCOMPROC m_glAlphaFuncQCOM;
      PFNGLGETDRIVERCONTROLSQCOMPROC m_glGetDriverControlsQCOM;
      PFNGLGETDRIVERCONTROLSTRINGQCOMPROC m_glGetDriverControlStringQCOM;
      PFNGLENABLEDRIVERCONTROLQCOMPROC m_glEnableDriverControlQCOM;
      PFNGLDISABLEDRIVERCONTROLQCOMPROC m_glDisableDriverControlQCOM;
      PFNGLEXTGETTEXTURESQCOMPROC m_glExtGetTexturesQCOM;
      PFNGLEXTGETBUFFERSQCOMPROC m_glExtGetBuffersQCOM;
      PFNGLEXTGETRENDERBUFFERSQCOMPROC m_glExtGetRenderbuffersQCOM;
      PFNGLEXTGETFRAMEBUFFERSQCOMPROC m_glExtGetFramebuffersQCOM;
      PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC m_glExtGetTexLevelParameterivQCOM;
      PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC m_glExtTexObjectStateOverrideiQCOM;
      PFNGLEXTGETTEXSUBIMAGEQCOMPROC m_glExtGetTexSubImageQCOM;
      PFNGLEXTGETBUFFERPOINTERVQCOMPROC m_glExtGetBufferPointervQCOM;
      PFNGLEXTGETSHADERSQCOMPROC m_glExtGetShadersQCOM;
      PFNGLEXTGETPROGRAMSQCOMPROC m_glExtGetProgramsQCOM;
      PFNGLEXTISPROGRAMBINARYQCOMPROC m_glExtIsProgramBinaryQCOM;
      PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC m_glExtGetProgramBinarySourceQCOM;
      PFNGLSTARTTILINGQCOMPROC m_glStartTilingQCOM;
      PFNGLENDTILINGQCOMPROC m_glEndTilingQCOM;
      PFNGLDETAILTEXFUNCSGISPROC m_glDetailTexFuncSGIS;
      PFNGLGETDETAILTEXFUNCSGISPROC m_glGetDetailTexFuncSGIS;
      PFNGLFOGFUNCSGISPROC m_glFogFuncSGIS;
      PFNGLGETFOGFUNCSGISPROC m_glGetFogFuncSGIS;
      PFNGLSAMPLEMASKSGISPROC m_glSampleMaskSGIS;
      PFNGLSAMPLEPATTERNSGISPROC m_glSamplePatternSGIS;
      PFNGLPIXELTEXGENPARAMETERISGISPROC m_glPixelTexGenParameteriSGIS;
      PFNGLPIXELTEXGENPARAMETERIVSGISPROC m_glPixelTexGenParameterivSGIS;
      PFNGLPIXELTEXGENPARAMETERFSGISPROC m_glPixelTexGenParameterfSGIS;
      PFNGLPIXELTEXGENPARAMETERFVSGISPROC m_glPixelTexGenParameterfvSGIS;
      PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC m_glGetPixelTexGenParameterivSGIS;
      PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC m_glGetPixelTexGenParameterfvSGIS;
      PFNGLPOINTPARAMETERFSGISPROC m_glPointParameterfSGIS;
      PFNGLPOINTPARAMETERFVSGISPROC m_glPointParameterfvSGIS;
      PFNGLSHARPENTEXFUNCSGISPROC m_glSharpenTexFuncSGIS;
      PFNGLGETSHARPENTEXFUNCSGISPROC m_glGetSharpenTexFuncSGIS;
      PFNGLTEXIMAGE4DSGISPROC m_glTexImage4DSGIS;
      PFNGLTEXSUBIMAGE4DSGISPROC m_glTexSubImage4DSGIS;
      PFNGLTEXTURECOLORMASKSGISPROC m_glTextureColorMaskSGIS;
      PFNGLGETTEXFILTERFUNCSGISPROC m_glGetTexFilterFuncSGIS;
      PFNGLTEXFILTERFUNCSGISPROC m_glTexFilterFuncSGIS;
      PFNGLASYNCMARKERSGIXPROC m_glAsyncMarkerSGIX;
      PFNGLFINISHASYNCSGIXPROC m_glFinishAsyncSGIX;
      PFNGLPOLLASYNCSGIXPROC m_glPollAsyncSGIX;
      PFNGLGENASYNCMARKERSSGIXPROC m_glGenAsyncMarkersSGIX;
      PFNGLDELETEASYNCMARKERSSGIXPROC m_glDeleteAsyncMarkersSGIX;
      PFNGLISASYNCMARKERSGIXPROC m_glIsAsyncMarkerSGIX;
      PFNGLFLUSHRASTERSGIXPROC m_glFlushRasterSGIX;
      PFNGLFRAGMENTCOLORMATERIALSGIXPROC m_glFragmentColorMaterialSGIX;
      PFNGLFRAGMENTLIGHTFSGIXPROC m_glFragmentLightfSGIX;
      PFNGLFRAGMENTLIGHTFVSGIXPROC m_glFragmentLightfvSGIX;
      PFNGLFRAGMENTLIGHTISGIXPROC m_glFragmentLightiSGIX;
      PFNGLFRAGMENTLIGHTIVSGIXPROC m_glFragmentLightivSGIX;
      PFNGLFRAGMENTLIGHTMODELFSGIXPROC m_glFragmentLightModelfSGIX;
      PFNGLFRAGMENTLIGHTMODELFVSGIXPROC m_glFragmentLightModelfvSGIX;
      PFNGLFRAGMENTLIGHTMODELISGIXPROC m_glFragmentLightModeliSGIX;
      PFNGLFRAGMENTLIGHTMODELIVSGIXPROC m_glFragmentLightModelivSGIX;
      PFNGLFRAGMENTMATERIALFSGIXPROC m_glFragmentMaterialfSGIX;
      PFNGLFRAGMENTMATERIALFVSGIXPROC m_glFragmentMaterialfvSGIX;
      PFNGLFRAGMENTMATERIALISGIXPROC m_glFragmentMaterialiSGIX;
      PFNGLFRAGMENTMATERIALIVSGIXPROC m_glFragmentMaterialivSGIX;
      PFNGLGETFRAGMENTLIGHTFVSGIXPROC m_glGetFragmentLightfvSGIX;
      PFNGLGETFRAGMENTLIGHTIVSGIXPROC m_glGetFragmentLightivSGIX;
      PFNGLGETFRAGMENTMATERIALFVSGIXPROC m_glGetFragmentMaterialfvSGIX;
      PFNGLGETFRAGMENTMATERIALIVSGIXPROC m_glGetFragmentMaterialivSGIX;
      PFNGLLIGHTENVISGIXPROC m_glLightEnviSGIX;
      PFNGLFRAMEZOOMSGIXPROC m_glFrameZoomSGIX;
      PFNGLIGLOOINTERFACESGIXPROC m_glIglooInterfaceSGIX;
      PFNGLGETINSTRUMENTSSGIXPROC m_glGetInstrumentsSGIX;
      PFNGLINSTRUMENTSBUFFERSGIXPROC m_glInstrumentsBufferSGIX;
      PFNGLPOLLINSTRUMENTSSGIXPROC m_glPollInstrumentsSGIX;
      PFNGLREADINSTRUMENTSSGIXPROC m_glReadInstrumentsSGIX;
      PFNGLSTARTINSTRUMENTSSGIXPROC m_glStartInstrumentsSGIX;
      PFNGLSTOPINSTRUMENTSSGIXPROC m_glStopInstrumentsSGIX;
      PFNGLGETLISTPARAMETERFVSGIXPROC m_glGetListParameterfvSGIX;
      PFNGLGETLISTPARAMETERIVSGIXPROC m_glGetListParameterivSGIX;
      PFNGLLISTPARAMETERFSGIXPROC m_glListParameterfSGIX;
      PFNGLLISTPARAMETERFVSGIXPROC m_glListParameterfvSGIX;
      PFNGLLISTPARAMETERISGIXPROC m_glListParameteriSGIX;
      PFNGLLISTPARAMETERIVSGIXPROC m_glListParameterivSGIX;
      PFNGLPIXELTEXGENSGIXPROC m_glPixelTexGenSGIX;
      PFNGLDEFORMATIONMAP3DSGIXPROC m_glDeformationMap3dSGIX;
      PFNGLDEFORMATIONMAP3FSGIXPROC m_glDeformationMap3fSGIX;
      PFNGLDEFORMSGIXPROC m_glDeformSGIX;
      PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC m_glLoadIdentityDeformationMapSGIX;
      PFNGLREFERENCEPLANESGIXPROC m_glReferencePlaneSGIX;
      PFNGLSPRITEPARAMETERFSGIXPROC m_glSpriteParameterfSGIX;
      PFNGLSPRITEPARAMETERFVSGIXPROC m_glSpriteParameterfvSGIX;
      PFNGLSPRITEPARAMETERISGIXPROC m_glSpriteParameteriSGIX;
      PFNGLSPRITEPARAMETERIVSGIXPROC m_glSpriteParameterivSGIX;
      PFNGLTAGSAMPLEBUFFERSGIXPROC m_glTagSampleBufferSGIX;
      PFNGLCOLORTABLESGIPROC m_glColorTableSGI;
      PFNGLCOLORTABLEPARAMETERFVSGIPROC m_glColorTableParameterfvSGI;
      PFNGLCOLORTABLEPARAMETERIVSGIPROC m_glColorTableParameterivSGI;
      PFNGLCOPYCOLORTABLESGIPROC m_glCopyColorTableSGI;
      PFNGLGETCOLORTABLESGIPROC m_glGetColorTableSGI;
      PFNGLGETCOLORTABLEPARAMETERFVSGIPROC m_glGetColorTableParameterfvSGI;
      PFNGLGETCOLORTABLEPARAMETERIVSGIPROC m_glGetColorTableParameterivSGI;
      PFNGLFINISHTEXTURESUNXPROC m_glFinishTextureSUNX;
      PFNGLGLOBALALPHAFACTORBSUNPROC m_glGlobalAlphaFactorbSUN;
      PFNGLGLOBALALPHAFACTORSSUNPROC m_glGlobalAlphaFactorsSUN;
      PFNGLGLOBALALPHAFACTORISUNPROC m_glGlobalAlphaFactoriSUN;
      PFNGLGLOBALALPHAFACTORFSUNPROC m_glGlobalAlphaFactorfSUN;
      PFNGLGLOBALALPHAFACTORDSUNPROC m_glGlobalAlphaFactordSUN;
      PFNGLGLOBALALPHAFACTORUBSUNPROC m_glGlobalAlphaFactorubSUN;
      PFNGLGLOBALALPHAFACTORUSSUNPROC m_glGlobalAlphaFactorusSUN;
      PFNGLGLOBALALPHAFACTORUISUNPROC m_glGlobalAlphaFactoruiSUN;
      PFNGLDRAWMESHARRAYSSUNPROC m_glDrawMeshArraysSUN;
      PFNGLREPLACEMENTCODEUISUNPROC m_glReplacementCodeuiSUN;
      PFNGLREPLACEMENTCODEUSSUNPROC m_glReplacementCodeusSUN;
      PFNGLREPLACEMENTCODEUBSUNPROC m_glReplacementCodeubSUN;
      PFNGLREPLACEMENTCODEUIVSUNPROC m_glReplacementCodeuivSUN;
      PFNGLREPLACEMENTCODEUSVSUNPROC m_glReplacementCodeusvSUN;
      PFNGLREPLACEMENTCODEUBVSUNPROC m_glReplacementCodeubvSUN;
      PFNGLREPLACEMENTCODEPOINTERSUNPROC m_glReplacementCodePointerSUN;
      PFNGLCOLOR4UBVERTEX2FSUNPROC m_glColor4ubVertex2fSUN;
      PFNGLCOLOR4UBVERTEX2FVSUNPROC m_glColor4ubVertex2fvSUN;
      PFNGLCOLOR4UBVERTEX3FSUNPROC m_glColor4ubVertex3fSUN;
      PFNGLCOLOR4UBVERTEX3FVSUNPROC m_glColor4ubVertex3fvSUN;
      PFNGLCOLOR3FVERTEX3FSUNPROC m_glColor3fVertex3fSUN;
      PFNGLCOLOR3FVERTEX3FVSUNPROC m_glColor3fVertex3fvSUN;
      PFNGLNORMAL3FVERTEX3FSUNPROC m_glNormal3fVertex3fSUN;
      PFNGLNORMAL3FVERTEX3FVSUNPROC m_glNormal3fVertex3fvSUN;
      PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC m_glColor4fNormal3fVertex3fSUN;
      PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC m_glColor4fNormal3fVertex3fvSUN;
      PFNGLTEXCOORD2FVERTEX3FSUNPROC m_glTexCoord2fVertex3fSUN;
      PFNGLTEXCOORD2FVERTEX3FVSUNPROC m_glTexCoord2fVertex3fvSUN;
      PFNGLTEXCOORD4FVERTEX4FSUNPROC m_glTexCoord4fVertex4fSUN;
      PFNGLTEXCOORD4FVERTEX4FVSUNPROC m_glTexCoord4fVertex4fvSUN;
      PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC m_glTexCoord2fColor4ubVertex3fSUN;
      PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC m_glTexCoord2fColor4ubVertex3fvSUN;
      PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC m_glTexCoord2fColor3fVertex3fSUN;
      PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC m_glTexCoord2fColor3fVertex3fvSUN;
      PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC m_glTexCoord2fNormal3fVertex3fSUN;
      PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC m_glTexCoord2fNormal3fVertex3fvSUN;
      PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC m_glTexCoord2fColor4fNormal3fVertex3fSUN;
      PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC m_glTexCoord2fColor4fNormal3fVertex3fvSUN;
      PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC m_glTexCoord4fColor4fNormal3fVertex4fSUN;
      PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC m_glTexCoord4fColor4fNormal3fVertex4fvSUN;
      PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC m_glReplacementCodeuiVertex3fSUN;
      PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC m_glReplacementCodeuiVertex3fvSUN;
      PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC m_glReplacementCodeuiColor4ubVertex3fSUN;
      PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC m_glReplacementCodeuiColor4ubVertex3fvSUN;
      PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC m_glReplacementCodeuiColor3fVertex3fSUN;
      PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC m_glReplacementCodeuiColor3fVertex3fvSUN;
      PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC m_glReplacementCodeuiNormal3fVertex3fSUN;
      PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC m_glReplacementCodeuiNormal3fVertex3fvSUN;
      PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC m_glReplacementCodeuiColor4fNormal3fVertex3fSUN;
      PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC m_glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
      PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC m_glReplacementCodeuiTexCoord2fVertex3fSUN;
      PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC m_glReplacementCodeuiTexCoord2fVertex3fvSUN;
      PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC m_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
      PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC m_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
      PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC m_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
      PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC m_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
    };

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public:

    static void Initialise ();

    static void Deinitialise ();

    static bool IsSupported (GLEW_GL_FeatureSet feature)
    {
      GLEW_ASSERT (s_initialised);

      return s_deviceConfig.m_featureSupported [feature];
    }

    static void SetConfig (glew::gl::DeviceConfig &deviceConfig)
    {
      GLEW_ASSERT (s_initialised);

      s_deviceConfig = deviceConfig;
    }

    static glew::gl::DeviceConfig &GetConfig ()
    {
      GLEW_ASSERT (s_initialised);

      return s_deviceConfig;
    }

  protected:

    static bool s_initialised;

    static glew::gl::DeviceConfig s_deviceConfig;

  };

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  bool IsSupported (GLEW_GL_FeatureSet feature);

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

GLEW_API void GLEW_APIENTRY _glew_gl_glDrawArrays (GLenum mode, GLint first, GLsizei count);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElements (GLenum mode, GLsizei count, GLenum type, const void * indices);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPointerv (GLenum pname, void ** params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPolygonOffset (GLfloat factor, GLfloat units);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTexImage1D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindTexture (GLenum target, GLuint texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteTextures (GLsizei n, const GLuint * textures);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenTextures (GLsizei n, GLuint * textures);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsTexture (GLuint texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glArrayElement (GLint i);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorPointer (GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableClientState (GLenum array);
GLEW_API void GLEW_APIENTRY _glew_gl_glEdgeFlagPointer (GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableClientState (GLenum array);
GLEW_API void GLEW_APIENTRY _glew_gl_glIndexPointer (GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glInterleavedArrays (GLenum format, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalPointer (GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexPointer (GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glAreTexturesResident (GLsizei n, const GLuint * textures, GLboolean * residences);
GLEW_API void GLEW_APIENTRY _glew_gl_glPrioritizeTextures (GLsizei n, const GLuint * textures, const GLfloat * priorities);
GLEW_API void GLEW_APIENTRY _glew_gl_glIndexub (GLubyte c);
GLEW_API void GLEW_APIENTRY _glew_gl_glIndexubv (const GLubyte * c);
GLEW_API void GLEW_APIENTRY _glew_gl_glPopClientAttrib ();
GLEW_API void GLEW_APIENTRY _glew_gl_glPushClientAttrib (GLbitfield mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glActiveTexture (GLenum texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glSampleCoverage (GLfloat value, GLboolean invert);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetCompressedTexImage (GLenum target, GLint level, void * img);
GLEW_API void GLEW_APIENTRY _glew_gl_glClientActiveTexture (GLenum texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1d (GLenum target, GLdouble s);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1dv (GLenum target, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1f (GLenum target, GLfloat s);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1fv (GLenum target, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1i (GLenum target, GLint s);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1iv (GLenum target, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1s (GLenum target, GLshort s);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1sv (GLenum target, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2dv (GLenum target, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2fv (GLenum target, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2i (GLenum target, GLint s, GLint t);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2iv (GLenum target, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2s (GLenum target, GLshort s, GLshort t);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2sv (GLenum target, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3dv (GLenum target, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3fv (GLenum target, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3iv (GLenum target, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3sv (GLenum target, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4dv (GLenum target, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4fv (GLenum target, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4i (GLenum target, GLint s, GLint t, GLint r, GLint q);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4iv (GLenum target, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4sv (GLenum target, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glLoadTransposeMatrixf (const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glLoadTransposeMatrixd (const GLdouble * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultTransposeMatrixf (const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultTransposeMatrixd (const GLdouble * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawArrays (GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawElements (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameterf (GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameterfv (GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameteri (GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameteriv (GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoordf (GLfloat coord);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoordfv (const GLfloat * coord);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoordd (GLdouble coord);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoorddv (const GLdouble * coord);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoordPointer (GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3bv (const GLbyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3dv (const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3fv (const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3i (GLint red, GLint green, GLint blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3iv (const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3s (GLshort red, GLshort green, GLshort blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3sv (const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3ubv (const GLubyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3uiv (const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3us (GLushort red, GLushort green, GLushort blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3usv (const GLushort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2d (GLdouble x, GLdouble y);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2dv (const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2f (GLfloat x, GLfloat y);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2fv (const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2i (GLint x, GLint y);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2iv (const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2s (GLshort x, GLshort y);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2sv (const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3d (GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3dv (const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3f (GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3fv (const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3i (GLint x, GLint y, GLint z);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3iv (const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3s (GLshort x, GLshort y, GLshort z);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3sv (const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquation (GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenQueries (GLsizei n, GLuint * ids);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteQueries (GLsizei n, const GLuint * ids);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsQuery (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginQuery (GLenum target, GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndQuery (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryiv (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryObjectiv (GLuint id, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindBuffer (GLenum target, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteBuffers (GLsizei n, const GLuint * buffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenBuffers (GLsizei n, GLuint * buffers);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsBuffer (GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glBufferData (GLenum target, GLsizeiptr size, const void * data, GLenum usage);
GLEW_API void GLEW_APIENTRY _glew_gl_glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, void * data);
GLEW_API void * GLEW_APIENTRY _glew_gl_glMapBuffer (GLenum target, GLenum access);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glUnmapBuffer (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetBufferParameteriv (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetBufferPointerv (GLenum target, GLenum pname, void ** params);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawBuffers (GLsizei n, const GLenum * bufs);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilMaskSeparate (GLenum face, GLuint mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glAttachShader (GLuint program, GLuint shader);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindAttribLocation (GLuint program, GLuint index, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompileShader (GLuint shader);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glCreateProgram ();
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glCreateShader (GLenum type);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteProgram (GLuint program);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteShader (GLuint shader);
GLEW_API void GLEW_APIENTRY _glew_gl_glDetachShader (GLuint program, GLuint shader);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableVertexAttribArray (GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableVertexAttribArray (GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetAttribLocation (GLuint program, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramiv (GLuint program, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetShaderiv (GLuint shader, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetUniformLocation (GLuint program, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformfv (GLuint program, GLint location, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformiv (GLuint program, GLint location, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribiv (GLuint index, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribPointerv (GLuint index, GLenum pname, void ** pointer);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsProgram (GLuint program);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsShader (GLuint shader);
GLEW_API void GLEW_APIENTRY _glew_gl_glLinkProgram (GLuint program);
GLEW_API void GLEW_APIENTRY _glew_gl_glShaderSource (GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
GLEW_API void GLEW_APIENTRY _glew_gl_glUseProgram (GLuint program);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1f (GLint location, GLfloat v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2f (GLint location, GLfloat v0, GLfloat v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1i (GLint location, GLint v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2i (GLint location, GLint v0, GLint v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1fv (GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2fv (GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3fv (GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4fv (GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1iv (GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2iv (GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3iv (GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4iv (GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glValidateProgram (GLuint program);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1d (GLuint index, GLdouble x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1dv (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1f (GLuint index, GLfloat x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1fv (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1s (GLuint index, GLshort x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1sv (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2dv (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2fv (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2s (GLuint index, GLshort x, GLshort y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2sv (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3dv (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3fv (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3sv (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4Nbv (GLuint index, const GLbyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4Niv (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4Nsv (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4Nubv (GLuint index, const GLubyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4Nuiv (GLuint index, const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4Nusv (GLuint index, const GLushort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4bv (GLuint index, const GLbyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4dv (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4fv (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4iv (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4sv (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4ubv (GLuint index, const GLubyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4uiv (GLuint index, const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4usv (GLuint index, const GLushort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorMaski (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetBooleani_v (GLenum target, GLuint index, GLboolean * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetIntegeri_v (GLenum target, GLuint index, GLint * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnablei (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisablei (GLenum target, GLuint index);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsEnabledi (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginTransformFeedback (GLenum primitiveMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndTransformFeedback ();
GLEW_API void GLEW_APIENTRY _glew_gl_glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindBufferBase (GLenum target, GLuint index, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glTransformFeedbackVaryings (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTransformFeedbackVarying (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glClampColor (GLenum target, GLenum clamp);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginConditionalRender (GLuint id, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndConditionalRender ();
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribIPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribIiv (GLuint index, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribIuiv (GLuint index, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI1i (GLuint index, GLint x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI2i (GLuint index, GLint x, GLint y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI3i (GLuint index, GLint x, GLint y, GLint z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4i (GLuint index, GLint x, GLint y, GLint z, GLint w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI1ui (GLuint index, GLuint x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI2ui (GLuint index, GLuint x, GLuint y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI3ui (GLuint index, GLuint x, GLuint y, GLuint z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4ui (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI1iv (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI2iv (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI3iv (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4iv (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI1uiv (GLuint index, const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI2uiv (GLuint index, const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI3uiv (GLuint index, const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4uiv (GLuint index, const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4bv (GLuint index, const GLbyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4sv (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4ubv (GLuint index, const GLubyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4usv (GLuint index, const GLushort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformuiv (GLuint program, GLint location, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindFragDataLocation (GLuint program, GLuint color, const GLchar * name);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetFragDataLocation (GLuint program, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1ui (GLint location, GLuint v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2ui (GLint location, GLuint v0, GLuint v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3ui (GLint location, GLuint v0, GLuint v1, GLuint v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4ui (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1uiv (GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2uiv (GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3uiv (GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4uiv (GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexParameterIiv (GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexParameterIuiv (GLenum target, GLenum pname, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexParameterIiv (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexParameterIuiv (GLenum target, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearBufferiv (GLenum buffer, GLint drawbuffer, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearBufferuiv (GLenum buffer, GLint drawbuffer, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearBufferfv (GLenum buffer, GLint drawbuffer, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearBufferfi (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLEW_API const GLubyte * GLEW_APIENTRY _glew_gl_glGetStringi (GLenum name, GLuint index);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsRenderbuffer (GLuint renderbuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindRenderbuffer (GLenum target, GLuint renderbuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteRenderbuffers (GLsizei n, const GLuint * renderbuffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenRenderbuffers (GLsizei n, GLuint * renderbuffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint * params);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsFramebuffer (GLuint framebuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindFramebuffer (GLenum target, GLuint framebuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteFramebuffers (GLsizei n, const GLuint * framebuffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenFramebuffers (GLsizei n, GLuint * framebuffers);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glCheckFramebufferStatus (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTexture1D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTexture3D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenerateMipmap (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlitFramebuffer (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLEW_API void GLEW_APIENTRY _glew_gl_glRenderbufferStorageMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTextureLayer (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLEW_API void * GLEW_APIENTRY _glew_gl_glMapBufferRange (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLEW_API void GLEW_APIENTRY _glew_gl_glFlushMappedBufferRange (GLenum target, GLintptr offset, GLsizeiptr length);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindVertexArray (GLuint array);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteVertexArrays (GLsizei n, const GLuint * arrays);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenVertexArrays (GLsizei n, GLuint * arrays);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsVertexArray (GLuint array);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawArraysInstanced (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsInstanced (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexBuffer (GLenum target, GLenum internalformat, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glPrimitiveRestartIndex (GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyBufferSubData (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGetUniformBlockIndex (GLuint program, const GLchar * uniformBlockName);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsBaseVertex (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawRangeElementsBaseVertex (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsInstancedBaseVertex (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawElementsBaseVertex (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
GLEW_API void GLEW_APIENTRY _glew_gl_glProvokingVertex (GLenum mode);
GLEW_API GLsync GLEW_APIENTRY _glew_gl_glFenceSync (GLenum condition, GLbitfield flags);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsSync (GLsync sync);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteSync (GLsync sync);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);
GLEW_API void GLEW_APIENTRY _glew_gl_glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetInteger64v (GLenum pname, GLint64 * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetInteger64i_v (GLenum target, GLuint index, GLint64 * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTexture (GLenum target, GLenum attachment, GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexImage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexImage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultisamplefv (GLenum pname, GLuint index, GLfloat * val);
GLEW_API void GLEW_APIENTRY _glew_gl_glSampleMaski (GLuint maskNumber, GLbitfield mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindFragDataLocationIndexed (GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetFragDataIndex (GLuint program, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenSamplers (GLsizei count, GLuint * samplers);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteSamplers (GLsizei count, const GLuint * samplers);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsSampler (GLuint sampler);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindSampler (GLuint unit, GLuint sampler);
GLEW_API void GLEW_APIENTRY _glew_gl_glSamplerParameteri (GLuint sampler, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glSamplerParameteriv (GLuint sampler, GLenum pname, const GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glSamplerParameterf (GLuint sampler, GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glSamplerParameterfv (GLuint sampler, GLenum pname, const GLfloat * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glSamplerParameterIiv (GLuint sampler, GLenum pname, const GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glSamplerParameterIuiv (GLuint sampler, GLenum pname, const GLuint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSamplerParameteriv (GLuint sampler, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSamplerParameterIiv (GLuint sampler, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSamplerParameterfv (GLuint sampler, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSamplerParameterIuiv (GLuint sampler, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glQueryCounter (GLuint id, GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryObjecti64v (GLuint id, GLenum pname, GLint64 * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryObjectui64v (GLuint id, GLenum pname, GLuint64 * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribDivisor (GLuint index, GLuint divisor);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribP1ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribP1uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribP2ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribP2uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribP3ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribP3uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribP4ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribP4uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexP2ui (GLenum type, GLuint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexP2uiv (GLenum type, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexP3ui (GLenum type, GLuint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexP3uiv (GLenum type, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexP4ui (GLenum type, GLuint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexP4uiv (GLenum type, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordP1ui (GLenum type, GLuint coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordP1uiv (GLenum type, const GLuint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordP2ui (GLenum type, GLuint coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordP2uiv (GLenum type, const GLuint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordP3ui (GLenum type, GLuint coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordP3uiv (GLenum type, const GLuint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordP4ui (GLenum type, GLuint coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordP4uiv (GLenum type, const GLuint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoordP1ui (GLenum texture, GLenum type, GLuint coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoordP1uiv (GLenum texture, GLenum type, const GLuint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoordP2ui (GLenum texture, GLenum type, GLuint coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoordP2uiv (GLenum texture, GLenum type, const GLuint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoordP3ui (GLenum texture, GLenum type, GLuint coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoordP3uiv (GLenum texture, GLenum type, const GLuint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoordP4ui (GLenum texture, GLenum type, GLuint coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoordP4uiv (GLenum texture, GLenum type, const GLuint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalP3ui (GLenum type, GLuint coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalP3uiv (GLenum type, const GLuint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorP3ui (GLenum type, GLuint color);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorP3uiv (GLenum type, const GLuint * color);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorP4ui (GLenum type, GLuint color);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorP4uiv (GLenum type, const GLuint * color);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColorP3ui (GLenum type, GLuint color);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColorP3uiv (GLenum type, const GLuint * color);
GLEW_API void GLEW_APIENTRY _glew_gl_glMinSampleShading (GLfloat value);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationi (GLuint buf, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFunci (GLuint buf, GLenum src, GLenum dst);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawArraysIndirect (GLenum mode, const void * indirect);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsIndirect (GLenum mode, GLenum type, const void * indirect);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1d (GLint location, GLdouble x);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2d (GLint location, GLdouble x, GLdouble y);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3d (GLint location, GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4d (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1dv (GLint location, GLsizei count, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2dv (GLint location, GLsizei count, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3dv (GLint location, GLsizei count, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4dv (GLint location, GLsizei count, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix2x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix2x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix3x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix3x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix4x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix4x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformdv (GLuint program, GLint location, GLdouble * params);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetSubroutineUniformLocation (GLuint program, GLenum shadertype, const GLchar * name);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGetSubroutineIndex (GLuint program, GLenum shadertype, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveSubroutineUniformiv (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformSubroutinesuiv (GLenum shadertype, GLsizei count, const GLuint * indices);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformSubroutineuiv (GLenum shadertype, GLint location, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramStageiv (GLuint program, GLenum shadertype, GLenum pname, GLint * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glPatchParameteri (GLenum pname, GLint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glPatchParameterfv (GLenum pname, const GLfloat * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindTransformFeedback (GLenum target, GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteTransformFeedbacks (GLsizei n, const GLuint * ids);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenTransformFeedbacks (GLsizei n, GLuint * ids);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsTransformFeedback (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glPauseTransformFeedback ();
GLEW_API void GLEW_APIENTRY _glew_gl_glResumeTransformFeedback ();
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawTransformFeedback (GLenum mode, GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawTransformFeedbackStream (GLenum mode, GLuint id, GLuint stream);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginQueryIndexed (GLenum target, GLuint index, GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndQueryIndexed (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryIndexediv (GLenum target, GLuint index, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glReleaseShaderCompiler ();
GLEW_API void GLEW_APIENTRY _glew_gl_glShaderBinary (GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
GLEW_API void GLEW_APIENTRY _glew_gl_glDepthRangef (GLfloat n, GLfloat f);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearDepthf (GLfloat d);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramBinary (GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramBinary (GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramParameteri (GLuint program, GLenum pname, GLint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program);
GLEW_API void GLEW_APIENTRY _glew_gl_glActiveShaderProgram (GLuint pipeline, GLuint program);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glCreateShaderProgramv (GLenum type, GLsizei count, const GLchar *const* strings);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindProgramPipeline (GLuint pipeline);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteProgramPipelines (GLsizei n, const GLuint * pipelines);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenProgramPipelines (GLsizei n, GLuint * pipelines);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsProgramPipeline (GLuint pipeline);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1i (GLuint program, GLint location, GLint v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1f (GLuint program, GLint location, GLfloat v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1d (GLuint program, GLint location, GLdouble v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1dv (GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1ui (GLuint program, GLint location, GLuint v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2i (GLuint program, GLint location, GLint v0, GLint v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2f (GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2d (GLuint program, GLint location, GLdouble v0, GLdouble v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2dv (GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2ui (GLuint program, GLint location, GLuint v0, GLuint v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3dv (GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4dv (GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix2x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix3x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix2x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix4x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix3x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix4x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glValidateProgramPipeline (GLuint pipeline);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL1d (GLuint index, GLdouble x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL2d (GLuint index, GLdouble x, GLdouble y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL1dv (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL2dv (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL3dv (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL4dv (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glViewportArrayv (GLuint first, GLsizei count, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glViewportIndexedf (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
GLEW_API void GLEW_APIENTRY _glew_gl_glViewportIndexedfv (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glScissorArrayv (GLuint first, GLsizei count, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glScissorIndexed (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glScissorIndexedv (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glDepthRangeArrayv (GLuint first, GLsizei count, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glDepthRangeIndexed (GLuint index, GLdouble n, GLdouble f);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFloati_v (GLenum target, GLuint index, GLfloat * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetDoublei_v (GLenum target, GLuint index, GLdouble * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawArraysInstancedBaseInstance (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsInstancedBaseInstance (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsInstancedBaseVertexBaseInstance (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveAtomicCounterBufferiv (GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindImageTexture (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
GLEW_API void GLEW_APIENTRY _glew_gl_glMemoryBarrier (GLbitfield barriers);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexStorage1D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexStorage2D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexStorage3D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawTransformFeedbackInstanced (GLenum mode, GLuint id, GLsizei instancecount);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawTransformFeedbackStreamInstanced (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearBufferData (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearBufferSubData (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glDispatchCompute (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
GLEW_API void GLEW_APIENTRY _glew_gl_glDispatchComputeIndirect (GLintptr indirect);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyImageSubData (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferParameteri (GLenum target, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFramebufferParameteriv (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glInvalidateTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
GLEW_API void GLEW_APIENTRY _glew_gl_glInvalidateTexImage (GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glInvalidateBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr length);
GLEW_API void GLEW_APIENTRY _glew_gl_glInvalidateBufferData (GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glInvalidateFramebuffer (GLenum target, GLsizei numAttachments, const GLenum * attachments);
GLEW_API void GLEW_APIENTRY _glew_gl_glInvalidateSubFramebuffer (GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawArraysIndirect (GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawElementsIndirect (GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pname, GLint * params);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGetProgramResourceIndex (GLuint program, GLenum programInterface, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetProgramResourceLocation (GLuint program, GLenum programInterface, const GLchar * name);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetProgramResourceLocationIndex (GLuint program, GLenum programInterface, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glShaderStorageBlockBinding (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexBufferRange (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexStorage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexStorage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureView (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindVertexBuffer (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribFormat (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribIFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribLFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribBinding (GLuint attribindex, GLuint bindingindex);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexBindingDivisor (GLuint bindingindex, GLuint divisor);
GLEW_API void GLEW_APIENTRY _glew_gl_glDebugMessageControl (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLEW_API void GLEW_APIENTRY _glew_gl_glDebugMessageInsert (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLEW_API void GLEW_APIENTRY _glew_gl_glDebugMessageCallback (GLDEBUGPROC callback, const void * userParam);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGetDebugMessageLog (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLEW_API void GLEW_APIENTRY _glew_gl_glPushDebugGroup (GLenum source, GLuint id, GLsizei length, const GLchar * message);
GLEW_API void GLEW_APIENTRY _glew_gl_glPopDebugGroup ();
GLEW_API void GLEW_APIENTRY _glew_gl_glObjectLabel (GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetObjectLabel (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
GLEW_API void GLEW_APIENTRY _glew_gl_glObjectPtrLabel (const void * ptr, GLsizei length, const GLchar * label);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetObjectPtrLabel (const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
GLEW_API void GLEW_APIENTRY _glew_gl_glBufferStorage (GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearTexImage (GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindBuffersBase (GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindBuffersRange (GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindTextures (GLuint first, GLsizei count, const GLuint * textures);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindSamplers (GLuint first, GLsizei count, const GLuint * samplers);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindImageTextures (GLuint first, GLsizei count, const GLuint * textures);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindVertexBuffers (GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
GLEW_API void GLEW_APIENTRY _glew_gl_glClipControl (GLenum origin, GLenum depth);
GLEW_API void GLEW_APIENTRY _glew_gl_glCreateTransformFeedbacks (GLsizei n, GLuint * ids);
GLEW_API void GLEW_APIENTRY _glew_gl_glTransformFeedbackBufferBase (GLuint xfb, GLuint index, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glTransformFeedbackBufferRange (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTransformFeedbackiv (GLuint xfb, GLenum pname, GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTransformFeedbacki_v (GLuint xfb, GLenum pname, GLuint index, GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTransformFeedbacki64_v (GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glCreateBuffers (GLsizei n, GLuint * buffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedBufferStorage (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedBufferData (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyNamedBufferSubData (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearNamedBufferData (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearNamedBufferSubData (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
GLEW_API void * GLEW_APIENTRY _glew_gl_glMapNamedBuffer (GLuint buffer, GLenum access);
GLEW_API void * GLEW_APIENTRY _glew_gl_glMapNamedBufferRange (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glUnmapNamedBuffer (GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glFlushMappedNamedBufferRange (GLuint buffer, GLintptr offset, GLsizeiptr length);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedBufferParameteriv (GLuint buffer, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedBufferParameteri64v (GLuint buffer, GLenum pname, GLint64 * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedBufferPointerv (GLuint buffer, GLenum pname, void ** params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCreateFramebuffers (GLsizei n, GLuint * framebuffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferRenderbuffer (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferParameteri (GLuint framebuffer, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferTexture (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferTextureLayer (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferDrawBuffer (GLuint framebuffer, GLenum buf);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferDrawBuffers (GLuint framebuffer, GLsizei n, const GLenum * bufs);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferReadBuffer (GLuint framebuffer, GLenum src);
GLEW_API void GLEW_APIENTRY _glew_gl_glInvalidateNamedFramebufferData (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
GLEW_API void GLEW_APIENTRY _glew_gl_glInvalidateNamedFramebufferSubData (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearNamedFramebufferiv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearNamedFramebufferuiv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearNamedFramebufferfv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearNamedFramebufferfi (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlitNamedFramebuffer (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glCheckNamedFramebufferStatus (GLuint framebuffer, GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedFramebufferParameteriv (GLuint framebuffer, GLenum pname, GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedFramebufferAttachmentParameteriv (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glCreateRenderbuffers (GLsizei n, GLuint * renderbuffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedRenderbufferStorage (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedRenderbufferStorageMultisample (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedRenderbufferParameteriv (GLuint renderbuffer, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glCreateTextures (GLenum target, GLsizei n, GLuint * textures);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureBuffer (GLuint texture, GLenum internalformat, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureBufferRange (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureStorage1D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureStorage2D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureStorage3D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureStorage2DMultisample (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureStorage3DMultisample (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureParameterf (GLuint texture, GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureParameterfv (GLuint texture, GLenum pname, const GLfloat * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureParameteri (GLuint texture, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureParameterIiv (GLuint texture, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureParameterIuiv (GLuint texture, GLenum pname, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureParameteriv (GLuint texture, GLenum pname, const GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenerateTextureMipmap (GLuint texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindTextureUnit (GLuint unit, GLuint texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureImage (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetCompressedTextureImage (GLuint texture, GLint level, GLsizei bufSize, void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureLevelParameterfv (GLuint texture, GLint level, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureLevelParameteriv (GLuint texture, GLint level, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureParameterfv (GLuint texture, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureParameterIiv (GLuint texture, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureParameterIuiv (GLuint texture, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureParameteriv (GLuint texture, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glCreateVertexArrays (GLsizei n, GLuint * arrays);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableVertexArrayAttrib (GLuint vaobj, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableVertexArrayAttrib (GLuint vaobj, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayElementBuffer (GLuint vaobj, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayVertexBuffer (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayVertexBuffers (GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayAttribBinding (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayAttribFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayAttribIFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayAttribLFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayBindingDivisor (GLuint vaobj, GLuint bindingindex, GLuint divisor);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexArrayiv (GLuint vaobj, GLenum pname, GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexArrayIndexediv (GLuint vaobj, GLuint index, GLenum pname, GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexArrayIndexed64iv (GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glCreateSamplers (GLsizei n, GLuint * samplers);
GLEW_API void GLEW_APIENTRY _glew_gl_glCreateProgramPipelines (GLsizei n, GLuint * pipelines);
GLEW_API void GLEW_APIENTRY _glew_gl_glCreateQueries (GLenum target, GLsizei n, GLuint * ids);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryBufferObjecti64v (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryBufferObjectiv (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryBufferObjectui64v (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryBufferObjectuiv (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glMemoryBarrierByRegion (GLbitfield barriers);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetCompressedTextureSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glGetGraphicsResetStatus ();
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnCompressedTexImage (GLenum target, GLint lod, GLsizei bufSize, void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformdv (GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformfv (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformiv (GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformuiv (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glReadnPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnMapdv (GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnMapfv (GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnMapiv (GLenum target, GLenum query, GLsizei bufSize, GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnPixelMapfv (GLenum map, GLsizei bufSize, GLfloat * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnPixelMapuiv (GLenum map, GLsizei bufSize, GLuint * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnPixelMapusv (GLenum map, GLsizei bufSize, GLushort * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnPolygonStipple (GLsizei bufSize, GLubyte * pattern);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnColorTable (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnConvolutionFilter (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnSeparableFilter (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureBarrier ();
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendBarrier ();
GLEW_API void GLEW_APIENTRY _glew_gl_glPrimitiveBoundingBox (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLEW_API void GLEW_APIENTRY _glew_gl_glTbufferMask3DFX (GLuint mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glDebugMessageEnableAMD (GLenum category, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLEW_API void GLEW_APIENTRY _glew_gl_glDebugMessageInsertAMD (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar * buf);
GLEW_API void GLEW_APIENTRY _glew_gl_glDebugMessageCallbackAMD (GLDEBUGPROCAMD callback, void * userParam);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGetDebugMessageLogAMD (GLuint count, GLsizei bufsize, GLenum * categories, GLuint * severities, GLuint * ids, GLsizei * lengths, GLchar * message);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFuncIndexedAMD (GLuint buf, GLenum src, GLenum dst);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFuncSeparateIndexedAMD (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationIndexedAMD (GLuint buf, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationSeparateIndexedAMD (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1i64NV (GLint location, GLint64EXT x);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2i64NV (GLint location, GLint64EXT x, GLint64EXT y);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1i64vNV (GLint location, GLsizei count, const GLint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2i64vNV (GLint location, GLsizei count, const GLint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3i64vNV (GLint location, GLsizei count, const GLint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4i64vNV (GLint location, GLsizei count, const GLint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1ui64NV (GLint location, GLuint64EXT x);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1ui64vNV (GLint location, GLsizei count, const GLuint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2ui64vNV (GLint location, GLsizei count, const GLuint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3ui64vNV (GLint location, GLsizei count, const GLuint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4ui64vNV (GLint location, GLsizei count, const GLuint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformi64vNV (GLuint program, GLint location, GLint64EXT * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformui64vNV (GLuint program, GLint location, GLuint64EXT * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1i64NV (GLuint program, GLint location, GLint64EXT x);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1ui64NV (GLuint program, GLint location, GLuint64EXT x);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribParameteriAMD (GLuint index, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawArraysIndirectAMD (GLenum mode, const void * indirect, GLsizei primcount, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawElementsIndirectAMD (GLenum mode, GLenum type, const void * indirect, GLsizei primcount, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenNamesAMD (GLenum identifier, GLuint num, GLuint * names);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteNamesAMD (GLenum identifier, GLuint num, const GLuint * names);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsNameAMD (GLenum identifier, GLuint name);
GLEW_API void GLEW_APIENTRY _glew_gl_glQueryObjectParameteruiAMD (GLenum target, GLuint id, GLenum pname, GLuint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPerfMonitorGroupsAMD (GLint * numGroups, GLsizei groupsSize, GLuint * groups);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPerfMonitorCountersAMD (GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPerfMonitorGroupStringAMD (GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPerfMonitorCounterStringAMD (GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPerfMonitorCounterInfoAMD (GLuint group, GLuint counter, GLenum pname, void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenPerfMonitorsAMD (GLsizei n, GLuint * monitors);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeletePerfMonitorsAMD (GLsizei n, GLuint * monitors);
GLEW_API void GLEW_APIENTRY _glew_gl_glSelectPerfMonitorCountersAMD (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginPerfMonitorAMD (GLuint monitor);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndPerfMonitorAMD (GLuint monitor);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPerfMonitorCounterDataAMD (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten);
GLEW_API void GLEW_APIENTRY _glew_gl_glSetMultisamplefvAMD (GLenum pname, GLuint index, const GLfloat * val);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexStorageSparseAMD (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureStorageSparseAMD (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilOpValueAMD (GLenum face, GLuint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glTessellationFactorAMD (GLfloat factor);
GLEW_API void GLEW_APIENTRY _glew_gl_glTessellationModeAMD (GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlitFramebufferANGLE (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLEW_API void GLEW_APIENTRY _glew_gl_glRenderbufferStorageMultisampleANGLE (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawArraysInstancedANGLE (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsInstancedANGLE (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribDivisorANGLE (GLuint index, GLuint divisor);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTranslatedShaderSourceANGLE (GLuint shader, GLsizei bufsize, GLsizei * length, GLchar * source);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTextureLevelsAPPLE (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
GLEW_API void GLEW_APIENTRY _glew_gl_glElementPointerAPPLE (GLenum type, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementArrayAPPLE (GLenum mode, GLint first, GLsizei count);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawElementArrayAPPLE (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, const GLint * first, const GLsizei * count, GLsizei primcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenFencesAPPLE (GLsizei n, GLuint * fences);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteFencesAPPLE (GLsizei n, const GLuint * fences);
GLEW_API void GLEW_APIENTRY _glew_gl_glSetFenceAPPLE (GLuint fence);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsFenceAPPLE (GLuint fence);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glTestFenceAPPLE (GLuint fence);
GLEW_API void GLEW_APIENTRY _glew_gl_glFinishFenceAPPLE (GLuint fence);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glTestObjectAPPLE (GLenum object, GLuint name);
GLEW_API void GLEW_APIENTRY _glew_gl_glFinishObjectAPPLE (GLenum object, GLint name);
GLEW_API void GLEW_APIENTRY _glew_gl_glBufferParameteriAPPLE (GLenum target, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glFlushMappedBufferRangeAPPLE (GLenum target, GLintptr offset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glRenderbufferStorageMultisampleAPPLE (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glResolveMultisampleFramebufferAPPLE ();
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glObjectPurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glObjectUnpurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetObjectParameterivAPPLE (GLenum objectType, GLuint name, GLenum pname, GLint * params);
GLEW_API GLsync GLEW_APIENTRY _glew_gl_glFenceSyncAPPLE (GLenum condition, GLbitfield flags);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsSyncAPPLE (GLsync sync);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteSyncAPPLE (GLsync sync);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glClientWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout);
GLEW_API void GLEW_APIENTRY _glew_gl_glWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetInteger64vAPPLE (GLenum pname, GLint64 * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSyncivAPPLE (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureRangeAPPLE (GLenum target, GLsizei length, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexParameterPointervAPPLE (GLenum target, GLenum pname, void ** params);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindVertexArrayAPPLE (GLuint array);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteVertexArraysAPPLE (GLsizei n, const GLuint * arrays);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenVertexArraysAPPLE (GLsizei n, GLuint * arrays);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsVertexArrayAPPLE (GLuint array);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayRangeAPPLE (GLsizei length, void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glFlushVertexArrayRangeAPPLE (GLsizei length, void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayParameteriAPPLE (GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableVertexAttribAPPLE (GLuint index, GLenum pname);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableVertexAttribAPPLE (GLuint index, GLenum pname);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsVertexAttribEnabledAPPLE (GLuint index, GLenum pname);
GLEW_API void GLEW_APIENTRY _glew_gl_glMapVertexAttrib1dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glMapVertexAttrib1fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glMapVertexAttrib2dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glMapVertexAttrib2fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glPrimitiveBoundingBoxARB (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLEW_API GLuint64 GLEW_APIENTRY _glew_gl_glGetTextureHandleARB (GLuint texture);
GLEW_API GLuint64 GLEW_APIENTRY _glew_gl_glGetTextureSamplerHandleARB (GLuint texture, GLuint sampler);
GLEW_API void GLEW_APIENTRY _glew_gl_glMakeTextureHandleResidentARB (GLuint64 handle);
GLEW_API void GLEW_APIENTRY _glew_gl_glMakeTextureHandleNonResidentARB (GLuint64 handle);
GLEW_API GLuint64 GLEW_APIENTRY _glew_gl_glGetImageHandleARB (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLEW_API void GLEW_APIENTRY _glew_gl_glMakeImageHandleResidentARB (GLuint64 handle, GLenum access);
GLEW_API void GLEW_APIENTRY _glew_gl_glMakeImageHandleNonResidentARB (GLuint64 handle);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformHandleui64ARB (GLint location, GLuint64 value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformHandleui64vARB (GLint location, GLsizei count, const GLuint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformHandleui64ARB (GLuint program, GLint location, GLuint64 value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformHandleui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 * values);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsTextureHandleResidentARB (GLuint64 handle);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsImageHandleResidentARB (GLuint64 handle);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL1ui64ARB (GLuint index, GLuint64EXT x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL1ui64vARB (GLuint index, const GLuint64EXT * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribLui64vARB (GLuint index, GLenum pname, GLuint64EXT * params);
GLEW_API GLsync GLEW_APIENTRY _glew_gl_glCreateSyncFromCLeventARB (struct _cl_context * context, struct _cl_event * event, GLbitfield flags);
GLEW_API void GLEW_APIENTRY _glew_gl_glClampColorARB (GLenum target, GLenum clamp);
GLEW_API void GLEW_APIENTRY _glew_gl_glDispatchComputeGroupSizeARB (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
GLEW_API void GLEW_APIENTRY _glew_gl_glDebugMessageControlARB (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLEW_API void GLEW_APIENTRY _glew_gl_glDebugMessageInsertARB (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLEW_API void GLEW_APIENTRY _glew_gl_glDebugMessageCallbackARB (GLDEBUGPROCARB callback, const void * userParam);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGetDebugMessageLogARB (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawBuffersARB (GLsizei n, const GLenum * bufs);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationiARB (GLuint buf, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationSeparateiARB (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFunciARB (GLuint buf, GLenum src, GLenum dst);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFuncSeparateiARB (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawArraysInstancedARB (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsInstancedARB (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramStringARB (GLenum target, GLenum format, GLsizei len, const void * string);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindProgramARB (GLenum target, GLuint program);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteProgramsARB (GLsizei n, const GLuint * programs);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenProgramsARB (GLsizei n, GLuint * programs);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramEnvParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramEnvParameter4dvARB (GLenum target, GLuint index, const GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramEnvParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramEnvParameter4fvARB (GLenum target, GLuint index, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramLocalParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramLocalParameter4dvARB (GLenum target, GLuint index, const GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramLocalParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramLocalParameter4fvARB (GLenum target, GLuint index, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramEnvParameterdvARB (GLenum target, GLuint index, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramEnvParameterfvARB (GLenum target, GLuint index, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramLocalParameterdvARB (GLenum target, GLuint index, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramLocalParameterfvARB (GLenum target, GLuint index, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramivARB (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramStringARB (GLenum target, GLenum pname, void * string);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsProgramARB (GLuint program);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramParameteriARB (GLuint program, GLenum pname, GLint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTextureARB (GLenum target, GLenum attachment, GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTextureLayerARB (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTextureFaceARB (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1i64ARB (GLint location, GLint64 x);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2i64ARB (GLint location, GLint64 x, GLint64 y);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3i64ARB (GLint location, GLint64 x, GLint64 y, GLint64 z);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4i64ARB (GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1i64vARB (GLint location, GLsizei count, const GLint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2i64vARB (GLint location, GLsizei count, const GLint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3i64vARB (GLint location, GLsizei count, const GLint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4i64vARB (GLint location, GLsizei count, const GLint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1ui64ARB (GLint location, GLuint64 x);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2ui64ARB (GLint location, GLuint64 x, GLuint64 y);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3ui64ARB (GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4ui64ARB (GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1ui64vARB (GLint location, GLsizei count, const GLuint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2ui64vARB (GLint location, GLsizei count, const GLuint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3ui64vARB (GLint location, GLsizei count, const GLuint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4ui64vARB (GLint location, GLsizei count, const GLuint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformi64vARB (GLuint program, GLint location, GLint64 * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformui64vARB (GLuint program, GLint location, GLuint64 * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformi64vARB (GLuint program, GLint location, GLsizei bufSize, GLint64 * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformui64vARB (GLuint program, GLint location, GLsizei bufSize, GLuint64 * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1i64ARB (GLuint program, GLint location, GLint64 x);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2i64ARB (GLuint program, GLint location, GLint64 x, GLint64 y);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3i64ARB (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4i64ARB (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1i64vARB (GLuint program, GLint location, GLsizei count, const GLint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2i64vARB (GLuint program, GLint location, GLsizei count, const GLint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3i64vARB (GLuint program, GLint location, GLsizei count, const GLint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4i64vARB (GLuint program, GLint location, GLsizei count, const GLint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1ui64ARB (GLuint program, GLint location, GLuint64 x);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2ui64ARB (GLuint program, GLint location, GLuint64 x, GLuint64 y);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3ui64ARB (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4ui64ARB (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1ui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2ui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3ui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4ui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorTableParameteriv (GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetColorTable (GLenum target, GLenum format, GLenum type, void * table);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetColorTableParameteriv (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionParameteri (GLenum target, GLenum pname, GLint params);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionParameteriv (GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, void * image);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSeparableFilter (GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
GLEW_API void GLEW_APIENTRY _glew_gl_glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetHistogramParameteriv (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
GLEW_API void GLEW_APIENTRY _glew_gl_glMinmax (GLenum target, GLenum internalformat, GLboolean sink);
GLEW_API void GLEW_APIENTRY _glew_gl_glResetHistogram (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glResetMinmax (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawArraysIndirectCountARB (GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawElementsIndirectCountARB (GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribDivisorARB (GLuint index, GLuint divisor);
GLEW_API void GLEW_APIENTRY _glew_gl_glCurrentPaletteMatrixARB (GLint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixIndexubvARB (GLint size, const GLubyte * indices);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixIndexusvARB (GLint size, const GLushort * indices);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixIndexuivARB (GLint size, const GLuint * indices);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixIndexPointerARB (GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glSampleCoverageARB (GLfloat value, GLboolean invert);
GLEW_API void GLEW_APIENTRY _glew_gl_glActiveTextureARB (GLenum texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glClientActiveTextureARB (GLenum texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1dARB (GLenum target, GLdouble s);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1dvARB (GLenum target, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1fARB (GLenum target, GLfloat s);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1fvARB (GLenum target, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1iARB (GLenum target, GLint s);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1ivARB (GLenum target, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1sARB (GLenum target, GLshort s);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1svARB (GLenum target, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2dARB (GLenum target, GLdouble s, GLdouble t);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2dvARB (GLenum target, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2fARB (GLenum target, GLfloat s, GLfloat t);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2fvARB (GLenum target, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2iARB (GLenum target, GLint s, GLint t);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2ivARB (GLenum target, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2sARB (GLenum target, GLshort s, GLshort t);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2svARB (GLenum target, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3dvARB (GLenum target, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3fvARB (GLenum target, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3iARB (GLenum target, GLint s, GLint t, GLint r);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3ivARB (GLenum target, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3sARB (GLenum target, GLshort s, GLshort t, GLshort r);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3svARB (GLenum target, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4dvARB (GLenum target, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4fvARB (GLenum target, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4iARB (GLenum target, GLint s, GLint t, GLint r, GLint q);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4ivARB (GLenum target, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4sARB (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4svARB (GLenum target, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenQueriesARB (GLsizei n, GLuint * ids);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteQueriesARB (GLsizei n, const GLuint * ids);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsQueryARB (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginQueryARB (GLenum target, GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndQueryARB (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryivARB (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryObjectivARB (GLuint id, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryObjectuivARB (GLuint id, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMaxShaderCompilerThreadsARB (GLuint count);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameterfARB (GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameterfvARB (GLenum pname, const GLfloat * params);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glGetGraphicsResetStatusARB ();
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnTexImageARB (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * img);
GLEW_API void GLEW_APIENTRY _glew_gl_glReadnPixelsARB (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnCompressedTexImageARB (GLenum target, GLint lod, GLsizei bufSize, void * img);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformfvARB (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformivARB (GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformuivARB (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformdvARB (GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnMapdvARB (GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnPixelMapusvARB (GLenum map, GLsizei bufSize, GLushort * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnPolygonStippleARB (GLsizei bufSize, GLubyte * pattern);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnColorTableARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnConvolutionFilterARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnSeparableFilterARB (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnHistogramARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferSampleLocationsfvARB (GLenum target, GLuint start, GLsizei count, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferSampleLocationsfvARB (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glEvaluateDepthValuesARB ();
GLEW_API void GLEW_APIENTRY _glew_gl_glMinSampleShadingARB (GLfloat value);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteObjectARB (GLhandleARB obj);
GLEW_API GLhandleARB GLEW_APIENTRY _glew_gl_glGetHandleARB (GLenum pname);
GLEW_API void GLEW_APIENTRY _glew_gl_glDetachObjectARB (GLhandleARB containerObj, GLhandleARB attachedObj);
GLEW_API GLhandleARB GLEW_APIENTRY _glew_gl_glCreateShaderObjectARB (GLenum shaderType);
GLEW_API void GLEW_APIENTRY _glew_gl_glShaderSourceARB (GLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint * length);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompileShaderARB (GLhandleARB shaderObj);
GLEW_API GLhandleARB GLEW_APIENTRY _glew_gl_glCreateProgramObjectARB ();
GLEW_API void GLEW_APIENTRY _glew_gl_glAttachObjectARB (GLhandleARB containerObj, GLhandleARB obj);
GLEW_API void GLEW_APIENTRY _glew_gl_glLinkProgramARB (GLhandleARB programObj);
GLEW_API void GLEW_APIENTRY _glew_gl_glUseProgramObjectARB (GLhandleARB programObj);
GLEW_API void GLEW_APIENTRY _glew_gl_glValidateProgramARB (GLhandleARB programObj);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1fARB (GLint location, GLfloat v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2fARB (GLint location, GLfloat v0, GLfloat v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1iARB (GLint location, GLint v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2iARB (GLint location, GLint v0, GLint v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3iARB (GLint location, GLint v0, GLint v1, GLint v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4iARB (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1fvARB (GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2fvARB (GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3fvARB (GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4fvARB (GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1ivARB (GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2ivARB (GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3ivARB (GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4ivARB (GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix2fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix3fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix4fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetObjectParameterfvARB (GLhandleARB obj, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetObjectParameterivARB (GLhandleARB obj, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetInfoLogARB (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetAttachedObjectsARB (GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetUniformLocationARB (GLhandleARB programObj, const GLcharARB * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveUniformARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformfvARB (GLhandleARB programObj, GLint location, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformivARB (GLhandleARB programObj, GLint location, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetShaderSourceARB (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedStringARB (GLenum type, GLint namelen, const GLchar * name, GLint stringlen, const GLchar * string);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteNamedStringARB (GLint namelen, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompileShaderIncludeARB (GLuint shader, GLsizei count, const GLchar *const* path, const GLint * length);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsNamedStringARB (GLint namelen, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedStringARB (GLint namelen, const GLchar * name, GLsizei bufSize, GLint * stringlen, GLchar * string);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedStringivARB (GLint namelen, const GLchar * name, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glBufferPageCommitmentARB (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedBufferPageCommitmentEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedBufferPageCommitmentARB (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexPageCommitmentARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexBufferARB (GLenum target, GLenum internalformat, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexImage3DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexImage2DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexImage1DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexSubImage3DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexSubImage2DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexSubImage1DARB (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetCompressedTexImageARB (GLenum target, GLint level, void * img);
GLEW_API void GLEW_APIENTRY _glew_gl_glLoadTransposeMatrixfARB (const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glLoadTransposeMatrixdARB (const GLdouble * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultTransposeMatrixfARB (const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultTransposeMatrixdARB (const GLdouble * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glWeightbvARB (GLint size, const GLbyte * weights);
GLEW_API void GLEW_APIENTRY _glew_gl_glWeightsvARB (GLint size, const GLshort * weights);
GLEW_API void GLEW_APIENTRY _glew_gl_glWeightivARB (GLint size, const GLint * weights);
GLEW_API void GLEW_APIENTRY _glew_gl_glWeightfvARB (GLint size, const GLfloat * weights);
GLEW_API void GLEW_APIENTRY _glew_gl_glWeightdvARB (GLint size, const GLdouble * weights);
GLEW_API void GLEW_APIENTRY _glew_gl_glWeightubvARB (GLint size, const GLubyte * weights);
GLEW_API void GLEW_APIENTRY _glew_gl_glWeightusvARB (GLint size, const GLushort * weights);
GLEW_API void GLEW_APIENTRY _glew_gl_glWeightuivARB (GLint size, const GLuint * weights);
GLEW_API void GLEW_APIENTRY _glew_gl_glWeightPointerARB (GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexBlendARB (GLint count);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindBufferARB (GLenum target, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteBuffersARB (GLsizei n, const GLuint * buffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenBuffersARB (GLsizei n, GLuint * buffers);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsBufferARB (GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glBufferDataARB (GLenum target, GLsizeiptrARB size, const void * data, GLenum usage);
GLEW_API void GLEW_APIENTRY _glew_gl_glBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
GLEW_API void * GLEW_APIENTRY _glew_gl_glMapBufferARB (GLenum target, GLenum access);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glUnmapBufferARB (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetBufferParameterivARB (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetBufferPointervARB (GLenum target, GLenum pname, void ** params);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1dARB (GLuint index, GLdouble x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1dvARB (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1fARB (GLuint index, GLfloat x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1fvARB (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1sARB (GLuint index, GLshort x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1svARB (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2dARB (GLuint index, GLdouble x, GLdouble y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2dvARB (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2fARB (GLuint index, GLfloat x, GLfloat y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2fvARB (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2sARB (GLuint index, GLshort x, GLshort y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2svARB (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3dvARB (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3fvARB (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3sARB (GLuint index, GLshort x, GLshort y, GLshort z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3svARB (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4NbvARB (GLuint index, const GLbyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4NivARB (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4NsvARB (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4NubARB (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4NubvARB (GLuint index, const GLubyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4NuivARB (GLuint index, const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4NusvARB (GLuint index, const GLushort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4bvARB (GLuint index, const GLbyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4dvARB (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4fvARB (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4ivARB (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4sARB (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4svARB (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4ubvARB (GLuint index, const GLubyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4uivARB (GLuint index, const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4usvARB (GLuint index, const GLushort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribPointerARB (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableVertexAttribArrayARB (GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableVertexAttribArrayARB (GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribdvARB (GLuint index, GLenum pname, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribfvARB (GLuint index, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribivARB (GLuint index, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribPointervARB (GLuint index, GLenum pname, void ** pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindAttribLocationARB (GLhandleARB programObj, GLuint index, const GLcharARB * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveAttribARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetAttribLocationARB (GLhandleARB programObj, const GLcharARB * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2dARB (GLdouble x, GLdouble y);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2dvARB (const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2fARB (GLfloat x, GLfloat y);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2fvARB (const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2iARB (GLint x, GLint y);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2ivARB (const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2sARB (GLshort x, GLshort y);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2svARB (const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3dARB (GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3dvARB (const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3fARB (GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3fvARB (const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3iARB (GLint x, GLint y, GLint z);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3ivARB (const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3sARB (GLshort x, GLshort y, GLshort z);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3svARB (const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawBuffersATI (GLsizei n, const GLenum * bufs);
GLEW_API void GLEW_APIENTRY _glew_gl_glElementPointerATI (GLenum type, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementArrayATI (GLenum mode, GLsizei count);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawRangeElementArrayATI (GLenum mode, GLuint start, GLuint end, GLsizei count);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexBumpParameterivATI (GLenum pname, const GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexBumpParameterfvATI (GLenum pname, const GLfloat * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexBumpParameterivATI (GLenum pname, GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexBumpParameterfvATI (GLenum pname, GLfloat * param);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGenFragmentShadersATI (GLuint range);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindFragmentShaderATI (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteFragmentShaderATI (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginFragmentShaderATI ();
GLEW_API void GLEW_APIENTRY _glew_gl_glEndFragmentShaderATI ();
GLEW_API void GLEW_APIENTRY _glew_gl_glPassTexCoordATI (GLuint dst, GLuint coord, GLenum swizzle);
GLEW_API void GLEW_APIENTRY _glew_gl_glSampleMapATI (GLuint dst, GLuint interp, GLenum swizzle);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
GLEW_API void GLEW_APIENTRY _glew_gl_glAlphaFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
GLEW_API void GLEW_APIENTRY _glew_gl_glAlphaFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
GLEW_API void GLEW_APIENTRY _glew_gl_glAlphaFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
GLEW_API void GLEW_APIENTRY _glew_gl_glSetFragmentShaderConstantATI (GLuint dst, const GLfloat * value);
GLEW_API void * GLEW_APIENTRY _glew_gl_glMapObjectBufferATI (GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glUnmapObjectBufferATI (GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glPNTrianglesiATI (GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPNTrianglesfATI (GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glNewObjectBufferATI (GLsizei size, const void * pointer, GLenum usage);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsObjectBufferATI (GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glUpdateObjectBufferATI (GLuint buffer, GLuint offset, GLsizei size, const void * pointer, GLenum preserve);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetObjectBufferfvATI (GLuint buffer, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetObjectBufferivATI (GLuint buffer, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glFreeObjectBufferATI (GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glArrayObjectATI (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetArrayObjectfvATI (GLenum array, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetArrayObjectivATI (GLenum array, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glVariantArrayObjectATI (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVariantArrayObjectfvATI (GLuint id, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVariantArrayObjectivATI (GLuint id, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribArrayObjectATI (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribArrayObjectfvATI (GLuint index, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribArrayObjectivATI (GLuint index, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream1sATI (GLenum stream, GLshort x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream1svATI (GLenum stream, const GLshort * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream1iATI (GLenum stream, GLint x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream1ivATI (GLenum stream, const GLint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream1fATI (GLenum stream, GLfloat x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream1fvATI (GLenum stream, const GLfloat * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream1dATI (GLenum stream, GLdouble x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream1dvATI (GLenum stream, const GLdouble * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream2sATI (GLenum stream, GLshort x, GLshort y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream2svATI (GLenum stream, const GLshort * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream2iATI (GLenum stream, GLint x, GLint y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream2ivATI (GLenum stream, const GLint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream2fATI (GLenum stream, GLfloat x, GLfloat y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream2fvATI (GLenum stream, const GLfloat * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream2dATI (GLenum stream, GLdouble x, GLdouble y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream2dvATI (GLenum stream, const GLdouble * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream3svATI (GLenum stream, const GLshort * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream3iATI (GLenum stream, GLint x, GLint y, GLint z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream3ivATI (GLenum stream, const GLint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream3fvATI (GLenum stream, const GLfloat * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream3dvATI (GLenum stream, const GLdouble * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream4sATI (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream4svATI (GLenum stream, const GLshort * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream4iATI (GLenum stream, GLint x, GLint y, GLint z, GLint w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream4ivATI (GLenum stream, const GLint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream4fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream4fvATI (GLenum stream, const GLfloat * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream4dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexStream4dvATI (GLenum stream, const GLdouble * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalStream3bATI (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalStream3bvATI (GLenum stream, const GLbyte * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalStream3sATI (GLenum stream, GLshort nx, GLshort ny, GLshort nz);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalStream3svATI (GLenum stream, const GLshort * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalStream3iATI (GLenum stream, GLint nx, GLint ny, GLint nz);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalStream3ivATI (GLenum stream, const GLint * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalStream3fATI (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalStream3fvATI (GLenum stream, const GLfloat * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalStream3dATI (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalStream3dvATI (GLenum stream, const GLdouble * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glClientActiveVertexStreamATI (GLenum stream);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexBlendEnviATI (GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexBlendEnvfATI (GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawArraysInstancedBaseInstanceEXT (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsInstancedBaseInstanceEXT (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsInstancedBaseVertexBaseInstanceEXT (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformBufferEXT (GLuint program, GLint location, GLuint buffer);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetUniformBufferSizeEXT (GLuint program, GLint location);
GLEW_API GLintptr GLEW_APIENTRY _glew_gl_glGetUniformOffsetEXT (GLuint program, GLint location);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendColorEXT (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationSeparateEXT (GLenum modeRGB, GLenum modeAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindFragDataLocationIndexedEXT (GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindFragDataLocationEXT (GLuint program, GLuint color, const GLchar * name);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetProgramResourceLocationIndexEXT (GLuint program, GLenum programInterface, const GLchar * name);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetFragDataIndexEXT (GLuint program, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFuncSeparateEXT (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationEXT (GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glBufferStorageEXT (GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorSubTableEXT (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyColorSubTableEXT (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glLockArraysEXT (GLint first, GLsizei count);
GLEW_API void GLEW_APIENTRY _glew_gl_glUnlockArraysEXT ();
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionParameterfEXT (GLenum target, GLenum pname, GLfloat params);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionParameterfvEXT (GLenum target, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionParameteriEXT (GLenum target, GLenum pname, GLint params);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionParameterivEXT (GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetConvolutionFilterEXT (GLenum target, GLenum format, GLenum type, void * image);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetConvolutionParameterfvEXT (GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetConvolutionParameterivEXT (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSeparableFilterEXT (GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
GLEW_API void GLEW_APIENTRY _glew_gl_glSeparableFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
GLEW_API void GLEW_APIENTRY _glew_gl_glTangent3bEXT (GLbyte tx, GLbyte ty, GLbyte tz);
GLEW_API void GLEW_APIENTRY _glew_gl_glTangent3bvEXT (const GLbyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTangent3dEXT (GLdouble tx, GLdouble ty, GLdouble tz);
GLEW_API void GLEW_APIENTRY _glew_gl_glTangent3dvEXT (const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTangent3fEXT (GLfloat tx, GLfloat ty, GLfloat tz);
GLEW_API void GLEW_APIENTRY _glew_gl_glTangent3fvEXT (const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTangent3iEXT (GLint tx, GLint ty, GLint tz);
GLEW_API void GLEW_APIENTRY _glew_gl_glTangent3ivEXT (const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTangent3sEXT (GLshort tx, GLshort ty, GLshort tz);
GLEW_API void GLEW_APIENTRY _glew_gl_glTangent3svEXT (const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glBinormal3bEXT (GLbyte bx, GLbyte by, GLbyte bz);
GLEW_API void GLEW_APIENTRY _glew_gl_glBinormal3bvEXT (const GLbyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glBinormal3dEXT (GLdouble bx, GLdouble by, GLdouble bz);
GLEW_API void GLEW_APIENTRY _glew_gl_glBinormal3dvEXT (const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glBinormal3fEXT (GLfloat bx, GLfloat by, GLfloat bz);
GLEW_API void GLEW_APIENTRY _glew_gl_glBinormal3fvEXT (const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glBinormal3iEXT (GLint bx, GLint by, GLint bz);
GLEW_API void GLEW_APIENTRY _glew_gl_glBinormal3ivEXT (const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glBinormal3sEXT (GLshort bx, GLshort by, GLshort bz);
GLEW_API void GLEW_APIENTRY _glew_gl_glBinormal3svEXT (const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTangentPointerEXT (GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glBinormalPointerEXT (GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyImageSubDataEXT (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTexImage1DEXT (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTexImage2DEXT (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glCullParameterdvEXT (GLenum pname, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glCullParameterfvEXT (GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const GLchar * label);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label);
GLEW_API void GLEW_APIENTRY _glew_gl_glInsertEventMarkerEXT (GLsizei length, const GLchar * marker);
GLEW_API void GLEW_APIENTRY _glew_gl_glPushGroupMarkerEXT (GLsizei length, const GLchar * marker);
GLEW_API void GLEW_APIENTRY _glew_gl_glPopGroupMarkerEXT ();
GLEW_API void GLEW_APIENTRY _glew_gl_glDepthBoundsEXT (GLclampd zmin, GLclampd zmax);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixLoadfEXT (GLenum mode, const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixLoaddEXT (GLenum mode, const GLdouble * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixMultfEXT (GLenum mode, const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixMultdEXT (GLenum mode, const GLdouble * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixLoadIdentityEXT (GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixRotatefEXT (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixRotatedEXT (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixScalefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixScaledEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixTranslatefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixTranslatedEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixFrustumEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixOrthoEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixPopEXT (GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixPushEXT (GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glClientAttribDefaultEXT (GLbitfield mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glPushClientAttribDefaultEXT (GLbitfield mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureParameterfEXT (GLuint texture, GLenum target, GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureParameteriEXT (GLuint texture, GLenum target, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureImageEXT (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureLevelParameterfvEXT (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureLevelParameterivEXT (GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindMultiTextureEXT (GLenum texunit, GLenum target, GLuint texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoordPointerEXT (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexEnvfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexEnviEXT (GLenum texunit, GLenum target, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexGendEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexGenfEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexGeniEXT (GLenum texunit, GLenum coord, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexParameteriEXT (GLenum texunit, GLenum target, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexParameterfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultiTexImageEXT (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultiTexLevelParameterfvEXT (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultiTexLevelParameterivEXT (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableClientStateIndexedEXT (GLenum array, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableClientStateIndexedEXT (GLenum array, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFloatIndexedvEXT (GLenum target, GLuint index, GLfloat * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetDoubleIndexedvEXT (GLenum target, GLuint index, GLdouble * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPointerIndexedvEXT (GLenum target, GLuint index, void ** data);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableIndexedEXT (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableIndexedEXT (GLenum target, GLuint index);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsEnabledIndexedEXT (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetIntegerIndexedvEXT (GLenum target, GLuint index, GLint * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetBooleanIndexedvEXT (GLenum target, GLuint index, GLboolean * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetCompressedTextureImageEXT (GLuint texture, GLenum target, GLint lod, void * img);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetCompressedMultiTexImageEXT (GLenum texunit, GLenum target, GLint lod, void * img);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixLoadTransposefEXT (GLenum mode, const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixLoadTransposedEXT (GLenum mode, const GLdouble * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixMultTransposefEXT (GLenum mode, const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixMultTransposedEXT (GLenum mode, const GLdouble * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedBufferDataEXT (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
GLEW_API void * GLEW_APIENTRY _glew_gl_glMapNamedBufferEXT (GLuint buffer, GLenum access);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glUnmapNamedBufferEXT (GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedBufferParameterivEXT (GLuint buffer, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedBufferPointervEXT (GLuint buffer, GLenum pname, void ** params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1fEXT (GLuint program, GLint location, GLfloat v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1iEXT (GLuint program, GLint location, GLint v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2iEXT (GLuint program, GLint location, GLint v0, GLint v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei count, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix2x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix3x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix2x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix4x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix3x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix4x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureBufferEXT (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexBufferEXT (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1uiEXT (GLuint program, GLint location, GLuint v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1uivEXT (GLuint program, GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2uivEXT (GLuint program, GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3uivEXT (GLuint program, GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4uivEXT (GLuint program, GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedProgramLocalParameters4fvEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedProgramLocalParameterI4iEXT (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedProgramLocalParameterI4ivEXT (GLuint program, GLenum target, GLuint index, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedProgramLocalParametersI4ivEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedProgramLocalParameterI4uiEXT (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedProgramLocalParameterI4uivEXT (GLuint program, GLenum target, GLuint index, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedProgramLocalParametersI4uivEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedProgramLocalParameterIivEXT (GLuint program, GLenum target, GLuint index, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedProgramLocalParameterIuivEXT (GLuint program, GLenum target, GLuint index, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableClientStateiEXT (GLenum array, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableClientStateiEXT (GLenum array, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFloati_vEXT (GLenum pname, GLuint index, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetDoublei_vEXT (GLenum pname, GLuint index, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPointeri_vEXT (GLenum pname, GLuint index, void ** params);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedProgramStringEXT (GLuint program, GLenum target, GLenum format, GLsizei len, const void * string);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedProgramLocalParameter4dEXT (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedProgramLocalParameter4dvEXT (GLuint program, GLenum target, GLuint index, const GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedProgramLocalParameter4fEXT (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedProgramLocalParameter4fvEXT (GLuint program, GLenum target, GLuint index, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedProgramLocalParameterdvEXT (GLuint program, GLenum target, GLuint index, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedProgramLocalParameterfvEXT (GLuint program, GLenum target, GLuint index, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedProgramivEXT (GLuint program, GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedProgramStringEXT (GLuint program, GLenum target, GLenum pname, void * string);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedRenderbufferStorageEXT (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedRenderbufferParameterivEXT (GLuint renderbuffer, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedRenderbufferStorageMultisampleEXT (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedRenderbufferStorageMultisampleCoverageEXT (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glCheckNamedFramebufferStatusEXT (GLuint framebuffer, GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferTexture1DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferTexture2DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferTexture3DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferRenderbufferEXT (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedFramebufferAttachmentParameterivEXT (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenerateTextureMipmapEXT (GLuint texture, GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenerateMultiTexMipmapEXT (GLenum texunit, GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferDrawBufferEXT (GLuint framebuffer, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferDrawBuffersEXT (GLuint framebuffer, GLsizei n, const GLenum * bufs);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferReadBufferEXT (GLuint framebuffer, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedCopyBufferSubDataEXT (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferTextureEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferTextureLayerEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferTextureFaceEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureRenderbufferEXT (GLuint texture, GLenum target, GLuint renderbuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexRenderbufferEXT (GLenum texunit, GLenum target, GLuint renderbuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayVertexOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayColorOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayEdgeFlagOffsetEXT (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayIndexOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayNormalOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayTexCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayMultiTexCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayFogCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArraySecondaryColorOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayVertexAttribOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayVertexAttribIOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableVertexArrayEXT (GLuint vaobj, GLenum array);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableVertexArrayEXT (GLuint vaobj, GLenum array);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableVertexArrayAttribEXT (GLuint vaobj, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableVertexArrayAttribEXT (GLuint vaobj, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexArrayIntegervEXT (GLuint vaobj, GLenum pname, GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexArrayPointervEXT (GLuint vaobj, GLenum pname, void ** param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexArrayIntegeri_vEXT (GLuint vaobj, GLuint index, GLenum pname, GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexArrayPointeri_vEXT (GLuint vaobj, GLuint index, GLenum pname, void ** param);
GLEW_API void * GLEW_APIENTRY _glew_gl_glMapNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLEW_API void GLEW_APIENTRY _glew_gl_glFlushMappedNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedBufferStorageEXT (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearNamedBufferDataEXT (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearNamedBufferSubDataEXT (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferParameteriEXT (GLuint framebuffer, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1dEXT (GLuint program, GLint location, GLdouble x);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2dEXT (GLuint program, GLint location, GLdouble x, GLdouble y);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3dEXT (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4dEXT (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform1dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform2dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform3dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniform4dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix2x3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix2x4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix3x2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix3x4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix4x2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformMatrix4x3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureBufferRangeEXT (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureStorage1DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureStorage2DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureStorage3DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureStorage2DMultisampleEXT (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureStorage3DMultisampleEXT (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayBindVertexBufferEXT (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayVertexAttribFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayVertexAttribIFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayVertexAttribLFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayVertexAttribBindingEXT (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayVertexBindingDivisorEXT (GLuint vaobj, GLuint bindingindex, GLuint divisor);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayVertexAttribLOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexturePageCommitmentEXT (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayVertexAttribDivisorEXT (GLuint vaobj, GLuint index, GLuint divisor);
GLEW_API void GLEW_APIENTRY _glew_gl_glDiscardFramebufferEXT (GLenum target, GLsizei numAttachments, const GLenum * attachments);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenQueriesEXT (GLsizei n, GLuint * ids);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteQueriesEXT (GLsizei n, const GLuint * ids);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsQueryEXT (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginQueryEXT (GLenum target, GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndQueryEXT (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glQueryCounterEXT (GLuint id, GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryivEXT (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryObjectivEXT (GLuint id, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryObjectuivEXT (GLuint id, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64 * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64 * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawBuffersEXT (GLsizei n, const GLenum * bufs);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorMaskIndexedEXT (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableiEXT (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableiEXT (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationiEXT (GLuint buf, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationSeparateiEXT (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFunciEXT (GLuint buf, GLenum src, GLenum dst);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFuncSeparateiEXT (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorMaskiEXT (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsEnablediEXT (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsBaseVertexEXT (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawRangeElementsBaseVertexEXT (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsInstancedBaseVertexEXT (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawElementsBaseVertexEXT (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawArraysInstancedEXT (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawRangeElementsEXT (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoordfEXT (GLfloat coord);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoordfvEXT (const GLfloat * coord);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoorddEXT (GLdouble coord);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoorddvEXT (const GLdouble * coord);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoordPointerEXT (GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlitFramebufferEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLEW_API void GLEW_APIENTRY _glew_gl_glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsRenderbufferEXT (GLuint renderbuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindRenderbufferEXT (GLenum target, GLuint renderbuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteRenderbuffersEXT (GLsizei n, const GLuint * renderbuffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenRenderbuffersEXT (GLsizei n, GLuint * renderbuffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glRenderbufferStorageEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetRenderbufferParameterivEXT (GLenum target, GLenum pname, GLint * params);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsFramebufferEXT (GLuint framebuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindFramebufferEXT (GLenum target, GLuint framebuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteFramebuffersEXT (GLsizei n, const GLuint * framebuffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenFramebuffersEXT (GLsizei n, GLuint * framebuffers);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glCheckFramebufferStatusEXT (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTexture1DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTexture2DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTexture3DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferRenderbufferEXT (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFramebufferAttachmentParameterivEXT (GLenum target, GLenum attachment, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenerateMipmapEXT (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetUniformuivEXT (GLuint program, GLint location, GLuint * params);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetFragDataLocationEXT (GLuint program, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1uiEXT (GLint location, GLuint v0);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2uiEXT (GLint location, GLuint v0, GLuint v1);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform1uivEXT (GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform2uivEXT (GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform3uivEXT (GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniform4uivEXT (GLint location, GLsizei count, const GLuint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetHistogramEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetHistogramParameterfvEXT (GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetHistogramParameterivEXT (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMinmaxEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMinmaxParameterfvEXT (GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMinmaxParameterivEXT (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glHistogramEXT (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
GLEW_API void GLEW_APIENTRY _glew_gl_glMinmaxEXT (GLenum target, GLenum internalformat, GLboolean sink);
GLEW_API void GLEW_APIENTRY _glew_gl_glResetHistogramEXT (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glResetMinmaxEXT (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glIndexFuncEXT (GLenum func, GLclampf ref);
GLEW_API void GLEW_APIENTRY _glew_gl_glIndexMaterialEXT (GLenum face, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribDivisorEXT (GLuint index, GLuint divisor);
GLEW_API void GLEW_APIENTRY _glew_gl_glApplyTextureEXT (GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureLightEXT (GLenum pname);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureMaterialEXT (GLenum face, GLenum mode);
GLEW_API void * GLEW_APIENTRY _glew_gl_glMapBufferRangeEXT (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLEW_API void GLEW_APIENTRY _glew_gl_glFlushMappedBufferRangeEXT (GLenum target, GLintptr offset, GLsizeiptr length);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawArraysEXT (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawElementsEXT (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawArraysIndirectEXT (GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawElementsIndirectEXT (GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glSampleMaskEXT (GLclampf value, GLboolean invert);
GLEW_API void GLEW_APIENTRY _glew_gl_glSamplePatternEXT (GLenum pattern);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTexture2DMultisampleEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLEW_API void GLEW_APIENTRY _glew_gl_glReadBufferIndexedEXT (GLenum src, GLint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawBuffersIndexedEXT (GLint n, const GLenum * location, const GLint * indices);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetIntegeri_vEXT (GLenum target, GLuint index, GLint * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorTableEXT (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void * table);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetColorTableEXT (GLenum target, GLenum format, GLenum type, void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetColorTableParameterivEXT (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetColorTableParameterfvEXT (GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelTransformParameteriEXT (GLenum target, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelTransformParameterfEXT (GLenum target, GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelTransformParameterivEXT (GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelTransformParameterfvEXT (GLenum target, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPixelTransformParameterivEXT (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPixelTransformParameterfvEXT (GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameterfEXT (GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameterfvEXT (GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPolygonOffsetEXT (GLfloat factor, GLfloat bias);
GLEW_API void GLEW_APIENTRY _glew_gl_glPolygonOffsetClampEXT (GLfloat factor, GLfloat units, GLfloat clamp);
GLEW_API void GLEW_APIENTRY _glew_gl_glPrimitiveBoundingBoxEXT (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLEW_API void GLEW_APIENTRY _glew_gl_glProvokingVertexEXT (GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glRasterSamplesEXT (GLuint samples, GLboolean fixedsamplelocations);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glGetGraphicsResetStatusEXT ();
GLEW_API void GLEW_APIENTRY _glew_gl_glReadnPixelsEXT (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformfvEXT (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformivEXT (GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3bEXT (GLbyte red, GLbyte green, GLbyte blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3bvEXT (const GLbyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3dEXT (GLdouble red, GLdouble green, GLdouble blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3dvEXT (const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3fEXT (GLfloat red, GLfloat green, GLfloat blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3fvEXT (const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3iEXT (GLint red, GLint green, GLint blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3ivEXT (const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3sEXT (GLshort red, GLshort green, GLshort blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3svEXT (const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3ubEXT (GLubyte red, GLubyte green, GLubyte blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3ubvEXT (const GLubyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3uiEXT (GLuint red, GLuint green, GLuint blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3uivEXT (const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3usEXT (GLushort red, GLushort green, GLushort blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3usvEXT (const GLushort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColorPointerEXT (GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glUseShaderProgramEXT (GLenum type, GLuint program);
GLEW_API void GLEW_APIENTRY _glew_gl_glActiveProgramEXT (GLuint program);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glCreateShaderProgramEXT (GLenum type, const GLchar * string);
GLEW_API void GLEW_APIENTRY _glew_gl_glActiveShaderProgramEXT (GLuint pipeline, GLuint program);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindProgramPipelineEXT (GLuint pipeline);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glCreateShaderProgramvEXT (GLenum type, GLsizei count, const GLchar ** strings);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteProgramPipelinesEXT (GLsizei n, const GLuint * pipelines);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenProgramPipelinesEXT (GLsizei n, GLuint * pipelines);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramPipelineInfoLogEXT (GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramPipelineivEXT (GLuint pipeline, GLenum pname, GLint * params);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsProgramPipelineEXT (GLuint pipeline);
GLEW_API void GLEW_APIENTRY _glew_gl_glUseProgramStagesEXT (GLuint pipeline, GLbitfield stages, GLuint program);
GLEW_API void GLEW_APIENTRY _glew_gl_glValidateProgramPipelineEXT (GLuint pipeline);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindImageTextureEXT (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
GLEW_API void GLEW_APIENTRY _glew_gl_glMemoryBarrierEXT (GLbitfield barriers);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexPageCommitmentEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilClearTagEXT (GLsizei stencilTagBits, GLuint stencilClearTag);
GLEW_API void GLEW_APIENTRY _glew_gl_glActiveStencilFaceEXT (GLenum face);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glPatchParameteriEXT (GLenum pname, GLint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexImage3DEXT (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexParameterIivEXT (GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexParameterIuivEXT (GLenum target, GLenum pname, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexParameterIivEXT (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexParameterIuivEXT (GLenum target, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glSamplerParameterIivEXT (GLuint sampler, GLenum pname, const GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glSamplerParameterIuivEXT (GLuint sampler, GLenum pname, const GLuint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSamplerParameterIivEXT (GLuint sampler, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSamplerParameterIuivEXT (GLuint sampler, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexBufferEXT (GLenum target, GLenum internalformat, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexBufferRangeEXT (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearColorIiEXT (GLint red, GLint green, GLint blue, GLint alpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearColorIuiEXT (GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glAreTexturesResidentEXT (GLsizei n, const GLuint * textures, GLboolean * residences);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindTextureEXT (GLenum target, GLuint texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteTexturesEXT (GLsizei n, const GLuint * textures);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenTexturesEXT (GLsizei n, GLuint * textures);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsTextureEXT (GLuint texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glPrioritizeTexturesEXT (GLsizei n, const GLuint * textures, const GLclampf * priorities);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureNormalEXT (GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexStorage1DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexStorage2DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexStorage3DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureViewEXT (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginTransformFeedbackEXT (GLenum primitiveMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndTransformFeedbackEXT ();
GLEW_API void GLEW_APIENTRY _glew_gl_glBindBufferRangeEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindBufferOffsetEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindBufferBaseEXT (GLenum target, GLuint index, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glTransformFeedbackVaryingsEXT (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTransformFeedbackVaryingEXT (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glArrayElementEXT (GLint i);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawArraysEXT (GLenum mode, GLint first, GLsizei count);
GLEW_API void GLEW_APIENTRY _glew_gl_glEdgeFlagPointerEXT (GLsizei stride, GLsizei count, const GLboolean * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPointervEXT (GLenum pname, void ** params);
GLEW_API void GLEW_APIENTRY _glew_gl_glIndexPointerEXT (GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalPointerEXT (GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL1dEXT (GLuint index, GLdouble x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL2dEXT (GLuint index, GLdouble x, GLdouble y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL3dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL4dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL1dvEXT (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL2dvEXT (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL3dvEXT (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL4dvEXT (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribLPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribLdvEXT (GLuint index, GLenum pname, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginVertexShaderEXT ();
GLEW_API void GLEW_APIENTRY _glew_gl_glEndVertexShaderEXT ();
GLEW_API void GLEW_APIENTRY _glew_gl_glBindVertexShaderEXT (GLuint id);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGenVertexShadersEXT (GLuint range);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteVertexShaderEXT (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glShaderOp1EXT (GLenum op, GLuint res, GLuint arg1);
GLEW_API void GLEW_APIENTRY _glew_gl_glShaderOp2EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2);
GLEW_API void GLEW_APIENTRY _glew_gl_glShaderOp3EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
GLEW_API void GLEW_APIENTRY _glew_gl_glSwizzleEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
GLEW_API void GLEW_APIENTRY _glew_gl_glWriteMaskEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
GLEW_API void GLEW_APIENTRY _glew_gl_glInsertComponentEXT (GLuint res, GLuint src, GLuint num);
GLEW_API void GLEW_APIENTRY _glew_gl_glExtractComponentEXT (GLuint res, GLuint src, GLuint num);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGenSymbolsEXT (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
GLEW_API void GLEW_APIENTRY _glew_gl_glSetInvariantEXT (GLuint id, GLenum type, const void * addr);
GLEW_API void GLEW_APIENTRY _glew_gl_glSetLocalConstantEXT (GLuint id, GLenum type, const void * addr);
GLEW_API void GLEW_APIENTRY _glew_gl_glVariantbvEXT (GLuint id, const GLbyte * addr);
GLEW_API void GLEW_APIENTRY _glew_gl_glVariantsvEXT (GLuint id, const GLshort * addr);
GLEW_API void GLEW_APIENTRY _glew_gl_glVariantivEXT (GLuint id, const GLint * addr);
GLEW_API void GLEW_APIENTRY _glew_gl_glVariantfvEXT (GLuint id, const GLfloat * addr);
GLEW_API void GLEW_APIENTRY _glew_gl_glVariantdvEXT (GLuint id, const GLdouble * addr);
GLEW_API void GLEW_APIENTRY _glew_gl_glVariantubvEXT (GLuint id, const GLubyte * addr);
GLEW_API void GLEW_APIENTRY _glew_gl_glVariantusvEXT (GLuint id, const GLushort * addr);
GLEW_API void GLEW_APIENTRY _glew_gl_glVariantuivEXT (GLuint id, const GLuint * addr);
GLEW_API void GLEW_APIENTRY _glew_gl_glVariantPointerEXT (GLuint id, GLenum type, GLuint stride, const void * addr);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableVariantClientStateEXT (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableVariantClientStateEXT (GLuint id);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glBindLightParameterEXT (GLenum light, GLenum value);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glBindMaterialParameterEXT (GLenum face, GLenum value);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glBindTexGenParameterEXT (GLenum unit, GLenum coord, GLenum value);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glBindTextureUnitParameterEXT (GLenum unit, GLenum value);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glBindParameterEXT (GLenum value);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsVariantEnabledEXT (GLuint id, GLenum cap);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVariantBooleanvEXT (GLuint id, GLenum value, GLboolean * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVariantIntegervEXT (GLuint id, GLenum value, GLint * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVariantFloatvEXT (GLuint id, GLenum value, GLfloat * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVariantPointervEXT (GLuint id, GLenum value, void ** data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetInvariantBooleanvEXT (GLuint id, GLenum value, GLboolean * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetInvariantIntegervEXT (GLuint id, GLenum value, GLint * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetInvariantFloatvEXT (GLuint id, GLenum value, GLfloat * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetLocalConstantBooleanvEXT (GLuint id, GLenum value, GLboolean * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetLocalConstantIntegervEXT (GLuint id, GLenum value, GLint * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetLocalConstantFloatvEXT (GLuint id, GLenum value, GLfloat * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexWeightfEXT (GLfloat weight);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexWeightfvEXT (const GLfloat * weight);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexWeightPointerEXT (GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API GLsync GLEW_APIENTRY _glew_gl_glImportSyncEXT (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
GLEW_API void GLEW_APIENTRY _glew_gl_glFrameTerminatorGREMEDY ();
GLEW_API void GLEW_APIENTRY _glew_gl_glStringMarkerGREMEDY (GLsizei len, const void * string);
GLEW_API void GLEW_APIENTRY _glew_gl_glImageTransformParameteriHP (GLenum target, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glImageTransformParameterfHP (GLenum target, GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glImageTransformParameterivHP (GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glImageTransformParameterfvHP (GLenum target, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetImageTransformParameterivHP (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetImageTransformParameterfvHP (GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiModeDrawArraysIBM (const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiModeDrawElementsIBM (const GLenum * mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, GLint modestride);
GLEW_API void GLEW_APIENTRY _glew_gl_glFlushStaticDataIBM (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorPointerListIBM (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColorPointerListIBM (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLEW_API void GLEW_APIENTRY _glew_gl_glEdgeFlagPointerListIBM (GLint stride, const GLboolean ** pointer, GLint ptrstride);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoordPointerListIBM (GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLEW_API void GLEW_APIENTRY _glew_gl_glIndexPointerListIBM (GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalPointerListIBM (GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordPointerListIBM (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexPointerListIBM (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLEW_API void GLEW_APIENTRY _glew_gl_glRenderbufferStorageMultisampleIMG (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTexture2DMultisampleIMG (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFuncSeparateINGR (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glApplyFramebufferAttachmentCMAAINTEL ();
GLEW_API void GLEW_APIENTRY _glew_gl_glSyncTextureINTEL (GLuint texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glUnmapTexture2DINTEL (GLuint texture, GLint level);
GLEW_API void * GLEW_APIENTRY _glew_gl_glMapTexture2DINTEL (GLuint texture, GLint level, GLbitfield access, GLint * stride, GLenum * layout);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexPointervINTEL (GLint size, GLenum type, const void ** pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalPointervINTEL (GLenum type, const void ** pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorPointervINTEL (GLint size, GLenum type, const void ** pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordPointervINTEL (GLint size, GLenum type, const void ** pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginPerfQueryINTEL (GLuint queryHandle);
GLEW_API void GLEW_APIENTRY _glew_gl_glCreatePerfQueryINTEL (GLuint queryId, GLuint * queryHandle);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeletePerfQueryINTEL (GLuint queryHandle);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndPerfQueryINTEL (GLuint queryHandle);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFirstPerfQueryIdINTEL (GLuint * queryId);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNextPerfQueryIdINTEL (GLuint queryId, GLuint * nextQueryId);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPerfCounterInfoINTEL (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPerfQueryDataINTEL (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid * data, GLuint * bytesWritten);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPerfQueryIdByNameINTEL (GLchar * queryName, GLuint * queryId);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPerfQueryInfoINTEL (GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendBarrierKHR ();
GLEW_API void GLEW_APIENTRY _glew_gl_glDebugMessageControlKHR (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLEW_API void GLEW_APIENTRY _glew_gl_glDebugMessageInsertKHR (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLEW_API void GLEW_APIENTRY _glew_gl_glDebugMessageCallbackKHR (GLDEBUGPROCKHR callback, const void * userParam);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGetDebugMessageLogKHR (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLEW_API void GLEW_APIENTRY _glew_gl_glPushDebugGroupKHR (GLenum source, GLuint id, GLsizei length, const GLchar * message);
GLEW_API void GLEW_APIENTRY _glew_gl_glPopDebugGroupKHR ();
GLEW_API void GLEW_APIENTRY _glew_gl_glObjectLabelKHR (GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetObjectLabelKHR (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
GLEW_API void GLEW_APIENTRY _glew_gl_glObjectPtrLabelKHR (const void * ptr, GLsizei length, const GLchar * label);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetObjectPtrLabelKHR (const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPointervKHR (GLenum pname, void ** params);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glGetGraphicsResetStatusKHR ();
GLEW_API void GLEW_APIENTRY _glew_gl_glReadnPixelsKHR (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformfvKHR (GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformivKHR (GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetnUniformuivKHR (GLuint program, GLint location, GLsizei bufSize, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glResizeBuffersMESA ();
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2dMESA (GLdouble x, GLdouble y);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2dvMESA (const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2fMESA (GLfloat x, GLfloat y);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2fvMESA (const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2iMESA (GLint x, GLint y);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2ivMESA (const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2sMESA (GLshort x, GLshort y);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos2svMESA (const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3dMESA (GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3dvMESA (const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3fMESA (GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3fvMESA (const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3iMESA (GLint x, GLint y, GLint z);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3ivMESA (const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3sMESA (GLshort x, GLshort y, GLshort z);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos3svMESA (const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos4dMESA (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos4dvMESA (const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos4fMESA (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos4fvMESA (const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos4iMESA (GLint x, GLint y, GLint z, GLint w);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos4ivMESA (const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos4sMESA (GLshort x, GLshort y, GLshort z, GLshort w);
GLEW_API void GLEW_APIENTRY _glew_gl_glWindowPos4svMESA (const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginConditionalRenderNVX (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndConditionalRenderNVX ();
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawArraysIndirectBindlessNV (GLenum mode, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawElementsIndirectBindlessNV (GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawArraysIndirectBindlessCountNV (GLenum mode, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawElementsIndirectBindlessCountNV (GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
GLEW_API GLuint64 GLEW_APIENTRY _glew_gl_glGetTextureHandleNV (GLuint texture);
GLEW_API GLuint64 GLEW_APIENTRY _glew_gl_glGetTextureSamplerHandleNV (GLuint texture, GLuint sampler);
GLEW_API void GLEW_APIENTRY _glew_gl_glMakeTextureHandleResidentNV (GLuint64 handle);
GLEW_API void GLEW_APIENTRY _glew_gl_glMakeTextureHandleNonResidentNV (GLuint64 handle);
GLEW_API GLuint64 GLEW_APIENTRY _glew_gl_glGetImageHandleNV (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLEW_API void GLEW_APIENTRY _glew_gl_glMakeImageHandleResidentNV (GLuint64 handle, GLenum access);
GLEW_API void GLEW_APIENTRY _glew_gl_glMakeImageHandleNonResidentNV (GLuint64 handle);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformHandleui64NV (GLint location, GLuint64 value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformHandleui64vNV (GLint location, GLsizei count, const GLuint64 * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformHandleui64NV (GLuint program, GLint location, GLuint64 value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformHandleui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64 * values);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsTextureHandleResidentNV (GLuint64 handle);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsImageHandleResidentNV (GLuint64 handle);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendParameteriNV (GLenum pname, GLint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendBarrierNV ();
GLEW_API void GLEW_APIENTRY _glew_gl_glCreateStatesNV (GLsizei n, GLuint * states);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteStatesNV (GLsizei n, const GLuint * states);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsStateNV (GLuint state);
GLEW_API void GLEW_APIENTRY _glew_gl_glStateCaptureNV (GLuint state, GLenum mode);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGetCommandHeaderNV (GLenum tokenID, GLuint size);
GLEW_API GLushort GLEW_APIENTRY _glew_gl_glGetStageIndexNV (GLenum shadertype);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawCommandsNV (GLenum primitiveMode, GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, GLuint count);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawCommandsAddressNV (GLenum primitiveMode, const GLuint64 * indirects, const GLsizei * sizes, GLuint count);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawCommandsStatesNV (GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawCommandsStatesAddressNV (const GLuint64 * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
GLEW_API void GLEW_APIENTRY _glew_gl_glCreateCommandListsNV (GLsizei n, GLuint * lists);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteCommandListsNV (GLsizei n, const GLuint * lists);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsCommandListNV (GLuint list);
GLEW_API void GLEW_APIENTRY _glew_gl_glListDrawCommandsStatesClientNV (GLuint list, GLuint segment, const void ** indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
GLEW_API void GLEW_APIENTRY _glew_gl_glCommandListSegmentsNV (GLuint list, GLuint segments);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompileCommandListNV (GLuint list);
GLEW_API void GLEW_APIENTRY _glew_gl_glCallCommandListNV (GLuint list);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginConditionalRenderNV (GLuint id, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndConditionalRenderNV ();
GLEW_API void GLEW_APIENTRY _glew_gl_glSubpixelPrecisionBiasNV (GLuint xbits, GLuint ybits);
GLEW_API void GLEW_APIENTRY _glew_gl_glConservativeRasterParameterfNV (GLenum pname, GLfloat value);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyBufferSubDataNV (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyImageSubDataNV (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
GLEW_API void GLEW_APIENTRY _glew_gl_glCoverageMaskNV (GLboolean mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glCoverageOperationNV (GLenum operation);
GLEW_API void GLEW_APIENTRY _glew_gl_glDepthRangedNV (GLdouble zNear, GLdouble zFar);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearDepthdNV (GLdouble depth);
GLEW_API void GLEW_APIENTRY _glew_gl_glDepthBoundsdNV (GLdouble zmin, GLdouble zmax);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawBuffersNV (GLsizei n, const GLenum * bufs);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawArraysInstancedNV (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsInstancedNV (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawTextureNV (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
GLEW_API void GLEW_APIENTRY _glew_gl_glMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glMapParameterivNV (GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glMapParameterfvNV (GLenum target, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMapParameterivNV (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMapParameterfvNV (GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMapAttribParameterivNV (GLenum target, GLuint index, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMapAttribParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glEvalMapsNV (GLenum target, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMultisamplefvNV (GLenum pname, GLuint index, GLfloat * val);
GLEW_API void GLEW_APIENTRY _glew_gl_glSampleMaskIndexedNV (GLuint index, GLbitfield mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexRenderbufferNV (GLenum target, GLuint renderbuffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteFencesNV (GLsizei n, const GLuint * fences);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenFencesNV (GLsizei n, GLuint * fences);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsFenceNV (GLuint fence);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glTestFenceNV (GLuint fence);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFenceivNV (GLuint fence, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glFinishFenceNV (GLuint fence);
GLEW_API void GLEW_APIENTRY _glew_gl_glSetFenceNV (GLuint fence, GLenum condition);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentCoverageColorNV (GLuint color);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramNamedParameter4fNV (GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramNamedParameter4fvNV (GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramNamedParameter4dNV (GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramNamedParameter4dvNV (GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramNamedParameterfvNV (GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramNamedParameterdvNV (GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlitFramebufferNV (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLEW_API void GLEW_APIENTRY _glew_gl_glCoverageModulationTableNV (GLsizei n, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetCoverageModulationTableNV (GLsizei bufsize, GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glCoverageModulationNV (GLenum components);
GLEW_API void GLEW_APIENTRY _glew_gl_glRenderbufferStorageMultisampleNV (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glRenderbufferStorageMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramVertexLimitNV (GLenum target, GLint limit);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramLocalParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramLocalParameterI4ivNV (GLenum target, GLuint index, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramLocalParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramLocalParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramLocalParameterI4uivNV (GLenum target, GLuint index, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramLocalParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramEnvParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramEnvParameterI4ivNV (GLenum target, GLuint index, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramEnvParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramEnvParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramEnvParameterI4uivNV (GLenum target, GLuint index, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramEnvParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramLocalParameterIivNV (GLenum target, GLuint index, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramLocalParameterIuivNV (GLenum target, GLuint index, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramEnvParameterIivNV (GLenum target, GLuint index, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramEnvParameterIuivNV (GLenum target, GLuint index, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramSubroutineParametersuivNV (GLenum target, GLsizei count, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramSubroutineParameteruivNV (GLenum target, GLuint index, GLuint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex2hNV (GLhalfNV x, GLhalfNV y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex2hvNV (const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex3hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex3hvNV (const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex4hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex4hvNV (const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormal3hNV (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormal3hvNV (const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor3hvNV (const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor4hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor4hvNV (const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord1hNV (GLhalfNV s);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord1hvNV (const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2hNV (GLhalfNV s, GLhalfNV t);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2hvNV (const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord3hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord3hvNV (const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord4hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord4hvNV (const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1hNV (GLenum target, GLhalfNV s);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1hvNV (GLenum target, const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2hNV (GLenum target, GLhalfNV s, GLhalfNV t);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2hvNV (GLenum target, const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3hvNV (GLenum target, const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4hvNV (GLenum target, const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoordhNV (GLhalfNV fog);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoordhvNV (const GLhalfNV * fog);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColor3hvNV (const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexWeighthNV (GLhalfNV weight);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexWeighthvNV (const GLhalfNV * weight);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1hNV (GLuint index, GLhalfNV x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1hvNV (GLuint index, const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2hNV (GLuint index, GLhalfNV x, GLhalfNV y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2hvNV (GLuint index, const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3hvNV (GLuint index, const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4hvNV (GLuint index, const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs1hvNV (GLuint index, GLsizei n, const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs2hvNV (GLuint index, GLsizei n, const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs3hvNV (GLuint index, GLsizei n, const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs4hvNV (GLuint index, GLsizei n, const GLhalfNV * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribDivisorNV (GLuint index, GLuint divisor);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetInternalformatSampleivNV (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix2x3fvNV (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix3x2fvNV (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix2x4fvNV (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix4x2fvNV (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix3x4fvNV (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformMatrix4x3fvNV (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenOcclusionQueriesNV (GLsizei n, GLuint * ids);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteOcclusionQueriesNV (GLsizei n, const GLuint * ids);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsOcclusionQueryNV (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginOcclusionQueryNV (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndOcclusionQueryNV ();
GLEW_API void GLEW_APIENTRY _glew_gl_glGetOcclusionQueryivNV (GLuint id, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetOcclusionQueryuivNV (GLuint id, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramBufferParametersfvNV (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramBufferParametersIivNV (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramBufferParametersIuivNV (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint * params);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGenPathsNV (GLsizei range);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeletePathsNV (GLuint path, GLsizei range);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsPathNV (GLuint path);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathCommandsNV (GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathCoordsNV (GLuint path, GLsizei numCoords, GLenum coordType, const void * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathSubCommandsNV (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathSubCoordsNV (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathStringNV (GLuint path, GLenum format, GLsizei length, const void * pathString);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathGlyphsNV (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathGlyphRangeNV (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLEW_API void GLEW_APIENTRY _glew_gl_glWeightPathsNV (GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyPathNV (GLuint resultPath, GLuint srcPath);
GLEW_API void GLEW_APIENTRY _glew_gl_glInterpolatePathsNV (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
GLEW_API void GLEW_APIENTRY _glew_gl_glTransformPathNV (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathParameterivNV (GLuint path, GLenum pname, const GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathParameteriNV (GLuint path, GLenum pname, GLint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathParameterfvNV (GLuint path, GLenum pname, const GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathParameterfNV (GLuint path, GLenum pname, GLfloat value);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathDashArrayNV (GLuint path, GLsizei dashCount, const GLfloat * dashArray);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathStencilFuncNV (GLenum func, GLint ref, GLuint mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathStencilDepthOffsetNV (GLfloat factor, GLfloat units);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilFillPathNV (GLuint path, GLenum fillMode, GLuint mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilStrokePathNV (GLuint path, GLint reference, GLuint mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathCoverDepthFuncNV (GLenum func);
GLEW_API void GLEW_APIENTRY _glew_gl_glCoverFillPathNV (GLuint path, GLenum coverMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glCoverStrokePathNV (GLuint path, GLenum coverMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLEW_API void GLEW_APIENTRY _glew_gl_glCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPathParameterivNV (GLuint path, GLenum pname, GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPathParameterfvNV (GLuint path, GLenum pname, GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPathCommandsNV (GLuint path, GLubyte * commands);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPathCoordsNV (GLuint path, GLfloat * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPathDashArrayNV (GLuint path, GLfloat * dashArray);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPathMetricsNV (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPathMetricRangeNV (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPathSpacingNV (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsPointInFillPathNV (GLuint path, GLuint mask, GLfloat x, GLfloat y);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsPointInStrokePathNV (GLuint path, GLfloat x, GLfloat y);
GLEW_API GLfloat GLEW_APIENTRY _glew_gl_glGetPathLengthNV (GLuint path, GLsizei startSegment, GLsizei numSegments);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glPointAlongPathNV (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixLoad3x2fNV (GLenum matrixMode, const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixLoad3x3fNV (GLenum matrixMode, const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixLoadTranspose3x3fNV (GLenum matrixMode, const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixMult3x2fNV (GLenum matrixMode, const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixMult3x3fNV (GLenum matrixMode, const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMatrixMultTranspose3x3fNV (GLenum matrixMode, const GLfloat * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilThenCoverFillPathNV (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilThenCoverStrokePathNV (GLuint path, GLint reference, GLuint mask, GLenum coverMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilThenCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLEW_API void GLEW_APIENTRY _glew_gl_glStencilThenCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glPathGlyphIndexRangeNV (GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glPathGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glPathMemoryGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void * fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramPathFragmentInputGenNV (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat * coeffs);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramResourcefvNV (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathColorGenNV (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat * coeffs);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathTexGenNV (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat * coeffs);
GLEW_API void GLEW_APIENTRY _glew_gl_glPathFogGenNV (GLenum genMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPathColorGenivNV (GLenum color, GLenum pname, GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPathColorGenfvNV (GLenum color, GLenum pname, GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPathTexGenivNV (GLenum texCoordSet, GLenum pname, GLint * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPathTexGenfvNV (GLenum texCoordSet, GLenum pname, GLfloat * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelDataRangeNV (GLenum target, GLsizei length, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glFlushPixelDataRangeNV (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameteriNV (GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameterivNV (GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPolygonModeNV (GLenum face, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glPresentFrameKeyedNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
GLEW_API void GLEW_APIENTRY _glew_gl_glPresentFrameDualFillNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVideoivNV (GLuint video_slot, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVideouivNV (GLuint video_slot, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVideoi64vNV (GLuint video_slot, GLenum pname, GLint64EXT * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVideoui64vNV (GLuint video_slot, GLenum pname, GLuint64EXT * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPrimitiveRestartNV ();
GLEW_API void GLEW_APIENTRY _glew_gl_glPrimitiveRestartIndexNV (GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glReadBufferNV (GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glCombinerParameterfvNV (GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glCombinerParameterfNV (GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glCombinerParameterivNV (GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glCombinerParameteriNV (GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glCombinerInputNV (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
GLEW_API void GLEW_APIENTRY _glew_gl_glCombinerOutputNV (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
GLEW_API void GLEW_APIENTRY _glew_gl_glFinalCombinerInputNV (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetCombinerInputParameterfvNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetCombinerInputParameterivNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetCombinerOutputParameterfvNV (GLenum stage, GLenum portion, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetCombinerOutputParameterivNV (GLenum stage, GLenum portion, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFinalCombinerInputParameterfvNV (GLenum variable, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFinalCombinerInputParameterivNV (GLenum variable, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glCombinerStageParameterfvNV (GLenum stage, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetCombinerStageParameterfvNV (GLenum stage, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferSampleLocationsfvNV (GLenum target, GLuint start, GLsizei count, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glNamedFramebufferSampleLocationsfvNV (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glResolveDepthValuesNV ();
GLEW_API void GLEW_APIENTRY _glew_gl_glMakeBufferResidentNV (GLenum target, GLenum access);
GLEW_API void GLEW_APIENTRY _glew_gl_glMakeBufferNonResidentNV (GLenum target);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsBufferResidentNV (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glMakeNamedBufferResidentNV (GLuint buffer, GLenum access);
GLEW_API void GLEW_APIENTRY _glew_gl_glMakeNamedBufferNonResidentNV (GLuint buffer);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsNamedBufferResidentNV (GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetBufferParameterui64vNV (GLenum target, GLenum pname, GLuint64EXT * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetNamedBufferParameterui64vNV (GLuint buffer, GLenum pname, GLuint64EXT * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetIntegerui64vNV (GLenum value, GLuint64EXT * result);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformui64NV (GLint location, GLuint64EXT value);
GLEW_API void GLEW_APIENTRY _glew_gl_glUniformui64vNV (GLint location, GLsizei count, const GLuint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformui64NV (GLuint program, GLint location, GLuint64EXT value);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramUniformui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureBarrierNV ();
GLEW_API void GLEW_APIENTRY _glew_gl_glTexImage2DMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexImage3DMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureImage2DMultisampleNV (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureImage3DMultisampleNV (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureImage2DMultisampleCoverageNV (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureImage3DMultisampleCoverageNV (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginTransformFeedbackNV (GLenum primitiveMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndTransformFeedbackNV ();
GLEW_API void GLEW_APIENTRY _glew_gl_glTransformFeedbackAttribsNV (GLsizei count, const GLint * attribs, GLenum bufferMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindBufferRangeNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindBufferOffsetNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindBufferBaseNV (GLenum target, GLuint index, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glTransformFeedbackVaryingsNV (GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glActiveVaryingNV (GLuint program, const GLchar * name);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetVaryingLocationNV (GLuint program, const GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetActiveVaryingNV (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTransformFeedbackVaryingNV (GLuint program, GLuint index, GLint * location);
GLEW_API void GLEW_APIENTRY _glew_gl_glTransformFeedbackStreamAttribsNV (GLsizei count, const GLint * attribs, GLsizei nbuffers, const GLint * bufstreams, GLenum bufferMode);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindTransformFeedbackNV (GLenum target, GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteTransformFeedbacksNV (GLsizei n, const GLuint * ids);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenTransformFeedbacksNV (GLsizei n, GLuint * ids);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsTransformFeedbackNV (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glPauseTransformFeedbackNV ();
GLEW_API void GLEW_APIENTRY _glew_gl_glResumeTransformFeedbackNV ();
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawTransformFeedbackNV (GLenum mode, GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glVDPAUInitNV (const void * vdpDevice, const void * getProcAddress);
GLEW_API void GLEW_APIENTRY _glew_gl_glVDPAUFiniNV ();
GLEW_API GLvdpauSurfaceNV GLEW_APIENTRY _glew_gl_glVDPAURegisterVideoSurfaceNV (const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
GLEW_API GLvdpauSurfaceNV GLEW_APIENTRY _glew_gl_glVDPAURegisterOutputSurfaceNV (const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glVDPAUIsSurfaceNV (GLvdpauSurfaceNV surface);
GLEW_API void GLEW_APIENTRY _glew_gl_glVDPAUUnregisterSurfaceNV (GLvdpauSurfaceNV surface);
GLEW_API void GLEW_APIENTRY _glew_gl_glVDPAUGetSurfaceivNV (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glVDPAUSurfaceAccessNV (GLvdpauSurfaceNV surface, GLenum access);
GLEW_API void GLEW_APIENTRY _glew_gl_glVDPAUMapSurfacesNV (GLsizei numSurfaces, const GLvdpauSurfaceNV * surfaces);
GLEW_API void GLEW_APIENTRY _glew_gl_glVDPAUUnmapSurfacesNV (GLsizei numSurface, const GLvdpauSurfaceNV * surfaces);
GLEW_API void GLEW_APIENTRY _glew_gl_glFlushVertexArrayRangeNV ();
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexArrayRangeNV (GLsizei length, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL1i64NV (GLuint index, GLint64EXT x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL2i64NV (GLuint index, GLint64EXT x, GLint64EXT y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL3i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL4i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL1i64vNV (GLuint index, const GLint64EXT * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL2i64vNV (GLuint index, const GLint64EXT * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL3i64vNV (GLuint index, const GLint64EXT * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL4i64vNV (GLuint index, const GLint64EXT * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL1ui64NV (GLuint index, GLuint64EXT x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL2ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL3ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL4ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL1ui64vNV (GLuint index, const GLuint64EXT * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL2ui64vNV (GLuint index, const GLuint64EXT * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL3ui64vNV (GLuint index, const GLuint64EXT * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribL4ui64vNV (GLuint index, const GLuint64EXT * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribLi64vNV (GLuint index, GLenum pname, GLint64EXT * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribLui64vNV (GLuint index, GLenum pname, GLuint64EXT * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribLFormatNV (GLuint index, GLint size, GLenum type, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glBufferAddressRangeNV (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexFormatNV (GLint size, GLenum type, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormalFormatNV (GLenum type, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorFormatNV (GLint size, GLenum type, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glIndexFormatNV (GLenum type, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoordFormatNV (GLint size, GLenum type, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glEdgeFlagFormatNV (GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glSecondaryColorFormatNV (GLint size, GLenum type, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogCoordFormatNV (GLenum type, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribFormatNV (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribIFormatNV (GLuint index, GLint size, GLenum type, GLsizei stride);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetIntegerui64i_vNV (GLenum value, GLuint index, GLuint64EXT * result);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glAreProgramsResidentNV (GLsizei n, const GLuint * programs, GLboolean * residences);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindProgramNV (GLenum target, GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteProgramsNV (GLsizei n, const GLuint * programs);
GLEW_API void GLEW_APIENTRY _glew_gl_glExecuteProgramNV (GLenum target, GLuint id, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenProgramsNV (GLsizei n, GLuint * programs);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramParameterdvNV (GLenum target, GLuint index, GLenum pname, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramivNV (GLuint id, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramStringNV (GLuint id, GLenum pname, GLubyte * program);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTrackMatrixivNV (GLenum target, GLuint address, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribdvNV (GLuint index, GLenum pname, GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribfvNV (GLuint index, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribivNV (GLuint index, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribPointervNV (GLuint index, GLenum pname, void ** pointer);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsProgramNV (GLuint id);
GLEW_API void GLEW_APIENTRY _glew_gl_glLoadProgramNV (GLenum target, GLuint id, GLsizei len, const GLubyte * program);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramParameter4dNV (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramParameter4dvNV (GLenum target, GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramParameter4fNV (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramParameter4fvNV (GLenum target, GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramParameters4dvNV (GLenum target, GLuint index, GLsizei count, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramParameters4fvNV (GLenum target, GLuint index, GLsizei count, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glRequestResidentProgramsNV (GLsizei n, const GLuint * programs);
GLEW_API void GLEW_APIENTRY _glew_gl_glTrackMatrixNV (GLenum target, GLuint address, GLenum matrix, GLenum transform);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribPointerNV (GLuint index, GLint fsize, GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1dNV (GLuint index, GLdouble x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1dvNV (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1fNV (GLuint index, GLfloat x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1fvNV (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1sNV (GLuint index, GLshort x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib1svNV (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2dNV (GLuint index, GLdouble x, GLdouble y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2dvNV (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2fNV (GLuint index, GLfloat x, GLfloat y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2fvNV (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2sNV (GLuint index, GLshort x, GLshort y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib2svNV (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3dvNV (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3fvNV (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3sNV (GLuint index, GLshort x, GLshort y, GLshort z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib3svNV (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4dvNV (GLuint index, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4fvNV (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4sNV (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4svNV (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4ubNV (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttrib4ubvNV (GLuint index, const GLubyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs1dvNV (GLuint index, GLsizei count, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs1fvNV (GLuint index, GLsizei count, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs1svNV (GLuint index, GLsizei count, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs2dvNV (GLuint index, GLsizei count, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs2fvNV (GLuint index, GLsizei count, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs2svNV (GLuint index, GLsizei count, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs3dvNV (GLuint index, GLsizei count, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs3fvNV (GLuint index, GLsizei count, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs3svNV (GLuint index, GLsizei count, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs4dvNV (GLuint index, GLsizei count, const GLdouble * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs4fvNV (GLuint index, GLsizei count, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs4svNV (GLuint index, GLsizei count, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribs4ubvNV (GLuint index, GLsizei count, const GLubyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI1iEXT (GLuint index, GLint x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI2iEXT (GLuint index, GLint x, GLint y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI1uiEXT (GLuint index, GLuint x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI1ivEXT (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI2ivEXT (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI3ivEXT (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4ivEXT (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI1uivEXT (GLuint index, const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI2uivEXT (GLuint index, const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI3uivEXT (GLuint index, const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4uivEXT (GLuint index, const GLuint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4bvEXT (GLuint index, const GLbyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4svEXT (GLuint index, const GLshort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4ubvEXT (GLuint index, const GLubyte * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribI4usvEXT (GLuint index, const GLushort * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glBeginVideoCaptureNV (GLuint video_capture_slot);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindVideoCaptureStreamBufferNV (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindVideoCaptureStreamTextureNV (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndVideoCaptureNV (GLuint video_capture_slot);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVideoCaptureivNV (GLuint video_capture_slot, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVideoCaptureStreamivNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVideoCaptureStreamfvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetVideoCaptureStreamdvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble * params);
GLEW_API GLenum GLEW_APIENTRY _glew_gl_glVideoCaptureNV (GLuint video_capture_slot, GLuint * sequence_num, GLuint64EXT * capture_time);
GLEW_API void GLEW_APIENTRY _glew_gl_glVideoCaptureStreamParameterivNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glVideoCaptureStreamParameterfvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glVideoCaptureStreamParameterdvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glViewportArrayvNV (GLuint first, GLsizei count, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glViewportIndexedfNV (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
GLEW_API void GLEW_APIENTRY _glew_gl_glViewportIndexedfvNV (GLuint index, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glScissorArrayvNV (GLuint first, GLsizei count, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glScissorIndexedNV (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glScissorIndexedvNV (GLuint index, const GLint * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glDepthRangeArrayfvNV (GLuint first, GLsizei count, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glDepthRangeIndexedfNV (GLuint index, GLfloat n, GLfloat f);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFloati_vNV (GLenum target, GLuint index, GLfloat * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableiNV (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableiNV (GLenum target, GLuint index);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsEnablediNV (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glEGLImageTargetTexture2DOES (GLenum target, GLeglImageOES image);
GLEW_API void GLEW_APIENTRY _glew_gl_glEGLImageTargetRenderbufferStorageOES (GLenum target, GLeglImageOES image);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1bOES (GLenum texture, GLbyte s);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1bvOES (GLenum texture, const GLbyte * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2bOES (GLenum texture, GLbyte s, GLbyte t);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2bvOES (GLenum texture, const GLbyte * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3bOES (GLenum texture, GLbyte s, GLbyte t, GLbyte r);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3bvOES (GLenum texture, const GLbyte * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4bOES (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4bvOES (GLenum texture, const GLbyte * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord1bOES (GLbyte s);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord1bvOES (const GLbyte * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2bOES (GLbyte s, GLbyte t);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2bvOES (const GLbyte * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord3bOES (GLbyte s, GLbyte t, GLbyte r);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord3bvOES (const GLbyte * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord4bOES (GLbyte s, GLbyte t, GLbyte r, GLbyte q);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord4bvOES (const GLbyte * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex2bOES (GLbyte x, GLbyte y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex2bvOES (const GLbyte * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex3bOES (GLbyte x, GLbyte y, GLbyte z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex3bvOES (const GLbyte * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex4bOES (GLbyte x, GLbyte y, GLbyte z, GLbyte w);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex4bvOES (const GLbyte * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyImageSubDataOES (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableiOES (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableiOES (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationiOES (GLuint buf, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendEquationSeparateiOES (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFunciOES (GLuint buf, GLenum src, GLenum dst);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendFuncSeparateiOES (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorMaskiOES (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsEnablediOES (GLenum target, GLuint index);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsBaseVertexOES (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawRangeElementsBaseVertexOES (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawElementsInstancedBaseVertexOES (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiDrawElementsBaseVertexOES (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex);
GLEW_API void GLEW_APIENTRY _glew_gl_glAlphaFuncxOES (GLenum func, GLfixed ref);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearColorxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearDepthxOES (GLfixed depth);
GLEW_API void GLEW_APIENTRY _glew_gl_glClipPlanexOES (GLenum plane, const GLfixed * equation);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor4xOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glDepthRangexOES (GLfixed n, GLfixed f);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogxOES (GLenum pname, GLfixed param);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogxvOES (GLenum pname, const GLfixed * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glFrustumxOES (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetClipPlanexOES (GLenum plane, GLfixed * equation);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFixedvOES (GLenum pname, GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexEnvxvOES (GLenum target, GLenum pname, GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexParameterxvOES (GLenum target, GLenum pname, GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glLightModelxOES (GLenum pname, GLfixed param);
GLEW_API void GLEW_APIENTRY _glew_gl_glLightModelxvOES (GLenum pname, const GLfixed * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glLightxOES (GLenum light, GLenum pname, GLfixed param);
GLEW_API void GLEW_APIENTRY _glew_gl_glLightxvOES (GLenum light, GLenum pname, const GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glLineWidthxOES (GLfixed width);
GLEW_API void GLEW_APIENTRY _glew_gl_glLoadMatrixxOES (const GLfixed * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMaterialxOES (GLenum face, GLenum pname, GLfixed param);
GLEW_API void GLEW_APIENTRY _glew_gl_glMaterialxvOES (GLenum face, GLenum pname, const GLfixed * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultMatrixxOES (const GLfixed * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4xOES (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormal3xOES (GLfixed nx, GLfixed ny, GLfixed nz);
GLEW_API void GLEW_APIENTRY _glew_gl_glOrthoxOES (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameterxvOES (GLenum pname, const GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointSizexOES (GLfixed size);
GLEW_API void GLEW_APIENTRY _glew_gl_glPolygonOffsetxOES (GLfixed factor, GLfixed units);
GLEW_API void GLEW_APIENTRY _glew_gl_glRotatexOES (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
GLEW_API void GLEW_APIENTRY _glew_gl_glScalexOES (GLfixed x, GLfixed y, GLfixed z);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexEnvxOES (GLenum target, GLenum pname, GLfixed param);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexEnvxvOES (GLenum target, GLenum pname, const GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexParameterxOES (GLenum target, GLenum pname, GLfixed param);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexParameterxvOES (GLenum target, GLenum pname, const GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTranslatexOES (GLfixed x, GLfixed y, GLfixed z);
GLEW_API void GLEW_APIENTRY _glew_gl_glAccumxOES (GLenum op, GLfixed value);
GLEW_API void GLEW_APIENTRY _glew_gl_glBitmapxOES (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte * bitmap);
GLEW_API void GLEW_APIENTRY _glew_gl_glBlendColorxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearAccumxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor3xOES (GLfixed red, GLfixed green, GLfixed blue);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor3xvOES (const GLfixed * components);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor4xvOES (const GLfixed * components);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionParameterxOES (GLenum target, GLenum pname, GLfixed param);
GLEW_API void GLEW_APIENTRY _glew_gl_glConvolutionParameterxvOES (GLenum target, GLenum pname, const GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glEvalCoord1xOES (GLfixed u);
GLEW_API void GLEW_APIENTRY _glew_gl_glEvalCoord1xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glEvalCoord2xOES (GLfixed u, GLfixed v);
GLEW_API void GLEW_APIENTRY _glew_gl_glEvalCoord2xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glFeedbackBufferxOES (GLsizei n, GLenum type, const GLfixed * buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetConvolutionParameterxvOES (GLenum target, GLenum pname, GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetHistogramParameterxvOES (GLenum target, GLenum pname, GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetLightxOES (GLenum light, GLenum pname, GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMapxvOES (GLenum target, GLenum query, GLfixed * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetMaterialxOES (GLenum face, GLenum pname, GLfixed param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPixelMapxv (GLenum map, GLint size, GLfixed * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexGenxvOES (GLenum coord, GLenum pname, GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexLevelParameterxvOES (GLenum target, GLint level, GLenum pname, GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glIndexxOES (GLfixed component);
GLEW_API void GLEW_APIENTRY _glew_gl_glIndexxvOES (const GLfixed * component);
GLEW_API void GLEW_APIENTRY _glew_gl_glLoadTransposeMatrixxOES (const GLfixed * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMap1xOES (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
GLEW_API void GLEW_APIENTRY _glew_gl_glMap2xOES (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
GLEW_API void GLEW_APIENTRY _glew_gl_glMapGrid1xOES (GLint n, GLfixed u1, GLfixed u2);
GLEW_API void GLEW_APIENTRY _glew_gl_glMapGrid2xOES (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultTransposeMatrixxOES (const GLfixed * m);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1xOES (GLenum texture, GLfixed s);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord1xvOES (GLenum texture, const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2xOES (GLenum texture, GLfixed s, GLfixed t);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord2xvOES (GLenum texture, const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3xOES (GLenum texture, GLfixed s, GLfixed t, GLfixed r);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord3xvOES (GLenum texture, const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glMultiTexCoord4xvOES (GLenum texture, const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormal3xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glPassThroughxOES (GLfixed token);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelMapx (GLenum map, GLint size, const GLfixed * values);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelStorex (GLenum pname, GLfixed param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelTransferxOES (GLenum pname, GLfixed param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelZoomxOES (GLfixed xfactor, GLfixed yfactor);
GLEW_API void GLEW_APIENTRY _glew_gl_glPrioritizeTexturesxOES (GLsizei n, const GLuint * textures, const GLfixed * priorities);
GLEW_API void GLEW_APIENTRY _glew_gl_glRasterPos2xOES (GLfixed x, GLfixed y);
GLEW_API void GLEW_APIENTRY _glew_gl_glRasterPos2xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glRasterPos3xOES (GLfixed x, GLfixed y, GLfixed z);
GLEW_API void GLEW_APIENTRY _glew_gl_glRasterPos3xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glRasterPos4xOES (GLfixed x, GLfixed y, GLfixed z, GLfixed w);
GLEW_API void GLEW_APIENTRY _glew_gl_glRasterPos4xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glRectxOES (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
GLEW_API void GLEW_APIENTRY _glew_gl_glRectxvOES (const GLfixed * v1, const GLfixed * v2);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord1xOES (GLfixed s);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord1xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2xOES (GLfixed s, GLfixed t);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord3xOES (GLfixed s, GLfixed t, GLfixed r);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord3xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord4xOES (GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord4xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexGenxOES (GLenum coord, GLenum pname, GLfixed param);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexGenxvOES (GLenum coord, GLenum pname, const GLfixed * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex2xOES (GLfixed x);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex2xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex3xOES (GLfixed x, GLfixed y);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex3xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex4xOES (GLfixed x, GLfixed y, GLfixed z);
GLEW_API void GLEW_APIENTRY _glew_gl_glVertex4xvOES (const GLfixed * coords);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTextureOES (GLenum target, GLenum attachment, GLuint texture, GLint level);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetProgramBinaryOES (GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
GLEW_API void GLEW_APIENTRY _glew_gl_glProgramBinaryOES (GLuint program, GLenum binaryFormat, const void * binary, GLint length);
GLEW_API void * GLEW_APIENTRY _glew_gl_glMapBufferOES (GLenum target, GLenum access);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glUnmapBufferOES (GLenum target);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetBufferPointervOES (GLenum target, GLenum pname, void ** params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPrimitiveBoundingBoxOES (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLEW_API GLbitfield GLEW_APIENTRY _glew_gl_glQueryMatrixxOES (GLfixed * mantissa, GLint * exponent);
GLEW_API void GLEW_APIENTRY _glew_gl_glMinSampleShadingOES (GLfloat value);
GLEW_API void GLEW_APIENTRY _glew_gl_glClearDepthfOES (GLclampf depth);
GLEW_API void GLEW_APIENTRY _glew_gl_glClipPlanefOES (GLenum plane, const GLfloat * equation);
GLEW_API void GLEW_APIENTRY _glew_gl_glDepthRangefOES (GLclampf n, GLclampf f);
GLEW_API void GLEW_APIENTRY _glew_gl_glFrustumfOES (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetClipPlanefOES (GLenum plane, GLfloat * equation);
GLEW_API void GLEW_APIENTRY _glew_gl_glOrthofOES (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
GLEW_API void GLEW_APIENTRY _glew_gl_glPatchParameteriOES (GLenum pname, GLint value);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexImage3DOES (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexImage3DOES (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glCompressedTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTexture3DOES (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexParameterIivOES (GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexParameterIuivOES (GLenum target, GLenum pname, const GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexParameterIivOES (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexParameterIuivOES (GLenum target, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glSamplerParameterIivOES (GLuint sampler, GLenum pname, const GLint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glSamplerParameterIuivOES (GLuint sampler, GLenum pname, const GLuint * param);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSamplerParameterIivOES (GLuint sampler, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSamplerParameterIuivOES (GLuint sampler, GLenum pname, GLuint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexBufferOES (GLenum target, GLenum internalformat, GLuint buffer);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexBufferRangeOES (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexStorage3DMultisampleOES (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureViewOES (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLEW_API void GLEW_APIENTRY _glew_gl_glBindVertexArrayOES (GLuint array);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteVertexArraysOES (GLsizei n, const GLuint * arrays);
GLEW_API void GLEW_APIENTRY _glew_gl_glGenVertexArraysOES (GLsizei n, GLuint * arrays);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsVertexArrayOES (GLuint array);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTextureMultiviewOVR (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
GLEW_API void GLEW_APIENTRY _glew_gl_glFramebufferTextureMultisampleMultiviewOVR (GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews);
GLEW_API void GLEW_APIENTRY _glew_gl_glHintPGI (GLenum target, GLint mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glAlphaFuncQCOM (GLenum func, GLclampf ref);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetDriverControlsQCOM (GLint * num, GLsizei size, GLuint * driverControls);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetDriverControlStringQCOM (GLuint driverControl, GLsizei bufSize, GLsizei * length, GLchar * driverControlString);
GLEW_API void GLEW_APIENTRY _glew_gl_glEnableDriverControlQCOM (GLuint driverControl);
GLEW_API void GLEW_APIENTRY _glew_gl_glDisableDriverControlQCOM (GLuint driverControl);
GLEW_API void GLEW_APIENTRY _glew_gl_glExtGetTexturesQCOM (GLuint * textures, GLint maxTextures, GLint * numTextures);
GLEW_API void GLEW_APIENTRY _glew_gl_glExtGetBuffersQCOM (GLuint * buffers, GLint maxBuffers, GLint * numBuffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glExtGetRenderbuffersQCOM (GLuint * renderbuffers, GLint maxRenderbuffers, GLint * numRenderbuffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glExtGetFramebuffersQCOM (GLuint * framebuffers, GLint maxFramebuffers, GLint * numFramebuffers);
GLEW_API void GLEW_APIENTRY _glew_gl_glExtGetTexLevelParameterivQCOM (GLuint texture, GLenum face, GLint level, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glExtTexObjectStateOverrideiQCOM (GLenum target, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glExtGetTexSubImageQCOM (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void * texels);
GLEW_API void GLEW_APIENTRY _glew_gl_glExtGetBufferPointervQCOM (GLenum target, void ** params);
GLEW_API void GLEW_APIENTRY _glew_gl_glExtGetShadersQCOM (GLuint * shaders, GLint maxShaders, GLint * numShaders);
GLEW_API void GLEW_APIENTRY _glew_gl_glExtGetProgramsQCOM (GLuint * programs, GLint maxPrograms, GLint * numPrograms);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glExtIsProgramBinaryQCOM (GLuint program);
GLEW_API void GLEW_APIENTRY _glew_gl_glExtGetProgramBinarySourceQCOM (GLuint program, GLenum shadertype, GLchar * source, GLint * length);
GLEW_API void GLEW_APIENTRY _glew_gl_glStartTilingQCOM (GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
GLEW_API void GLEW_APIENTRY _glew_gl_glEndTilingQCOM (GLbitfield preserveMask);
GLEW_API void GLEW_APIENTRY _glew_gl_glDetailTexFuncSGIS (GLenum target, GLsizei n, const GLfloat * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetDetailTexFuncSGIS (GLenum target, GLfloat * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glFogFuncSGIS (GLsizei n, const GLfloat * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFogFuncSGIS (GLfloat * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glSampleMaskSGIS (GLclampf value, GLboolean invert);
GLEW_API void GLEW_APIENTRY _glew_gl_glSamplePatternSGIS (GLenum pattern);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelTexGenParameteriSGIS (GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelTexGenParameterivSGIS (GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelTexGenParameterfSGIS (GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelTexGenParameterfvSGIS (GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPixelTexGenParameterivSGIS (GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetPixelTexGenParameterfvSGIS (GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameterfSGIS (GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glPointParameterfvSGIS (GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glSharpenTexFuncSGIS (GLenum target, GLsizei n, const GLfloat * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetSharpenTexFuncSGIS (GLenum target, GLfloat * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexImage4DSGIS (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexSubImage4DSGIS (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void * pixels);
GLEW_API void GLEW_APIENTRY _glew_gl_glTextureColorMaskSGIS (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetTexFilterFuncSGIS (GLenum target, GLenum filter, GLfloat * weights);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexFilterFuncSGIS (GLenum target, GLenum filter, GLsizei n, const GLfloat * weights);
GLEW_API void GLEW_APIENTRY _glew_gl_glAsyncMarkerSGIX (GLuint marker);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glFinishAsyncSGIX (GLuint * markerp);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glPollAsyncSGIX (GLuint * markerp);
GLEW_API GLuint GLEW_APIENTRY _glew_gl_glGenAsyncMarkersSGIX (GLsizei range);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeleteAsyncMarkersSGIX (GLuint marker, GLsizei range);
GLEW_API GLboolean GLEW_APIENTRY _glew_gl_glIsAsyncMarkerSGIX (GLuint marker);
GLEW_API void GLEW_APIENTRY _glew_gl_glFlushRasterSGIX ();
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentColorMaterialSGIX (GLenum face, GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentLightfSGIX (GLenum light, GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentLightfvSGIX (GLenum light, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentLightiSGIX (GLenum light, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentLightivSGIX (GLenum light, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentLightModelfSGIX (GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentLightModelfvSGIX (GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentLightModeliSGIX (GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentLightModelivSGIX (GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentMaterialfSGIX (GLenum face, GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentMaterialfvSGIX (GLenum face, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentMaterialiSGIX (GLenum face, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glFragmentMaterialivSGIX (GLenum face, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFragmentLightfvSGIX (GLenum light, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFragmentLightivSGIX (GLenum light, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFragmentMaterialfvSGIX (GLenum face, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetFragmentMaterialivSGIX (GLenum face, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glLightEnviSGIX (GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glFrameZoomSGIX (GLint factor);
GLEW_API void GLEW_APIENTRY _glew_gl_glIglooInterfaceSGIX (GLenum pname, const void * params);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glGetInstrumentsSGIX ();
GLEW_API void GLEW_APIENTRY _glew_gl_glInstrumentsBufferSGIX (GLsizei size, GLint * buffer);
GLEW_API GLint GLEW_APIENTRY _glew_gl_glPollInstrumentsSGIX (GLint * marker_p);
GLEW_API void GLEW_APIENTRY _glew_gl_glReadInstrumentsSGIX (GLint marker);
GLEW_API void GLEW_APIENTRY _glew_gl_glStartInstrumentsSGIX ();
GLEW_API void GLEW_APIENTRY _glew_gl_glStopInstrumentsSGIX (GLint marker);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetListParameterfvSGIX (GLuint list, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetListParameterivSGIX (GLuint list, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glListParameterfSGIX (GLuint list, GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glListParameterfvSGIX (GLuint list, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glListParameteriSGIX (GLuint list, GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glListParameterivSGIX (GLuint list, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glPixelTexGenSGIX (GLenum mode);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeformationMap3dSGIX (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeformationMap3fSGIX (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat * points);
GLEW_API void GLEW_APIENTRY _glew_gl_glDeformSGIX (GLbitfield mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glLoadIdentityDeformationMapSGIX (GLbitfield mask);
GLEW_API void GLEW_APIENTRY _glew_gl_glReferencePlaneSGIX (const GLdouble * equation);
GLEW_API void GLEW_APIENTRY _glew_gl_glSpriteParameterfSGIX (GLenum pname, GLfloat param);
GLEW_API void GLEW_APIENTRY _glew_gl_glSpriteParameterfvSGIX (GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glSpriteParameteriSGIX (GLenum pname, GLint param);
GLEW_API void GLEW_APIENTRY _glew_gl_glSpriteParameterivSGIX (GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glTagSampleBufferSGIX ();
GLEW_API void GLEW_APIENTRY _glew_gl_glColorTableSGI (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorTableParameterfvSGI (GLenum target, GLenum pname, const GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glColorTableParameterivSGI (GLenum target, GLenum pname, const GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glCopyColorTableSGI (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetColorTableSGI (GLenum target, GLenum format, GLenum type, void * table);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetColorTableParameterfvSGI (GLenum target, GLenum pname, GLfloat * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glGetColorTableParameterivSGI (GLenum target, GLenum pname, GLint * params);
GLEW_API void GLEW_APIENTRY _glew_gl_glFinishTextureSUNX ();
GLEW_API void GLEW_APIENTRY _glew_gl_glGlobalAlphaFactorbSUN (GLbyte factor);
GLEW_API void GLEW_APIENTRY _glew_gl_glGlobalAlphaFactorsSUN (GLshort factor);
GLEW_API void GLEW_APIENTRY _glew_gl_glGlobalAlphaFactoriSUN (GLint factor);
GLEW_API void GLEW_APIENTRY _glew_gl_glGlobalAlphaFactorfSUN (GLfloat factor);
GLEW_API void GLEW_APIENTRY _glew_gl_glGlobalAlphaFactordSUN (GLdouble factor);
GLEW_API void GLEW_APIENTRY _glew_gl_glGlobalAlphaFactorubSUN (GLubyte factor);
GLEW_API void GLEW_APIENTRY _glew_gl_glGlobalAlphaFactorusSUN (GLushort factor);
GLEW_API void GLEW_APIENTRY _glew_gl_glGlobalAlphaFactoruiSUN (GLuint factor);
GLEW_API void GLEW_APIENTRY _glew_gl_glDrawMeshArraysSUN (GLenum mode, GLint first, GLsizei count, GLsizei width);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiSUN (GLuint code);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeusSUN (GLushort code);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeubSUN (GLubyte code);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuivSUN (const GLuint * code);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeusvSUN (const GLushort * code);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeubvSUN (const GLubyte * code);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodePointerSUN (GLenum type, GLsizei stride, const void ** pointer);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor4ubVertex2fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor4ubVertex2fvSUN (const GLubyte * c, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor4ubVertex3fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor4ubVertex3fvSUN (const GLubyte * c, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor3fVertex3fvSUN (const GLfloat * c, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormal3fVertex3fSUN (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glNormal3fVertex3fvSUN (const GLfloat * n, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor4fNormal3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glColor4fNormal3fVertex3fvSUN (const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2fVertex3fSUN (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2fVertex3fvSUN (const GLfloat * tc, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord4fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord4fVertex4fvSUN (const GLfloat * tc, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2fColor4ubVertex3fSUN (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2fColor4ubVertex3fvSUN (const GLfloat * tc, const GLubyte * c, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2fColor3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2fColor3fVertex3fvSUN (const GLfloat * tc, const GLfloat * c, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2fNormal3fVertex3fvSUN (const GLfloat * tc, const GLfloat * n, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2fColor4fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord2fColor4fNormal3fVertex3fvSUN (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord4fColor4fNormal3fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLEW_API void GLEW_APIENTRY _glew_gl_glTexCoord4fColor4fNormal3fVertex4fvSUN (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiVertex3fSUN (GLuint rc, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiVertex3fvSUN (const GLuint * rc, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiColor4ubVertex3fSUN (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiColor4ubVertex3fvSUN (const GLuint * rc, const GLubyte * c, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiColor3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiColor3fVertex3fvSUN (const GLuint * rc, const GLfloat * c, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiNormal3fVertex3fSUN (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiNormal3fVertex3fvSUN (const GLuint * rc, const GLfloat * n, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiColor4fNormal3fVertex3fvSUN (const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiTexCoord2fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiTexCoord2fVertex3fvSUN (const GLuint * rc, const GLfloat * tc, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN (const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLEW_API void GLEW_APIENTRY _glew_gl_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN (const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define glDrawArrays _glew_gl_glDrawArrays
#define glDrawElements _glew_gl_glDrawElements
#define glGetPointerv _glew_gl_glGetPointerv
#define glPolygonOffset _glew_gl_glPolygonOffset
#define glCopyTexImage1D _glew_gl_glCopyTexImage1D
#define glCopyTexImage2D _glew_gl_glCopyTexImage2D
#define glCopyTexSubImage1D _glew_gl_glCopyTexSubImage1D
#define glCopyTexSubImage2D _glew_gl_glCopyTexSubImage2D
#define glTexSubImage1D _glew_gl_glTexSubImage1D
#define glTexSubImage2D _glew_gl_glTexSubImage2D
#define glBindTexture _glew_gl_glBindTexture
#define glDeleteTextures _glew_gl_glDeleteTextures
#define glGenTextures _glew_gl_glGenTextures
#define glIsTexture _glew_gl_glIsTexture
#define glArrayElement _glew_gl_glArrayElement
#define glColorPointer _glew_gl_glColorPointer
#define glDisableClientState _glew_gl_glDisableClientState
#define glEdgeFlagPointer _glew_gl_glEdgeFlagPointer
#define glEnableClientState _glew_gl_glEnableClientState
#define glIndexPointer _glew_gl_glIndexPointer
#define glInterleavedArrays _glew_gl_glInterleavedArrays
#define glNormalPointer _glew_gl_glNormalPointer
#define glTexCoordPointer _glew_gl_glTexCoordPointer
#define glVertexPointer _glew_gl_glVertexPointer
#define glAreTexturesResident _glew_gl_glAreTexturesResident
#define glPrioritizeTextures _glew_gl_glPrioritizeTextures
#define glIndexub _glew_gl_glIndexub
#define glIndexubv _glew_gl_glIndexubv
#define glPopClientAttrib _glew_gl_glPopClientAttrib
#define glPushClientAttrib _glew_gl_glPushClientAttrib
#define glDrawRangeElements _glew_gl_glDrawRangeElements
#define glTexImage3D _glew_gl_glTexImage3D
#define glTexSubImage3D _glew_gl_glTexSubImage3D
#define glCopyTexSubImage3D _glew_gl_glCopyTexSubImage3D
#define glActiveTexture _glew_gl_glActiveTexture
#define glSampleCoverage _glew_gl_glSampleCoverage
#define glCompressedTexImage3D _glew_gl_glCompressedTexImage3D
#define glCompressedTexImage2D _glew_gl_glCompressedTexImage2D
#define glCompressedTexImage1D _glew_gl_glCompressedTexImage1D
#define glCompressedTexSubImage3D _glew_gl_glCompressedTexSubImage3D
#define glCompressedTexSubImage2D _glew_gl_glCompressedTexSubImage2D
#define glCompressedTexSubImage1D _glew_gl_glCompressedTexSubImage1D
#define glGetCompressedTexImage _glew_gl_glGetCompressedTexImage
#define glClientActiveTexture _glew_gl_glClientActiveTexture
#define glMultiTexCoord1d _glew_gl_glMultiTexCoord1d
#define glMultiTexCoord1dv _glew_gl_glMultiTexCoord1dv
#define glMultiTexCoord1f _glew_gl_glMultiTexCoord1f
#define glMultiTexCoord1fv _glew_gl_glMultiTexCoord1fv
#define glMultiTexCoord1i _glew_gl_glMultiTexCoord1i
#define glMultiTexCoord1iv _glew_gl_glMultiTexCoord1iv
#define glMultiTexCoord1s _glew_gl_glMultiTexCoord1s
#define glMultiTexCoord1sv _glew_gl_glMultiTexCoord1sv
#define glMultiTexCoord2d _glew_gl_glMultiTexCoord2d
#define glMultiTexCoord2dv _glew_gl_glMultiTexCoord2dv
#define glMultiTexCoord2f _glew_gl_glMultiTexCoord2f
#define glMultiTexCoord2fv _glew_gl_glMultiTexCoord2fv
#define glMultiTexCoord2i _glew_gl_glMultiTexCoord2i
#define glMultiTexCoord2iv _glew_gl_glMultiTexCoord2iv
#define glMultiTexCoord2s _glew_gl_glMultiTexCoord2s
#define glMultiTexCoord2sv _glew_gl_glMultiTexCoord2sv
#define glMultiTexCoord3d _glew_gl_glMultiTexCoord3d
#define glMultiTexCoord3dv _glew_gl_glMultiTexCoord3dv
#define glMultiTexCoord3f _glew_gl_glMultiTexCoord3f
#define glMultiTexCoord3fv _glew_gl_glMultiTexCoord3fv
#define glMultiTexCoord3i _glew_gl_glMultiTexCoord3i
#define glMultiTexCoord3iv _glew_gl_glMultiTexCoord3iv
#define glMultiTexCoord3s _glew_gl_glMultiTexCoord3s
#define glMultiTexCoord3sv _glew_gl_glMultiTexCoord3sv
#define glMultiTexCoord4d _glew_gl_glMultiTexCoord4d
#define glMultiTexCoord4dv _glew_gl_glMultiTexCoord4dv
#define glMultiTexCoord4f _glew_gl_glMultiTexCoord4f
#define glMultiTexCoord4fv _glew_gl_glMultiTexCoord4fv
#define glMultiTexCoord4i _glew_gl_glMultiTexCoord4i
#define glMultiTexCoord4iv _glew_gl_glMultiTexCoord4iv
#define glMultiTexCoord4s _glew_gl_glMultiTexCoord4s
#define glMultiTexCoord4sv _glew_gl_glMultiTexCoord4sv
#define glLoadTransposeMatrixf _glew_gl_glLoadTransposeMatrixf
#define glLoadTransposeMatrixd _glew_gl_glLoadTransposeMatrixd
#define glMultTransposeMatrixf _glew_gl_glMultTransposeMatrixf
#define glMultTransposeMatrixd _glew_gl_glMultTransposeMatrixd
#define glBlendFuncSeparate _glew_gl_glBlendFuncSeparate
#define glMultiDrawArrays _glew_gl_glMultiDrawArrays
#define glMultiDrawElements _glew_gl_glMultiDrawElements
#define glPointParameterf _glew_gl_glPointParameterf
#define glPointParameterfv _glew_gl_glPointParameterfv
#define glPointParameteri _glew_gl_glPointParameteri
#define glPointParameteriv _glew_gl_glPointParameteriv
#define glFogCoordf _glew_gl_glFogCoordf
#define glFogCoordfv _glew_gl_glFogCoordfv
#define glFogCoordd _glew_gl_glFogCoordd
#define glFogCoorddv _glew_gl_glFogCoorddv
#define glFogCoordPointer _glew_gl_glFogCoordPointer
#define glSecondaryColor3b _glew_gl_glSecondaryColor3b
#define glSecondaryColor3bv _glew_gl_glSecondaryColor3bv
#define glSecondaryColor3d _glew_gl_glSecondaryColor3d
#define glSecondaryColor3dv _glew_gl_glSecondaryColor3dv
#define glSecondaryColor3f _glew_gl_glSecondaryColor3f
#define glSecondaryColor3fv _glew_gl_glSecondaryColor3fv
#define glSecondaryColor3i _glew_gl_glSecondaryColor3i
#define glSecondaryColor3iv _glew_gl_glSecondaryColor3iv
#define glSecondaryColor3s _glew_gl_glSecondaryColor3s
#define glSecondaryColor3sv _glew_gl_glSecondaryColor3sv
#define glSecondaryColor3ub _glew_gl_glSecondaryColor3ub
#define glSecondaryColor3ubv _glew_gl_glSecondaryColor3ubv
#define glSecondaryColor3ui _glew_gl_glSecondaryColor3ui
#define glSecondaryColor3uiv _glew_gl_glSecondaryColor3uiv
#define glSecondaryColor3us _glew_gl_glSecondaryColor3us
#define glSecondaryColor3usv _glew_gl_glSecondaryColor3usv
#define glSecondaryColorPointer _glew_gl_glSecondaryColorPointer
#define glWindowPos2d _glew_gl_glWindowPos2d
#define glWindowPos2dv _glew_gl_glWindowPos2dv
#define glWindowPos2f _glew_gl_glWindowPos2f
#define glWindowPos2fv _glew_gl_glWindowPos2fv
#define glWindowPos2i _glew_gl_glWindowPos2i
#define glWindowPos2iv _glew_gl_glWindowPos2iv
#define glWindowPos2s _glew_gl_glWindowPos2s
#define glWindowPos2sv _glew_gl_glWindowPos2sv
#define glWindowPos3d _glew_gl_glWindowPos3d
#define glWindowPos3dv _glew_gl_glWindowPos3dv
#define glWindowPos3f _glew_gl_glWindowPos3f
#define glWindowPos3fv _glew_gl_glWindowPos3fv
#define glWindowPos3i _glew_gl_glWindowPos3i
#define glWindowPos3iv _glew_gl_glWindowPos3iv
#define glWindowPos3s _glew_gl_glWindowPos3s
#define glWindowPos3sv _glew_gl_glWindowPos3sv
#define glBlendColor _glew_gl_glBlendColor
#define glBlendEquation _glew_gl_glBlendEquation
#define glGenQueries _glew_gl_glGenQueries
#define glDeleteQueries _glew_gl_glDeleteQueries
#define glIsQuery _glew_gl_glIsQuery
#define glBeginQuery _glew_gl_glBeginQuery
#define glEndQuery _glew_gl_glEndQuery
#define glGetQueryiv _glew_gl_glGetQueryiv
#define glGetQueryObjectiv _glew_gl_glGetQueryObjectiv
#define glGetQueryObjectuiv _glew_gl_glGetQueryObjectuiv
#define glBindBuffer _glew_gl_glBindBuffer
#define glDeleteBuffers _glew_gl_glDeleteBuffers
#define glGenBuffers _glew_gl_glGenBuffers
#define glIsBuffer _glew_gl_glIsBuffer
#define glBufferData _glew_gl_glBufferData
#define glBufferSubData _glew_gl_glBufferSubData
#define glGetBufferSubData _glew_gl_glGetBufferSubData
#define glMapBuffer _glew_gl_glMapBuffer
#define glUnmapBuffer _glew_gl_glUnmapBuffer
#define glGetBufferParameteriv _glew_gl_glGetBufferParameteriv
#define glGetBufferPointerv _glew_gl_glGetBufferPointerv
#define glBlendEquationSeparate _glew_gl_glBlendEquationSeparate
#define glDrawBuffers _glew_gl_glDrawBuffers
#define glStencilOpSeparate _glew_gl_glStencilOpSeparate
#define glStencilFuncSeparate _glew_gl_glStencilFuncSeparate
#define glStencilMaskSeparate _glew_gl_glStencilMaskSeparate
#define glAttachShader _glew_gl_glAttachShader
#define glBindAttribLocation _glew_gl_glBindAttribLocation
#define glCompileShader _glew_gl_glCompileShader
#define glCreateProgram _glew_gl_glCreateProgram
#define glCreateShader _glew_gl_glCreateShader
#define glDeleteProgram _glew_gl_glDeleteProgram
#define glDeleteShader _glew_gl_glDeleteShader
#define glDetachShader _glew_gl_glDetachShader
#define glDisableVertexAttribArray _glew_gl_glDisableVertexAttribArray
#define glEnableVertexAttribArray _glew_gl_glEnableVertexAttribArray
#define glGetActiveAttrib _glew_gl_glGetActiveAttrib
#define glGetActiveUniform _glew_gl_glGetActiveUniform
#define glGetAttachedShaders _glew_gl_glGetAttachedShaders
#define glGetAttribLocation _glew_gl_glGetAttribLocation
#define glGetProgramiv _glew_gl_glGetProgramiv
#define glGetProgramInfoLog _glew_gl_glGetProgramInfoLog
#define glGetShaderiv _glew_gl_glGetShaderiv
#define glGetShaderInfoLog _glew_gl_glGetShaderInfoLog
#define glGetShaderSource _glew_gl_glGetShaderSource
#define glGetUniformLocation _glew_gl_glGetUniformLocation
#define glGetUniformfv _glew_gl_glGetUniformfv
#define glGetUniformiv _glew_gl_glGetUniformiv
#define glGetVertexAttribdv _glew_gl_glGetVertexAttribdv
#define glGetVertexAttribfv _glew_gl_glGetVertexAttribfv
#define glGetVertexAttribiv _glew_gl_glGetVertexAttribiv
#define glGetVertexAttribPointerv _glew_gl_glGetVertexAttribPointerv
#define glIsProgram _glew_gl_glIsProgram
#define glIsShader _glew_gl_glIsShader
#define glLinkProgram _glew_gl_glLinkProgram
#define glShaderSource _glew_gl_glShaderSource
#define glUseProgram _glew_gl_glUseProgram
#define glUniform1f _glew_gl_glUniform1f
#define glUniform2f _glew_gl_glUniform2f
#define glUniform3f _glew_gl_glUniform3f
#define glUniform4f _glew_gl_glUniform4f
#define glUniform1i _glew_gl_glUniform1i
#define glUniform2i _glew_gl_glUniform2i
#define glUniform3i _glew_gl_glUniform3i
#define glUniform4i _glew_gl_glUniform4i
#define glUniform1fv _glew_gl_glUniform1fv
#define glUniform2fv _glew_gl_glUniform2fv
#define glUniform3fv _glew_gl_glUniform3fv
#define glUniform4fv _glew_gl_glUniform4fv
#define glUniform1iv _glew_gl_glUniform1iv
#define glUniform2iv _glew_gl_glUniform2iv
#define glUniform3iv _glew_gl_glUniform3iv
#define glUniform4iv _glew_gl_glUniform4iv
#define glUniformMatrix2fv _glew_gl_glUniformMatrix2fv
#define glUniformMatrix3fv _glew_gl_glUniformMatrix3fv
#define glUniformMatrix4fv _glew_gl_glUniformMatrix4fv
#define glValidateProgram _glew_gl_glValidateProgram
#define glVertexAttrib1d _glew_gl_glVertexAttrib1d
#define glVertexAttrib1dv _glew_gl_glVertexAttrib1dv
#define glVertexAttrib1f _glew_gl_glVertexAttrib1f
#define glVertexAttrib1fv _glew_gl_glVertexAttrib1fv
#define glVertexAttrib1s _glew_gl_glVertexAttrib1s
#define glVertexAttrib1sv _glew_gl_glVertexAttrib1sv
#define glVertexAttrib2d _glew_gl_glVertexAttrib2d
#define glVertexAttrib2dv _glew_gl_glVertexAttrib2dv
#define glVertexAttrib2f _glew_gl_glVertexAttrib2f
#define glVertexAttrib2fv _glew_gl_glVertexAttrib2fv
#define glVertexAttrib2s _glew_gl_glVertexAttrib2s
#define glVertexAttrib2sv _glew_gl_glVertexAttrib2sv
#define glVertexAttrib3d _glew_gl_glVertexAttrib3d
#define glVertexAttrib3dv _glew_gl_glVertexAttrib3dv
#define glVertexAttrib3f _glew_gl_glVertexAttrib3f
#define glVertexAttrib3fv _glew_gl_glVertexAttrib3fv
#define glVertexAttrib3s _glew_gl_glVertexAttrib3s
#define glVertexAttrib3sv _glew_gl_glVertexAttrib3sv
#define glVertexAttrib4Nbv _glew_gl_glVertexAttrib4Nbv
#define glVertexAttrib4Niv _glew_gl_glVertexAttrib4Niv
#define glVertexAttrib4Nsv _glew_gl_glVertexAttrib4Nsv
#define glVertexAttrib4Nub _glew_gl_glVertexAttrib4Nub
#define glVertexAttrib4Nubv _glew_gl_glVertexAttrib4Nubv
#define glVertexAttrib4Nuiv _glew_gl_glVertexAttrib4Nuiv
#define glVertexAttrib4Nusv _glew_gl_glVertexAttrib4Nusv
#define glVertexAttrib4bv _glew_gl_glVertexAttrib4bv
#define glVertexAttrib4d _glew_gl_glVertexAttrib4d
#define glVertexAttrib4dv _glew_gl_glVertexAttrib4dv
#define glVertexAttrib4f _glew_gl_glVertexAttrib4f
#define glVertexAttrib4fv _glew_gl_glVertexAttrib4fv
#define glVertexAttrib4iv _glew_gl_glVertexAttrib4iv
#define glVertexAttrib4s _glew_gl_glVertexAttrib4s
#define glVertexAttrib4sv _glew_gl_glVertexAttrib4sv
#define glVertexAttrib4ubv _glew_gl_glVertexAttrib4ubv
#define glVertexAttrib4uiv _glew_gl_glVertexAttrib4uiv
#define glVertexAttrib4usv _glew_gl_glVertexAttrib4usv
#define glVertexAttribPointer _glew_gl_glVertexAttribPointer
#define glUniformMatrix2x3fv _glew_gl_glUniformMatrix2x3fv
#define glUniformMatrix3x2fv _glew_gl_glUniformMatrix3x2fv
#define glUniformMatrix2x4fv _glew_gl_glUniformMatrix2x4fv
#define glUniformMatrix4x2fv _glew_gl_glUniformMatrix4x2fv
#define glUniformMatrix3x4fv _glew_gl_glUniformMatrix3x4fv
#define glUniformMatrix4x3fv _glew_gl_glUniformMatrix4x3fv
#define glColorMaski _glew_gl_glColorMaski
#define glGetBooleani_v _glew_gl_glGetBooleani_v
#define glGetIntegeri_v _glew_gl_glGetIntegeri_v
#define glEnablei _glew_gl_glEnablei
#define glDisablei _glew_gl_glDisablei
#define glIsEnabledi _glew_gl_glIsEnabledi
#define glBeginTransformFeedback _glew_gl_glBeginTransformFeedback
#define glEndTransformFeedback _glew_gl_glEndTransformFeedback
#define glBindBufferRange _glew_gl_glBindBufferRange
#define glBindBufferBase _glew_gl_glBindBufferBase
#define glTransformFeedbackVaryings _glew_gl_glTransformFeedbackVaryings
#define glGetTransformFeedbackVarying _glew_gl_glGetTransformFeedbackVarying
#define glClampColor _glew_gl_glClampColor
#define glBeginConditionalRender _glew_gl_glBeginConditionalRender
#define glEndConditionalRender _glew_gl_glEndConditionalRender
#define glVertexAttribIPointer _glew_gl_glVertexAttribIPointer
#define glGetVertexAttribIiv _glew_gl_glGetVertexAttribIiv
#define glGetVertexAttribIuiv _glew_gl_glGetVertexAttribIuiv
#define glVertexAttribI1i _glew_gl_glVertexAttribI1i
#define glVertexAttribI2i _glew_gl_glVertexAttribI2i
#define glVertexAttribI3i _glew_gl_glVertexAttribI3i
#define glVertexAttribI4i _glew_gl_glVertexAttribI4i
#define glVertexAttribI1ui _glew_gl_glVertexAttribI1ui
#define glVertexAttribI2ui _glew_gl_glVertexAttribI2ui
#define glVertexAttribI3ui _glew_gl_glVertexAttribI3ui
#define glVertexAttribI4ui _glew_gl_glVertexAttribI4ui
#define glVertexAttribI1iv _glew_gl_glVertexAttribI1iv
#define glVertexAttribI2iv _glew_gl_glVertexAttribI2iv
#define glVertexAttribI3iv _glew_gl_glVertexAttribI3iv
#define glVertexAttribI4iv _glew_gl_glVertexAttribI4iv
#define glVertexAttribI1uiv _glew_gl_glVertexAttribI1uiv
#define glVertexAttribI2uiv _glew_gl_glVertexAttribI2uiv
#define glVertexAttribI3uiv _glew_gl_glVertexAttribI3uiv
#define glVertexAttribI4uiv _glew_gl_glVertexAttribI4uiv
#define glVertexAttribI4bv _glew_gl_glVertexAttribI4bv
#define glVertexAttribI4sv _glew_gl_glVertexAttribI4sv
#define glVertexAttribI4ubv _glew_gl_glVertexAttribI4ubv
#define glVertexAttribI4usv _glew_gl_glVertexAttribI4usv
#define glGetUniformuiv _glew_gl_glGetUniformuiv
#define glBindFragDataLocation _glew_gl_glBindFragDataLocation
#define glGetFragDataLocation _glew_gl_glGetFragDataLocation
#define glUniform1ui _glew_gl_glUniform1ui
#define glUniform2ui _glew_gl_glUniform2ui
#define glUniform3ui _glew_gl_glUniform3ui
#define glUniform4ui _glew_gl_glUniform4ui
#define glUniform1uiv _glew_gl_glUniform1uiv
#define glUniform2uiv _glew_gl_glUniform2uiv
#define glUniform3uiv _glew_gl_glUniform3uiv
#define glUniform4uiv _glew_gl_glUniform4uiv
#define glTexParameterIiv _glew_gl_glTexParameterIiv
#define glTexParameterIuiv _glew_gl_glTexParameterIuiv
#define glGetTexParameterIiv _glew_gl_glGetTexParameterIiv
#define glGetTexParameterIuiv _glew_gl_glGetTexParameterIuiv
#define glClearBufferiv _glew_gl_glClearBufferiv
#define glClearBufferuiv _glew_gl_glClearBufferuiv
#define glClearBufferfv _glew_gl_glClearBufferfv
#define glClearBufferfi _glew_gl_glClearBufferfi
#define glGetStringi _glew_gl_glGetStringi
#define glIsRenderbuffer _glew_gl_glIsRenderbuffer
#define glBindRenderbuffer _glew_gl_glBindRenderbuffer
#define glDeleteRenderbuffers _glew_gl_glDeleteRenderbuffers
#define glGenRenderbuffers _glew_gl_glGenRenderbuffers
#define glRenderbufferStorage _glew_gl_glRenderbufferStorage
#define glGetRenderbufferParameteriv _glew_gl_glGetRenderbufferParameteriv
#define glIsFramebuffer _glew_gl_glIsFramebuffer
#define glBindFramebuffer _glew_gl_glBindFramebuffer
#define glDeleteFramebuffers _glew_gl_glDeleteFramebuffers
#define glGenFramebuffers _glew_gl_glGenFramebuffers
#define glCheckFramebufferStatus _glew_gl_glCheckFramebufferStatus
#define glFramebufferTexture1D _glew_gl_glFramebufferTexture1D
#define glFramebufferTexture2D _glew_gl_glFramebufferTexture2D
#define glFramebufferTexture3D _glew_gl_glFramebufferTexture3D
#define glFramebufferRenderbuffer _glew_gl_glFramebufferRenderbuffer
#define glGetFramebufferAttachmentParameteriv _glew_gl_glGetFramebufferAttachmentParameteriv
#define glGenerateMipmap _glew_gl_glGenerateMipmap
#define glBlitFramebuffer _glew_gl_glBlitFramebuffer
#define glRenderbufferStorageMultisample _glew_gl_glRenderbufferStorageMultisample
#define glFramebufferTextureLayer _glew_gl_glFramebufferTextureLayer
#define glMapBufferRange _glew_gl_glMapBufferRange
#define glFlushMappedBufferRange _glew_gl_glFlushMappedBufferRange
#define glBindVertexArray _glew_gl_glBindVertexArray
#define glDeleteVertexArrays _glew_gl_glDeleteVertexArrays
#define glGenVertexArrays _glew_gl_glGenVertexArrays
#define glIsVertexArray _glew_gl_glIsVertexArray
#define glDrawArraysInstanced _glew_gl_glDrawArraysInstanced
#define glDrawElementsInstanced _glew_gl_glDrawElementsInstanced
#define glTexBuffer _glew_gl_glTexBuffer
#define glPrimitiveRestartIndex _glew_gl_glPrimitiveRestartIndex
#define glCopyBufferSubData _glew_gl_glCopyBufferSubData
#define glGetUniformIndices _glew_gl_glGetUniformIndices
#define glGetActiveUniformsiv _glew_gl_glGetActiveUniformsiv
#define glGetActiveUniformName _glew_gl_glGetActiveUniformName
#define glGetUniformBlockIndex _glew_gl_glGetUniformBlockIndex
#define glGetActiveUniformBlockiv _glew_gl_glGetActiveUniformBlockiv
#define glGetActiveUniformBlockName _glew_gl_glGetActiveUniformBlockName
#define glUniformBlockBinding _glew_gl_glUniformBlockBinding
#define glDrawElementsBaseVertex _glew_gl_glDrawElementsBaseVertex
#define glDrawRangeElementsBaseVertex _glew_gl_glDrawRangeElementsBaseVertex
#define glDrawElementsInstancedBaseVertex _glew_gl_glDrawElementsInstancedBaseVertex
#define glMultiDrawElementsBaseVertex _glew_gl_glMultiDrawElementsBaseVertex
#define glProvokingVertex _glew_gl_glProvokingVertex
#define glFenceSync _glew_gl_glFenceSync
#define glIsSync _glew_gl_glIsSync
#define glDeleteSync _glew_gl_glDeleteSync
#define glClientWaitSync _glew_gl_glClientWaitSync
#define glWaitSync _glew_gl_glWaitSync
#define glGetInteger64v _glew_gl_glGetInteger64v
#define glGetSynciv _glew_gl_glGetSynciv
#define glGetInteger64i_v _glew_gl_glGetInteger64i_v
#define glGetBufferParameteri64v _glew_gl_glGetBufferParameteri64v
#define glFramebufferTexture _glew_gl_glFramebufferTexture
#define glTexImage2DMultisample _glew_gl_glTexImage2DMultisample
#define glTexImage3DMultisample _glew_gl_glTexImage3DMultisample
#define glGetMultisamplefv _glew_gl_glGetMultisamplefv
#define glSampleMaski _glew_gl_glSampleMaski
#define glBindFragDataLocationIndexed _glew_gl_glBindFragDataLocationIndexed
#define glGetFragDataIndex _glew_gl_glGetFragDataIndex
#define glGenSamplers _glew_gl_glGenSamplers
#define glDeleteSamplers _glew_gl_glDeleteSamplers
#define glIsSampler _glew_gl_glIsSampler
#define glBindSampler _glew_gl_glBindSampler
#define glSamplerParameteri _glew_gl_glSamplerParameteri
#define glSamplerParameteriv _glew_gl_glSamplerParameteriv
#define glSamplerParameterf _glew_gl_glSamplerParameterf
#define glSamplerParameterfv _glew_gl_glSamplerParameterfv
#define glSamplerParameterIiv _glew_gl_glSamplerParameterIiv
#define glSamplerParameterIuiv _glew_gl_glSamplerParameterIuiv
#define glGetSamplerParameteriv _glew_gl_glGetSamplerParameteriv
#define glGetSamplerParameterIiv _glew_gl_glGetSamplerParameterIiv
#define glGetSamplerParameterfv _glew_gl_glGetSamplerParameterfv
#define glGetSamplerParameterIuiv _glew_gl_glGetSamplerParameterIuiv
#define glQueryCounter _glew_gl_glQueryCounter
#define glGetQueryObjecti64v _glew_gl_glGetQueryObjecti64v
#define glGetQueryObjectui64v _glew_gl_glGetQueryObjectui64v
#define glVertexAttribDivisor _glew_gl_glVertexAttribDivisor
#define glVertexAttribP1ui _glew_gl_glVertexAttribP1ui
#define glVertexAttribP1uiv _glew_gl_glVertexAttribP1uiv
#define glVertexAttribP2ui _glew_gl_glVertexAttribP2ui
#define glVertexAttribP2uiv _glew_gl_glVertexAttribP2uiv
#define glVertexAttribP3ui _glew_gl_glVertexAttribP3ui
#define glVertexAttribP3uiv _glew_gl_glVertexAttribP3uiv
#define glVertexAttribP4ui _glew_gl_glVertexAttribP4ui
#define glVertexAttribP4uiv _glew_gl_glVertexAttribP4uiv
#define glVertexP2ui _glew_gl_glVertexP2ui
#define glVertexP2uiv _glew_gl_glVertexP2uiv
#define glVertexP3ui _glew_gl_glVertexP3ui
#define glVertexP3uiv _glew_gl_glVertexP3uiv
#define glVertexP4ui _glew_gl_glVertexP4ui
#define glVertexP4uiv _glew_gl_glVertexP4uiv
#define glTexCoordP1ui _glew_gl_glTexCoordP1ui
#define glTexCoordP1uiv _glew_gl_glTexCoordP1uiv
#define glTexCoordP2ui _glew_gl_glTexCoordP2ui
#define glTexCoordP2uiv _glew_gl_glTexCoordP2uiv
#define glTexCoordP3ui _glew_gl_glTexCoordP3ui
#define glTexCoordP3uiv _glew_gl_glTexCoordP3uiv
#define glTexCoordP4ui _glew_gl_glTexCoordP4ui
#define glTexCoordP4uiv _glew_gl_glTexCoordP4uiv
#define glMultiTexCoordP1ui _glew_gl_glMultiTexCoordP1ui
#define glMultiTexCoordP1uiv _glew_gl_glMultiTexCoordP1uiv
#define glMultiTexCoordP2ui _glew_gl_glMultiTexCoordP2ui
#define glMultiTexCoordP2uiv _glew_gl_glMultiTexCoordP2uiv
#define glMultiTexCoordP3ui _glew_gl_glMultiTexCoordP3ui
#define glMultiTexCoordP3uiv _glew_gl_glMultiTexCoordP3uiv
#define glMultiTexCoordP4ui _glew_gl_glMultiTexCoordP4ui
#define glMultiTexCoordP4uiv _glew_gl_glMultiTexCoordP4uiv
#define glNormalP3ui _glew_gl_glNormalP3ui
#define glNormalP3uiv _glew_gl_glNormalP3uiv
#define glColorP3ui _glew_gl_glColorP3ui
#define glColorP3uiv _glew_gl_glColorP3uiv
#define glColorP4ui _glew_gl_glColorP4ui
#define glColorP4uiv _glew_gl_glColorP4uiv
#define glSecondaryColorP3ui _glew_gl_glSecondaryColorP3ui
#define glSecondaryColorP3uiv _glew_gl_glSecondaryColorP3uiv
#define glMinSampleShading _glew_gl_glMinSampleShading
#define glBlendEquationi _glew_gl_glBlendEquationi
#define glBlendEquationSeparatei _glew_gl_glBlendEquationSeparatei
#define glBlendFunci _glew_gl_glBlendFunci
#define glBlendFuncSeparatei _glew_gl_glBlendFuncSeparatei
#define glDrawArraysIndirect _glew_gl_glDrawArraysIndirect
#define glDrawElementsIndirect _glew_gl_glDrawElementsIndirect
#define glUniform1d _glew_gl_glUniform1d
#define glUniform2d _glew_gl_glUniform2d
#define glUniform3d _glew_gl_glUniform3d
#define glUniform4d _glew_gl_glUniform4d
#define glUniform1dv _glew_gl_glUniform1dv
#define glUniform2dv _glew_gl_glUniform2dv
#define glUniform3dv _glew_gl_glUniform3dv
#define glUniform4dv _glew_gl_glUniform4dv
#define glUniformMatrix2dv _glew_gl_glUniformMatrix2dv
#define glUniformMatrix3dv _glew_gl_glUniformMatrix3dv
#define glUniformMatrix4dv _glew_gl_glUniformMatrix4dv
#define glUniformMatrix2x3dv _glew_gl_glUniformMatrix2x3dv
#define glUniformMatrix2x4dv _glew_gl_glUniformMatrix2x4dv
#define glUniformMatrix3x2dv _glew_gl_glUniformMatrix3x2dv
#define glUniformMatrix3x4dv _glew_gl_glUniformMatrix3x4dv
#define glUniformMatrix4x2dv _glew_gl_glUniformMatrix4x2dv
#define glUniformMatrix4x3dv _glew_gl_glUniformMatrix4x3dv
#define glGetUniformdv _glew_gl_glGetUniformdv
#define glGetSubroutineUniformLocation _glew_gl_glGetSubroutineUniformLocation
#define glGetSubroutineIndex _glew_gl_glGetSubroutineIndex
#define glGetActiveSubroutineUniformiv _glew_gl_glGetActiveSubroutineUniformiv
#define glGetActiveSubroutineUniformName _glew_gl_glGetActiveSubroutineUniformName
#define glGetActiveSubroutineName _glew_gl_glGetActiveSubroutineName
#define glUniformSubroutinesuiv _glew_gl_glUniformSubroutinesuiv
#define glGetUniformSubroutineuiv _glew_gl_glGetUniformSubroutineuiv
#define glGetProgramStageiv _glew_gl_glGetProgramStageiv
#define glPatchParameteri _glew_gl_glPatchParameteri
#define glPatchParameterfv _glew_gl_glPatchParameterfv
#define glBindTransformFeedback _glew_gl_glBindTransformFeedback
#define glDeleteTransformFeedbacks _glew_gl_glDeleteTransformFeedbacks
#define glGenTransformFeedbacks _glew_gl_glGenTransformFeedbacks
#define glIsTransformFeedback _glew_gl_glIsTransformFeedback
#define glPauseTransformFeedback _glew_gl_glPauseTransformFeedback
#define glResumeTransformFeedback _glew_gl_glResumeTransformFeedback
#define glDrawTransformFeedback _glew_gl_glDrawTransformFeedback
#define glDrawTransformFeedbackStream _glew_gl_glDrawTransformFeedbackStream
#define glBeginQueryIndexed _glew_gl_glBeginQueryIndexed
#define glEndQueryIndexed _glew_gl_glEndQueryIndexed
#define glGetQueryIndexediv _glew_gl_glGetQueryIndexediv
#define glReleaseShaderCompiler _glew_gl_glReleaseShaderCompiler
#define glShaderBinary _glew_gl_glShaderBinary
#define glGetShaderPrecisionFormat _glew_gl_glGetShaderPrecisionFormat
#define glDepthRangef _glew_gl_glDepthRangef
#define glClearDepthf _glew_gl_glClearDepthf
#define glGetProgramBinary _glew_gl_glGetProgramBinary
#define glProgramBinary _glew_gl_glProgramBinary
#define glProgramParameteri _glew_gl_glProgramParameteri
#define glUseProgramStages _glew_gl_glUseProgramStages
#define glActiveShaderProgram _glew_gl_glActiveShaderProgram
#define glCreateShaderProgramv _glew_gl_glCreateShaderProgramv
#define glBindProgramPipeline _glew_gl_glBindProgramPipeline
#define glDeleteProgramPipelines _glew_gl_glDeleteProgramPipelines
#define glGenProgramPipelines _glew_gl_glGenProgramPipelines
#define glIsProgramPipeline _glew_gl_glIsProgramPipeline
#define glGetProgramPipelineiv _glew_gl_glGetProgramPipelineiv
#define glProgramUniform1i _glew_gl_glProgramUniform1i
#define glProgramUniform1iv _glew_gl_glProgramUniform1iv
#define glProgramUniform1f _glew_gl_glProgramUniform1f
#define glProgramUniform1fv _glew_gl_glProgramUniform1fv
#define glProgramUniform1d _glew_gl_glProgramUniform1d
#define glProgramUniform1dv _glew_gl_glProgramUniform1dv
#define glProgramUniform1ui _glew_gl_glProgramUniform1ui
#define glProgramUniform1uiv _glew_gl_glProgramUniform1uiv
#define glProgramUniform2i _glew_gl_glProgramUniform2i
#define glProgramUniform2iv _glew_gl_glProgramUniform2iv
#define glProgramUniform2f _glew_gl_glProgramUniform2f
#define glProgramUniform2fv _glew_gl_glProgramUniform2fv
#define glProgramUniform2d _glew_gl_glProgramUniform2d
#define glProgramUniform2dv _glew_gl_glProgramUniform2dv
#define glProgramUniform2ui _glew_gl_glProgramUniform2ui
#define glProgramUniform2uiv _glew_gl_glProgramUniform2uiv
#define glProgramUniform3i _glew_gl_glProgramUniform3i
#define glProgramUniform3iv _glew_gl_glProgramUniform3iv
#define glProgramUniform3f _glew_gl_glProgramUniform3f
#define glProgramUniform3fv _glew_gl_glProgramUniform3fv
#define glProgramUniform3d _glew_gl_glProgramUniform3d
#define glProgramUniform3dv _glew_gl_glProgramUniform3dv
#define glProgramUniform3ui _glew_gl_glProgramUniform3ui
#define glProgramUniform3uiv _glew_gl_glProgramUniform3uiv
#define glProgramUniform4i _glew_gl_glProgramUniform4i
#define glProgramUniform4iv _glew_gl_glProgramUniform4iv
#define glProgramUniform4f _glew_gl_glProgramUniform4f
#define glProgramUniform4fv _glew_gl_glProgramUniform4fv
#define glProgramUniform4d _glew_gl_glProgramUniform4d
#define glProgramUniform4dv _glew_gl_glProgramUniform4dv
#define glProgramUniform4ui _glew_gl_glProgramUniform4ui
#define glProgramUniform4uiv _glew_gl_glProgramUniform4uiv
#define glProgramUniformMatrix2fv _glew_gl_glProgramUniformMatrix2fv
#define glProgramUniformMatrix3fv _glew_gl_glProgramUniformMatrix3fv
#define glProgramUniformMatrix4fv _glew_gl_glProgramUniformMatrix4fv
#define glProgramUniformMatrix2dv _glew_gl_glProgramUniformMatrix2dv
#define glProgramUniformMatrix3dv _glew_gl_glProgramUniformMatrix3dv
#define glProgramUniformMatrix4dv _glew_gl_glProgramUniformMatrix4dv
#define glProgramUniformMatrix2x3fv _glew_gl_glProgramUniformMatrix2x3fv
#define glProgramUniformMatrix3x2fv _glew_gl_glProgramUniformMatrix3x2fv
#define glProgramUniformMatrix2x4fv _glew_gl_glProgramUniformMatrix2x4fv
#define glProgramUniformMatrix4x2fv _glew_gl_glProgramUniformMatrix4x2fv
#define glProgramUniformMatrix3x4fv _glew_gl_glProgramUniformMatrix3x4fv
#define glProgramUniformMatrix4x3fv _glew_gl_glProgramUniformMatrix4x3fv
#define glProgramUniformMatrix2x3dv _glew_gl_glProgramUniformMatrix2x3dv
#define glProgramUniformMatrix3x2dv _glew_gl_glProgramUniformMatrix3x2dv
#define glProgramUniformMatrix2x4dv _glew_gl_glProgramUniformMatrix2x4dv
#define glProgramUniformMatrix4x2dv _glew_gl_glProgramUniformMatrix4x2dv
#define glProgramUniformMatrix3x4dv _glew_gl_glProgramUniformMatrix3x4dv
#define glProgramUniformMatrix4x3dv _glew_gl_glProgramUniformMatrix4x3dv
#define glValidateProgramPipeline _glew_gl_glValidateProgramPipeline
#define glGetProgramPipelineInfoLog _glew_gl_glGetProgramPipelineInfoLog
#define glVertexAttribL1d _glew_gl_glVertexAttribL1d
#define glVertexAttribL2d _glew_gl_glVertexAttribL2d
#define glVertexAttribL3d _glew_gl_glVertexAttribL3d
#define glVertexAttribL4d _glew_gl_glVertexAttribL4d
#define glVertexAttribL1dv _glew_gl_glVertexAttribL1dv
#define glVertexAttribL2dv _glew_gl_glVertexAttribL2dv
#define glVertexAttribL3dv _glew_gl_glVertexAttribL3dv
#define glVertexAttribL4dv _glew_gl_glVertexAttribL4dv
#define glVertexAttribLPointer _glew_gl_glVertexAttribLPointer
#define glGetVertexAttribLdv _glew_gl_glGetVertexAttribLdv
#define glViewportArrayv _glew_gl_glViewportArrayv
#define glViewportIndexedf _glew_gl_glViewportIndexedf
#define glViewportIndexedfv _glew_gl_glViewportIndexedfv
#define glScissorArrayv _glew_gl_glScissorArrayv
#define glScissorIndexed _glew_gl_glScissorIndexed
#define glScissorIndexedv _glew_gl_glScissorIndexedv
#define glDepthRangeArrayv _glew_gl_glDepthRangeArrayv
#define glDepthRangeIndexed _glew_gl_glDepthRangeIndexed
#define glGetFloati_v _glew_gl_glGetFloati_v
#define glGetDoublei_v _glew_gl_glGetDoublei_v
#define glDrawArraysInstancedBaseInstance _glew_gl_glDrawArraysInstancedBaseInstance
#define glDrawElementsInstancedBaseInstance _glew_gl_glDrawElementsInstancedBaseInstance
#define glDrawElementsInstancedBaseVertexBaseInstance _glew_gl_glDrawElementsInstancedBaseVertexBaseInstance
#define glGetInternalformativ _glew_gl_glGetInternalformativ
#define glGetActiveAtomicCounterBufferiv _glew_gl_glGetActiveAtomicCounterBufferiv
#define glBindImageTexture _glew_gl_glBindImageTexture
#define glMemoryBarrier _glew_gl_glMemoryBarrier
#define glTexStorage1D _glew_gl_glTexStorage1D
#define glTexStorage2D _glew_gl_glTexStorage2D
#define glTexStorage3D _glew_gl_glTexStorage3D
#define glDrawTransformFeedbackInstanced _glew_gl_glDrawTransformFeedbackInstanced
#define glDrawTransformFeedbackStreamInstanced _glew_gl_glDrawTransformFeedbackStreamInstanced
#define glClearBufferData _glew_gl_glClearBufferData
#define glClearBufferSubData _glew_gl_glClearBufferSubData
#define glDispatchCompute _glew_gl_glDispatchCompute
#define glDispatchComputeIndirect _glew_gl_glDispatchComputeIndirect
#define glCopyImageSubData _glew_gl_glCopyImageSubData
#define glFramebufferParameteri _glew_gl_glFramebufferParameteri
#define glGetFramebufferParameteriv _glew_gl_glGetFramebufferParameteriv
#define glGetInternalformati64v _glew_gl_glGetInternalformati64v
#define glInvalidateTexSubImage _glew_gl_glInvalidateTexSubImage
#define glInvalidateTexImage _glew_gl_glInvalidateTexImage
#define glInvalidateBufferSubData _glew_gl_glInvalidateBufferSubData
#define glInvalidateBufferData _glew_gl_glInvalidateBufferData
#define glInvalidateFramebuffer _glew_gl_glInvalidateFramebuffer
#define glInvalidateSubFramebuffer _glew_gl_glInvalidateSubFramebuffer
#define glMultiDrawArraysIndirect _glew_gl_glMultiDrawArraysIndirect
#define glMultiDrawElementsIndirect _glew_gl_glMultiDrawElementsIndirect
#define glGetProgramInterfaceiv _glew_gl_glGetProgramInterfaceiv
#define glGetProgramResourceIndex _glew_gl_glGetProgramResourceIndex
#define glGetProgramResourceName _glew_gl_glGetProgramResourceName
#define glGetProgramResourceiv _glew_gl_glGetProgramResourceiv
#define glGetProgramResourceLocation _glew_gl_glGetProgramResourceLocation
#define glGetProgramResourceLocationIndex _glew_gl_glGetProgramResourceLocationIndex
#define glShaderStorageBlockBinding _glew_gl_glShaderStorageBlockBinding
#define glTexBufferRange _glew_gl_glTexBufferRange
#define glTexStorage2DMultisample _glew_gl_glTexStorage2DMultisample
#define glTexStorage3DMultisample _glew_gl_glTexStorage3DMultisample
#define glTextureView _glew_gl_glTextureView
#define glBindVertexBuffer _glew_gl_glBindVertexBuffer
#define glVertexAttribFormat _glew_gl_glVertexAttribFormat
#define glVertexAttribIFormat _glew_gl_glVertexAttribIFormat
#define glVertexAttribLFormat _glew_gl_glVertexAttribLFormat
#define glVertexAttribBinding _glew_gl_glVertexAttribBinding
#define glVertexBindingDivisor _glew_gl_glVertexBindingDivisor
#define glDebugMessageControl _glew_gl_glDebugMessageControl
#define glDebugMessageInsert _glew_gl_glDebugMessageInsert
#define glDebugMessageCallback _glew_gl_glDebugMessageCallback
#define glGetDebugMessageLog _glew_gl_glGetDebugMessageLog
#define glPushDebugGroup _glew_gl_glPushDebugGroup
#define glPopDebugGroup _glew_gl_glPopDebugGroup
#define glObjectLabel _glew_gl_glObjectLabel
#define glGetObjectLabel _glew_gl_glGetObjectLabel
#define glObjectPtrLabel _glew_gl_glObjectPtrLabel
#define glGetObjectPtrLabel _glew_gl_glGetObjectPtrLabel
#define glBufferStorage _glew_gl_glBufferStorage
#define glClearTexImage _glew_gl_glClearTexImage
#define glClearTexSubImage _glew_gl_glClearTexSubImage
#define glBindBuffersBase _glew_gl_glBindBuffersBase
#define glBindBuffersRange _glew_gl_glBindBuffersRange
#define glBindTextures _glew_gl_glBindTextures
#define glBindSamplers _glew_gl_glBindSamplers
#define glBindImageTextures _glew_gl_glBindImageTextures
#define glBindVertexBuffers _glew_gl_glBindVertexBuffers
#define glClipControl _glew_gl_glClipControl
#define glCreateTransformFeedbacks _glew_gl_glCreateTransformFeedbacks
#define glTransformFeedbackBufferBase _glew_gl_glTransformFeedbackBufferBase
#define glTransformFeedbackBufferRange _glew_gl_glTransformFeedbackBufferRange
#define glGetTransformFeedbackiv _glew_gl_glGetTransformFeedbackiv
#define glGetTransformFeedbacki_v _glew_gl_glGetTransformFeedbacki_v
#define glGetTransformFeedbacki64_v _glew_gl_glGetTransformFeedbacki64_v
#define glCreateBuffers _glew_gl_glCreateBuffers
#define glNamedBufferStorage _glew_gl_glNamedBufferStorage
#define glNamedBufferData _glew_gl_glNamedBufferData
#define glNamedBufferSubData _glew_gl_glNamedBufferSubData
#define glCopyNamedBufferSubData _glew_gl_glCopyNamedBufferSubData
#define glClearNamedBufferData _glew_gl_glClearNamedBufferData
#define glClearNamedBufferSubData _glew_gl_glClearNamedBufferSubData
#define glMapNamedBuffer _glew_gl_glMapNamedBuffer
#define glMapNamedBufferRange _glew_gl_glMapNamedBufferRange
#define glUnmapNamedBuffer _glew_gl_glUnmapNamedBuffer
#define glFlushMappedNamedBufferRange _glew_gl_glFlushMappedNamedBufferRange
#define glGetNamedBufferParameteriv _glew_gl_glGetNamedBufferParameteriv
#define glGetNamedBufferParameteri64v _glew_gl_glGetNamedBufferParameteri64v
#define glGetNamedBufferPointerv _glew_gl_glGetNamedBufferPointerv
#define glGetNamedBufferSubData _glew_gl_glGetNamedBufferSubData
#define glCreateFramebuffers _glew_gl_glCreateFramebuffers
#define glNamedFramebufferRenderbuffer _glew_gl_glNamedFramebufferRenderbuffer
#define glNamedFramebufferParameteri _glew_gl_glNamedFramebufferParameteri
#define glNamedFramebufferTexture _glew_gl_glNamedFramebufferTexture
#define glNamedFramebufferTextureLayer _glew_gl_glNamedFramebufferTextureLayer
#define glNamedFramebufferDrawBuffer _glew_gl_glNamedFramebufferDrawBuffer
#define glNamedFramebufferDrawBuffers _glew_gl_glNamedFramebufferDrawBuffers
#define glNamedFramebufferReadBuffer _glew_gl_glNamedFramebufferReadBuffer
#define glInvalidateNamedFramebufferData _glew_gl_glInvalidateNamedFramebufferData
#define glInvalidateNamedFramebufferSubData _glew_gl_glInvalidateNamedFramebufferSubData
#define glClearNamedFramebufferiv _glew_gl_glClearNamedFramebufferiv
#define glClearNamedFramebufferuiv _glew_gl_glClearNamedFramebufferuiv
#define glClearNamedFramebufferfv _glew_gl_glClearNamedFramebufferfv
#define glClearNamedFramebufferfi _glew_gl_glClearNamedFramebufferfi
#define glBlitNamedFramebuffer _glew_gl_glBlitNamedFramebuffer
#define glCheckNamedFramebufferStatus _glew_gl_glCheckNamedFramebufferStatus
#define glGetNamedFramebufferParameteriv _glew_gl_glGetNamedFramebufferParameteriv
#define glGetNamedFramebufferAttachmentParameteriv _glew_gl_glGetNamedFramebufferAttachmentParameteriv
#define glCreateRenderbuffers _glew_gl_glCreateRenderbuffers
#define glNamedRenderbufferStorage _glew_gl_glNamedRenderbufferStorage
#define glNamedRenderbufferStorageMultisample _glew_gl_glNamedRenderbufferStorageMultisample
#define glGetNamedRenderbufferParameteriv _glew_gl_glGetNamedRenderbufferParameteriv
#define glCreateTextures _glew_gl_glCreateTextures
#define glTextureBuffer _glew_gl_glTextureBuffer
#define glTextureBufferRange _glew_gl_glTextureBufferRange
#define glTextureStorage1D _glew_gl_glTextureStorage1D
#define glTextureStorage2D _glew_gl_glTextureStorage2D
#define glTextureStorage3D _glew_gl_glTextureStorage3D
#define glTextureStorage2DMultisample _glew_gl_glTextureStorage2DMultisample
#define glTextureStorage3DMultisample _glew_gl_glTextureStorage3DMultisample
#define glTextureSubImage1D _glew_gl_glTextureSubImage1D
#define glTextureSubImage2D _glew_gl_glTextureSubImage2D
#define glTextureSubImage3D _glew_gl_glTextureSubImage3D
#define glCompressedTextureSubImage1D _glew_gl_glCompressedTextureSubImage1D
#define glCompressedTextureSubImage2D _glew_gl_glCompressedTextureSubImage2D
#define glCompressedTextureSubImage3D _glew_gl_glCompressedTextureSubImage3D
#define glCopyTextureSubImage1D _glew_gl_glCopyTextureSubImage1D
#define glCopyTextureSubImage2D _glew_gl_glCopyTextureSubImage2D
#define glCopyTextureSubImage3D _glew_gl_glCopyTextureSubImage3D
#define glTextureParameterf _glew_gl_glTextureParameterf
#define glTextureParameterfv _glew_gl_glTextureParameterfv
#define glTextureParameteri _glew_gl_glTextureParameteri
#define glTextureParameterIiv _glew_gl_glTextureParameterIiv
#define glTextureParameterIuiv _glew_gl_glTextureParameterIuiv
#define glTextureParameteriv _glew_gl_glTextureParameteriv
#define glGenerateTextureMipmap _glew_gl_glGenerateTextureMipmap
#define glBindTextureUnit _glew_gl_glBindTextureUnit
#define glGetTextureImage _glew_gl_glGetTextureImage
#define glGetCompressedTextureImage _glew_gl_glGetCompressedTextureImage
#define glGetTextureLevelParameterfv _glew_gl_glGetTextureLevelParameterfv
#define glGetTextureLevelParameteriv _glew_gl_glGetTextureLevelParameteriv
#define glGetTextureParameterfv _glew_gl_glGetTextureParameterfv
#define glGetTextureParameterIiv _glew_gl_glGetTextureParameterIiv
#define glGetTextureParameterIuiv _glew_gl_glGetTextureParameterIuiv
#define glGetTextureParameteriv _glew_gl_glGetTextureParameteriv
#define glCreateVertexArrays _glew_gl_glCreateVertexArrays
#define glDisableVertexArrayAttrib _glew_gl_glDisableVertexArrayAttrib
#define glEnableVertexArrayAttrib _glew_gl_glEnableVertexArrayAttrib
#define glVertexArrayElementBuffer _glew_gl_glVertexArrayElementBuffer
#define glVertexArrayVertexBuffer _glew_gl_glVertexArrayVertexBuffer
#define glVertexArrayVertexBuffers _glew_gl_glVertexArrayVertexBuffers
#define glVertexArrayAttribBinding _glew_gl_glVertexArrayAttribBinding
#define glVertexArrayAttribFormat _glew_gl_glVertexArrayAttribFormat
#define glVertexArrayAttribIFormat _glew_gl_glVertexArrayAttribIFormat
#define glVertexArrayAttribLFormat _glew_gl_glVertexArrayAttribLFormat
#define glVertexArrayBindingDivisor _glew_gl_glVertexArrayBindingDivisor
#define glGetVertexArrayiv _glew_gl_glGetVertexArrayiv
#define glGetVertexArrayIndexediv _glew_gl_glGetVertexArrayIndexediv
#define glGetVertexArrayIndexed64iv _glew_gl_glGetVertexArrayIndexed64iv
#define glCreateSamplers _glew_gl_glCreateSamplers
#define glCreateProgramPipelines _glew_gl_glCreateProgramPipelines
#define glCreateQueries _glew_gl_glCreateQueries
#define glGetQueryBufferObjecti64v _glew_gl_glGetQueryBufferObjecti64v
#define glGetQueryBufferObjectiv _glew_gl_glGetQueryBufferObjectiv
#define glGetQueryBufferObjectui64v _glew_gl_glGetQueryBufferObjectui64v
#define glGetQueryBufferObjectuiv _glew_gl_glGetQueryBufferObjectuiv
#define glMemoryBarrierByRegion _glew_gl_glMemoryBarrierByRegion
#define glGetTextureSubImage _glew_gl_glGetTextureSubImage
#define glGetCompressedTextureSubImage _glew_gl_glGetCompressedTextureSubImage
#define glGetGraphicsResetStatus _glew_gl_glGetGraphicsResetStatus
#define glGetnCompressedTexImage _glew_gl_glGetnCompressedTexImage
#define glGetnTexImage _glew_gl_glGetnTexImage
#define glGetnUniformdv _glew_gl_glGetnUniformdv
#define glGetnUniformfv _glew_gl_glGetnUniformfv
#define glGetnUniformiv _glew_gl_glGetnUniformiv
#define glGetnUniformuiv _glew_gl_glGetnUniformuiv
#define glReadnPixels _glew_gl_glReadnPixels
#define glGetnMapdv _glew_gl_glGetnMapdv
#define glGetnMapfv _glew_gl_glGetnMapfv
#define glGetnMapiv _glew_gl_glGetnMapiv
#define glGetnPixelMapfv _glew_gl_glGetnPixelMapfv
#define glGetnPixelMapuiv _glew_gl_glGetnPixelMapuiv
#define glGetnPixelMapusv _glew_gl_glGetnPixelMapusv
#define glGetnPolygonStipple _glew_gl_glGetnPolygonStipple
#define glGetnColorTable _glew_gl_glGetnColorTable
#define glGetnConvolutionFilter _glew_gl_glGetnConvolutionFilter
#define glGetnSeparableFilter _glew_gl_glGetnSeparableFilter
#define glGetnHistogram _glew_gl_glGetnHistogram
#define glGetnMinmax _glew_gl_glGetnMinmax
#define glTextureBarrier _glew_gl_glTextureBarrier
#define glBlendBarrier _glew_gl_glBlendBarrier
#define glPrimitiveBoundingBox _glew_gl_glPrimitiveBoundingBox
#define glTbufferMask3DFX _glew_gl_glTbufferMask3DFX
#define glDebugMessageEnableAMD _glew_gl_glDebugMessageEnableAMD
#define glDebugMessageInsertAMD _glew_gl_glDebugMessageInsertAMD
#define glDebugMessageCallbackAMD _glew_gl_glDebugMessageCallbackAMD
#define glGetDebugMessageLogAMD _glew_gl_glGetDebugMessageLogAMD
#define glBlendFuncIndexedAMD _glew_gl_glBlendFuncIndexedAMD
#define glBlendFuncSeparateIndexedAMD _glew_gl_glBlendFuncSeparateIndexedAMD
#define glBlendEquationIndexedAMD _glew_gl_glBlendEquationIndexedAMD
#define glBlendEquationSeparateIndexedAMD _glew_gl_glBlendEquationSeparateIndexedAMD
#define glUniform1i64NV _glew_gl_glUniform1i64NV
#define glUniform2i64NV _glew_gl_glUniform2i64NV
#define glUniform3i64NV _glew_gl_glUniform3i64NV
#define glUniform4i64NV _glew_gl_glUniform4i64NV
#define glUniform1i64vNV _glew_gl_glUniform1i64vNV
#define glUniform2i64vNV _glew_gl_glUniform2i64vNV
#define glUniform3i64vNV _glew_gl_glUniform3i64vNV
#define glUniform4i64vNV _glew_gl_glUniform4i64vNV
#define glUniform1ui64NV _glew_gl_glUniform1ui64NV
#define glUniform2ui64NV _glew_gl_glUniform2ui64NV
#define glUniform3ui64NV _glew_gl_glUniform3ui64NV
#define glUniform4ui64NV _glew_gl_glUniform4ui64NV
#define glUniform1ui64vNV _glew_gl_glUniform1ui64vNV
#define glUniform2ui64vNV _glew_gl_glUniform2ui64vNV
#define glUniform3ui64vNV _glew_gl_glUniform3ui64vNV
#define glUniform4ui64vNV _glew_gl_glUniform4ui64vNV
#define glGetUniformi64vNV _glew_gl_glGetUniformi64vNV
#define glGetUniformui64vNV _glew_gl_glGetUniformui64vNV
#define glProgramUniform1i64NV _glew_gl_glProgramUniform1i64NV
#define glProgramUniform2i64NV _glew_gl_glProgramUniform2i64NV
#define glProgramUniform3i64NV _glew_gl_glProgramUniform3i64NV
#define glProgramUniform4i64NV _glew_gl_glProgramUniform4i64NV
#define glProgramUniform1i64vNV _glew_gl_glProgramUniform1i64vNV
#define glProgramUniform2i64vNV _glew_gl_glProgramUniform2i64vNV
#define glProgramUniform3i64vNV _glew_gl_glProgramUniform3i64vNV
#define glProgramUniform4i64vNV _glew_gl_glProgramUniform4i64vNV
#define glProgramUniform1ui64NV _glew_gl_glProgramUniform1ui64NV
#define glProgramUniform2ui64NV _glew_gl_glProgramUniform2ui64NV
#define glProgramUniform3ui64NV _glew_gl_glProgramUniform3ui64NV
#define glProgramUniform4ui64NV _glew_gl_glProgramUniform4ui64NV
#define glProgramUniform1ui64vNV _glew_gl_glProgramUniform1ui64vNV
#define glProgramUniform2ui64vNV _glew_gl_glProgramUniform2ui64vNV
#define glProgramUniform3ui64vNV _glew_gl_glProgramUniform3ui64vNV
#define glProgramUniform4ui64vNV _glew_gl_glProgramUniform4ui64vNV
#define glVertexAttribParameteriAMD _glew_gl_glVertexAttribParameteriAMD
#define glMultiDrawArraysIndirectAMD _glew_gl_glMultiDrawArraysIndirectAMD
#define glMultiDrawElementsIndirectAMD _glew_gl_glMultiDrawElementsIndirectAMD
#define glGenNamesAMD _glew_gl_glGenNamesAMD
#define glDeleteNamesAMD _glew_gl_glDeleteNamesAMD
#define glIsNameAMD _glew_gl_glIsNameAMD
#define glQueryObjectParameteruiAMD _glew_gl_glQueryObjectParameteruiAMD
#define glGetPerfMonitorGroupsAMD _glew_gl_glGetPerfMonitorGroupsAMD
#define glGetPerfMonitorCountersAMD _glew_gl_glGetPerfMonitorCountersAMD
#define glGetPerfMonitorGroupStringAMD _glew_gl_glGetPerfMonitorGroupStringAMD
#define glGetPerfMonitorCounterStringAMD _glew_gl_glGetPerfMonitorCounterStringAMD
#define glGetPerfMonitorCounterInfoAMD _glew_gl_glGetPerfMonitorCounterInfoAMD
#define glGenPerfMonitorsAMD _glew_gl_glGenPerfMonitorsAMD
#define glDeletePerfMonitorsAMD _glew_gl_glDeletePerfMonitorsAMD
#define glSelectPerfMonitorCountersAMD _glew_gl_glSelectPerfMonitorCountersAMD
#define glBeginPerfMonitorAMD _glew_gl_glBeginPerfMonitorAMD
#define glEndPerfMonitorAMD _glew_gl_glEndPerfMonitorAMD
#define glGetPerfMonitorCounterDataAMD _glew_gl_glGetPerfMonitorCounterDataAMD
#define glSetMultisamplefvAMD _glew_gl_glSetMultisamplefvAMD
#define glTexStorageSparseAMD _glew_gl_glTexStorageSparseAMD
#define glTextureStorageSparseAMD _glew_gl_glTextureStorageSparseAMD
#define glStencilOpValueAMD _glew_gl_glStencilOpValueAMD
#define glTessellationFactorAMD _glew_gl_glTessellationFactorAMD
#define glTessellationModeAMD _glew_gl_glTessellationModeAMD
#define glBlitFramebufferANGLE _glew_gl_glBlitFramebufferANGLE
#define glRenderbufferStorageMultisampleANGLE _glew_gl_glRenderbufferStorageMultisampleANGLE
#define glDrawArraysInstancedANGLE _glew_gl_glDrawArraysInstancedANGLE
#define glDrawElementsInstancedANGLE _glew_gl_glDrawElementsInstancedANGLE
#define glVertexAttribDivisorANGLE _glew_gl_glVertexAttribDivisorANGLE
#define glGetTranslatedShaderSourceANGLE _glew_gl_glGetTranslatedShaderSourceANGLE
#define glCopyTextureLevelsAPPLE _glew_gl_glCopyTextureLevelsAPPLE
#define glElementPointerAPPLE _glew_gl_glElementPointerAPPLE
#define glDrawElementArrayAPPLE _glew_gl_glDrawElementArrayAPPLE
#define glDrawRangeElementArrayAPPLE _glew_gl_glDrawRangeElementArrayAPPLE
#define glMultiDrawElementArrayAPPLE _glew_gl_glMultiDrawElementArrayAPPLE
#define glMultiDrawRangeElementArrayAPPLE _glew_gl_glMultiDrawRangeElementArrayAPPLE
#define glGenFencesAPPLE _glew_gl_glGenFencesAPPLE
#define glDeleteFencesAPPLE _glew_gl_glDeleteFencesAPPLE
#define glSetFenceAPPLE _glew_gl_glSetFenceAPPLE
#define glIsFenceAPPLE _glew_gl_glIsFenceAPPLE
#define glTestFenceAPPLE _glew_gl_glTestFenceAPPLE
#define glFinishFenceAPPLE _glew_gl_glFinishFenceAPPLE
#define glTestObjectAPPLE _glew_gl_glTestObjectAPPLE
#define glFinishObjectAPPLE _glew_gl_glFinishObjectAPPLE
#define glBufferParameteriAPPLE _glew_gl_glBufferParameteriAPPLE
#define glFlushMappedBufferRangeAPPLE _glew_gl_glFlushMappedBufferRangeAPPLE
#define glRenderbufferStorageMultisampleAPPLE _glew_gl_glRenderbufferStorageMultisampleAPPLE
#define glResolveMultisampleFramebufferAPPLE _glew_gl_glResolveMultisampleFramebufferAPPLE
#define glObjectPurgeableAPPLE _glew_gl_glObjectPurgeableAPPLE
#define glObjectUnpurgeableAPPLE _glew_gl_glObjectUnpurgeableAPPLE
#define glGetObjectParameterivAPPLE _glew_gl_glGetObjectParameterivAPPLE
#define glFenceSyncAPPLE _glew_gl_glFenceSyncAPPLE
#define glIsSyncAPPLE _glew_gl_glIsSyncAPPLE
#define glDeleteSyncAPPLE _glew_gl_glDeleteSyncAPPLE
#define glClientWaitSyncAPPLE _glew_gl_glClientWaitSyncAPPLE
#define glWaitSyncAPPLE _glew_gl_glWaitSyncAPPLE
#define glGetInteger64vAPPLE _glew_gl_glGetInteger64vAPPLE
#define glGetSyncivAPPLE _glew_gl_glGetSyncivAPPLE
#define glTextureRangeAPPLE _glew_gl_glTextureRangeAPPLE
#define glGetTexParameterPointervAPPLE _glew_gl_glGetTexParameterPointervAPPLE
#define glBindVertexArrayAPPLE _glew_gl_glBindVertexArrayAPPLE
#define glDeleteVertexArraysAPPLE _glew_gl_glDeleteVertexArraysAPPLE
#define glGenVertexArraysAPPLE _glew_gl_glGenVertexArraysAPPLE
#define glIsVertexArrayAPPLE _glew_gl_glIsVertexArrayAPPLE
#define glVertexArrayRangeAPPLE _glew_gl_glVertexArrayRangeAPPLE
#define glFlushVertexArrayRangeAPPLE _glew_gl_glFlushVertexArrayRangeAPPLE
#define glVertexArrayParameteriAPPLE _glew_gl_glVertexArrayParameteriAPPLE
#define glEnableVertexAttribAPPLE _glew_gl_glEnableVertexAttribAPPLE
#define glDisableVertexAttribAPPLE _glew_gl_glDisableVertexAttribAPPLE
#define glIsVertexAttribEnabledAPPLE _glew_gl_glIsVertexAttribEnabledAPPLE
#define glMapVertexAttrib1dAPPLE _glew_gl_glMapVertexAttrib1dAPPLE
#define glMapVertexAttrib1fAPPLE _glew_gl_glMapVertexAttrib1fAPPLE
#define glMapVertexAttrib2dAPPLE _glew_gl_glMapVertexAttrib2dAPPLE
#define glMapVertexAttrib2fAPPLE _glew_gl_glMapVertexAttrib2fAPPLE
#define glPrimitiveBoundingBoxARB _glew_gl_glPrimitiveBoundingBoxARB
#define glGetTextureHandleARB _glew_gl_glGetTextureHandleARB
#define glGetTextureSamplerHandleARB _glew_gl_glGetTextureSamplerHandleARB
#define glMakeTextureHandleResidentARB _glew_gl_glMakeTextureHandleResidentARB
#define glMakeTextureHandleNonResidentARB _glew_gl_glMakeTextureHandleNonResidentARB
#define glGetImageHandleARB _glew_gl_glGetImageHandleARB
#define glMakeImageHandleResidentARB _glew_gl_glMakeImageHandleResidentARB
#define glMakeImageHandleNonResidentARB _glew_gl_glMakeImageHandleNonResidentARB
#define glUniformHandleui64ARB _glew_gl_glUniformHandleui64ARB
#define glUniformHandleui64vARB _glew_gl_glUniformHandleui64vARB
#define glProgramUniformHandleui64ARB _glew_gl_glProgramUniformHandleui64ARB
#define glProgramUniformHandleui64vARB _glew_gl_glProgramUniformHandleui64vARB
#define glIsTextureHandleResidentARB _glew_gl_glIsTextureHandleResidentARB
#define glIsImageHandleResidentARB _glew_gl_glIsImageHandleResidentARB
#define glVertexAttribL1ui64ARB _glew_gl_glVertexAttribL1ui64ARB
#define glVertexAttribL1ui64vARB _glew_gl_glVertexAttribL1ui64vARB
#define glGetVertexAttribLui64vARB _glew_gl_glGetVertexAttribLui64vARB
#define glCreateSyncFromCLeventARB _glew_gl_glCreateSyncFromCLeventARB
#define glClampColorARB _glew_gl_glClampColorARB
#define glDispatchComputeGroupSizeARB _glew_gl_glDispatchComputeGroupSizeARB
#define glDebugMessageControlARB _glew_gl_glDebugMessageControlARB
#define glDebugMessageInsertARB _glew_gl_glDebugMessageInsertARB
#define glDebugMessageCallbackARB _glew_gl_glDebugMessageCallbackARB
#define glGetDebugMessageLogARB _glew_gl_glGetDebugMessageLogARB
#define glDrawBuffersARB _glew_gl_glDrawBuffersARB
#define glBlendEquationiARB _glew_gl_glBlendEquationiARB
#define glBlendEquationSeparateiARB _glew_gl_glBlendEquationSeparateiARB
#define glBlendFunciARB _glew_gl_glBlendFunciARB
#define glBlendFuncSeparateiARB _glew_gl_glBlendFuncSeparateiARB
#define glDrawArraysInstancedARB _glew_gl_glDrawArraysInstancedARB
#define glDrawElementsInstancedARB _glew_gl_glDrawElementsInstancedARB
#define glProgramStringARB _glew_gl_glProgramStringARB
#define glBindProgramARB _glew_gl_glBindProgramARB
#define glDeleteProgramsARB _glew_gl_glDeleteProgramsARB
#define glGenProgramsARB _glew_gl_glGenProgramsARB
#define glProgramEnvParameter4dARB _glew_gl_glProgramEnvParameter4dARB
#define glProgramEnvParameter4dvARB _glew_gl_glProgramEnvParameter4dvARB
#define glProgramEnvParameter4fARB _glew_gl_glProgramEnvParameter4fARB
#define glProgramEnvParameter4fvARB _glew_gl_glProgramEnvParameter4fvARB
#define glProgramLocalParameter4dARB _glew_gl_glProgramLocalParameter4dARB
#define glProgramLocalParameter4dvARB _glew_gl_glProgramLocalParameter4dvARB
#define glProgramLocalParameter4fARB _glew_gl_glProgramLocalParameter4fARB
#define glProgramLocalParameter4fvARB _glew_gl_glProgramLocalParameter4fvARB
#define glGetProgramEnvParameterdvARB _glew_gl_glGetProgramEnvParameterdvARB
#define glGetProgramEnvParameterfvARB _glew_gl_glGetProgramEnvParameterfvARB
#define glGetProgramLocalParameterdvARB _glew_gl_glGetProgramLocalParameterdvARB
#define glGetProgramLocalParameterfvARB _glew_gl_glGetProgramLocalParameterfvARB
#define glGetProgramivARB _glew_gl_glGetProgramivARB
#define glGetProgramStringARB _glew_gl_glGetProgramStringARB
#define glIsProgramARB _glew_gl_glIsProgramARB
#define glProgramParameteriARB _glew_gl_glProgramParameteriARB
#define glFramebufferTextureARB _glew_gl_glFramebufferTextureARB
#define glFramebufferTextureLayerARB _glew_gl_glFramebufferTextureLayerARB
#define glFramebufferTextureFaceARB _glew_gl_glFramebufferTextureFaceARB
#define glUniform1i64ARB _glew_gl_glUniform1i64ARB
#define glUniform2i64ARB _glew_gl_glUniform2i64ARB
#define glUniform3i64ARB _glew_gl_glUniform3i64ARB
#define glUniform4i64ARB _glew_gl_glUniform4i64ARB
#define glUniform1i64vARB _glew_gl_glUniform1i64vARB
#define glUniform2i64vARB _glew_gl_glUniform2i64vARB
#define glUniform3i64vARB _glew_gl_glUniform3i64vARB
#define glUniform4i64vARB _glew_gl_glUniform4i64vARB
#define glUniform1ui64ARB _glew_gl_glUniform1ui64ARB
#define glUniform2ui64ARB _glew_gl_glUniform2ui64ARB
#define glUniform3ui64ARB _glew_gl_glUniform3ui64ARB
#define glUniform4ui64ARB _glew_gl_glUniform4ui64ARB
#define glUniform1ui64vARB _glew_gl_glUniform1ui64vARB
#define glUniform2ui64vARB _glew_gl_glUniform2ui64vARB
#define glUniform3ui64vARB _glew_gl_glUniform3ui64vARB
#define glUniform4ui64vARB _glew_gl_glUniform4ui64vARB
#define glGetUniformi64vARB _glew_gl_glGetUniformi64vARB
#define glGetUniformui64vARB _glew_gl_glGetUniformui64vARB
#define glGetnUniformi64vARB _glew_gl_glGetnUniformi64vARB
#define glGetnUniformui64vARB _glew_gl_glGetnUniformui64vARB
#define glProgramUniform1i64ARB _glew_gl_glProgramUniform1i64ARB
#define glProgramUniform2i64ARB _glew_gl_glProgramUniform2i64ARB
#define glProgramUniform3i64ARB _glew_gl_glProgramUniform3i64ARB
#define glProgramUniform4i64ARB _glew_gl_glProgramUniform4i64ARB
#define glProgramUniform1i64vARB _glew_gl_glProgramUniform1i64vARB
#define glProgramUniform2i64vARB _glew_gl_glProgramUniform2i64vARB
#define glProgramUniform3i64vARB _glew_gl_glProgramUniform3i64vARB
#define glProgramUniform4i64vARB _glew_gl_glProgramUniform4i64vARB
#define glProgramUniform1ui64ARB _glew_gl_glProgramUniform1ui64ARB
#define glProgramUniform2ui64ARB _glew_gl_glProgramUniform2ui64ARB
#define glProgramUniform3ui64ARB _glew_gl_glProgramUniform3ui64ARB
#define glProgramUniform4ui64ARB _glew_gl_glProgramUniform4ui64ARB
#define glProgramUniform1ui64vARB _glew_gl_glProgramUniform1ui64vARB
#define glProgramUniform2ui64vARB _glew_gl_glProgramUniform2ui64vARB
#define glProgramUniform3ui64vARB _glew_gl_glProgramUniform3ui64vARB
#define glProgramUniform4ui64vARB _glew_gl_glProgramUniform4ui64vARB
#define glColorTable _glew_gl_glColorTable
#define glColorTableParameterfv _glew_gl_glColorTableParameterfv
#define glColorTableParameteriv _glew_gl_glColorTableParameteriv
#define glCopyColorTable _glew_gl_glCopyColorTable
#define glGetColorTable _glew_gl_glGetColorTable
#define glGetColorTableParameterfv _glew_gl_glGetColorTableParameterfv
#define glGetColorTableParameteriv _glew_gl_glGetColorTableParameteriv
#define glColorSubTable _glew_gl_glColorSubTable
#define glCopyColorSubTable _glew_gl_glCopyColorSubTable
#define glConvolutionFilter1D _glew_gl_glConvolutionFilter1D
#define glConvolutionFilter2D _glew_gl_glConvolutionFilter2D
#define glConvolutionParameterf _glew_gl_glConvolutionParameterf
#define glConvolutionParameterfv _glew_gl_glConvolutionParameterfv
#define glConvolutionParameteri _glew_gl_glConvolutionParameteri
#define glConvolutionParameteriv _glew_gl_glConvolutionParameteriv
#define glCopyConvolutionFilter1D _glew_gl_glCopyConvolutionFilter1D
#define glCopyConvolutionFilter2D _glew_gl_glCopyConvolutionFilter2D
#define glGetConvolutionFilter _glew_gl_glGetConvolutionFilter
#define glGetConvolutionParameterfv _glew_gl_glGetConvolutionParameterfv
#define glGetConvolutionParameteriv _glew_gl_glGetConvolutionParameteriv
#define glGetSeparableFilter _glew_gl_glGetSeparableFilter
#define glSeparableFilter2D _glew_gl_glSeparableFilter2D
#define glGetHistogram _glew_gl_glGetHistogram
#define glGetHistogramParameterfv _glew_gl_glGetHistogramParameterfv
#define glGetHistogramParameteriv _glew_gl_glGetHistogramParameteriv
#define glGetMinmax _glew_gl_glGetMinmax
#define glGetMinmaxParameterfv _glew_gl_glGetMinmaxParameterfv
#define glGetMinmaxParameteriv _glew_gl_glGetMinmaxParameteriv
#define glHistogram _glew_gl_glHistogram
#define glMinmax _glew_gl_glMinmax
#define glResetHistogram _glew_gl_glResetHistogram
#define glResetMinmax _glew_gl_glResetMinmax
#define glMultiDrawArraysIndirectCountARB _glew_gl_glMultiDrawArraysIndirectCountARB
#define glMultiDrawElementsIndirectCountARB _glew_gl_glMultiDrawElementsIndirectCountARB
#define glVertexAttribDivisorARB _glew_gl_glVertexAttribDivisorARB
#define glCurrentPaletteMatrixARB _glew_gl_glCurrentPaletteMatrixARB
#define glMatrixIndexubvARB _glew_gl_glMatrixIndexubvARB
#define glMatrixIndexusvARB _glew_gl_glMatrixIndexusvARB
#define glMatrixIndexuivARB _glew_gl_glMatrixIndexuivARB
#define glMatrixIndexPointerARB _glew_gl_glMatrixIndexPointerARB
#define glSampleCoverageARB _glew_gl_glSampleCoverageARB
#define glActiveTextureARB _glew_gl_glActiveTextureARB
#define glClientActiveTextureARB _glew_gl_glClientActiveTextureARB
#define glMultiTexCoord1dARB _glew_gl_glMultiTexCoord1dARB
#define glMultiTexCoord1dvARB _glew_gl_glMultiTexCoord1dvARB
#define glMultiTexCoord1fARB _glew_gl_glMultiTexCoord1fARB
#define glMultiTexCoord1fvARB _glew_gl_glMultiTexCoord1fvARB
#define glMultiTexCoord1iARB _glew_gl_glMultiTexCoord1iARB
#define glMultiTexCoord1ivARB _glew_gl_glMultiTexCoord1ivARB
#define glMultiTexCoord1sARB _glew_gl_glMultiTexCoord1sARB
#define glMultiTexCoord1svARB _glew_gl_glMultiTexCoord1svARB
#define glMultiTexCoord2dARB _glew_gl_glMultiTexCoord2dARB
#define glMultiTexCoord2dvARB _glew_gl_glMultiTexCoord2dvARB
#define glMultiTexCoord2fARB _glew_gl_glMultiTexCoord2fARB
#define glMultiTexCoord2fvARB _glew_gl_glMultiTexCoord2fvARB
#define glMultiTexCoord2iARB _glew_gl_glMultiTexCoord2iARB
#define glMultiTexCoord2ivARB _glew_gl_glMultiTexCoord2ivARB
#define glMultiTexCoord2sARB _glew_gl_glMultiTexCoord2sARB
#define glMultiTexCoord2svARB _glew_gl_glMultiTexCoord2svARB
#define glMultiTexCoord3dARB _glew_gl_glMultiTexCoord3dARB
#define glMultiTexCoord3dvARB _glew_gl_glMultiTexCoord3dvARB
#define glMultiTexCoord3fARB _glew_gl_glMultiTexCoord3fARB
#define glMultiTexCoord3fvARB _glew_gl_glMultiTexCoord3fvARB
#define glMultiTexCoord3iARB _glew_gl_glMultiTexCoord3iARB
#define glMultiTexCoord3ivARB _glew_gl_glMultiTexCoord3ivARB
#define glMultiTexCoord3sARB _glew_gl_glMultiTexCoord3sARB
#define glMultiTexCoord3svARB _glew_gl_glMultiTexCoord3svARB
#define glMultiTexCoord4dARB _glew_gl_glMultiTexCoord4dARB
#define glMultiTexCoord4dvARB _glew_gl_glMultiTexCoord4dvARB
#define glMultiTexCoord4fARB _glew_gl_glMultiTexCoord4fARB
#define glMultiTexCoord4fvARB _glew_gl_glMultiTexCoord4fvARB
#define glMultiTexCoord4iARB _glew_gl_glMultiTexCoord4iARB
#define glMultiTexCoord4ivARB _glew_gl_glMultiTexCoord4ivARB
#define glMultiTexCoord4sARB _glew_gl_glMultiTexCoord4sARB
#define glMultiTexCoord4svARB _glew_gl_glMultiTexCoord4svARB
#define glGenQueriesARB _glew_gl_glGenQueriesARB
#define glDeleteQueriesARB _glew_gl_glDeleteQueriesARB
#define glIsQueryARB _glew_gl_glIsQueryARB
#define glBeginQueryARB _glew_gl_glBeginQueryARB
#define glEndQueryARB _glew_gl_glEndQueryARB
#define glGetQueryivARB _glew_gl_glGetQueryivARB
#define glGetQueryObjectivARB _glew_gl_glGetQueryObjectivARB
#define glGetQueryObjectuivARB _glew_gl_glGetQueryObjectuivARB
#define glMaxShaderCompilerThreadsARB _glew_gl_glMaxShaderCompilerThreadsARB
#define glPointParameterfARB _glew_gl_glPointParameterfARB
#define glPointParameterfvARB _glew_gl_glPointParameterfvARB
#define glGetGraphicsResetStatusARB _glew_gl_glGetGraphicsResetStatusARB
#define glGetnTexImageARB _glew_gl_glGetnTexImageARB
#define glReadnPixelsARB _glew_gl_glReadnPixelsARB
#define glGetnCompressedTexImageARB _glew_gl_glGetnCompressedTexImageARB
#define glGetnUniformfvARB _glew_gl_glGetnUniformfvARB
#define glGetnUniformivARB _glew_gl_glGetnUniformivARB
#define glGetnUniformuivARB _glew_gl_glGetnUniformuivARB
#define glGetnUniformdvARB _glew_gl_glGetnUniformdvARB
#define glGetnMapdvARB _glew_gl_glGetnMapdvARB
#define glGetnMapfvARB _glew_gl_glGetnMapfvARB
#define glGetnMapivARB _glew_gl_glGetnMapivARB
#define glGetnPixelMapfvARB _glew_gl_glGetnPixelMapfvARB
#define glGetnPixelMapuivARB _glew_gl_glGetnPixelMapuivARB
#define glGetnPixelMapusvARB _glew_gl_glGetnPixelMapusvARB
#define glGetnPolygonStippleARB _glew_gl_glGetnPolygonStippleARB
#define glGetnColorTableARB _glew_gl_glGetnColorTableARB
#define glGetnConvolutionFilterARB _glew_gl_glGetnConvolutionFilterARB
#define glGetnSeparableFilterARB _glew_gl_glGetnSeparableFilterARB
#define glGetnHistogramARB _glew_gl_glGetnHistogramARB
#define glGetnMinmaxARB _glew_gl_glGetnMinmaxARB
#define glFramebufferSampleLocationsfvARB _glew_gl_glFramebufferSampleLocationsfvARB
#define glNamedFramebufferSampleLocationsfvARB _glew_gl_glNamedFramebufferSampleLocationsfvARB
#define glEvaluateDepthValuesARB _glew_gl_glEvaluateDepthValuesARB
#define glMinSampleShadingARB _glew_gl_glMinSampleShadingARB
#define glDeleteObjectARB _glew_gl_glDeleteObjectARB
#define glGetHandleARB _glew_gl_glGetHandleARB
#define glDetachObjectARB _glew_gl_glDetachObjectARB
#define glCreateShaderObjectARB _glew_gl_glCreateShaderObjectARB
#define glShaderSourceARB _glew_gl_glShaderSourceARB
#define glCompileShaderARB _glew_gl_glCompileShaderARB
#define glCreateProgramObjectARB _glew_gl_glCreateProgramObjectARB
#define glAttachObjectARB _glew_gl_glAttachObjectARB
#define glLinkProgramARB _glew_gl_glLinkProgramARB
#define glUseProgramObjectARB _glew_gl_glUseProgramObjectARB
#define glValidateProgramARB _glew_gl_glValidateProgramARB
#define glUniform1fARB _glew_gl_glUniform1fARB
#define glUniform2fARB _glew_gl_glUniform2fARB
#define glUniform3fARB _glew_gl_glUniform3fARB
#define glUniform4fARB _glew_gl_glUniform4fARB
#define glUniform1iARB _glew_gl_glUniform1iARB
#define glUniform2iARB _glew_gl_glUniform2iARB
#define glUniform3iARB _glew_gl_glUniform3iARB
#define glUniform4iARB _glew_gl_glUniform4iARB
#define glUniform1fvARB _glew_gl_glUniform1fvARB
#define glUniform2fvARB _glew_gl_glUniform2fvARB
#define glUniform3fvARB _glew_gl_glUniform3fvARB
#define glUniform4fvARB _glew_gl_glUniform4fvARB
#define glUniform1ivARB _glew_gl_glUniform1ivARB
#define glUniform2ivARB _glew_gl_glUniform2ivARB
#define glUniform3ivARB _glew_gl_glUniform3ivARB
#define glUniform4ivARB _glew_gl_glUniform4ivARB
#define glUniformMatrix2fvARB _glew_gl_glUniformMatrix2fvARB
#define glUniformMatrix3fvARB _glew_gl_glUniformMatrix3fvARB
#define glUniformMatrix4fvARB _glew_gl_glUniformMatrix4fvARB
#define glGetObjectParameterfvARB _glew_gl_glGetObjectParameterfvARB
#define glGetObjectParameterivARB _glew_gl_glGetObjectParameterivARB
#define glGetInfoLogARB _glew_gl_glGetInfoLogARB
#define glGetAttachedObjectsARB _glew_gl_glGetAttachedObjectsARB
#define glGetUniformLocationARB _glew_gl_glGetUniformLocationARB
#define glGetActiveUniformARB _glew_gl_glGetActiveUniformARB
#define glGetUniformfvARB _glew_gl_glGetUniformfvARB
#define glGetUniformivARB _glew_gl_glGetUniformivARB
#define glGetShaderSourceARB _glew_gl_glGetShaderSourceARB
#define glNamedStringARB _glew_gl_glNamedStringARB
#define glDeleteNamedStringARB _glew_gl_glDeleteNamedStringARB
#define glCompileShaderIncludeARB _glew_gl_glCompileShaderIncludeARB
#define glIsNamedStringARB _glew_gl_glIsNamedStringARB
#define glGetNamedStringARB _glew_gl_glGetNamedStringARB
#define glGetNamedStringivARB _glew_gl_glGetNamedStringivARB
#define glBufferPageCommitmentARB _glew_gl_glBufferPageCommitmentARB
#define glNamedBufferPageCommitmentEXT _glew_gl_glNamedBufferPageCommitmentEXT
#define glNamedBufferPageCommitmentARB _glew_gl_glNamedBufferPageCommitmentARB
#define glTexPageCommitmentARB _glew_gl_glTexPageCommitmentARB
#define glTexBufferARB _glew_gl_glTexBufferARB
#define glCompressedTexImage3DARB _glew_gl_glCompressedTexImage3DARB
#define glCompressedTexImage2DARB _glew_gl_glCompressedTexImage2DARB
#define glCompressedTexImage1DARB _glew_gl_glCompressedTexImage1DARB
#define glCompressedTexSubImage3DARB _glew_gl_glCompressedTexSubImage3DARB
#define glCompressedTexSubImage2DARB _glew_gl_glCompressedTexSubImage2DARB
#define glCompressedTexSubImage1DARB _glew_gl_glCompressedTexSubImage1DARB
#define glGetCompressedTexImageARB _glew_gl_glGetCompressedTexImageARB
#define glLoadTransposeMatrixfARB _glew_gl_glLoadTransposeMatrixfARB
#define glLoadTransposeMatrixdARB _glew_gl_glLoadTransposeMatrixdARB
#define glMultTransposeMatrixfARB _glew_gl_glMultTransposeMatrixfARB
#define glMultTransposeMatrixdARB _glew_gl_glMultTransposeMatrixdARB
#define glWeightbvARB _glew_gl_glWeightbvARB
#define glWeightsvARB _glew_gl_glWeightsvARB
#define glWeightivARB _glew_gl_glWeightivARB
#define glWeightfvARB _glew_gl_glWeightfvARB
#define glWeightdvARB _glew_gl_glWeightdvARB
#define glWeightubvARB _glew_gl_glWeightubvARB
#define glWeightusvARB _glew_gl_glWeightusvARB
#define glWeightuivARB _glew_gl_glWeightuivARB
#define glWeightPointerARB _glew_gl_glWeightPointerARB
#define glVertexBlendARB _glew_gl_glVertexBlendARB
#define glBindBufferARB _glew_gl_glBindBufferARB
#define glDeleteBuffersARB _glew_gl_glDeleteBuffersARB
#define glGenBuffersARB _glew_gl_glGenBuffersARB
#define glIsBufferARB _glew_gl_glIsBufferARB
#define glBufferDataARB _glew_gl_glBufferDataARB
#define glBufferSubDataARB _glew_gl_glBufferSubDataARB
#define glGetBufferSubDataARB _glew_gl_glGetBufferSubDataARB
#define glMapBufferARB _glew_gl_glMapBufferARB
#define glUnmapBufferARB _glew_gl_glUnmapBufferARB
#define glGetBufferParameterivARB _glew_gl_glGetBufferParameterivARB
#define glGetBufferPointervARB _glew_gl_glGetBufferPointervARB
#define glVertexAttrib1dARB _glew_gl_glVertexAttrib1dARB
#define glVertexAttrib1dvARB _glew_gl_glVertexAttrib1dvARB
#define glVertexAttrib1fARB _glew_gl_glVertexAttrib1fARB
#define glVertexAttrib1fvARB _glew_gl_glVertexAttrib1fvARB
#define glVertexAttrib1sARB _glew_gl_glVertexAttrib1sARB
#define glVertexAttrib1svARB _glew_gl_glVertexAttrib1svARB
#define glVertexAttrib2dARB _glew_gl_glVertexAttrib2dARB
#define glVertexAttrib2dvARB _glew_gl_glVertexAttrib2dvARB
#define glVertexAttrib2fARB _glew_gl_glVertexAttrib2fARB
#define glVertexAttrib2fvARB _glew_gl_glVertexAttrib2fvARB
#define glVertexAttrib2sARB _glew_gl_glVertexAttrib2sARB
#define glVertexAttrib2svARB _glew_gl_glVertexAttrib2svARB
#define glVertexAttrib3dARB _glew_gl_glVertexAttrib3dARB
#define glVertexAttrib3dvARB _glew_gl_glVertexAttrib3dvARB
#define glVertexAttrib3fARB _glew_gl_glVertexAttrib3fARB
#define glVertexAttrib3fvARB _glew_gl_glVertexAttrib3fvARB
#define glVertexAttrib3sARB _glew_gl_glVertexAttrib3sARB
#define glVertexAttrib3svARB _glew_gl_glVertexAttrib3svARB
#define glVertexAttrib4NbvARB _glew_gl_glVertexAttrib4NbvARB
#define glVertexAttrib4NivARB _glew_gl_glVertexAttrib4NivARB
#define glVertexAttrib4NsvARB _glew_gl_glVertexAttrib4NsvARB
#define glVertexAttrib4NubARB _glew_gl_glVertexAttrib4NubARB
#define glVertexAttrib4NubvARB _glew_gl_glVertexAttrib4NubvARB
#define glVertexAttrib4NuivARB _glew_gl_glVertexAttrib4NuivARB
#define glVertexAttrib4NusvARB _glew_gl_glVertexAttrib4NusvARB
#define glVertexAttrib4bvARB _glew_gl_glVertexAttrib4bvARB
#define glVertexAttrib4dARB _glew_gl_glVertexAttrib4dARB
#define glVertexAttrib4dvARB _glew_gl_glVertexAttrib4dvARB
#define glVertexAttrib4fARB _glew_gl_glVertexAttrib4fARB
#define glVertexAttrib4fvARB _glew_gl_glVertexAttrib4fvARB
#define glVertexAttrib4ivARB _glew_gl_glVertexAttrib4ivARB
#define glVertexAttrib4sARB _glew_gl_glVertexAttrib4sARB
#define glVertexAttrib4svARB _glew_gl_glVertexAttrib4svARB
#define glVertexAttrib4ubvARB _glew_gl_glVertexAttrib4ubvARB
#define glVertexAttrib4uivARB _glew_gl_glVertexAttrib4uivARB
#define glVertexAttrib4usvARB _glew_gl_glVertexAttrib4usvARB
#define glVertexAttribPointerARB _glew_gl_glVertexAttribPointerARB
#define glEnableVertexAttribArrayARB _glew_gl_glEnableVertexAttribArrayARB
#define glDisableVertexAttribArrayARB _glew_gl_glDisableVertexAttribArrayARB
#define glGetVertexAttribdvARB _glew_gl_glGetVertexAttribdvARB
#define glGetVertexAttribfvARB _glew_gl_glGetVertexAttribfvARB
#define glGetVertexAttribivARB _glew_gl_glGetVertexAttribivARB
#define glGetVertexAttribPointervARB _glew_gl_glGetVertexAttribPointervARB
#define glBindAttribLocationARB _glew_gl_glBindAttribLocationARB
#define glGetActiveAttribARB _glew_gl_glGetActiveAttribARB
#define glGetAttribLocationARB _glew_gl_glGetAttribLocationARB
#define glWindowPos2dARB _glew_gl_glWindowPos2dARB
#define glWindowPos2dvARB _glew_gl_glWindowPos2dvARB
#define glWindowPos2fARB _glew_gl_glWindowPos2fARB
#define glWindowPos2fvARB _glew_gl_glWindowPos2fvARB
#define glWindowPos2iARB _glew_gl_glWindowPos2iARB
#define glWindowPos2ivARB _glew_gl_glWindowPos2ivARB
#define glWindowPos2sARB _glew_gl_glWindowPos2sARB
#define glWindowPos2svARB _glew_gl_glWindowPos2svARB
#define glWindowPos3dARB _glew_gl_glWindowPos3dARB
#define glWindowPos3dvARB _glew_gl_glWindowPos3dvARB
#define glWindowPos3fARB _glew_gl_glWindowPos3fARB
#define glWindowPos3fvARB _glew_gl_glWindowPos3fvARB
#define glWindowPos3iARB _glew_gl_glWindowPos3iARB
#define glWindowPos3ivARB _glew_gl_glWindowPos3ivARB
#define glWindowPos3sARB _glew_gl_glWindowPos3sARB
#define glWindowPos3svARB _glew_gl_glWindowPos3svARB
#define glDrawBuffersATI _glew_gl_glDrawBuffersATI
#define glElementPointerATI _glew_gl_glElementPointerATI
#define glDrawElementArrayATI _glew_gl_glDrawElementArrayATI
#define glDrawRangeElementArrayATI _glew_gl_glDrawRangeElementArrayATI
#define glTexBumpParameterivATI _glew_gl_glTexBumpParameterivATI
#define glTexBumpParameterfvATI _glew_gl_glTexBumpParameterfvATI
#define glGetTexBumpParameterivATI _glew_gl_glGetTexBumpParameterivATI
#define glGetTexBumpParameterfvATI _glew_gl_glGetTexBumpParameterfvATI
#define glGenFragmentShadersATI _glew_gl_glGenFragmentShadersATI
#define glBindFragmentShaderATI _glew_gl_glBindFragmentShaderATI
#define glDeleteFragmentShaderATI _glew_gl_glDeleteFragmentShaderATI
#define glBeginFragmentShaderATI _glew_gl_glBeginFragmentShaderATI
#define glEndFragmentShaderATI _glew_gl_glEndFragmentShaderATI
#define glPassTexCoordATI _glew_gl_glPassTexCoordATI
#define glSampleMapATI _glew_gl_glSampleMapATI
#define glColorFragmentOp1ATI _glew_gl_glColorFragmentOp1ATI
#define glColorFragmentOp2ATI _glew_gl_glColorFragmentOp2ATI
#define glColorFragmentOp3ATI _glew_gl_glColorFragmentOp3ATI
#define glAlphaFragmentOp1ATI _glew_gl_glAlphaFragmentOp1ATI
#define glAlphaFragmentOp2ATI _glew_gl_glAlphaFragmentOp2ATI
#define glAlphaFragmentOp3ATI _glew_gl_glAlphaFragmentOp3ATI
#define glSetFragmentShaderConstantATI _glew_gl_glSetFragmentShaderConstantATI
#define glMapObjectBufferATI _glew_gl_glMapObjectBufferATI
#define glUnmapObjectBufferATI _glew_gl_glUnmapObjectBufferATI
#define glPNTrianglesiATI _glew_gl_glPNTrianglesiATI
#define glPNTrianglesfATI _glew_gl_glPNTrianglesfATI
#define glStencilOpSeparateATI _glew_gl_glStencilOpSeparateATI
#define glStencilFuncSeparateATI _glew_gl_glStencilFuncSeparateATI
#define glNewObjectBufferATI _glew_gl_glNewObjectBufferATI
#define glIsObjectBufferATI _glew_gl_glIsObjectBufferATI
#define glUpdateObjectBufferATI _glew_gl_glUpdateObjectBufferATI
#define glGetObjectBufferfvATI _glew_gl_glGetObjectBufferfvATI
#define glGetObjectBufferivATI _glew_gl_glGetObjectBufferivATI
#define glFreeObjectBufferATI _glew_gl_glFreeObjectBufferATI
#define glArrayObjectATI _glew_gl_glArrayObjectATI
#define glGetArrayObjectfvATI _glew_gl_glGetArrayObjectfvATI
#define glGetArrayObjectivATI _glew_gl_glGetArrayObjectivATI
#define glVariantArrayObjectATI _glew_gl_glVariantArrayObjectATI
#define glGetVariantArrayObjectfvATI _glew_gl_glGetVariantArrayObjectfvATI
#define glGetVariantArrayObjectivATI _glew_gl_glGetVariantArrayObjectivATI
#define glVertexAttribArrayObjectATI _glew_gl_glVertexAttribArrayObjectATI
#define glGetVertexAttribArrayObjectfvATI _glew_gl_glGetVertexAttribArrayObjectfvATI
#define glGetVertexAttribArrayObjectivATI _glew_gl_glGetVertexAttribArrayObjectivATI
#define glVertexStream1sATI _glew_gl_glVertexStream1sATI
#define glVertexStream1svATI _glew_gl_glVertexStream1svATI
#define glVertexStream1iATI _glew_gl_glVertexStream1iATI
#define glVertexStream1ivATI _glew_gl_glVertexStream1ivATI
#define glVertexStream1fATI _glew_gl_glVertexStream1fATI
#define glVertexStream1fvATI _glew_gl_glVertexStream1fvATI
#define glVertexStream1dATI _glew_gl_glVertexStream1dATI
#define glVertexStream1dvATI _glew_gl_glVertexStream1dvATI
#define glVertexStream2sATI _glew_gl_glVertexStream2sATI
#define glVertexStream2svATI _glew_gl_glVertexStream2svATI
#define glVertexStream2iATI _glew_gl_glVertexStream2iATI
#define glVertexStream2ivATI _glew_gl_glVertexStream2ivATI
#define glVertexStream2fATI _glew_gl_glVertexStream2fATI
#define glVertexStream2fvATI _glew_gl_glVertexStream2fvATI
#define glVertexStream2dATI _glew_gl_glVertexStream2dATI
#define glVertexStream2dvATI _glew_gl_glVertexStream2dvATI
#define glVertexStream3sATI _glew_gl_glVertexStream3sATI
#define glVertexStream3svATI _glew_gl_glVertexStream3svATI
#define glVertexStream3iATI _glew_gl_glVertexStream3iATI
#define glVertexStream3ivATI _glew_gl_glVertexStream3ivATI
#define glVertexStream3fATI _glew_gl_glVertexStream3fATI
#define glVertexStream3fvATI _glew_gl_glVertexStream3fvATI
#define glVertexStream3dATI _glew_gl_glVertexStream3dATI
#define glVertexStream3dvATI _glew_gl_glVertexStream3dvATI
#define glVertexStream4sATI _glew_gl_glVertexStream4sATI
#define glVertexStream4svATI _glew_gl_glVertexStream4svATI
#define glVertexStream4iATI _glew_gl_glVertexStream4iATI
#define glVertexStream4ivATI _glew_gl_glVertexStream4ivATI
#define glVertexStream4fATI _glew_gl_glVertexStream4fATI
#define glVertexStream4fvATI _glew_gl_glVertexStream4fvATI
#define glVertexStream4dATI _glew_gl_glVertexStream4dATI
#define glVertexStream4dvATI _glew_gl_glVertexStream4dvATI
#define glNormalStream3bATI _glew_gl_glNormalStream3bATI
#define glNormalStream3bvATI _glew_gl_glNormalStream3bvATI
#define glNormalStream3sATI _glew_gl_glNormalStream3sATI
#define glNormalStream3svATI _glew_gl_glNormalStream3svATI
#define glNormalStream3iATI _glew_gl_glNormalStream3iATI
#define glNormalStream3ivATI _glew_gl_glNormalStream3ivATI
#define glNormalStream3fATI _glew_gl_glNormalStream3fATI
#define glNormalStream3fvATI _glew_gl_glNormalStream3fvATI
#define glNormalStream3dATI _glew_gl_glNormalStream3dATI
#define glNormalStream3dvATI _glew_gl_glNormalStream3dvATI
#define glClientActiveVertexStreamATI _glew_gl_glClientActiveVertexStreamATI
#define glVertexBlendEnviATI _glew_gl_glVertexBlendEnviATI
#define glVertexBlendEnvfATI _glew_gl_glVertexBlendEnvfATI
#define glDrawArraysInstancedBaseInstanceEXT _glew_gl_glDrawArraysInstancedBaseInstanceEXT
#define glDrawElementsInstancedBaseInstanceEXT _glew_gl_glDrawElementsInstancedBaseInstanceEXT
#define glDrawElementsInstancedBaseVertexBaseInstanceEXT _glew_gl_glDrawElementsInstancedBaseVertexBaseInstanceEXT
#define glUniformBufferEXT _glew_gl_glUniformBufferEXT
#define glGetUniformBufferSizeEXT _glew_gl_glGetUniformBufferSizeEXT
#define glGetUniformOffsetEXT _glew_gl_glGetUniformOffsetEXT
#define glBlendColorEXT _glew_gl_glBlendColorEXT
#define glBlendEquationSeparateEXT _glew_gl_glBlendEquationSeparateEXT
#define glBindFragDataLocationIndexedEXT _glew_gl_glBindFragDataLocationIndexedEXT
#define glBindFragDataLocationEXT _glew_gl_glBindFragDataLocationEXT
#define glGetProgramResourceLocationIndexEXT _glew_gl_glGetProgramResourceLocationIndexEXT
#define glGetFragDataIndexEXT _glew_gl_glGetFragDataIndexEXT
#define glBlendFuncSeparateEXT _glew_gl_glBlendFuncSeparateEXT
#define glBlendEquationEXT _glew_gl_glBlendEquationEXT
#define glBufferStorageEXT _glew_gl_glBufferStorageEXT
#define glColorSubTableEXT _glew_gl_glColorSubTableEXT
#define glCopyColorSubTableEXT _glew_gl_glCopyColorSubTableEXT
#define glLockArraysEXT _glew_gl_glLockArraysEXT
#define glUnlockArraysEXT _glew_gl_glUnlockArraysEXT
#define glConvolutionFilter1DEXT _glew_gl_glConvolutionFilter1DEXT
#define glConvolutionFilter2DEXT _glew_gl_glConvolutionFilter2DEXT
#define glConvolutionParameterfEXT _glew_gl_glConvolutionParameterfEXT
#define glConvolutionParameterfvEXT _glew_gl_glConvolutionParameterfvEXT
#define glConvolutionParameteriEXT _glew_gl_glConvolutionParameteriEXT
#define glConvolutionParameterivEXT _glew_gl_glConvolutionParameterivEXT
#define glCopyConvolutionFilter1DEXT _glew_gl_glCopyConvolutionFilter1DEXT
#define glCopyConvolutionFilter2DEXT _glew_gl_glCopyConvolutionFilter2DEXT
#define glGetConvolutionFilterEXT _glew_gl_glGetConvolutionFilterEXT
#define glGetConvolutionParameterfvEXT _glew_gl_glGetConvolutionParameterfvEXT
#define glGetConvolutionParameterivEXT _glew_gl_glGetConvolutionParameterivEXT
#define glGetSeparableFilterEXT _glew_gl_glGetSeparableFilterEXT
#define glSeparableFilter2DEXT _glew_gl_glSeparableFilter2DEXT
#define glTangent3bEXT _glew_gl_glTangent3bEXT
#define glTangent3bvEXT _glew_gl_glTangent3bvEXT
#define glTangent3dEXT _glew_gl_glTangent3dEXT
#define glTangent3dvEXT _glew_gl_glTangent3dvEXT
#define glTangent3fEXT _glew_gl_glTangent3fEXT
#define glTangent3fvEXT _glew_gl_glTangent3fvEXT
#define glTangent3iEXT _glew_gl_glTangent3iEXT
#define glTangent3ivEXT _glew_gl_glTangent3ivEXT
#define glTangent3sEXT _glew_gl_glTangent3sEXT
#define glTangent3svEXT _glew_gl_glTangent3svEXT
#define glBinormal3bEXT _glew_gl_glBinormal3bEXT
#define glBinormal3bvEXT _glew_gl_glBinormal3bvEXT
#define glBinormal3dEXT _glew_gl_glBinormal3dEXT
#define glBinormal3dvEXT _glew_gl_glBinormal3dvEXT
#define glBinormal3fEXT _glew_gl_glBinormal3fEXT
#define glBinormal3fvEXT _glew_gl_glBinormal3fvEXT
#define glBinormal3iEXT _glew_gl_glBinormal3iEXT
#define glBinormal3ivEXT _glew_gl_glBinormal3ivEXT
#define glBinormal3sEXT _glew_gl_glBinormal3sEXT
#define glBinormal3svEXT _glew_gl_glBinormal3svEXT
#define glTangentPointerEXT _glew_gl_glTangentPointerEXT
#define glBinormalPointerEXT _glew_gl_glBinormalPointerEXT
#define glCopyImageSubDataEXT _glew_gl_glCopyImageSubDataEXT
#define glCopyTexImage1DEXT _glew_gl_glCopyTexImage1DEXT
#define glCopyTexImage2DEXT _glew_gl_glCopyTexImage2DEXT
#define glCopyTexSubImage1DEXT _glew_gl_glCopyTexSubImage1DEXT
#define glCopyTexSubImage2DEXT _glew_gl_glCopyTexSubImage2DEXT
#define glCopyTexSubImage3DEXT _glew_gl_glCopyTexSubImage3DEXT
#define glCullParameterdvEXT _glew_gl_glCullParameterdvEXT
#define glCullParameterfvEXT _glew_gl_glCullParameterfvEXT
#define glLabelObjectEXT _glew_gl_glLabelObjectEXT
#define glGetObjectLabelEXT _glew_gl_glGetObjectLabelEXT
#define glInsertEventMarkerEXT _glew_gl_glInsertEventMarkerEXT
#define glPushGroupMarkerEXT _glew_gl_glPushGroupMarkerEXT
#define glPopGroupMarkerEXT _glew_gl_glPopGroupMarkerEXT
#define glDepthBoundsEXT _glew_gl_glDepthBoundsEXT
#define glMatrixLoadfEXT _glew_gl_glMatrixLoadfEXT
#define glMatrixLoaddEXT _glew_gl_glMatrixLoaddEXT
#define glMatrixMultfEXT _glew_gl_glMatrixMultfEXT
#define glMatrixMultdEXT _glew_gl_glMatrixMultdEXT
#define glMatrixLoadIdentityEXT _glew_gl_glMatrixLoadIdentityEXT
#define glMatrixRotatefEXT _glew_gl_glMatrixRotatefEXT
#define glMatrixRotatedEXT _glew_gl_glMatrixRotatedEXT
#define glMatrixScalefEXT _glew_gl_glMatrixScalefEXT
#define glMatrixScaledEXT _glew_gl_glMatrixScaledEXT
#define glMatrixTranslatefEXT _glew_gl_glMatrixTranslatefEXT
#define glMatrixTranslatedEXT _glew_gl_glMatrixTranslatedEXT
#define glMatrixFrustumEXT _glew_gl_glMatrixFrustumEXT
#define glMatrixOrthoEXT _glew_gl_glMatrixOrthoEXT
#define glMatrixPopEXT _glew_gl_glMatrixPopEXT
#define glMatrixPushEXT _glew_gl_glMatrixPushEXT
#define glClientAttribDefaultEXT _glew_gl_glClientAttribDefaultEXT
#define glPushClientAttribDefaultEXT _glew_gl_glPushClientAttribDefaultEXT
#define glTextureParameterfEXT _glew_gl_glTextureParameterfEXT
#define glTextureParameterfvEXT _glew_gl_glTextureParameterfvEXT
#define glTextureParameteriEXT _glew_gl_glTextureParameteriEXT
#define glTextureParameterivEXT _glew_gl_glTextureParameterivEXT
#define glTextureImage1DEXT _glew_gl_glTextureImage1DEXT
#define glTextureImage2DEXT _glew_gl_glTextureImage2DEXT
#define glTextureSubImage1DEXT _glew_gl_glTextureSubImage1DEXT
#define glTextureSubImage2DEXT _glew_gl_glTextureSubImage2DEXT
#define glCopyTextureImage1DEXT _glew_gl_glCopyTextureImage1DEXT
#define glCopyTextureImage2DEXT _glew_gl_glCopyTextureImage2DEXT
#define glCopyTextureSubImage1DEXT _glew_gl_glCopyTextureSubImage1DEXT
#define glCopyTextureSubImage2DEXT _glew_gl_glCopyTextureSubImage2DEXT
#define glGetTextureImageEXT _glew_gl_glGetTextureImageEXT
#define glGetTextureParameterfvEXT _glew_gl_glGetTextureParameterfvEXT
#define glGetTextureParameterivEXT _glew_gl_glGetTextureParameterivEXT
#define glGetTextureLevelParameterfvEXT _glew_gl_glGetTextureLevelParameterfvEXT
#define glGetTextureLevelParameterivEXT _glew_gl_glGetTextureLevelParameterivEXT
#define glTextureImage3DEXT _glew_gl_glTextureImage3DEXT
#define glTextureSubImage3DEXT _glew_gl_glTextureSubImage3DEXT
#define glCopyTextureSubImage3DEXT _glew_gl_glCopyTextureSubImage3DEXT
#define glBindMultiTextureEXT _glew_gl_glBindMultiTextureEXT
#define glMultiTexCoordPointerEXT _glew_gl_glMultiTexCoordPointerEXT
#define glMultiTexEnvfEXT _glew_gl_glMultiTexEnvfEXT
#define glMultiTexEnvfvEXT _glew_gl_glMultiTexEnvfvEXT
#define glMultiTexEnviEXT _glew_gl_glMultiTexEnviEXT
#define glMultiTexEnvivEXT _glew_gl_glMultiTexEnvivEXT
#define glMultiTexGendEXT _glew_gl_glMultiTexGendEXT
#define glMultiTexGendvEXT _glew_gl_glMultiTexGendvEXT
#define glMultiTexGenfEXT _glew_gl_glMultiTexGenfEXT
#define glMultiTexGenfvEXT _glew_gl_glMultiTexGenfvEXT
#define glMultiTexGeniEXT _glew_gl_glMultiTexGeniEXT
#define glMultiTexGenivEXT _glew_gl_glMultiTexGenivEXT
#define glGetMultiTexEnvfvEXT _glew_gl_glGetMultiTexEnvfvEXT
#define glGetMultiTexEnvivEXT _glew_gl_glGetMultiTexEnvivEXT
#define glGetMultiTexGendvEXT _glew_gl_glGetMultiTexGendvEXT
#define glGetMultiTexGenfvEXT _glew_gl_glGetMultiTexGenfvEXT
#define glGetMultiTexGenivEXT _glew_gl_glGetMultiTexGenivEXT
#define glMultiTexParameteriEXT _glew_gl_glMultiTexParameteriEXT
#define glMultiTexParameterivEXT _glew_gl_glMultiTexParameterivEXT
#define glMultiTexParameterfEXT _glew_gl_glMultiTexParameterfEXT
#define glMultiTexParameterfvEXT _glew_gl_glMultiTexParameterfvEXT
#define glMultiTexImage1DEXT _glew_gl_glMultiTexImage1DEXT
#define glMultiTexImage2DEXT _glew_gl_glMultiTexImage2DEXT
#define glMultiTexSubImage1DEXT _glew_gl_glMultiTexSubImage1DEXT
#define glMultiTexSubImage2DEXT _glew_gl_glMultiTexSubImage2DEXT
#define glCopyMultiTexImage1DEXT _glew_gl_glCopyMultiTexImage1DEXT
#define glCopyMultiTexImage2DEXT _glew_gl_glCopyMultiTexImage2DEXT
#define glCopyMultiTexSubImage1DEXT _glew_gl_glCopyMultiTexSubImage1DEXT
#define glCopyMultiTexSubImage2DEXT _glew_gl_glCopyMultiTexSubImage2DEXT
#define glGetMultiTexImageEXT _glew_gl_glGetMultiTexImageEXT
#define glGetMultiTexParameterfvEXT _glew_gl_glGetMultiTexParameterfvEXT
#define glGetMultiTexParameterivEXT _glew_gl_glGetMultiTexParameterivEXT
#define glGetMultiTexLevelParameterfvEXT _glew_gl_glGetMultiTexLevelParameterfvEXT
#define glGetMultiTexLevelParameterivEXT _glew_gl_glGetMultiTexLevelParameterivEXT
#define glMultiTexImage3DEXT _glew_gl_glMultiTexImage3DEXT
#define glMultiTexSubImage3DEXT _glew_gl_glMultiTexSubImage3DEXT
#define glCopyMultiTexSubImage3DEXT _glew_gl_glCopyMultiTexSubImage3DEXT
#define glEnableClientStateIndexedEXT _glew_gl_glEnableClientStateIndexedEXT
#define glDisableClientStateIndexedEXT _glew_gl_glDisableClientStateIndexedEXT
#define glGetFloatIndexedvEXT _glew_gl_glGetFloatIndexedvEXT
#define glGetDoubleIndexedvEXT _glew_gl_glGetDoubleIndexedvEXT
#define glGetPointerIndexedvEXT _glew_gl_glGetPointerIndexedvEXT
#define glEnableIndexedEXT _glew_gl_glEnableIndexedEXT
#define glDisableIndexedEXT _glew_gl_glDisableIndexedEXT
#define glIsEnabledIndexedEXT _glew_gl_glIsEnabledIndexedEXT
#define glGetIntegerIndexedvEXT _glew_gl_glGetIntegerIndexedvEXT
#define glGetBooleanIndexedvEXT _glew_gl_glGetBooleanIndexedvEXT
#define glCompressedTextureImage3DEXT _glew_gl_glCompressedTextureImage3DEXT
#define glCompressedTextureImage2DEXT _glew_gl_glCompressedTextureImage2DEXT
#define glCompressedTextureImage1DEXT _glew_gl_glCompressedTextureImage1DEXT
#define glCompressedTextureSubImage3DEXT _glew_gl_glCompressedTextureSubImage3DEXT
#define glCompressedTextureSubImage2DEXT _glew_gl_glCompressedTextureSubImage2DEXT
#define glCompressedTextureSubImage1DEXT _glew_gl_glCompressedTextureSubImage1DEXT
#define glGetCompressedTextureImageEXT _glew_gl_glGetCompressedTextureImageEXT
#define glCompressedMultiTexImage3DEXT _glew_gl_glCompressedMultiTexImage3DEXT
#define glCompressedMultiTexImage2DEXT _glew_gl_glCompressedMultiTexImage2DEXT
#define glCompressedMultiTexImage1DEXT _glew_gl_glCompressedMultiTexImage1DEXT
#define glCompressedMultiTexSubImage3DEXT _glew_gl_glCompressedMultiTexSubImage3DEXT
#define glCompressedMultiTexSubImage2DEXT _glew_gl_glCompressedMultiTexSubImage2DEXT
#define glCompressedMultiTexSubImage1DEXT _glew_gl_glCompressedMultiTexSubImage1DEXT
#define glGetCompressedMultiTexImageEXT _glew_gl_glGetCompressedMultiTexImageEXT
#define glMatrixLoadTransposefEXT _glew_gl_glMatrixLoadTransposefEXT
#define glMatrixLoadTransposedEXT _glew_gl_glMatrixLoadTransposedEXT
#define glMatrixMultTransposefEXT _glew_gl_glMatrixMultTransposefEXT
#define glMatrixMultTransposedEXT _glew_gl_glMatrixMultTransposedEXT
#define glNamedBufferDataEXT _glew_gl_glNamedBufferDataEXT
#define glNamedBufferSubDataEXT _glew_gl_glNamedBufferSubDataEXT
#define glMapNamedBufferEXT _glew_gl_glMapNamedBufferEXT
#define glUnmapNamedBufferEXT _glew_gl_glUnmapNamedBufferEXT
#define glGetNamedBufferParameterivEXT _glew_gl_glGetNamedBufferParameterivEXT
#define glGetNamedBufferPointervEXT _glew_gl_glGetNamedBufferPointervEXT
#define glGetNamedBufferSubDataEXT _glew_gl_glGetNamedBufferSubDataEXT
#define glProgramUniform1fEXT _glew_gl_glProgramUniform1fEXT
#define glProgramUniform2fEXT _glew_gl_glProgramUniform2fEXT
#define glProgramUniform3fEXT _glew_gl_glProgramUniform3fEXT
#define glProgramUniform4fEXT _glew_gl_glProgramUniform4fEXT
#define glProgramUniform1iEXT _glew_gl_glProgramUniform1iEXT
#define glProgramUniform2iEXT _glew_gl_glProgramUniform2iEXT
#define glProgramUniform3iEXT _glew_gl_glProgramUniform3iEXT
#define glProgramUniform4iEXT _glew_gl_glProgramUniform4iEXT
#define glProgramUniform1fvEXT _glew_gl_glProgramUniform1fvEXT
#define glProgramUniform2fvEXT _glew_gl_glProgramUniform2fvEXT
#define glProgramUniform3fvEXT _glew_gl_glProgramUniform3fvEXT
#define glProgramUniform4fvEXT _glew_gl_glProgramUniform4fvEXT
#define glProgramUniform1ivEXT _glew_gl_glProgramUniform1ivEXT
#define glProgramUniform2ivEXT _glew_gl_glProgramUniform2ivEXT
#define glProgramUniform3ivEXT _glew_gl_glProgramUniform3ivEXT
#define glProgramUniform4ivEXT _glew_gl_glProgramUniform4ivEXT
#define glProgramUniformMatrix2fvEXT _glew_gl_glProgramUniformMatrix2fvEXT
#define glProgramUniformMatrix3fvEXT _glew_gl_glProgramUniformMatrix3fvEXT
#define glProgramUniformMatrix4fvEXT _glew_gl_glProgramUniformMatrix4fvEXT
#define glProgramUniformMatrix2x3fvEXT _glew_gl_glProgramUniformMatrix2x3fvEXT
#define glProgramUniformMatrix3x2fvEXT _glew_gl_glProgramUniformMatrix3x2fvEXT
#define glProgramUniformMatrix2x4fvEXT _glew_gl_glProgramUniformMatrix2x4fvEXT
#define glProgramUniformMatrix4x2fvEXT _glew_gl_glProgramUniformMatrix4x2fvEXT
#define glProgramUniformMatrix3x4fvEXT _glew_gl_glProgramUniformMatrix3x4fvEXT
#define glProgramUniformMatrix4x3fvEXT _glew_gl_glProgramUniformMatrix4x3fvEXT
#define glTextureBufferEXT _glew_gl_glTextureBufferEXT
#define glMultiTexBufferEXT _glew_gl_glMultiTexBufferEXT
#define glTextureParameterIivEXT _glew_gl_glTextureParameterIivEXT
#define glTextureParameterIuivEXT _glew_gl_glTextureParameterIuivEXT
#define glGetTextureParameterIivEXT _glew_gl_glGetTextureParameterIivEXT
#define glGetTextureParameterIuivEXT _glew_gl_glGetTextureParameterIuivEXT
#define glMultiTexParameterIivEXT _glew_gl_glMultiTexParameterIivEXT
#define glMultiTexParameterIuivEXT _glew_gl_glMultiTexParameterIuivEXT
#define glGetMultiTexParameterIivEXT _glew_gl_glGetMultiTexParameterIivEXT
#define glGetMultiTexParameterIuivEXT _glew_gl_glGetMultiTexParameterIuivEXT
#define glProgramUniform1uiEXT _glew_gl_glProgramUniform1uiEXT
#define glProgramUniform2uiEXT _glew_gl_glProgramUniform2uiEXT
#define glProgramUniform3uiEXT _glew_gl_glProgramUniform3uiEXT
#define glProgramUniform4uiEXT _glew_gl_glProgramUniform4uiEXT
#define glProgramUniform1uivEXT _glew_gl_glProgramUniform1uivEXT
#define glProgramUniform2uivEXT _glew_gl_glProgramUniform2uivEXT
#define glProgramUniform3uivEXT _glew_gl_glProgramUniform3uivEXT
#define glProgramUniform4uivEXT _glew_gl_glProgramUniform4uivEXT
#define glNamedProgramLocalParameters4fvEXT _glew_gl_glNamedProgramLocalParameters4fvEXT
#define glNamedProgramLocalParameterI4iEXT _glew_gl_glNamedProgramLocalParameterI4iEXT
#define glNamedProgramLocalParameterI4ivEXT _glew_gl_glNamedProgramLocalParameterI4ivEXT
#define glNamedProgramLocalParametersI4ivEXT _glew_gl_glNamedProgramLocalParametersI4ivEXT
#define glNamedProgramLocalParameterI4uiEXT _glew_gl_glNamedProgramLocalParameterI4uiEXT
#define glNamedProgramLocalParameterI4uivEXT _glew_gl_glNamedProgramLocalParameterI4uivEXT
#define glNamedProgramLocalParametersI4uivEXT _glew_gl_glNamedProgramLocalParametersI4uivEXT
#define glGetNamedProgramLocalParameterIivEXT _glew_gl_glGetNamedProgramLocalParameterIivEXT
#define glGetNamedProgramLocalParameterIuivEXT _glew_gl_glGetNamedProgramLocalParameterIuivEXT
#define glEnableClientStateiEXT _glew_gl_glEnableClientStateiEXT
#define glDisableClientStateiEXT _glew_gl_glDisableClientStateiEXT
#define glGetFloati_vEXT _glew_gl_glGetFloati_vEXT
#define glGetDoublei_vEXT _glew_gl_glGetDoublei_vEXT
#define glGetPointeri_vEXT _glew_gl_glGetPointeri_vEXT
#define glNamedProgramStringEXT _glew_gl_glNamedProgramStringEXT
#define glNamedProgramLocalParameter4dEXT _glew_gl_glNamedProgramLocalParameter4dEXT
#define glNamedProgramLocalParameter4dvEXT _glew_gl_glNamedProgramLocalParameter4dvEXT
#define glNamedProgramLocalParameter4fEXT _glew_gl_glNamedProgramLocalParameter4fEXT
#define glNamedProgramLocalParameter4fvEXT _glew_gl_glNamedProgramLocalParameter4fvEXT
#define glGetNamedProgramLocalParameterdvEXT _glew_gl_glGetNamedProgramLocalParameterdvEXT
#define glGetNamedProgramLocalParameterfvEXT _glew_gl_glGetNamedProgramLocalParameterfvEXT
#define glGetNamedProgramivEXT _glew_gl_glGetNamedProgramivEXT
#define glGetNamedProgramStringEXT _glew_gl_glGetNamedProgramStringEXT
#define glNamedRenderbufferStorageEXT _glew_gl_glNamedRenderbufferStorageEXT
#define glGetNamedRenderbufferParameterivEXT _glew_gl_glGetNamedRenderbufferParameterivEXT
#define glNamedRenderbufferStorageMultisampleEXT _glew_gl_glNamedRenderbufferStorageMultisampleEXT
#define glNamedRenderbufferStorageMultisampleCoverageEXT _glew_gl_glNamedRenderbufferStorageMultisampleCoverageEXT
#define glCheckNamedFramebufferStatusEXT _glew_gl_glCheckNamedFramebufferStatusEXT
#define glNamedFramebufferTexture1DEXT _glew_gl_glNamedFramebufferTexture1DEXT
#define glNamedFramebufferTexture2DEXT _glew_gl_glNamedFramebufferTexture2DEXT
#define glNamedFramebufferTexture3DEXT _glew_gl_glNamedFramebufferTexture3DEXT
#define glNamedFramebufferRenderbufferEXT _glew_gl_glNamedFramebufferRenderbufferEXT
#define glGetNamedFramebufferAttachmentParameterivEXT _glew_gl_glGetNamedFramebufferAttachmentParameterivEXT
#define glGenerateTextureMipmapEXT _glew_gl_glGenerateTextureMipmapEXT
#define glGenerateMultiTexMipmapEXT _glew_gl_glGenerateMultiTexMipmapEXT
#define glFramebufferDrawBufferEXT _glew_gl_glFramebufferDrawBufferEXT
#define glFramebufferDrawBuffersEXT _glew_gl_glFramebufferDrawBuffersEXT
#define glFramebufferReadBufferEXT _glew_gl_glFramebufferReadBufferEXT
#define glGetFramebufferParameterivEXT _glew_gl_glGetFramebufferParameterivEXT
#define glNamedCopyBufferSubDataEXT _glew_gl_glNamedCopyBufferSubDataEXT
#define glNamedFramebufferTextureEXT _glew_gl_glNamedFramebufferTextureEXT
#define glNamedFramebufferTextureLayerEXT _glew_gl_glNamedFramebufferTextureLayerEXT
#define glNamedFramebufferTextureFaceEXT _glew_gl_glNamedFramebufferTextureFaceEXT
#define glTextureRenderbufferEXT _glew_gl_glTextureRenderbufferEXT
#define glMultiTexRenderbufferEXT _glew_gl_glMultiTexRenderbufferEXT
#define glVertexArrayVertexOffsetEXT _glew_gl_glVertexArrayVertexOffsetEXT
#define glVertexArrayColorOffsetEXT _glew_gl_glVertexArrayColorOffsetEXT
#define glVertexArrayEdgeFlagOffsetEXT _glew_gl_glVertexArrayEdgeFlagOffsetEXT
#define glVertexArrayIndexOffsetEXT _glew_gl_glVertexArrayIndexOffsetEXT
#define glVertexArrayNormalOffsetEXT _glew_gl_glVertexArrayNormalOffsetEXT
#define glVertexArrayTexCoordOffsetEXT _glew_gl_glVertexArrayTexCoordOffsetEXT
#define glVertexArrayMultiTexCoordOffsetEXT _glew_gl_glVertexArrayMultiTexCoordOffsetEXT
#define glVertexArrayFogCoordOffsetEXT _glew_gl_glVertexArrayFogCoordOffsetEXT
#define glVertexArraySecondaryColorOffsetEXT _glew_gl_glVertexArraySecondaryColorOffsetEXT
#define glVertexArrayVertexAttribOffsetEXT _glew_gl_glVertexArrayVertexAttribOffsetEXT
#define glVertexArrayVertexAttribIOffsetEXT _glew_gl_glVertexArrayVertexAttribIOffsetEXT
#define glEnableVertexArrayEXT _glew_gl_glEnableVertexArrayEXT
#define glDisableVertexArrayEXT _glew_gl_glDisableVertexArrayEXT
#define glEnableVertexArrayAttribEXT _glew_gl_glEnableVertexArrayAttribEXT
#define glDisableVertexArrayAttribEXT _glew_gl_glDisableVertexArrayAttribEXT
#define glGetVertexArrayIntegervEXT _glew_gl_glGetVertexArrayIntegervEXT
#define glGetVertexArrayPointervEXT _glew_gl_glGetVertexArrayPointervEXT
#define glGetVertexArrayIntegeri_vEXT _glew_gl_glGetVertexArrayIntegeri_vEXT
#define glGetVertexArrayPointeri_vEXT _glew_gl_glGetVertexArrayPointeri_vEXT
#define glMapNamedBufferRangeEXT _glew_gl_glMapNamedBufferRangeEXT
#define glFlushMappedNamedBufferRangeEXT _glew_gl_glFlushMappedNamedBufferRangeEXT
#define glNamedBufferStorageEXT _glew_gl_glNamedBufferStorageEXT
#define glClearNamedBufferDataEXT _glew_gl_glClearNamedBufferDataEXT
#define glClearNamedBufferSubDataEXT _glew_gl_glClearNamedBufferSubDataEXT
#define glNamedFramebufferParameteriEXT _glew_gl_glNamedFramebufferParameteriEXT
#define glGetNamedFramebufferParameterivEXT _glew_gl_glGetNamedFramebufferParameterivEXT
#define glProgramUniform1dEXT _glew_gl_glProgramUniform1dEXT
#define glProgramUniform2dEXT _glew_gl_glProgramUniform2dEXT
#define glProgramUniform3dEXT _glew_gl_glProgramUniform3dEXT
#define glProgramUniform4dEXT _glew_gl_glProgramUniform4dEXT
#define glProgramUniform1dvEXT _glew_gl_glProgramUniform1dvEXT
#define glProgramUniform2dvEXT _glew_gl_glProgramUniform2dvEXT
#define glProgramUniform3dvEXT _glew_gl_glProgramUniform3dvEXT
#define glProgramUniform4dvEXT _glew_gl_glProgramUniform4dvEXT
#define glProgramUniformMatrix2dvEXT _glew_gl_glProgramUniformMatrix2dvEXT
#define glProgramUniformMatrix3dvEXT _glew_gl_glProgramUniformMatrix3dvEXT
#define glProgramUniformMatrix4dvEXT _glew_gl_glProgramUniformMatrix4dvEXT
#define glProgramUniformMatrix2x3dvEXT _glew_gl_glProgramUniformMatrix2x3dvEXT
#define glProgramUniformMatrix2x4dvEXT _glew_gl_glProgramUniformMatrix2x4dvEXT
#define glProgramUniformMatrix3x2dvEXT _glew_gl_glProgramUniformMatrix3x2dvEXT
#define glProgramUniformMatrix3x4dvEXT _glew_gl_glProgramUniformMatrix3x4dvEXT
#define glProgramUniformMatrix4x2dvEXT _glew_gl_glProgramUniformMatrix4x2dvEXT
#define glProgramUniformMatrix4x3dvEXT _glew_gl_glProgramUniformMatrix4x3dvEXT
#define glTextureBufferRangeEXT _glew_gl_glTextureBufferRangeEXT
#define glTextureStorage1DEXT _glew_gl_glTextureStorage1DEXT
#define glTextureStorage2DEXT _glew_gl_glTextureStorage2DEXT
#define glTextureStorage3DEXT _glew_gl_glTextureStorage3DEXT
#define glTextureStorage2DMultisampleEXT _glew_gl_glTextureStorage2DMultisampleEXT
#define glTextureStorage3DMultisampleEXT _glew_gl_glTextureStorage3DMultisampleEXT
#define glVertexArrayBindVertexBufferEXT _glew_gl_glVertexArrayBindVertexBufferEXT
#define glVertexArrayVertexAttribFormatEXT _glew_gl_glVertexArrayVertexAttribFormatEXT
#define glVertexArrayVertexAttribIFormatEXT _glew_gl_glVertexArrayVertexAttribIFormatEXT
#define glVertexArrayVertexAttribLFormatEXT _glew_gl_glVertexArrayVertexAttribLFormatEXT
#define glVertexArrayVertexAttribBindingEXT _glew_gl_glVertexArrayVertexAttribBindingEXT
#define glVertexArrayVertexBindingDivisorEXT _glew_gl_glVertexArrayVertexBindingDivisorEXT
#define glVertexArrayVertexAttribLOffsetEXT _glew_gl_glVertexArrayVertexAttribLOffsetEXT
#define glTexturePageCommitmentEXT _glew_gl_glTexturePageCommitmentEXT
#define glVertexArrayVertexAttribDivisorEXT _glew_gl_glVertexArrayVertexAttribDivisorEXT
#define glDiscardFramebufferEXT _glew_gl_glDiscardFramebufferEXT
#define glGenQueriesEXT _glew_gl_glGenQueriesEXT
#define glDeleteQueriesEXT _glew_gl_glDeleteQueriesEXT
#define glIsQueryEXT _glew_gl_glIsQueryEXT
#define glBeginQueryEXT _glew_gl_glBeginQueryEXT
#define glEndQueryEXT _glew_gl_glEndQueryEXT
#define glQueryCounterEXT _glew_gl_glQueryCounterEXT
#define glGetQueryivEXT _glew_gl_glGetQueryivEXT
#define glGetQueryObjectivEXT _glew_gl_glGetQueryObjectivEXT
#define glGetQueryObjectuivEXT _glew_gl_glGetQueryObjectuivEXT
#define glGetQueryObjecti64vEXT _glew_gl_glGetQueryObjecti64vEXT
#define glGetQueryObjectui64vEXT _glew_gl_glGetQueryObjectui64vEXT
#define glDrawBuffersEXT _glew_gl_glDrawBuffersEXT
#define glColorMaskIndexedEXT _glew_gl_glColorMaskIndexedEXT
#define glEnableiEXT _glew_gl_glEnableiEXT
#define glDisableiEXT _glew_gl_glDisableiEXT
#define glBlendEquationiEXT _glew_gl_glBlendEquationiEXT
#define glBlendEquationSeparateiEXT _glew_gl_glBlendEquationSeparateiEXT
#define glBlendFunciEXT _glew_gl_glBlendFunciEXT
#define glBlendFuncSeparateiEXT _glew_gl_glBlendFuncSeparateiEXT
#define glColorMaskiEXT _glew_gl_glColorMaskiEXT
#define glIsEnablediEXT _glew_gl_glIsEnablediEXT
#define glDrawElementsBaseVertexEXT _glew_gl_glDrawElementsBaseVertexEXT
#define glDrawRangeElementsBaseVertexEXT _glew_gl_glDrawRangeElementsBaseVertexEXT
#define glDrawElementsInstancedBaseVertexEXT _glew_gl_glDrawElementsInstancedBaseVertexEXT
#define glMultiDrawElementsBaseVertexEXT _glew_gl_glMultiDrawElementsBaseVertexEXT
#define glDrawArraysInstancedEXT _glew_gl_glDrawArraysInstancedEXT
#define glDrawElementsInstancedEXT _glew_gl_glDrawElementsInstancedEXT
#define glDrawRangeElementsEXT _glew_gl_glDrawRangeElementsEXT
#define glFogCoordfEXT _glew_gl_glFogCoordfEXT
#define glFogCoordfvEXT _glew_gl_glFogCoordfvEXT
#define glFogCoorddEXT _glew_gl_glFogCoorddEXT
#define glFogCoorddvEXT _glew_gl_glFogCoorddvEXT
#define glFogCoordPointerEXT _glew_gl_glFogCoordPointerEXT
#define glBlitFramebufferEXT _glew_gl_glBlitFramebufferEXT
#define glRenderbufferStorageMultisampleEXT _glew_gl_glRenderbufferStorageMultisampleEXT
#define glIsRenderbufferEXT _glew_gl_glIsRenderbufferEXT
#define glBindRenderbufferEXT _glew_gl_glBindRenderbufferEXT
#define glDeleteRenderbuffersEXT _glew_gl_glDeleteRenderbuffersEXT
#define glGenRenderbuffersEXT _glew_gl_glGenRenderbuffersEXT
#define glRenderbufferStorageEXT _glew_gl_glRenderbufferStorageEXT
#define glGetRenderbufferParameterivEXT _glew_gl_glGetRenderbufferParameterivEXT
#define glIsFramebufferEXT _glew_gl_glIsFramebufferEXT
#define glBindFramebufferEXT _glew_gl_glBindFramebufferEXT
#define glDeleteFramebuffersEXT _glew_gl_glDeleteFramebuffersEXT
#define glGenFramebuffersEXT _glew_gl_glGenFramebuffersEXT
#define glCheckFramebufferStatusEXT _glew_gl_glCheckFramebufferStatusEXT
#define glFramebufferTexture1DEXT _glew_gl_glFramebufferTexture1DEXT
#define glFramebufferTexture2DEXT _glew_gl_glFramebufferTexture2DEXT
#define glFramebufferTexture3DEXT _glew_gl_glFramebufferTexture3DEXT
#define glFramebufferRenderbufferEXT _glew_gl_glFramebufferRenderbufferEXT
#define glGetFramebufferAttachmentParameterivEXT _glew_gl_glGetFramebufferAttachmentParameterivEXT
#define glGenerateMipmapEXT _glew_gl_glGenerateMipmapEXT
#define glFramebufferTextureEXT _glew_gl_glFramebufferTextureEXT
#define glProgramParameteriEXT _glew_gl_glProgramParameteriEXT
#define glProgramEnvParameters4fvEXT _glew_gl_glProgramEnvParameters4fvEXT
#define glProgramLocalParameters4fvEXT _glew_gl_glProgramLocalParameters4fvEXT
#define glGetUniformuivEXT _glew_gl_glGetUniformuivEXT
#define glGetFragDataLocationEXT _glew_gl_glGetFragDataLocationEXT
#define glUniform1uiEXT _glew_gl_glUniform1uiEXT
#define glUniform2uiEXT _glew_gl_glUniform2uiEXT
#define glUniform3uiEXT _glew_gl_glUniform3uiEXT
#define glUniform4uiEXT _glew_gl_glUniform4uiEXT
#define glUniform1uivEXT _glew_gl_glUniform1uivEXT
#define glUniform2uivEXT _glew_gl_glUniform2uivEXT
#define glUniform3uivEXT _glew_gl_glUniform3uivEXT
#define glUniform4uivEXT _glew_gl_glUniform4uivEXT
#define glGetHistogramEXT _glew_gl_glGetHistogramEXT
#define glGetHistogramParameterfvEXT _glew_gl_glGetHistogramParameterfvEXT
#define glGetHistogramParameterivEXT _glew_gl_glGetHistogramParameterivEXT
#define glGetMinmaxEXT _glew_gl_glGetMinmaxEXT
#define glGetMinmaxParameterfvEXT _glew_gl_glGetMinmaxParameterfvEXT
#define glGetMinmaxParameterivEXT _glew_gl_glGetMinmaxParameterivEXT
#define glHistogramEXT _glew_gl_glHistogramEXT
#define glMinmaxEXT _glew_gl_glMinmaxEXT
#define glResetHistogramEXT _glew_gl_glResetHistogramEXT
#define glResetMinmaxEXT _glew_gl_glResetMinmaxEXT
#define glIndexFuncEXT _glew_gl_glIndexFuncEXT
#define glIndexMaterialEXT _glew_gl_glIndexMaterialEXT
#define glVertexAttribDivisorEXT _glew_gl_glVertexAttribDivisorEXT
#define glApplyTextureEXT _glew_gl_glApplyTextureEXT
#define glTextureLightEXT _glew_gl_glTextureLightEXT
#define glTextureMaterialEXT _glew_gl_glTextureMaterialEXT
#define glMapBufferRangeEXT _glew_gl_glMapBufferRangeEXT
#define glFlushMappedBufferRangeEXT _glew_gl_glFlushMappedBufferRangeEXT
#define glMultiDrawArraysEXT _glew_gl_glMultiDrawArraysEXT
#define glMultiDrawElementsEXT _glew_gl_glMultiDrawElementsEXT
#define glMultiDrawArraysIndirectEXT _glew_gl_glMultiDrawArraysIndirectEXT
#define glMultiDrawElementsIndirectEXT _glew_gl_glMultiDrawElementsIndirectEXT
#define glSampleMaskEXT _glew_gl_glSampleMaskEXT
#define glSamplePatternEXT _glew_gl_glSamplePatternEXT
#define glFramebufferTexture2DMultisampleEXT _glew_gl_glFramebufferTexture2DMultisampleEXT
#define glReadBufferIndexedEXT _glew_gl_glReadBufferIndexedEXT
#define glDrawBuffersIndexedEXT _glew_gl_glDrawBuffersIndexedEXT
#define glGetIntegeri_vEXT _glew_gl_glGetIntegeri_vEXT
#define glColorTableEXT _glew_gl_glColorTableEXT
#define glGetColorTableEXT _glew_gl_glGetColorTableEXT
#define glGetColorTableParameterivEXT _glew_gl_glGetColorTableParameterivEXT
#define glGetColorTableParameterfvEXT _glew_gl_glGetColorTableParameterfvEXT
#define glPixelTransformParameteriEXT _glew_gl_glPixelTransformParameteriEXT
#define glPixelTransformParameterfEXT _glew_gl_glPixelTransformParameterfEXT
#define glPixelTransformParameterivEXT _glew_gl_glPixelTransformParameterivEXT
#define glPixelTransformParameterfvEXT _glew_gl_glPixelTransformParameterfvEXT
#define glGetPixelTransformParameterivEXT _glew_gl_glGetPixelTransformParameterivEXT
#define glGetPixelTransformParameterfvEXT _glew_gl_glGetPixelTransformParameterfvEXT
#define glPointParameterfEXT _glew_gl_glPointParameterfEXT
#define glPointParameterfvEXT _glew_gl_glPointParameterfvEXT
#define glPolygonOffsetEXT _glew_gl_glPolygonOffsetEXT
#define glPolygonOffsetClampEXT _glew_gl_glPolygonOffsetClampEXT
#define glPrimitiveBoundingBoxEXT _glew_gl_glPrimitiveBoundingBoxEXT
#define glProvokingVertexEXT _glew_gl_glProvokingVertexEXT
#define glRasterSamplesEXT _glew_gl_glRasterSamplesEXT
#define glGetGraphicsResetStatusEXT _glew_gl_glGetGraphicsResetStatusEXT
#define glReadnPixelsEXT _glew_gl_glReadnPixelsEXT
#define glGetnUniformfvEXT _glew_gl_glGetnUniformfvEXT
#define glGetnUniformivEXT _glew_gl_glGetnUniformivEXT
#define glSecondaryColor3bEXT _glew_gl_glSecondaryColor3bEXT
#define glSecondaryColor3bvEXT _glew_gl_glSecondaryColor3bvEXT
#define glSecondaryColor3dEXT _glew_gl_glSecondaryColor3dEXT
#define glSecondaryColor3dvEXT _glew_gl_glSecondaryColor3dvEXT
#define glSecondaryColor3fEXT _glew_gl_glSecondaryColor3fEXT
#define glSecondaryColor3fvEXT _glew_gl_glSecondaryColor3fvEXT
#define glSecondaryColor3iEXT _glew_gl_glSecondaryColor3iEXT
#define glSecondaryColor3ivEXT _glew_gl_glSecondaryColor3ivEXT
#define glSecondaryColor3sEXT _glew_gl_glSecondaryColor3sEXT
#define glSecondaryColor3svEXT _glew_gl_glSecondaryColor3svEXT
#define glSecondaryColor3ubEXT _glew_gl_glSecondaryColor3ubEXT
#define glSecondaryColor3ubvEXT _glew_gl_glSecondaryColor3ubvEXT
#define glSecondaryColor3uiEXT _glew_gl_glSecondaryColor3uiEXT
#define glSecondaryColor3uivEXT _glew_gl_glSecondaryColor3uivEXT
#define glSecondaryColor3usEXT _glew_gl_glSecondaryColor3usEXT
#define glSecondaryColor3usvEXT _glew_gl_glSecondaryColor3usvEXT
#define glSecondaryColorPointerEXT _glew_gl_glSecondaryColorPointerEXT
#define glUseShaderProgramEXT _glew_gl_glUseShaderProgramEXT
#define glActiveProgramEXT _glew_gl_glActiveProgramEXT
#define glCreateShaderProgramEXT _glew_gl_glCreateShaderProgramEXT
#define glActiveShaderProgramEXT _glew_gl_glActiveShaderProgramEXT
#define glBindProgramPipelineEXT _glew_gl_glBindProgramPipelineEXT
#define glCreateShaderProgramvEXT _glew_gl_glCreateShaderProgramvEXT
#define glDeleteProgramPipelinesEXT _glew_gl_glDeleteProgramPipelinesEXT
#define glGenProgramPipelinesEXT _glew_gl_glGenProgramPipelinesEXT
#define glGetProgramPipelineInfoLogEXT _glew_gl_glGetProgramPipelineInfoLogEXT
#define glGetProgramPipelineivEXT _glew_gl_glGetProgramPipelineivEXT
#define glIsProgramPipelineEXT _glew_gl_glIsProgramPipelineEXT
#define glUseProgramStagesEXT _glew_gl_glUseProgramStagesEXT
#define glValidateProgramPipelineEXT _glew_gl_glValidateProgramPipelineEXT
#define glBindImageTextureEXT _glew_gl_glBindImageTextureEXT
#define glMemoryBarrierEXT _glew_gl_glMemoryBarrierEXT
#define glTexPageCommitmentEXT _glew_gl_glTexPageCommitmentEXT
#define glStencilClearTagEXT _glew_gl_glStencilClearTagEXT
#define glActiveStencilFaceEXT _glew_gl_glActiveStencilFaceEXT
#define glTexSubImage1DEXT _glew_gl_glTexSubImage1DEXT
#define glTexSubImage2DEXT _glew_gl_glTexSubImage2DEXT
#define glPatchParameteriEXT _glew_gl_glPatchParameteriEXT
#define glTexImage3DEXT _glew_gl_glTexImage3DEXT
#define glTexSubImage3DEXT _glew_gl_glTexSubImage3DEXT
#define glFramebufferTextureLayerEXT _glew_gl_glFramebufferTextureLayerEXT
#define glTexParameterIivEXT _glew_gl_glTexParameterIivEXT
#define glTexParameterIuivEXT _glew_gl_glTexParameterIuivEXT
#define glGetTexParameterIivEXT _glew_gl_glGetTexParameterIivEXT
#define glGetTexParameterIuivEXT _glew_gl_glGetTexParameterIuivEXT
#define glSamplerParameterIivEXT _glew_gl_glSamplerParameterIivEXT
#define glSamplerParameterIuivEXT _glew_gl_glSamplerParameterIuivEXT
#define glGetSamplerParameterIivEXT _glew_gl_glGetSamplerParameterIivEXT
#define glGetSamplerParameterIuivEXT _glew_gl_glGetSamplerParameterIuivEXT
#define glTexBufferEXT _glew_gl_glTexBufferEXT
#define glTexBufferRangeEXT _glew_gl_glTexBufferRangeEXT
#define glClearColorIiEXT _glew_gl_glClearColorIiEXT
#define glClearColorIuiEXT _glew_gl_glClearColorIuiEXT
#define glAreTexturesResidentEXT _glew_gl_glAreTexturesResidentEXT
#define glBindTextureEXT _glew_gl_glBindTextureEXT
#define glDeleteTexturesEXT _glew_gl_glDeleteTexturesEXT
#define glGenTexturesEXT _glew_gl_glGenTexturesEXT
#define glIsTextureEXT _glew_gl_glIsTextureEXT
#define glPrioritizeTexturesEXT _glew_gl_glPrioritizeTexturesEXT
#define glTextureNormalEXT _glew_gl_glTextureNormalEXT
#define glTexStorage1DEXT _glew_gl_glTexStorage1DEXT
#define glTexStorage2DEXT _glew_gl_glTexStorage2DEXT
#define glTexStorage3DEXT _glew_gl_glTexStorage3DEXT
#define glTextureViewEXT _glew_gl_glTextureViewEXT
#define glBeginTransformFeedbackEXT _glew_gl_glBeginTransformFeedbackEXT
#define glEndTransformFeedbackEXT _glew_gl_glEndTransformFeedbackEXT
#define glBindBufferRangeEXT _glew_gl_glBindBufferRangeEXT
#define glBindBufferOffsetEXT _glew_gl_glBindBufferOffsetEXT
#define glBindBufferBaseEXT _glew_gl_glBindBufferBaseEXT
#define glTransformFeedbackVaryingsEXT _glew_gl_glTransformFeedbackVaryingsEXT
#define glGetTransformFeedbackVaryingEXT _glew_gl_glGetTransformFeedbackVaryingEXT
#define glArrayElementEXT _glew_gl_glArrayElementEXT
#define glColorPointerEXT _glew_gl_glColorPointerEXT
#define glDrawArraysEXT _glew_gl_glDrawArraysEXT
#define glEdgeFlagPointerEXT _glew_gl_glEdgeFlagPointerEXT
#define glGetPointervEXT _glew_gl_glGetPointervEXT
#define glIndexPointerEXT _glew_gl_glIndexPointerEXT
#define glNormalPointerEXT _glew_gl_glNormalPointerEXT
#define glTexCoordPointerEXT _glew_gl_glTexCoordPointerEXT
#define glVertexPointerEXT _glew_gl_glVertexPointerEXT
#define glVertexAttribL1dEXT _glew_gl_glVertexAttribL1dEXT
#define glVertexAttribL2dEXT _glew_gl_glVertexAttribL2dEXT
#define glVertexAttribL3dEXT _glew_gl_glVertexAttribL3dEXT
#define glVertexAttribL4dEXT _glew_gl_glVertexAttribL4dEXT
#define glVertexAttribL1dvEXT _glew_gl_glVertexAttribL1dvEXT
#define glVertexAttribL2dvEXT _glew_gl_glVertexAttribL2dvEXT
#define glVertexAttribL3dvEXT _glew_gl_glVertexAttribL3dvEXT
#define glVertexAttribL4dvEXT _glew_gl_glVertexAttribL4dvEXT
#define glVertexAttribLPointerEXT _glew_gl_glVertexAttribLPointerEXT
#define glGetVertexAttribLdvEXT _glew_gl_glGetVertexAttribLdvEXT
#define glBeginVertexShaderEXT _glew_gl_glBeginVertexShaderEXT
#define glEndVertexShaderEXT _glew_gl_glEndVertexShaderEXT
#define glBindVertexShaderEXT _glew_gl_glBindVertexShaderEXT
#define glGenVertexShadersEXT _glew_gl_glGenVertexShadersEXT
#define glDeleteVertexShaderEXT _glew_gl_glDeleteVertexShaderEXT
#define glShaderOp1EXT _glew_gl_glShaderOp1EXT
#define glShaderOp2EXT _glew_gl_glShaderOp2EXT
#define glShaderOp3EXT _glew_gl_glShaderOp3EXT
#define glSwizzleEXT _glew_gl_glSwizzleEXT
#define glWriteMaskEXT _glew_gl_glWriteMaskEXT
#define glInsertComponentEXT _glew_gl_glInsertComponentEXT
#define glExtractComponentEXT _glew_gl_glExtractComponentEXT
#define glGenSymbolsEXT _glew_gl_glGenSymbolsEXT
#define glSetInvariantEXT _glew_gl_glSetInvariantEXT
#define glSetLocalConstantEXT _glew_gl_glSetLocalConstantEXT
#define glVariantbvEXT _glew_gl_glVariantbvEXT
#define glVariantsvEXT _glew_gl_glVariantsvEXT
#define glVariantivEXT _glew_gl_glVariantivEXT
#define glVariantfvEXT _glew_gl_glVariantfvEXT
#define glVariantdvEXT _glew_gl_glVariantdvEXT
#define glVariantubvEXT _glew_gl_glVariantubvEXT
#define glVariantusvEXT _glew_gl_glVariantusvEXT
#define glVariantuivEXT _glew_gl_glVariantuivEXT
#define glVariantPointerEXT _glew_gl_glVariantPointerEXT
#define glEnableVariantClientStateEXT _glew_gl_glEnableVariantClientStateEXT
#define glDisableVariantClientStateEXT _glew_gl_glDisableVariantClientStateEXT
#define glBindLightParameterEXT _glew_gl_glBindLightParameterEXT
#define glBindMaterialParameterEXT _glew_gl_glBindMaterialParameterEXT
#define glBindTexGenParameterEXT _glew_gl_glBindTexGenParameterEXT
#define glBindTextureUnitParameterEXT _glew_gl_glBindTextureUnitParameterEXT
#define glBindParameterEXT _glew_gl_glBindParameterEXT
#define glIsVariantEnabledEXT _glew_gl_glIsVariantEnabledEXT
#define glGetVariantBooleanvEXT _glew_gl_glGetVariantBooleanvEXT
#define glGetVariantIntegervEXT _glew_gl_glGetVariantIntegervEXT
#define glGetVariantFloatvEXT _glew_gl_glGetVariantFloatvEXT
#define glGetVariantPointervEXT _glew_gl_glGetVariantPointervEXT
#define glGetInvariantBooleanvEXT _glew_gl_glGetInvariantBooleanvEXT
#define glGetInvariantIntegervEXT _glew_gl_glGetInvariantIntegervEXT
#define glGetInvariantFloatvEXT _glew_gl_glGetInvariantFloatvEXT
#define glGetLocalConstantBooleanvEXT _glew_gl_glGetLocalConstantBooleanvEXT
#define glGetLocalConstantIntegervEXT _glew_gl_glGetLocalConstantIntegervEXT
#define glGetLocalConstantFloatvEXT _glew_gl_glGetLocalConstantFloatvEXT
#define glVertexWeightfEXT _glew_gl_glVertexWeightfEXT
#define glVertexWeightfvEXT _glew_gl_glVertexWeightfvEXT
#define glVertexWeightPointerEXT _glew_gl_glVertexWeightPointerEXT
#define glImportSyncEXT _glew_gl_glImportSyncEXT
#define glFrameTerminatorGREMEDY _glew_gl_glFrameTerminatorGREMEDY
#define glStringMarkerGREMEDY _glew_gl_glStringMarkerGREMEDY
#define glImageTransformParameteriHP _glew_gl_glImageTransformParameteriHP
#define glImageTransformParameterfHP _glew_gl_glImageTransformParameterfHP
#define glImageTransformParameterivHP _glew_gl_glImageTransformParameterivHP
#define glImageTransformParameterfvHP _glew_gl_glImageTransformParameterfvHP
#define glGetImageTransformParameterivHP _glew_gl_glGetImageTransformParameterivHP
#define glGetImageTransformParameterfvHP _glew_gl_glGetImageTransformParameterfvHP
#define glMultiModeDrawArraysIBM _glew_gl_glMultiModeDrawArraysIBM
#define glMultiModeDrawElementsIBM _glew_gl_glMultiModeDrawElementsIBM
#define glFlushStaticDataIBM _glew_gl_glFlushStaticDataIBM
#define glColorPointerListIBM _glew_gl_glColorPointerListIBM
#define glSecondaryColorPointerListIBM _glew_gl_glSecondaryColorPointerListIBM
#define glEdgeFlagPointerListIBM _glew_gl_glEdgeFlagPointerListIBM
#define glFogCoordPointerListIBM _glew_gl_glFogCoordPointerListIBM
#define glIndexPointerListIBM _glew_gl_glIndexPointerListIBM
#define glNormalPointerListIBM _glew_gl_glNormalPointerListIBM
#define glTexCoordPointerListIBM _glew_gl_glTexCoordPointerListIBM
#define glVertexPointerListIBM _glew_gl_glVertexPointerListIBM
#define glRenderbufferStorageMultisampleIMG _glew_gl_glRenderbufferStorageMultisampleIMG
#define glFramebufferTexture2DMultisampleIMG _glew_gl_glFramebufferTexture2DMultisampleIMG
#define glBlendFuncSeparateINGR _glew_gl_glBlendFuncSeparateINGR
#define glApplyFramebufferAttachmentCMAAINTEL _glew_gl_glApplyFramebufferAttachmentCMAAINTEL
#define glSyncTextureINTEL _glew_gl_glSyncTextureINTEL
#define glUnmapTexture2DINTEL _glew_gl_glUnmapTexture2DINTEL
#define glMapTexture2DINTEL _glew_gl_glMapTexture2DINTEL
#define glVertexPointervINTEL _glew_gl_glVertexPointervINTEL
#define glNormalPointervINTEL _glew_gl_glNormalPointervINTEL
#define glColorPointervINTEL _glew_gl_glColorPointervINTEL
#define glTexCoordPointervINTEL _glew_gl_glTexCoordPointervINTEL
#define glBeginPerfQueryINTEL _glew_gl_glBeginPerfQueryINTEL
#define glCreatePerfQueryINTEL _glew_gl_glCreatePerfQueryINTEL
#define glDeletePerfQueryINTEL _glew_gl_glDeletePerfQueryINTEL
#define glEndPerfQueryINTEL _glew_gl_glEndPerfQueryINTEL
#define glGetFirstPerfQueryIdINTEL _glew_gl_glGetFirstPerfQueryIdINTEL
#define glGetNextPerfQueryIdINTEL _glew_gl_glGetNextPerfQueryIdINTEL
#define glGetPerfCounterInfoINTEL _glew_gl_glGetPerfCounterInfoINTEL
#define glGetPerfQueryDataINTEL _glew_gl_glGetPerfQueryDataINTEL
#define glGetPerfQueryIdByNameINTEL _glew_gl_glGetPerfQueryIdByNameINTEL
#define glGetPerfQueryInfoINTEL _glew_gl_glGetPerfQueryInfoINTEL
#define glBlendBarrierKHR _glew_gl_glBlendBarrierKHR
#define glDebugMessageControlKHR _glew_gl_glDebugMessageControlKHR
#define glDebugMessageInsertKHR _glew_gl_glDebugMessageInsertKHR
#define glDebugMessageCallbackKHR _glew_gl_glDebugMessageCallbackKHR
#define glGetDebugMessageLogKHR _glew_gl_glGetDebugMessageLogKHR
#define glPushDebugGroupKHR _glew_gl_glPushDebugGroupKHR
#define glPopDebugGroupKHR _glew_gl_glPopDebugGroupKHR
#define glObjectLabelKHR _glew_gl_glObjectLabelKHR
#define glGetObjectLabelKHR _glew_gl_glGetObjectLabelKHR
#define glObjectPtrLabelKHR _glew_gl_glObjectPtrLabelKHR
#define glGetObjectPtrLabelKHR _glew_gl_glGetObjectPtrLabelKHR
#define glGetPointervKHR _glew_gl_glGetPointervKHR
#define glGetGraphicsResetStatusKHR _glew_gl_glGetGraphicsResetStatusKHR
#define glReadnPixelsKHR _glew_gl_glReadnPixelsKHR
#define glGetnUniformfvKHR _glew_gl_glGetnUniformfvKHR
#define glGetnUniformivKHR _glew_gl_glGetnUniformivKHR
#define glGetnUniformuivKHR _glew_gl_glGetnUniformuivKHR
#define glResizeBuffersMESA _glew_gl_glResizeBuffersMESA
#define glWindowPos2dMESA _glew_gl_glWindowPos2dMESA
#define glWindowPos2dvMESA _glew_gl_glWindowPos2dvMESA
#define glWindowPos2fMESA _glew_gl_glWindowPos2fMESA
#define glWindowPos2fvMESA _glew_gl_glWindowPos2fvMESA
#define glWindowPos2iMESA _glew_gl_glWindowPos2iMESA
#define glWindowPos2ivMESA _glew_gl_glWindowPos2ivMESA
#define glWindowPos2sMESA _glew_gl_glWindowPos2sMESA
#define glWindowPos2svMESA _glew_gl_glWindowPos2svMESA
#define glWindowPos3dMESA _glew_gl_glWindowPos3dMESA
#define glWindowPos3dvMESA _glew_gl_glWindowPos3dvMESA
#define glWindowPos3fMESA _glew_gl_glWindowPos3fMESA
#define glWindowPos3fvMESA _glew_gl_glWindowPos3fvMESA
#define glWindowPos3iMESA _glew_gl_glWindowPos3iMESA
#define glWindowPos3ivMESA _glew_gl_glWindowPos3ivMESA
#define glWindowPos3sMESA _glew_gl_glWindowPos3sMESA
#define glWindowPos3svMESA _glew_gl_glWindowPos3svMESA
#define glWindowPos4dMESA _glew_gl_glWindowPos4dMESA
#define glWindowPos4dvMESA _glew_gl_glWindowPos4dvMESA
#define glWindowPos4fMESA _glew_gl_glWindowPos4fMESA
#define glWindowPos4fvMESA _glew_gl_glWindowPos4fvMESA
#define glWindowPos4iMESA _glew_gl_glWindowPos4iMESA
#define glWindowPos4ivMESA _glew_gl_glWindowPos4ivMESA
#define glWindowPos4sMESA _glew_gl_glWindowPos4sMESA
#define glWindowPos4svMESA _glew_gl_glWindowPos4svMESA
#define glBeginConditionalRenderNVX _glew_gl_glBeginConditionalRenderNVX
#define glEndConditionalRenderNVX _glew_gl_glEndConditionalRenderNVX
#define glMultiDrawArraysIndirectBindlessNV _glew_gl_glMultiDrawArraysIndirectBindlessNV
#define glMultiDrawElementsIndirectBindlessNV _glew_gl_glMultiDrawElementsIndirectBindlessNV
#define glMultiDrawArraysIndirectBindlessCountNV _glew_gl_glMultiDrawArraysIndirectBindlessCountNV
#define glMultiDrawElementsIndirectBindlessCountNV _glew_gl_glMultiDrawElementsIndirectBindlessCountNV
#define glGetTextureHandleNV _glew_gl_glGetTextureHandleNV
#define glGetTextureSamplerHandleNV _glew_gl_glGetTextureSamplerHandleNV
#define glMakeTextureHandleResidentNV _glew_gl_glMakeTextureHandleResidentNV
#define glMakeTextureHandleNonResidentNV _glew_gl_glMakeTextureHandleNonResidentNV
#define glGetImageHandleNV _glew_gl_glGetImageHandleNV
#define glMakeImageHandleResidentNV _glew_gl_glMakeImageHandleResidentNV
#define glMakeImageHandleNonResidentNV _glew_gl_glMakeImageHandleNonResidentNV
#define glUniformHandleui64NV _glew_gl_glUniformHandleui64NV
#define glUniformHandleui64vNV _glew_gl_glUniformHandleui64vNV
#define glProgramUniformHandleui64NV _glew_gl_glProgramUniformHandleui64NV
#define glProgramUniformHandleui64vNV _glew_gl_glProgramUniformHandleui64vNV
#define glIsTextureHandleResidentNV _glew_gl_glIsTextureHandleResidentNV
#define glIsImageHandleResidentNV _glew_gl_glIsImageHandleResidentNV
#define glBlendParameteriNV _glew_gl_glBlendParameteriNV
#define glBlendBarrierNV _glew_gl_glBlendBarrierNV
#define glCreateStatesNV _glew_gl_glCreateStatesNV
#define glDeleteStatesNV _glew_gl_glDeleteStatesNV
#define glIsStateNV _glew_gl_glIsStateNV
#define glStateCaptureNV _glew_gl_glStateCaptureNV
#define glGetCommandHeaderNV _glew_gl_glGetCommandHeaderNV
#define glGetStageIndexNV _glew_gl_glGetStageIndexNV
#define glDrawCommandsNV _glew_gl_glDrawCommandsNV
#define glDrawCommandsAddressNV _glew_gl_glDrawCommandsAddressNV
#define glDrawCommandsStatesNV _glew_gl_glDrawCommandsStatesNV
#define glDrawCommandsStatesAddressNV _glew_gl_glDrawCommandsStatesAddressNV
#define glCreateCommandListsNV _glew_gl_glCreateCommandListsNV
#define glDeleteCommandListsNV _glew_gl_glDeleteCommandListsNV
#define glIsCommandListNV _glew_gl_glIsCommandListNV
#define glListDrawCommandsStatesClientNV _glew_gl_glListDrawCommandsStatesClientNV
#define glCommandListSegmentsNV _glew_gl_glCommandListSegmentsNV
#define glCompileCommandListNV _glew_gl_glCompileCommandListNV
#define glCallCommandListNV _glew_gl_glCallCommandListNV
#define glBeginConditionalRenderNV _glew_gl_glBeginConditionalRenderNV
#define glEndConditionalRenderNV _glew_gl_glEndConditionalRenderNV
#define glSubpixelPrecisionBiasNV _glew_gl_glSubpixelPrecisionBiasNV
#define glConservativeRasterParameterfNV _glew_gl_glConservativeRasterParameterfNV
#define glCopyBufferSubDataNV _glew_gl_glCopyBufferSubDataNV
#define glCopyImageSubDataNV _glew_gl_glCopyImageSubDataNV
#define glCoverageMaskNV _glew_gl_glCoverageMaskNV
#define glCoverageOperationNV _glew_gl_glCoverageOperationNV
#define glDepthRangedNV _glew_gl_glDepthRangedNV
#define glClearDepthdNV _glew_gl_glClearDepthdNV
#define glDepthBoundsdNV _glew_gl_glDepthBoundsdNV
#define glDrawBuffersNV _glew_gl_glDrawBuffersNV
#define glDrawArraysInstancedNV _glew_gl_glDrawArraysInstancedNV
#define glDrawElementsInstancedNV _glew_gl_glDrawElementsInstancedNV
#define glDrawTextureNV _glew_gl_glDrawTextureNV
#define glMapControlPointsNV _glew_gl_glMapControlPointsNV
#define glMapParameterivNV _glew_gl_glMapParameterivNV
#define glMapParameterfvNV _glew_gl_glMapParameterfvNV
#define glGetMapControlPointsNV _glew_gl_glGetMapControlPointsNV
#define glGetMapParameterivNV _glew_gl_glGetMapParameterivNV
#define glGetMapParameterfvNV _glew_gl_glGetMapParameterfvNV
#define glGetMapAttribParameterivNV _glew_gl_glGetMapAttribParameterivNV
#define glGetMapAttribParameterfvNV _glew_gl_glGetMapAttribParameterfvNV
#define glEvalMapsNV _glew_gl_glEvalMapsNV
#define glGetMultisamplefvNV _glew_gl_glGetMultisamplefvNV
#define glSampleMaskIndexedNV _glew_gl_glSampleMaskIndexedNV
#define glTexRenderbufferNV _glew_gl_glTexRenderbufferNV
#define glDeleteFencesNV _glew_gl_glDeleteFencesNV
#define glGenFencesNV _glew_gl_glGenFencesNV
#define glIsFenceNV _glew_gl_glIsFenceNV
#define glTestFenceNV _glew_gl_glTestFenceNV
#define glGetFenceivNV _glew_gl_glGetFenceivNV
#define glFinishFenceNV _glew_gl_glFinishFenceNV
#define glSetFenceNV _glew_gl_glSetFenceNV
#define glFragmentCoverageColorNV _glew_gl_glFragmentCoverageColorNV
#define glProgramNamedParameter4fNV _glew_gl_glProgramNamedParameter4fNV
#define glProgramNamedParameter4fvNV _glew_gl_glProgramNamedParameter4fvNV
#define glProgramNamedParameter4dNV _glew_gl_glProgramNamedParameter4dNV
#define glProgramNamedParameter4dvNV _glew_gl_glProgramNamedParameter4dvNV
#define glGetProgramNamedParameterfvNV _glew_gl_glGetProgramNamedParameterfvNV
#define glGetProgramNamedParameterdvNV _glew_gl_glGetProgramNamedParameterdvNV
#define glBlitFramebufferNV _glew_gl_glBlitFramebufferNV
#define glCoverageModulationTableNV _glew_gl_glCoverageModulationTableNV
#define glGetCoverageModulationTableNV _glew_gl_glGetCoverageModulationTableNV
#define glCoverageModulationNV _glew_gl_glCoverageModulationNV
#define glRenderbufferStorageMultisampleNV _glew_gl_glRenderbufferStorageMultisampleNV
#define glRenderbufferStorageMultisampleCoverageNV _glew_gl_glRenderbufferStorageMultisampleCoverageNV
#define glProgramVertexLimitNV _glew_gl_glProgramVertexLimitNV
#define glFramebufferTextureFaceEXT _glew_gl_glFramebufferTextureFaceEXT
#define glProgramLocalParameterI4iNV _glew_gl_glProgramLocalParameterI4iNV
#define glProgramLocalParameterI4ivNV _glew_gl_glProgramLocalParameterI4ivNV
#define glProgramLocalParametersI4ivNV _glew_gl_glProgramLocalParametersI4ivNV
#define glProgramLocalParameterI4uiNV _glew_gl_glProgramLocalParameterI4uiNV
#define glProgramLocalParameterI4uivNV _glew_gl_glProgramLocalParameterI4uivNV
#define glProgramLocalParametersI4uivNV _glew_gl_glProgramLocalParametersI4uivNV
#define glProgramEnvParameterI4iNV _glew_gl_glProgramEnvParameterI4iNV
#define glProgramEnvParameterI4ivNV _glew_gl_glProgramEnvParameterI4ivNV
#define glProgramEnvParametersI4ivNV _glew_gl_glProgramEnvParametersI4ivNV
#define glProgramEnvParameterI4uiNV _glew_gl_glProgramEnvParameterI4uiNV
#define glProgramEnvParameterI4uivNV _glew_gl_glProgramEnvParameterI4uivNV
#define glProgramEnvParametersI4uivNV _glew_gl_glProgramEnvParametersI4uivNV
#define glGetProgramLocalParameterIivNV _glew_gl_glGetProgramLocalParameterIivNV
#define glGetProgramLocalParameterIuivNV _glew_gl_glGetProgramLocalParameterIuivNV
#define glGetProgramEnvParameterIivNV _glew_gl_glGetProgramEnvParameterIivNV
#define glGetProgramEnvParameterIuivNV _glew_gl_glGetProgramEnvParameterIuivNV
#define glProgramSubroutineParametersuivNV _glew_gl_glProgramSubroutineParametersuivNV
#define glGetProgramSubroutineParameteruivNV _glew_gl_glGetProgramSubroutineParameteruivNV
#define glVertex2hNV _glew_gl_glVertex2hNV
#define glVertex2hvNV _glew_gl_glVertex2hvNV
#define glVertex3hNV _glew_gl_glVertex3hNV
#define glVertex3hvNV _glew_gl_glVertex3hvNV
#define glVertex4hNV _glew_gl_glVertex4hNV
#define glVertex4hvNV _glew_gl_glVertex4hvNV
#define glNormal3hNV _glew_gl_glNormal3hNV
#define glNormal3hvNV _glew_gl_glNormal3hvNV
#define glColor3hNV _glew_gl_glColor3hNV
#define glColor3hvNV _glew_gl_glColor3hvNV
#define glColor4hNV _glew_gl_glColor4hNV
#define glColor4hvNV _glew_gl_glColor4hvNV
#define glTexCoord1hNV _glew_gl_glTexCoord1hNV
#define glTexCoord1hvNV _glew_gl_glTexCoord1hvNV
#define glTexCoord2hNV _glew_gl_glTexCoord2hNV
#define glTexCoord2hvNV _glew_gl_glTexCoord2hvNV
#define glTexCoord3hNV _glew_gl_glTexCoord3hNV
#define glTexCoord3hvNV _glew_gl_glTexCoord3hvNV
#define glTexCoord4hNV _glew_gl_glTexCoord4hNV
#define glTexCoord4hvNV _glew_gl_glTexCoord4hvNV
#define glMultiTexCoord1hNV _glew_gl_glMultiTexCoord1hNV
#define glMultiTexCoord1hvNV _glew_gl_glMultiTexCoord1hvNV
#define glMultiTexCoord2hNV _glew_gl_glMultiTexCoord2hNV
#define glMultiTexCoord2hvNV _glew_gl_glMultiTexCoord2hvNV
#define glMultiTexCoord3hNV _glew_gl_glMultiTexCoord3hNV
#define glMultiTexCoord3hvNV _glew_gl_glMultiTexCoord3hvNV
#define glMultiTexCoord4hNV _glew_gl_glMultiTexCoord4hNV
#define glMultiTexCoord4hvNV _glew_gl_glMultiTexCoord4hvNV
#define glFogCoordhNV _glew_gl_glFogCoordhNV
#define glFogCoordhvNV _glew_gl_glFogCoordhvNV
#define glSecondaryColor3hNV _glew_gl_glSecondaryColor3hNV
#define glSecondaryColor3hvNV _glew_gl_glSecondaryColor3hvNV
#define glVertexWeighthNV _glew_gl_glVertexWeighthNV
#define glVertexWeighthvNV _glew_gl_glVertexWeighthvNV
#define glVertexAttrib1hNV _glew_gl_glVertexAttrib1hNV
#define glVertexAttrib1hvNV _glew_gl_glVertexAttrib1hvNV
#define glVertexAttrib2hNV _glew_gl_glVertexAttrib2hNV
#define glVertexAttrib2hvNV _glew_gl_glVertexAttrib2hvNV
#define glVertexAttrib3hNV _glew_gl_glVertexAttrib3hNV
#define glVertexAttrib3hvNV _glew_gl_glVertexAttrib3hvNV
#define glVertexAttrib4hNV _glew_gl_glVertexAttrib4hNV
#define glVertexAttrib4hvNV _glew_gl_glVertexAttrib4hvNV
#define glVertexAttribs1hvNV _glew_gl_glVertexAttribs1hvNV
#define glVertexAttribs2hvNV _glew_gl_glVertexAttribs2hvNV
#define glVertexAttribs3hvNV _glew_gl_glVertexAttribs3hvNV
#define glVertexAttribs4hvNV _glew_gl_glVertexAttribs4hvNV
#define glVertexAttribDivisorNV _glew_gl_glVertexAttribDivisorNV
#define glGetInternalformatSampleivNV _glew_gl_glGetInternalformatSampleivNV
#define glUniformMatrix2x3fvNV _glew_gl_glUniformMatrix2x3fvNV
#define glUniformMatrix3x2fvNV _glew_gl_glUniformMatrix3x2fvNV
#define glUniformMatrix2x4fvNV _glew_gl_glUniformMatrix2x4fvNV
#define glUniformMatrix4x2fvNV _glew_gl_glUniformMatrix4x2fvNV
#define glUniformMatrix3x4fvNV _glew_gl_glUniformMatrix3x4fvNV
#define glUniformMatrix4x3fvNV _glew_gl_glUniformMatrix4x3fvNV
#define glGenOcclusionQueriesNV _glew_gl_glGenOcclusionQueriesNV
#define glDeleteOcclusionQueriesNV _glew_gl_glDeleteOcclusionQueriesNV
#define glIsOcclusionQueryNV _glew_gl_glIsOcclusionQueryNV
#define glBeginOcclusionQueryNV _glew_gl_glBeginOcclusionQueryNV
#define glEndOcclusionQueryNV _glew_gl_glEndOcclusionQueryNV
#define glGetOcclusionQueryivNV _glew_gl_glGetOcclusionQueryivNV
#define glGetOcclusionQueryuivNV _glew_gl_glGetOcclusionQueryuivNV
#define glProgramBufferParametersfvNV _glew_gl_glProgramBufferParametersfvNV
#define glProgramBufferParametersIivNV _glew_gl_glProgramBufferParametersIivNV
#define glProgramBufferParametersIuivNV _glew_gl_glProgramBufferParametersIuivNV
#define glGenPathsNV _glew_gl_glGenPathsNV
#define glDeletePathsNV _glew_gl_glDeletePathsNV
#define glIsPathNV _glew_gl_glIsPathNV
#define glPathCommandsNV _glew_gl_glPathCommandsNV
#define glPathCoordsNV _glew_gl_glPathCoordsNV
#define glPathSubCommandsNV _glew_gl_glPathSubCommandsNV
#define glPathSubCoordsNV _glew_gl_glPathSubCoordsNV
#define glPathStringNV _glew_gl_glPathStringNV
#define glPathGlyphsNV _glew_gl_glPathGlyphsNV
#define glPathGlyphRangeNV _glew_gl_glPathGlyphRangeNV
#define glWeightPathsNV _glew_gl_glWeightPathsNV
#define glCopyPathNV _glew_gl_glCopyPathNV
#define glInterpolatePathsNV _glew_gl_glInterpolatePathsNV
#define glTransformPathNV _glew_gl_glTransformPathNV
#define glPathParameterivNV _glew_gl_glPathParameterivNV
#define glPathParameteriNV _glew_gl_glPathParameteriNV
#define glPathParameterfvNV _glew_gl_glPathParameterfvNV
#define glPathParameterfNV _glew_gl_glPathParameterfNV
#define glPathDashArrayNV _glew_gl_glPathDashArrayNV
#define glPathStencilFuncNV _glew_gl_glPathStencilFuncNV
#define glPathStencilDepthOffsetNV _glew_gl_glPathStencilDepthOffsetNV
#define glStencilFillPathNV _glew_gl_glStencilFillPathNV
#define glStencilStrokePathNV _glew_gl_glStencilStrokePathNV
#define glStencilFillPathInstancedNV _glew_gl_glStencilFillPathInstancedNV
#define glStencilStrokePathInstancedNV _glew_gl_glStencilStrokePathInstancedNV
#define glPathCoverDepthFuncNV _glew_gl_glPathCoverDepthFuncNV
#define glCoverFillPathNV _glew_gl_glCoverFillPathNV
#define glCoverStrokePathNV _glew_gl_glCoverStrokePathNV
#define glCoverFillPathInstancedNV _glew_gl_glCoverFillPathInstancedNV
#define glCoverStrokePathInstancedNV _glew_gl_glCoverStrokePathInstancedNV
#define glGetPathParameterivNV _glew_gl_glGetPathParameterivNV
#define glGetPathParameterfvNV _glew_gl_glGetPathParameterfvNV
#define glGetPathCommandsNV _glew_gl_glGetPathCommandsNV
#define glGetPathCoordsNV _glew_gl_glGetPathCoordsNV
#define glGetPathDashArrayNV _glew_gl_glGetPathDashArrayNV
#define glGetPathMetricsNV _glew_gl_glGetPathMetricsNV
#define glGetPathMetricRangeNV _glew_gl_glGetPathMetricRangeNV
#define glGetPathSpacingNV _glew_gl_glGetPathSpacingNV
#define glIsPointInFillPathNV _glew_gl_glIsPointInFillPathNV
#define glIsPointInStrokePathNV _glew_gl_glIsPointInStrokePathNV
#define glGetPathLengthNV _glew_gl_glGetPathLengthNV
#define glPointAlongPathNV _glew_gl_glPointAlongPathNV
#define glMatrixLoad3x2fNV _glew_gl_glMatrixLoad3x2fNV
#define glMatrixLoad3x3fNV _glew_gl_glMatrixLoad3x3fNV
#define glMatrixLoadTranspose3x3fNV _glew_gl_glMatrixLoadTranspose3x3fNV
#define glMatrixMult3x2fNV _glew_gl_glMatrixMult3x2fNV
#define glMatrixMult3x3fNV _glew_gl_glMatrixMult3x3fNV
#define glMatrixMultTranspose3x3fNV _glew_gl_glMatrixMultTranspose3x3fNV
#define glStencilThenCoverFillPathNV _glew_gl_glStencilThenCoverFillPathNV
#define glStencilThenCoverStrokePathNV _glew_gl_glStencilThenCoverStrokePathNV
#define glStencilThenCoverFillPathInstancedNV _glew_gl_glStencilThenCoverFillPathInstancedNV
#define glStencilThenCoverStrokePathInstancedNV _glew_gl_glStencilThenCoverStrokePathInstancedNV
#define glPathGlyphIndexRangeNV _glew_gl_glPathGlyphIndexRangeNV
#define glPathGlyphIndexArrayNV _glew_gl_glPathGlyphIndexArrayNV
#define glPathMemoryGlyphIndexArrayNV _glew_gl_glPathMemoryGlyphIndexArrayNV
#define glProgramPathFragmentInputGenNV _glew_gl_glProgramPathFragmentInputGenNV
#define glGetProgramResourcefvNV _glew_gl_glGetProgramResourcefvNV
#define glPathColorGenNV _glew_gl_glPathColorGenNV
#define glPathTexGenNV _glew_gl_glPathTexGenNV
#define glPathFogGenNV _glew_gl_glPathFogGenNV
#define glGetPathColorGenivNV _glew_gl_glGetPathColorGenivNV
#define glGetPathColorGenfvNV _glew_gl_glGetPathColorGenfvNV
#define glGetPathTexGenivNV _glew_gl_glGetPathTexGenivNV
#define glGetPathTexGenfvNV _glew_gl_glGetPathTexGenfvNV
#define glPixelDataRangeNV _glew_gl_glPixelDataRangeNV
#define glFlushPixelDataRangeNV _glew_gl_glFlushPixelDataRangeNV
#define glPointParameteriNV _glew_gl_glPointParameteriNV
#define glPointParameterivNV _glew_gl_glPointParameterivNV
#define glPolygonModeNV _glew_gl_glPolygonModeNV
#define glPresentFrameKeyedNV _glew_gl_glPresentFrameKeyedNV
#define glPresentFrameDualFillNV _glew_gl_glPresentFrameDualFillNV
#define glGetVideoivNV _glew_gl_glGetVideoivNV
#define glGetVideouivNV _glew_gl_glGetVideouivNV
#define glGetVideoi64vNV _glew_gl_glGetVideoi64vNV
#define glGetVideoui64vNV _glew_gl_glGetVideoui64vNV
#define glPrimitiveRestartNV _glew_gl_glPrimitiveRestartNV
#define glPrimitiveRestartIndexNV _glew_gl_glPrimitiveRestartIndexNV
#define glReadBufferNV _glew_gl_glReadBufferNV
#define glCombinerParameterfvNV _glew_gl_glCombinerParameterfvNV
#define glCombinerParameterfNV _glew_gl_glCombinerParameterfNV
#define glCombinerParameterivNV _glew_gl_glCombinerParameterivNV
#define glCombinerParameteriNV _glew_gl_glCombinerParameteriNV
#define glCombinerInputNV _glew_gl_glCombinerInputNV
#define glCombinerOutputNV _glew_gl_glCombinerOutputNV
#define glFinalCombinerInputNV _glew_gl_glFinalCombinerInputNV
#define glGetCombinerInputParameterfvNV _glew_gl_glGetCombinerInputParameterfvNV
#define glGetCombinerInputParameterivNV _glew_gl_glGetCombinerInputParameterivNV
#define glGetCombinerOutputParameterfvNV _glew_gl_glGetCombinerOutputParameterfvNV
#define glGetCombinerOutputParameterivNV _glew_gl_glGetCombinerOutputParameterivNV
#define glGetFinalCombinerInputParameterfvNV _glew_gl_glGetFinalCombinerInputParameterfvNV
#define glGetFinalCombinerInputParameterivNV _glew_gl_glGetFinalCombinerInputParameterivNV
#define glCombinerStageParameterfvNV _glew_gl_glCombinerStageParameterfvNV
#define glGetCombinerStageParameterfvNV _glew_gl_glGetCombinerStageParameterfvNV
#define glFramebufferSampleLocationsfvNV _glew_gl_glFramebufferSampleLocationsfvNV
#define glNamedFramebufferSampleLocationsfvNV _glew_gl_glNamedFramebufferSampleLocationsfvNV
#define glResolveDepthValuesNV _glew_gl_glResolveDepthValuesNV
#define glMakeBufferResidentNV _glew_gl_glMakeBufferResidentNV
#define glMakeBufferNonResidentNV _glew_gl_glMakeBufferNonResidentNV
#define glIsBufferResidentNV _glew_gl_glIsBufferResidentNV
#define glMakeNamedBufferResidentNV _glew_gl_glMakeNamedBufferResidentNV
#define glMakeNamedBufferNonResidentNV _glew_gl_glMakeNamedBufferNonResidentNV
#define glIsNamedBufferResidentNV _glew_gl_glIsNamedBufferResidentNV
#define glGetBufferParameterui64vNV _glew_gl_glGetBufferParameterui64vNV
#define glGetNamedBufferParameterui64vNV _glew_gl_glGetNamedBufferParameterui64vNV
#define glGetIntegerui64vNV _glew_gl_glGetIntegerui64vNV
#define glUniformui64NV _glew_gl_glUniformui64NV
#define glUniformui64vNV _glew_gl_glUniformui64vNV
#define glProgramUniformui64NV _glew_gl_glProgramUniformui64NV
#define glProgramUniformui64vNV _glew_gl_glProgramUniformui64vNV
#define glTextureBarrierNV _glew_gl_glTextureBarrierNV
#define glTexImage2DMultisampleCoverageNV _glew_gl_glTexImage2DMultisampleCoverageNV
#define glTexImage3DMultisampleCoverageNV _glew_gl_glTexImage3DMultisampleCoverageNV
#define glTextureImage2DMultisampleNV _glew_gl_glTextureImage2DMultisampleNV
#define glTextureImage3DMultisampleNV _glew_gl_glTextureImage3DMultisampleNV
#define glTextureImage2DMultisampleCoverageNV _glew_gl_glTextureImage2DMultisampleCoverageNV
#define glTextureImage3DMultisampleCoverageNV _glew_gl_glTextureImage3DMultisampleCoverageNV
#define glBeginTransformFeedbackNV _glew_gl_glBeginTransformFeedbackNV
#define glEndTransformFeedbackNV _glew_gl_glEndTransformFeedbackNV
#define glTransformFeedbackAttribsNV _glew_gl_glTransformFeedbackAttribsNV
#define glBindBufferRangeNV _glew_gl_glBindBufferRangeNV
#define glBindBufferOffsetNV _glew_gl_glBindBufferOffsetNV
#define glBindBufferBaseNV _glew_gl_glBindBufferBaseNV
#define glTransformFeedbackVaryingsNV _glew_gl_glTransformFeedbackVaryingsNV
#define glActiveVaryingNV _glew_gl_glActiveVaryingNV
#define glGetVaryingLocationNV _glew_gl_glGetVaryingLocationNV
#define glGetActiveVaryingNV _glew_gl_glGetActiveVaryingNV
#define glGetTransformFeedbackVaryingNV _glew_gl_glGetTransformFeedbackVaryingNV
#define glTransformFeedbackStreamAttribsNV _glew_gl_glTransformFeedbackStreamAttribsNV
#define glBindTransformFeedbackNV _glew_gl_glBindTransformFeedbackNV
#define glDeleteTransformFeedbacksNV _glew_gl_glDeleteTransformFeedbacksNV
#define glGenTransformFeedbacksNV _glew_gl_glGenTransformFeedbacksNV
#define glIsTransformFeedbackNV _glew_gl_glIsTransformFeedbackNV
#define glPauseTransformFeedbackNV _glew_gl_glPauseTransformFeedbackNV
#define glResumeTransformFeedbackNV _glew_gl_glResumeTransformFeedbackNV
#define glDrawTransformFeedbackNV _glew_gl_glDrawTransformFeedbackNV
#define glVDPAUInitNV _glew_gl_glVDPAUInitNV
#define glVDPAUFiniNV _glew_gl_glVDPAUFiniNV
#define glVDPAURegisterVideoSurfaceNV _glew_gl_glVDPAURegisterVideoSurfaceNV
#define glVDPAURegisterOutputSurfaceNV _glew_gl_glVDPAURegisterOutputSurfaceNV
#define glVDPAUIsSurfaceNV _glew_gl_glVDPAUIsSurfaceNV
#define glVDPAUUnregisterSurfaceNV _glew_gl_glVDPAUUnregisterSurfaceNV
#define glVDPAUGetSurfaceivNV _glew_gl_glVDPAUGetSurfaceivNV
#define glVDPAUSurfaceAccessNV _glew_gl_glVDPAUSurfaceAccessNV
#define glVDPAUMapSurfacesNV _glew_gl_glVDPAUMapSurfacesNV
#define glVDPAUUnmapSurfacesNV _glew_gl_glVDPAUUnmapSurfacesNV
#define glFlushVertexArrayRangeNV _glew_gl_glFlushVertexArrayRangeNV
#define glVertexArrayRangeNV _glew_gl_glVertexArrayRangeNV
#define glVertexAttribL1i64NV _glew_gl_glVertexAttribL1i64NV
#define glVertexAttribL2i64NV _glew_gl_glVertexAttribL2i64NV
#define glVertexAttribL3i64NV _glew_gl_glVertexAttribL3i64NV
#define glVertexAttribL4i64NV _glew_gl_glVertexAttribL4i64NV
#define glVertexAttribL1i64vNV _glew_gl_glVertexAttribL1i64vNV
#define glVertexAttribL2i64vNV _glew_gl_glVertexAttribL2i64vNV
#define glVertexAttribL3i64vNV _glew_gl_glVertexAttribL3i64vNV
#define glVertexAttribL4i64vNV _glew_gl_glVertexAttribL4i64vNV
#define glVertexAttribL1ui64NV _glew_gl_glVertexAttribL1ui64NV
#define glVertexAttribL2ui64NV _glew_gl_glVertexAttribL2ui64NV
#define glVertexAttribL3ui64NV _glew_gl_glVertexAttribL3ui64NV
#define glVertexAttribL4ui64NV _glew_gl_glVertexAttribL4ui64NV
#define glVertexAttribL1ui64vNV _glew_gl_glVertexAttribL1ui64vNV
#define glVertexAttribL2ui64vNV _glew_gl_glVertexAttribL2ui64vNV
#define glVertexAttribL3ui64vNV _glew_gl_glVertexAttribL3ui64vNV
#define glVertexAttribL4ui64vNV _glew_gl_glVertexAttribL4ui64vNV
#define glGetVertexAttribLi64vNV _glew_gl_glGetVertexAttribLi64vNV
#define glGetVertexAttribLui64vNV _glew_gl_glGetVertexAttribLui64vNV
#define glVertexAttribLFormatNV _glew_gl_glVertexAttribLFormatNV
#define glBufferAddressRangeNV _glew_gl_glBufferAddressRangeNV
#define glVertexFormatNV _glew_gl_glVertexFormatNV
#define glNormalFormatNV _glew_gl_glNormalFormatNV
#define glColorFormatNV _glew_gl_glColorFormatNV
#define glIndexFormatNV _glew_gl_glIndexFormatNV
#define glTexCoordFormatNV _glew_gl_glTexCoordFormatNV
#define glEdgeFlagFormatNV _glew_gl_glEdgeFlagFormatNV
#define glSecondaryColorFormatNV _glew_gl_glSecondaryColorFormatNV
#define glFogCoordFormatNV _glew_gl_glFogCoordFormatNV
#define glVertexAttribFormatNV _glew_gl_glVertexAttribFormatNV
#define glVertexAttribIFormatNV _glew_gl_glVertexAttribIFormatNV
#define glGetIntegerui64i_vNV _glew_gl_glGetIntegerui64i_vNV
#define glAreProgramsResidentNV _glew_gl_glAreProgramsResidentNV
#define glBindProgramNV _glew_gl_glBindProgramNV
#define glDeleteProgramsNV _glew_gl_glDeleteProgramsNV
#define glExecuteProgramNV _glew_gl_glExecuteProgramNV
#define glGenProgramsNV _glew_gl_glGenProgramsNV
#define glGetProgramParameterdvNV _glew_gl_glGetProgramParameterdvNV
#define glGetProgramParameterfvNV _glew_gl_glGetProgramParameterfvNV
#define glGetProgramivNV _glew_gl_glGetProgramivNV
#define glGetProgramStringNV _glew_gl_glGetProgramStringNV
#define glGetTrackMatrixivNV _glew_gl_glGetTrackMatrixivNV
#define glGetVertexAttribdvNV _glew_gl_glGetVertexAttribdvNV
#define glGetVertexAttribfvNV _glew_gl_glGetVertexAttribfvNV
#define glGetVertexAttribivNV _glew_gl_glGetVertexAttribivNV
#define glGetVertexAttribPointervNV _glew_gl_glGetVertexAttribPointervNV
#define glIsProgramNV _glew_gl_glIsProgramNV
#define glLoadProgramNV _glew_gl_glLoadProgramNV
#define glProgramParameter4dNV _glew_gl_glProgramParameter4dNV
#define glProgramParameter4dvNV _glew_gl_glProgramParameter4dvNV
#define glProgramParameter4fNV _glew_gl_glProgramParameter4fNV
#define glProgramParameter4fvNV _glew_gl_glProgramParameter4fvNV
#define glProgramParameters4dvNV _glew_gl_glProgramParameters4dvNV
#define glProgramParameters4fvNV _glew_gl_glProgramParameters4fvNV
#define glRequestResidentProgramsNV _glew_gl_glRequestResidentProgramsNV
#define glTrackMatrixNV _glew_gl_glTrackMatrixNV
#define glVertexAttribPointerNV _glew_gl_glVertexAttribPointerNV
#define glVertexAttrib1dNV _glew_gl_glVertexAttrib1dNV
#define glVertexAttrib1dvNV _glew_gl_glVertexAttrib1dvNV
#define glVertexAttrib1fNV _glew_gl_glVertexAttrib1fNV
#define glVertexAttrib1fvNV _glew_gl_glVertexAttrib1fvNV
#define glVertexAttrib1sNV _glew_gl_glVertexAttrib1sNV
#define glVertexAttrib1svNV _glew_gl_glVertexAttrib1svNV
#define glVertexAttrib2dNV _glew_gl_glVertexAttrib2dNV
#define glVertexAttrib2dvNV _glew_gl_glVertexAttrib2dvNV
#define glVertexAttrib2fNV _glew_gl_glVertexAttrib2fNV
#define glVertexAttrib2fvNV _glew_gl_glVertexAttrib2fvNV
#define glVertexAttrib2sNV _glew_gl_glVertexAttrib2sNV
#define glVertexAttrib2svNV _glew_gl_glVertexAttrib2svNV
#define glVertexAttrib3dNV _glew_gl_glVertexAttrib3dNV
#define glVertexAttrib3dvNV _glew_gl_glVertexAttrib3dvNV
#define glVertexAttrib3fNV _glew_gl_glVertexAttrib3fNV
#define glVertexAttrib3fvNV _glew_gl_glVertexAttrib3fvNV
#define glVertexAttrib3sNV _glew_gl_glVertexAttrib3sNV
#define glVertexAttrib3svNV _glew_gl_glVertexAttrib3svNV
#define glVertexAttrib4dNV _glew_gl_glVertexAttrib4dNV
#define glVertexAttrib4dvNV _glew_gl_glVertexAttrib4dvNV
#define glVertexAttrib4fNV _glew_gl_glVertexAttrib4fNV
#define glVertexAttrib4fvNV _glew_gl_glVertexAttrib4fvNV
#define glVertexAttrib4sNV _glew_gl_glVertexAttrib4sNV
#define glVertexAttrib4svNV _glew_gl_glVertexAttrib4svNV
#define glVertexAttrib4ubNV _glew_gl_glVertexAttrib4ubNV
#define glVertexAttrib4ubvNV _glew_gl_glVertexAttrib4ubvNV
#define glVertexAttribs1dvNV _glew_gl_glVertexAttribs1dvNV
#define glVertexAttribs1fvNV _glew_gl_glVertexAttribs1fvNV
#define glVertexAttribs1svNV _glew_gl_glVertexAttribs1svNV
#define glVertexAttribs2dvNV _glew_gl_glVertexAttribs2dvNV
#define glVertexAttribs2fvNV _glew_gl_glVertexAttribs2fvNV
#define glVertexAttribs2svNV _glew_gl_glVertexAttribs2svNV
#define glVertexAttribs3dvNV _glew_gl_glVertexAttribs3dvNV
#define glVertexAttribs3fvNV _glew_gl_glVertexAttribs3fvNV
#define glVertexAttribs3svNV _glew_gl_glVertexAttribs3svNV
#define glVertexAttribs4dvNV _glew_gl_glVertexAttribs4dvNV
#define glVertexAttribs4fvNV _glew_gl_glVertexAttribs4fvNV
#define glVertexAttribs4svNV _glew_gl_glVertexAttribs4svNV
#define glVertexAttribs4ubvNV _glew_gl_glVertexAttribs4ubvNV
#define glVertexAttribI1iEXT _glew_gl_glVertexAttribI1iEXT
#define glVertexAttribI2iEXT _glew_gl_glVertexAttribI2iEXT
#define glVertexAttribI3iEXT _glew_gl_glVertexAttribI3iEXT
#define glVertexAttribI4iEXT _glew_gl_glVertexAttribI4iEXT
#define glVertexAttribI1uiEXT _glew_gl_glVertexAttribI1uiEXT
#define glVertexAttribI2uiEXT _glew_gl_glVertexAttribI2uiEXT
#define glVertexAttribI3uiEXT _glew_gl_glVertexAttribI3uiEXT
#define glVertexAttribI4uiEXT _glew_gl_glVertexAttribI4uiEXT
#define glVertexAttribI1ivEXT _glew_gl_glVertexAttribI1ivEXT
#define glVertexAttribI2ivEXT _glew_gl_glVertexAttribI2ivEXT
#define glVertexAttribI3ivEXT _glew_gl_glVertexAttribI3ivEXT
#define glVertexAttribI4ivEXT _glew_gl_glVertexAttribI4ivEXT
#define glVertexAttribI1uivEXT _glew_gl_glVertexAttribI1uivEXT
#define glVertexAttribI2uivEXT _glew_gl_glVertexAttribI2uivEXT
#define glVertexAttribI3uivEXT _glew_gl_glVertexAttribI3uivEXT
#define glVertexAttribI4uivEXT _glew_gl_glVertexAttribI4uivEXT
#define glVertexAttribI4bvEXT _glew_gl_glVertexAttribI4bvEXT
#define glVertexAttribI4svEXT _glew_gl_glVertexAttribI4svEXT
#define glVertexAttribI4ubvEXT _glew_gl_glVertexAttribI4ubvEXT
#define glVertexAttribI4usvEXT _glew_gl_glVertexAttribI4usvEXT
#define glVertexAttribIPointerEXT _glew_gl_glVertexAttribIPointerEXT
#define glGetVertexAttribIivEXT _glew_gl_glGetVertexAttribIivEXT
#define glGetVertexAttribIuivEXT _glew_gl_glGetVertexAttribIuivEXT
#define glBeginVideoCaptureNV _glew_gl_glBeginVideoCaptureNV
#define glBindVideoCaptureStreamBufferNV _glew_gl_glBindVideoCaptureStreamBufferNV
#define glBindVideoCaptureStreamTextureNV _glew_gl_glBindVideoCaptureStreamTextureNV
#define glEndVideoCaptureNV _glew_gl_glEndVideoCaptureNV
#define glGetVideoCaptureivNV _glew_gl_glGetVideoCaptureivNV
#define glGetVideoCaptureStreamivNV _glew_gl_glGetVideoCaptureStreamivNV
#define glGetVideoCaptureStreamfvNV _glew_gl_glGetVideoCaptureStreamfvNV
#define glGetVideoCaptureStreamdvNV _glew_gl_glGetVideoCaptureStreamdvNV
#define glVideoCaptureNV _glew_gl_glVideoCaptureNV
#define glVideoCaptureStreamParameterivNV _glew_gl_glVideoCaptureStreamParameterivNV
#define glVideoCaptureStreamParameterfvNV _glew_gl_glVideoCaptureStreamParameterfvNV
#define glVideoCaptureStreamParameterdvNV _glew_gl_glVideoCaptureStreamParameterdvNV
#define glViewportArrayvNV _glew_gl_glViewportArrayvNV
#define glViewportIndexedfNV _glew_gl_glViewportIndexedfNV
#define glViewportIndexedfvNV _glew_gl_glViewportIndexedfvNV
#define glScissorArrayvNV _glew_gl_glScissorArrayvNV
#define glScissorIndexedNV _glew_gl_glScissorIndexedNV
#define glScissorIndexedvNV _glew_gl_glScissorIndexedvNV
#define glDepthRangeArrayfvNV _glew_gl_glDepthRangeArrayfvNV
#define glDepthRangeIndexedfNV _glew_gl_glDepthRangeIndexedfNV
#define glGetFloati_vNV _glew_gl_glGetFloati_vNV
#define glEnableiNV _glew_gl_glEnableiNV
#define glDisableiNV _glew_gl_glDisableiNV
#define glIsEnablediNV _glew_gl_glIsEnablediNV
#define glEGLImageTargetTexture2DOES _glew_gl_glEGLImageTargetTexture2DOES
#define glEGLImageTargetRenderbufferStorageOES _glew_gl_glEGLImageTargetRenderbufferStorageOES
#define glMultiTexCoord1bOES _glew_gl_glMultiTexCoord1bOES
#define glMultiTexCoord1bvOES _glew_gl_glMultiTexCoord1bvOES
#define glMultiTexCoord2bOES _glew_gl_glMultiTexCoord2bOES
#define glMultiTexCoord2bvOES _glew_gl_glMultiTexCoord2bvOES
#define glMultiTexCoord3bOES _glew_gl_glMultiTexCoord3bOES
#define glMultiTexCoord3bvOES _glew_gl_glMultiTexCoord3bvOES
#define glMultiTexCoord4bOES _glew_gl_glMultiTexCoord4bOES
#define glMultiTexCoord4bvOES _glew_gl_glMultiTexCoord4bvOES
#define glTexCoord1bOES _glew_gl_glTexCoord1bOES
#define glTexCoord1bvOES _glew_gl_glTexCoord1bvOES
#define glTexCoord2bOES _glew_gl_glTexCoord2bOES
#define glTexCoord2bvOES _glew_gl_glTexCoord2bvOES
#define glTexCoord3bOES _glew_gl_glTexCoord3bOES
#define glTexCoord3bvOES _glew_gl_glTexCoord3bvOES
#define glTexCoord4bOES _glew_gl_glTexCoord4bOES
#define glTexCoord4bvOES _glew_gl_glTexCoord4bvOES
#define glVertex2bOES _glew_gl_glVertex2bOES
#define glVertex2bvOES _glew_gl_glVertex2bvOES
#define glVertex3bOES _glew_gl_glVertex3bOES
#define glVertex3bvOES _glew_gl_glVertex3bvOES
#define glVertex4bOES _glew_gl_glVertex4bOES
#define glVertex4bvOES _glew_gl_glVertex4bvOES
#define glCopyImageSubDataOES _glew_gl_glCopyImageSubDataOES
#define glEnableiOES _glew_gl_glEnableiOES
#define glDisableiOES _glew_gl_glDisableiOES
#define glBlendEquationiOES _glew_gl_glBlendEquationiOES
#define glBlendEquationSeparateiOES _glew_gl_glBlendEquationSeparateiOES
#define glBlendFunciOES _glew_gl_glBlendFunciOES
#define glBlendFuncSeparateiOES _glew_gl_glBlendFuncSeparateiOES
#define glColorMaskiOES _glew_gl_glColorMaskiOES
#define glIsEnablediOES _glew_gl_glIsEnablediOES
#define glDrawElementsBaseVertexOES _glew_gl_glDrawElementsBaseVertexOES
#define glDrawRangeElementsBaseVertexOES _glew_gl_glDrawRangeElementsBaseVertexOES
#define glDrawElementsInstancedBaseVertexOES _glew_gl_glDrawElementsInstancedBaseVertexOES
#define glMultiDrawElementsBaseVertexOES _glew_gl_glMultiDrawElementsBaseVertexOES
#define glAlphaFuncxOES _glew_gl_glAlphaFuncxOES
#define glClearColorxOES _glew_gl_glClearColorxOES
#define glClearDepthxOES _glew_gl_glClearDepthxOES
#define glClipPlanexOES _glew_gl_glClipPlanexOES
#define glColor4xOES _glew_gl_glColor4xOES
#define glDepthRangexOES _glew_gl_glDepthRangexOES
#define glFogxOES _glew_gl_glFogxOES
#define glFogxvOES _glew_gl_glFogxvOES
#define glFrustumxOES _glew_gl_glFrustumxOES
#define glGetClipPlanexOES _glew_gl_glGetClipPlanexOES
#define glGetFixedvOES _glew_gl_glGetFixedvOES
#define glGetTexEnvxvOES _glew_gl_glGetTexEnvxvOES
#define glGetTexParameterxvOES _glew_gl_glGetTexParameterxvOES
#define glLightModelxOES _glew_gl_glLightModelxOES
#define glLightModelxvOES _glew_gl_glLightModelxvOES
#define glLightxOES _glew_gl_glLightxOES
#define glLightxvOES _glew_gl_glLightxvOES
#define glLineWidthxOES _glew_gl_glLineWidthxOES
#define glLoadMatrixxOES _glew_gl_glLoadMatrixxOES
#define glMaterialxOES _glew_gl_glMaterialxOES
#define glMaterialxvOES _glew_gl_glMaterialxvOES
#define glMultMatrixxOES _glew_gl_glMultMatrixxOES
#define glMultiTexCoord4xOES _glew_gl_glMultiTexCoord4xOES
#define glNormal3xOES _glew_gl_glNormal3xOES
#define glOrthoxOES _glew_gl_glOrthoxOES
#define glPointParameterxvOES _glew_gl_glPointParameterxvOES
#define glPointSizexOES _glew_gl_glPointSizexOES
#define glPolygonOffsetxOES _glew_gl_glPolygonOffsetxOES
#define glRotatexOES _glew_gl_glRotatexOES
#define glScalexOES _glew_gl_glScalexOES
#define glTexEnvxOES _glew_gl_glTexEnvxOES
#define glTexEnvxvOES _glew_gl_glTexEnvxvOES
#define glTexParameterxOES _glew_gl_glTexParameterxOES
#define glTexParameterxvOES _glew_gl_glTexParameterxvOES
#define glTranslatexOES _glew_gl_glTranslatexOES
#define glAccumxOES _glew_gl_glAccumxOES
#define glBitmapxOES _glew_gl_glBitmapxOES
#define glBlendColorxOES _glew_gl_glBlendColorxOES
#define glClearAccumxOES _glew_gl_glClearAccumxOES
#define glColor3xOES _glew_gl_glColor3xOES
#define glColor3xvOES _glew_gl_glColor3xvOES
#define glColor4xvOES _glew_gl_glColor4xvOES
#define glConvolutionParameterxOES _glew_gl_glConvolutionParameterxOES
#define glConvolutionParameterxvOES _glew_gl_glConvolutionParameterxvOES
#define glEvalCoord1xOES _glew_gl_glEvalCoord1xOES
#define glEvalCoord1xvOES _glew_gl_glEvalCoord1xvOES
#define glEvalCoord2xOES _glew_gl_glEvalCoord2xOES
#define glEvalCoord2xvOES _glew_gl_glEvalCoord2xvOES
#define glFeedbackBufferxOES _glew_gl_glFeedbackBufferxOES
#define glGetConvolutionParameterxvOES _glew_gl_glGetConvolutionParameterxvOES
#define glGetHistogramParameterxvOES _glew_gl_glGetHistogramParameterxvOES
#define glGetLightxOES _glew_gl_glGetLightxOES
#define glGetMapxvOES _glew_gl_glGetMapxvOES
#define glGetMaterialxOES _glew_gl_glGetMaterialxOES
#define glGetPixelMapxv _glew_gl_glGetPixelMapxv
#define glGetTexGenxvOES _glew_gl_glGetTexGenxvOES
#define glGetTexLevelParameterxvOES _glew_gl_glGetTexLevelParameterxvOES
#define glIndexxOES _glew_gl_glIndexxOES
#define glIndexxvOES _glew_gl_glIndexxvOES
#define glLoadTransposeMatrixxOES _glew_gl_glLoadTransposeMatrixxOES
#define glMap1xOES _glew_gl_glMap1xOES
#define glMap2xOES _glew_gl_glMap2xOES
#define glMapGrid1xOES _glew_gl_glMapGrid1xOES
#define glMapGrid2xOES _glew_gl_glMapGrid2xOES
#define glMultTransposeMatrixxOES _glew_gl_glMultTransposeMatrixxOES
#define glMultiTexCoord1xOES _glew_gl_glMultiTexCoord1xOES
#define glMultiTexCoord1xvOES _glew_gl_glMultiTexCoord1xvOES
#define glMultiTexCoord2xOES _glew_gl_glMultiTexCoord2xOES
#define glMultiTexCoord2xvOES _glew_gl_glMultiTexCoord2xvOES
#define glMultiTexCoord3xOES _glew_gl_glMultiTexCoord3xOES
#define glMultiTexCoord3xvOES _glew_gl_glMultiTexCoord3xvOES
#define glMultiTexCoord4xvOES _glew_gl_glMultiTexCoord4xvOES
#define glNormal3xvOES _glew_gl_glNormal3xvOES
#define glPassThroughxOES _glew_gl_glPassThroughxOES
#define glPixelMapx _glew_gl_glPixelMapx
#define glPixelStorex _glew_gl_glPixelStorex
#define glPixelTransferxOES _glew_gl_glPixelTransferxOES
#define glPixelZoomxOES _glew_gl_glPixelZoomxOES
#define glPrioritizeTexturesxOES _glew_gl_glPrioritizeTexturesxOES
#define glRasterPos2xOES _glew_gl_glRasterPos2xOES
#define glRasterPos2xvOES _glew_gl_glRasterPos2xvOES
#define glRasterPos3xOES _glew_gl_glRasterPos3xOES
#define glRasterPos3xvOES _glew_gl_glRasterPos3xvOES
#define glRasterPos4xOES _glew_gl_glRasterPos4xOES
#define glRasterPos4xvOES _glew_gl_glRasterPos4xvOES
#define glRectxOES _glew_gl_glRectxOES
#define glRectxvOES _glew_gl_glRectxvOES
#define glTexCoord1xOES _glew_gl_glTexCoord1xOES
#define glTexCoord1xvOES _glew_gl_glTexCoord1xvOES
#define glTexCoord2xOES _glew_gl_glTexCoord2xOES
#define glTexCoord2xvOES _glew_gl_glTexCoord2xvOES
#define glTexCoord3xOES _glew_gl_glTexCoord3xOES
#define glTexCoord3xvOES _glew_gl_glTexCoord3xvOES
#define glTexCoord4xOES _glew_gl_glTexCoord4xOES
#define glTexCoord4xvOES _glew_gl_glTexCoord4xvOES
#define glTexGenxOES _glew_gl_glTexGenxOES
#define glTexGenxvOES _glew_gl_glTexGenxvOES
#define glVertex2xOES _glew_gl_glVertex2xOES
#define glVertex2xvOES _glew_gl_glVertex2xvOES
#define glVertex3xOES _glew_gl_glVertex3xOES
#define glVertex3xvOES _glew_gl_glVertex3xvOES
#define glVertex4xOES _glew_gl_glVertex4xOES
#define glVertex4xvOES _glew_gl_glVertex4xvOES
#define glFramebufferTextureOES _glew_gl_glFramebufferTextureOES
#define glGetProgramBinaryOES _glew_gl_glGetProgramBinaryOES
#define glProgramBinaryOES _glew_gl_glProgramBinaryOES
#define glMapBufferOES _glew_gl_glMapBufferOES
#define glUnmapBufferOES _glew_gl_glUnmapBufferOES
#define glGetBufferPointervOES _glew_gl_glGetBufferPointervOES
#define glPrimitiveBoundingBoxOES _glew_gl_glPrimitiveBoundingBoxOES
#define glQueryMatrixxOES _glew_gl_glQueryMatrixxOES
#define glMinSampleShadingOES _glew_gl_glMinSampleShadingOES
#define glClearDepthfOES _glew_gl_glClearDepthfOES
#define glClipPlanefOES _glew_gl_glClipPlanefOES
#define glDepthRangefOES _glew_gl_glDepthRangefOES
#define glFrustumfOES _glew_gl_glFrustumfOES
#define glGetClipPlanefOES _glew_gl_glGetClipPlanefOES
#define glOrthofOES _glew_gl_glOrthofOES
#define glPatchParameteriOES _glew_gl_glPatchParameteriOES
#define glTexImage3DOES _glew_gl_glTexImage3DOES
#define glTexSubImage3DOES _glew_gl_glTexSubImage3DOES
#define glCopyTexSubImage3DOES _glew_gl_glCopyTexSubImage3DOES
#define glCompressedTexImage3DOES _glew_gl_glCompressedTexImage3DOES
#define glCompressedTexSubImage3DOES _glew_gl_glCompressedTexSubImage3DOES
#define glFramebufferTexture3DOES _glew_gl_glFramebufferTexture3DOES
#define glTexParameterIivOES _glew_gl_glTexParameterIivOES
#define glTexParameterIuivOES _glew_gl_glTexParameterIuivOES
#define glGetTexParameterIivOES _glew_gl_glGetTexParameterIivOES
#define glGetTexParameterIuivOES _glew_gl_glGetTexParameterIuivOES
#define glSamplerParameterIivOES _glew_gl_glSamplerParameterIivOES
#define glSamplerParameterIuivOES _glew_gl_glSamplerParameterIuivOES
#define glGetSamplerParameterIivOES _glew_gl_glGetSamplerParameterIivOES
#define glGetSamplerParameterIuivOES _glew_gl_glGetSamplerParameterIuivOES
#define glTexBufferOES _glew_gl_glTexBufferOES
#define glTexBufferRangeOES _glew_gl_glTexBufferRangeOES
#define glTexStorage3DMultisampleOES _glew_gl_glTexStorage3DMultisampleOES
#define glTextureViewOES _glew_gl_glTextureViewOES
#define glBindVertexArrayOES _glew_gl_glBindVertexArrayOES
#define glDeleteVertexArraysOES _glew_gl_glDeleteVertexArraysOES
#define glGenVertexArraysOES _glew_gl_glGenVertexArraysOES
#define glIsVertexArrayOES _glew_gl_glIsVertexArrayOES
#define glFramebufferTextureMultiviewOVR _glew_gl_glFramebufferTextureMultiviewOVR
#define glFramebufferTextureMultisampleMultiviewOVR _glew_gl_glFramebufferTextureMultisampleMultiviewOVR
#define glHintPGI _glew_gl_glHintPGI
#define glAlphaFuncQCOM _glew_gl_glAlphaFuncQCOM
#define glGetDriverControlsQCOM _glew_gl_glGetDriverControlsQCOM
#define glGetDriverControlStringQCOM _glew_gl_glGetDriverControlStringQCOM
#define glEnableDriverControlQCOM _glew_gl_glEnableDriverControlQCOM
#define glDisableDriverControlQCOM _glew_gl_glDisableDriverControlQCOM
#define glExtGetTexturesQCOM _glew_gl_glExtGetTexturesQCOM
#define glExtGetBuffersQCOM _glew_gl_glExtGetBuffersQCOM
#define glExtGetRenderbuffersQCOM _glew_gl_glExtGetRenderbuffersQCOM
#define glExtGetFramebuffersQCOM _glew_gl_glExtGetFramebuffersQCOM
#define glExtGetTexLevelParameterivQCOM _glew_gl_glExtGetTexLevelParameterivQCOM
#define glExtTexObjectStateOverrideiQCOM _glew_gl_glExtTexObjectStateOverrideiQCOM
#define glExtGetTexSubImageQCOM _glew_gl_glExtGetTexSubImageQCOM
#define glExtGetBufferPointervQCOM _glew_gl_glExtGetBufferPointervQCOM
#define glExtGetShadersQCOM _glew_gl_glExtGetShadersQCOM
#define glExtGetProgramsQCOM _glew_gl_glExtGetProgramsQCOM
#define glExtIsProgramBinaryQCOM _glew_gl_glExtIsProgramBinaryQCOM
#define glExtGetProgramBinarySourceQCOM _glew_gl_glExtGetProgramBinarySourceQCOM
#define glStartTilingQCOM _glew_gl_glStartTilingQCOM
#define glEndTilingQCOM _glew_gl_glEndTilingQCOM
#define glDetailTexFuncSGIS _glew_gl_glDetailTexFuncSGIS
#define glGetDetailTexFuncSGIS _glew_gl_glGetDetailTexFuncSGIS
#define glFogFuncSGIS _glew_gl_glFogFuncSGIS
#define glGetFogFuncSGIS _glew_gl_glGetFogFuncSGIS
#define glSampleMaskSGIS _glew_gl_glSampleMaskSGIS
#define glSamplePatternSGIS _glew_gl_glSamplePatternSGIS
#define glPixelTexGenParameteriSGIS _glew_gl_glPixelTexGenParameteriSGIS
#define glPixelTexGenParameterivSGIS _glew_gl_glPixelTexGenParameterivSGIS
#define glPixelTexGenParameterfSGIS _glew_gl_glPixelTexGenParameterfSGIS
#define glPixelTexGenParameterfvSGIS _glew_gl_glPixelTexGenParameterfvSGIS
#define glGetPixelTexGenParameterivSGIS _glew_gl_glGetPixelTexGenParameterivSGIS
#define glGetPixelTexGenParameterfvSGIS _glew_gl_glGetPixelTexGenParameterfvSGIS
#define glPointParameterfSGIS _glew_gl_glPointParameterfSGIS
#define glPointParameterfvSGIS _glew_gl_glPointParameterfvSGIS
#define glSharpenTexFuncSGIS _glew_gl_glSharpenTexFuncSGIS
#define glGetSharpenTexFuncSGIS _glew_gl_glGetSharpenTexFuncSGIS
#define glTexImage4DSGIS _glew_gl_glTexImage4DSGIS
#define glTexSubImage4DSGIS _glew_gl_glTexSubImage4DSGIS
#define glTextureColorMaskSGIS _glew_gl_glTextureColorMaskSGIS
#define glGetTexFilterFuncSGIS _glew_gl_glGetTexFilterFuncSGIS
#define glTexFilterFuncSGIS _glew_gl_glTexFilterFuncSGIS
#define glAsyncMarkerSGIX _glew_gl_glAsyncMarkerSGIX
#define glFinishAsyncSGIX _glew_gl_glFinishAsyncSGIX
#define glPollAsyncSGIX _glew_gl_glPollAsyncSGIX
#define glGenAsyncMarkersSGIX _glew_gl_glGenAsyncMarkersSGIX
#define glDeleteAsyncMarkersSGIX _glew_gl_glDeleteAsyncMarkersSGIX
#define glIsAsyncMarkerSGIX _glew_gl_glIsAsyncMarkerSGIX
#define glFlushRasterSGIX _glew_gl_glFlushRasterSGIX
#define glFragmentColorMaterialSGIX _glew_gl_glFragmentColorMaterialSGIX
#define glFragmentLightfSGIX _glew_gl_glFragmentLightfSGIX
#define glFragmentLightfvSGIX _glew_gl_glFragmentLightfvSGIX
#define glFragmentLightiSGIX _glew_gl_glFragmentLightiSGIX
#define glFragmentLightivSGIX _glew_gl_glFragmentLightivSGIX
#define glFragmentLightModelfSGIX _glew_gl_glFragmentLightModelfSGIX
#define glFragmentLightModelfvSGIX _glew_gl_glFragmentLightModelfvSGIX
#define glFragmentLightModeliSGIX _glew_gl_glFragmentLightModeliSGIX
#define glFragmentLightModelivSGIX _glew_gl_glFragmentLightModelivSGIX
#define glFragmentMaterialfSGIX _glew_gl_glFragmentMaterialfSGIX
#define glFragmentMaterialfvSGIX _glew_gl_glFragmentMaterialfvSGIX
#define glFragmentMaterialiSGIX _glew_gl_glFragmentMaterialiSGIX
#define glFragmentMaterialivSGIX _glew_gl_glFragmentMaterialivSGIX
#define glGetFragmentLightfvSGIX _glew_gl_glGetFragmentLightfvSGIX
#define glGetFragmentLightivSGIX _glew_gl_glGetFragmentLightivSGIX
#define glGetFragmentMaterialfvSGIX _glew_gl_glGetFragmentMaterialfvSGIX
#define glGetFragmentMaterialivSGIX _glew_gl_glGetFragmentMaterialivSGIX
#define glLightEnviSGIX _glew_gl_glLightEnviSGIX
#define glFrameZoomSGIX _glew_gl_glFrameZoomSGIX
#define glIglooInterfaceSGIX _glew_gl_glIglooInterfaceSGIX
#define glGetInstrumentsSGIX _glew_gl_glGetInstrumentsSGIX
#define glInstrumentsBufferSGIX _glew_gl_glInstrumentsBufferSGIX
#define glPollInstrumentsSGIX _glew_gl_glPollInstrumentsSGIX
#define glReadInstrumentsSGIX _glew_gl_glReadInstrumentsSGIX
#define glStartInstrumentsSGIX _glew_gl_glStartInstrumentsSGIX
#define glStopInstrumentsSGIX _glew_gl_glStopInstrumentsSGIX
#define glGetListParameterfvSGIX _glew_gl_glGetListParameterfvSGIX
#define glGetListParameterivSGIX _glew_gl_glGetListParameterivSGIX
#define glListParameterfSGIX _glew_gl_glListParameterfSGIX
#define glListParameterfvSGIX _glew_gl_glListParameterfvSGIX
#define glListParameteriSGIX _glew_gl_glListParameteriSGIX
#define glListParameterivSGIX _glew_gl_glListParameterivSGIX
#define glPixelTexGenSGIX _glew_gl_glPixelTexGenSGIX
#define glDeformationMap3dSGIX _glew_gl_glDeformationMap3dSGIX
#define glDeformationMap3fSGIX _glew_gl_glDeformationMap3fSGIX
#define glDeformSGIX _glew_gl_glDeformSGIX
#define glLoadIdentityDeformationMapSGIX _glew_gl_glLoadIdentityDeformationMapSGIX
#define glReferencePlaneSGIX _glew_gl_glReferencePlaneSGIX
#define glSpriteParameterfSGIX _glew_gl_glSpriteParameterfSGIX
#define glSpriteParameterfvSGIX _glew_gl_glSpriteParameterfvSGIX
#define glSpriteParameteriSGIX _glew_gl_glSpriteParameteriSGIX
#define glSpriteParameterivSGIX _glew_gl_glSpriteParameterivSGIX
#define glTagSampleBufferSGIX _glew_gl_glTagSampleBufferSGIX
#define glColorTableSGI _glew_gl_glColorTableSGI
#define glColorTableParameterfvSGI _glew_gl_glColorTableParameterfvSGI
#define glColorTableParameterivSGI _glew_gl_glColorTableParameterivSGI
#define glCopyColorTableSGI _glew_gl_glCopyColorTableSGI
#define glGetColorTableSGI _glew_gl_glGetColorTableSGI
#define glGetColorTableParameterfvSGI _glew_gl_glGetColorTableParameterfvSGI
#define glGetColorTableParameterivSGI _glew_gl_glGetColorTableParameterivSGI
#define glFinishTextureSUNX _glew_gl_glFinishTextureSUNX
#define glGlobalAlphaFactorbSUN _glew_gl_glGlobalAlphaFactorbSUN
#define glGlobalAlphaFactorsSUN _glew_gl_glGlobalAlphaFactorsSUN
#define glGlobalAlphaFactoriSUN _glew_gl_glGlobalAlphaFactoriSUN
#define glGlobalAlphaFactorfSUN _glew_gl_glGlobalAlphaFactorfSUN
#define glGlobalAlphaFactordSUN _glew_gl_glGlobalAlphaFactordSUN
#define glGlobalAlphaFactorubSUN _glew_gl_glGlobalAlphaFactorubSUN
#define glGlobalAlphaFactorusSUN _glew_gl_glGlobalAlphaFactorusSUN
#define glGlobalAlphaFactoruiSUN _glew_gl_glGlobalAlphaFactoruiSUN
#define glDrawMeshArraysSUN _glew_gl_glDrawMeshArraysSUN
#define glReplacementCodeuiSUN _glew_gl_glReplacementCodeuiSUN
#define glReplacementCodeusSUN _glew_gl_glReplacementCodeusSUN
#define glReplacementCodeubSUN _glew_gl_glReplacementCodeubSUN
#define glReplacementCodeuivSUN _glew_gl_glReplacementCodeuivSUN
#define glReplacementCodeusvSUN _glew_gl_glReplacementCodeusvSUN
#define glReplacementCodeubvSUN _glew_gl_glReplacementCodeubvSUN
#define glReplacementCodePointerSUN _glew_gl_glReplacementCodePointerSUN
#define glColor4ubVertex2fSUN _glew_gl_glColor4ubVertex2fSUN
#define glColor4ubVertex2fvSUN _glew_gl_glColor4ubVertex2fvSUN
#define glColor4ubVertex3fSUN _glew_gl_glColor4ubVertex3fSUN
#define glColor4ubVertex3fvSUN _glew_gl_glColor4ubVertex3fvSUN
#define glColor3fVertex3fSUN _glew_gl_glColor3fVertex3fSUN
#define glColor3fVertex3fvSUN _glew_gl_glColor3fVertex3fvSUN
#define glNormal3fVertex3fSUN _glew_gl_glNormal3fVertex3fSUN
#define glNormal3fVertex3fvSUN _glew_gl_glNormal3fVertex3fvSUN
#define glColor4fNormal3fVertex3fSUN _glew_gl_glColor4fNormal3fVertex3fSUN
#define glColor4fNormal3fVertex3fvSUN _glew_gl_glColor4fNormal3fVertex3fvSUN
#define glTexCoord2fVertex3fSUN _glew_gl_glTexCoord2fVertex3fSUN
#define glTexCoord2fVertex3fvSUN _glew_gl_glTexCoord2fVertex3fvSUN
#define glTexCoord4fVertex4fSUN _glew_gl_glTexCoord4fVertex4fSUN
#define glTexCoord4fVertex4fvSUN _glew_gl_glTexCoord4fVertex4fvSUN
#define glTexCoord2fColor4ubVertex3fSUN _glew_gl_glTexCoord2fColor4ubVertex3fSUN
#define glTexCoord2fColor4ubVertex3fvSUN _glew_gl_glTexCoord2fColor4ubVertex3fvSUN
#define glTexCoord2fColor3fVertex3fSUN _glew_gl_glTexCoord2fColor3fVertex3fSUN
#define glTexCoord2fColor3fVertex3fvSUN _glew_gl_glTexCoord2fColor3fVertex3fvSUN
#define glTexCoord2fNormal3fVertex3fSUN _glew_gl_glTexCoord2fNormal3fVertex3fSUN
#define glTexCoord2fNormal3fVertex3fvSUN _glew_gl_glTexCoord2fNormal3fVertex3fvSUN
#define glTexCoord2fColor4fNormal3fVertex3fSUN _glew_gl_glTexCoord2fColor4fNormal3fVertex3fSUN
#define glTexCoord2fColor4fNormal3fVertex3fvSUN _glew_gl_glTexCoord2fColor4fNormal3fVertex3fvSUN
#define glTexCoord4fColor4fNormal3fVertex4fSUN _glew_gl_glTexCoord4fColor4fNormal3fVertex4fSUN
#define glTexCoord4fColor4fNormal3fVertex4fvSUN _glew_gl_glTexCoord4fColor4fNormal3fVertex4fvSUN
#define glReplacementCodeuiVertex3fSUN _glew_gl_glReplacementCodeuiVertex3fSUN
#define glReplacementCodeuiVertex3fvSUN _glew_gl_glReplacementCodeuiVertex3fvSUN
#define glReplacementCodeuiColor4ubVertex3fSUN _glew_gl_glReplacementCodeuiColor4ubVertex3fSUN
#define glReplacementCodeuiColor4ubVertex3fvSUN _glew_gl_glReplacementCodeuiColor4ubVertex3fvSUN
#define glReplacementCodeuiColor3fVertex3fSUN _glew_gl_glReplacementCodeuiColor3fVertex3fSUN
#define glReplacementCodeuiColor3fVertex3fvSUN _glew_gl_glReplacementCodeuiColor3fVertex3fvSUN
#define glReplacementCodeuiNormal3fVertex3fSUN _glew_gl_glReplacementCodeuiNormal3fVertex3fSUN
#define glReplacementCodeuiNormal3fVertex3fvSUN _glew_gl_glReplacementCodeuiNormal3fVertex3fvSUN
#define glReplacementCodeuiColor4fNormal3fVertex3fSUN _glew_gl_glReplacementCodeuiColor4fNormal3fVertex3fSUN
#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN _glew_gl_glReplacementCodeuiColor4fNormal3fVertex3fvSUN
#define glReplacementCodeuiTexCoord2fVertex3fSUN _glew_gl_glReplacementCodeuiTexCoord2fVertex3fSUN
#define glReplacementCodeuiTexCoord2fVertex3fvSUN _glew_gl_glReplacementCodeuiTexCoord2fVertex3fvSUN
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN _glew_gl_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN _glew_gl_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN _glew_gl_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN _glew_gl_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifdef __GNUC__
#if ((__GNUC__ * 10000) + (__GNUC_MINOR__ * 100) + __GNUC_PATCHLEVEL__) >= 40600 
#pragma GCC diagnostic pop // push/pop not available before GCC 4.6
#endif
#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // __GLEW_GL_H__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
