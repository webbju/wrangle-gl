////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __GLEW_API_H__
#define __GLEW_API_H__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#if defined (_WIN32)
  #ifndef WIN32_LEAN_AND_MEAN
    #define WIN32_LEAN_AND_MEAN 1
    #define _WIN32_LEAN_AND_MEAN 1
  #endif
  #include <windows.h>
  #pragma comment (lib, "opengl32.lib")
  #ifdef _WIN32_LEAN_AND_MEAN
    #undef WIN32_LEAN_AND_MEAN
    #undef _WIN32_LEAN_AND_MEAN
  #endif
#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef GLEW_EXTERN
#define GLEW_EXTERN extern
#endif

#ifndef GLEW_EXTERN_C
#ifdef __cplusplus
#define GLEW_EXTERN_C extern "C"
#else
#define GLEW_EXTERN_C extern
#endif
#endif

#ifndef GLEW_MIN
#define GLEW_MIN(a,b) ((a < b) ? a : b)
#endif

#ifndef GLEW_MAX
#define GLEW_MAX(a,b) ((a > b) ? a : b)
#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#if (_WIN32 || GLEW_USE_WGL)
  #if !defined (GLEW_USE_WGL)
    #define GLEW_USE_WGL 1
  #endif
  GLEW_EXTERN WINGDIAPI PROC WINAPI wglGetProcAddress (LPCSTR lpszProc);
  #undef wglUseFontBitmaps
  #undef wglUseFontOutlines
  #if !defined (glewGetProcAddress)
    #define glewGetProcAddress(proc) wglGetProcAddress((LPCSTR)proc)
  #endif
#elif __ANDROID__ || GLEW_USE_EGL
  #if !defined (GLEW_USE_EGL)
    #define GLEW_USE_EGL 1
  #endif
  #include <EGL\egl.h>
  GLEW_EXTERN_C EGLAPI __eglMustCastToProperFunctionPointerType EGLAPIENTRY eglGetProcAddress (const char *procname);
  #if !defined (glewGetProcAddress)
    #define glewGetProcAddress(proc) eglGetProcAddress((const char *)proc)
  #endif
#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#if !defined (glewGetProcAddress)
  #error glewGetProcAddress definition required.
#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // __GLEW_API_H__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
