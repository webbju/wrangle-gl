////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <EGL/egl.h>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// EGL_SURFACE_TYPE bits
#if __cplusplus >= 201103L
enum class EGLSurfaceTypeMask
#else
enum EGLSurfaceTypeMask
#endif
{{
  EGL_PBUFFER_BIT = 0x0001,
  EGL_PIXMAP_BIT = 0x0002,
  EGL_WINDOW_BIT = 0x0004,
  EGL_PBUFFER_IMAGE_BIT_TAO = 0x0008,
  EGL_PBUFFER_PALETTE_IMAGE_BIT_TAO = 0x0010,
  EGL_VG_COLORSPACE_LINEAR_BIT = 0x0020,
  EGL_VG_COLORSPACE_LINEAR_BIT_KHR = 0x0020,
  EGL_VG_ALPHA_FORMAT_PRE_BIT = 0x0040,
  EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR = 0x0040,
  EGL_LOCK_SURFACE_BIT_KHR = 0x0080,
  EGL_OPTIMAL_FORMAT_BIT_KHR = 0x0100,
  EGL_MULTISAMPLE_RESOLVE_BOX_BIT = 0x0200,
  EGL_SWAP_BEHAVIOR_PRESERVED_BIT = 0x0400,
  EGL_STREAM_BIT_KHR = 0x0800
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// EGL_RENDERABLE_TYPE bits
#if __cplusplus >= 201103L
enum class EGLRenderableTypeMask
#else
enum EGLRenderableTypeMask
#endif
{{
  EGL_OPENGL_ES_BIT = 0x0001,
  EGL_OPENVG_BIT = 0x0002,
  EGL_OPENGL_ES2_BIT = 0x0004,
  EGL_OPENGL_BIT = 0x0008,
  EGL_INTEROP_BIT_KHR = 0x0010,
  EGL_OPENMAX_IL_BIT_KHR = 0x0020,
  EGL_OPENGL_ES3_BIT = 0x00000040,
  EGL_OPENGL_ES3_BIT_KHR = EGL_OPENGL_ES3_BIT
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// EGL_LOCK_USAGE_HINT_KHR bits
#if __cplusplus >= 201103L
enum class EGLLockUsageHintKHRMask
#else
enum EGLLockUsageHintKHRMask
#endif
{{
  EGL_READ_SURFACE_BIT_KHR = 0x0001,
  EGL_WRITE_SURFACE_BIT_KHR = 0x0002
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Fence/reusable sync wait bits
#if __cplusplus >= 201103L
enum class EGLSyncFlagsKHR
#else
enum EGLSyncFlagsKHR
#endif
{{
  EGL_SYNC_FLUSH_COMMANDS_BIT = 0x0001,
  EGL_SYNC_FLUSH_COMMANDS_BIT_KHR = EGL_SYNC_FLUSH_COMMANDS_BIT,
  EGL_SYNC_FLUSH_COMMANDS_BIT_NV = EGL_SYNC_FLUSH_COMMANDS_BIT
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// EGL_DRM_BUFFER_USE_MESA bits
#if __cplusplus >= 201103L
enum class EGLDRMBufferUseMESAMask
#else
enum EGLDRMBufferUseMESAMask
#endif
{{
  EGL_DRM_BUFFER_USE_SCANOUT_MESA = 0x00000001,
  EGL_DRM_BUFFER_USE_SHARE_MESA = 0x00000002
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// EGL_CONTEXT_FLAGS_KHR bits
#if __cplusplus >= 201103L
enum class EGLContextFlagMask
#else
enum EGLContextFlagMask
#endif
{{
  EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR = 0x00000001,
  EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR = 0x00000002,
  EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR = 0x00000004
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Shared with GL
#if __cplusplus >= 201103L
enum class EGLContextProfileMask
#else
enum EGLContextProfileMask
#endif
{{
  EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT = 0x00000001,
  EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR = EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT,
  EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT = 0x00000002,
  EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR = EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
