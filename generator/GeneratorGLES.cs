////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Xml;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace wrangle_gl_generator
{

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public class GeneratorGLES : Generator
  {

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public GeneratorGLES (string filename)
      : base (filename, new string [] []
      {
        new string [] {"gles", "2.0"},
        new string [] {"gles2", "2.0"},
      })
    {
      m_funcApiEntryPrefix = "GL_APICALL";

      m_funcApiEntryPostfix = "GL_APIENTRY";

      m_funcPointerApiEntryPrefix = "";

      m_funcPointerApiEntryPostfix = "GL_APIENTRYP";
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public override void ExportHppIncludes (StreamWriter writer)
    {
      base.ExportHppIncludes(writer);

      writer.Write ("\n#include <GLES3/gl32.h>\n");

      writer.Write ("\n#include <GLES2/gl2ext.h>\n\n");

      WriteCommentDivider (writer);

      writer.Write (@"
// iOS/OSX frameworks use a slightly different style of header guard.
#ifndef __gl_es20_h_
#define __gl_es20_h_
#endif
#ifndef __gl_es20ext_h_
#define __gl_es20ext_h_
#endif
#ifndef __gl_es30_h_
#define __gl_es30_h_
#endif
#ifndef __gl_es30ext_h_
#define __gl_es30ext_h_
#endif
#ifndef __gl_es31_h_
#define __gl_es31_h_
#endif
#ifndef __gl_es31ext_h_
#define __gl_es31ext_h_
#endif
#ifndef __gl_es32_h_
#define __gl_es32_h_
#endif
#ifndef __gl_es32ext_h_
#define __gl_es32ext_h_
#endif

");
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
